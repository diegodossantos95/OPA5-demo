{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "client\\src\\export-utils.js",
    "client\\src\\filesaver\\FileSaver.js",
    "client\\src\\provider\\ODataDataProvider.js",
    "client\\src\\provider\\RequestHandler.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "// Bundle all utilities into a single module \r\nvar ODataDataProvider = require(\"./provider/ODataDataProvider.js\");\r\nvar FileSaver = require(\"./filesaver/FileSaver.js\");\r\n\r\nmodule.exports = {\r\n\toData: {\r\n\t\tfetch: ODataDataProvider.requestData,\r\n\t\tgetConverter: ODataDataProvider.getConverter\r\n\t},\r\n\tsaveFile: FileSaver.saveFile\r\n};",
    "/**\r\n * The FileSaver allows to save browser generated files to\r\n * the local computer without using a proxy service.\r\n *\r\n * This class supports the latest version of the following browsers:\r\n *\r\n * Microsoft Internet Explorer 11\r\n * Microsoft Edge\r\n * Google Chrome\r\n * Mozilla Firefox\r\n * MacOS Safari\r\n * iOS Safari\r\n * Chrome for Android\r\n * SAP Fiori Client\r\n */\r\n\r\n/**\r\n * This function saves the provided Blob to the local file system.\r\n * The parameter name is optional and depending on the browser it\r\n * is not ensured that the filename can be applied. Google Chrome,\r\n * Mozilla Firefox, Internet Explorer and Microsoft Edge will\r\n * apply the filename correctly.\r\n *\r\n * @param {Blob} blob - Binary large object of the file that should be saved to the filesystem\r\n * @param {string} [name] - Filename of the file including the file extension\r\n */\r\nfunction saveFile(blob, name) {\r\n\tvar link, downloadSupported, fnSave;\r\n\r\n\t/* Ignore other formats than Blob */\r\n\tif (!(blob instanceof Blob)) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tlink = document.createElementNS('http://www.w3.org/1999/xhtml', 'a');\r\n\tdownloadSupported = 'download' in link;\r\n\r\n\t/* Try ObjectURL Chrome, Firefox, Opera, Android, Safari (Desktop ab 10.1) */\r\n\tif (downloadSupported) {\r\n\t\tfnSave = function (data, fileName) {\r\n\t\t\tlink.download = fileName;\r\n\t\t\tlink.href = URL.createObjectURL(data);\r\n\t\t\tlink.dispatchEvent(new MouseEvent('click'));\r\n\t\t}\r\n\t}\r\n\r\n\t/* iOS Safari, MacOS Safari */\r\n\tif (typeof fnSave === 'undefined') {\r\n\t\tfnSave = function (data) {\r\n\t\t\tvar reader = new FileReader();\r\n\r\n\t\t\treader.onloadend = function () {\r\n\t\t\t\tvar opened, url;\r\n\r\n\t\t\t\turl = reader.result.replace(/^data:[^;]*;/, 'data:attachment/file;');\r\n\t\t\t\topened = window.open(url, '_blank');\r\n\r\n\t\t\t\tif (!opened) {\r\n\t\t\t\t\twindow.location.href = url;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\treader.readAsDataURL(blob);\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t * IE/Edge implementation\r\n\t *\r\n\t * Microsoft Edge also supports the download attribute but ignores the value of the attribute.\r\n\t * This is why we override it with the navigator.msSaveOrOpenBlob function in case of MS Edge.\r\n\t */\r\n\tif (typeof navigator !== 'undefined' && navigator.msSaveOrOpenBlob) {\r\n\t\tfnSave = function (data, fileName) {\r\n\t\t\twindow.navigator.msSaveOrOpenBlob(data, fileName);\r\n\t\t};\r\n\t}\r\n\r\n\t/* Save file to device */\r\n\tfnSave(blob, name);\r\n}\r\n\r\nmodule.exports = { saveFile: saveFile };",
    "var RequestHandler = require('./RequestHandler.js');\r\n\r\n/**\r\n * OData interface for requesting chunked data.\r\n */\r\n\r\n/** START Copied and adapted from datajs * */\r\n/* The regular expression corresponds to something like this:\r\n * /Date(123+60)/\r\n *\r\n * This first number is date ticks, the + may be a - and is optional,\r\n * with the second number indicating a timezone offset in minutes.\r\n *\r\n * On the wire, the leading and trailing forward slashes are\r\n * escaped without being required to so the chance of collisions is reduced;\r\n * however, by the time we see the objects, the characters already\r\n * look like regular forward slashes.\r\n*/\r\nvar jsonDateRE = /^\\/Date\\((-?\\d+)(\\+|-)?(\\d+)?\\)\\/$/;\r\n\r\n/** END Copied from datajs * */\r\n\r\nvar MAX_ROWS = 1000000; // 1,000,000\r\n\r\n/**\r\n * Retrieves a OData date string and converts it to its\r\n * corresponding UNIX timestamp. The timestamp represents the\r\n * amount of milliseconds from or to 01.01.1970 00:00:00 UTC.\r\n *\r\n * @param {string|number/object} sValue - Date that needs to be converted\r\n * @return {number} The UNIX timestamp or a JavaScript Date object\r\n * @private\r\n */\r\nfunction parseDate(sValue) {\r\n\tvar array, date, offset;\r\n\r\n\tif (sValue == null) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t// Date, String, Number object\r\n\tif (typeof sValue === \"object\") {\r\n\t\tsValue = sValue.valueOf();\r\n\t}\r\n\r\n\t// Timestamp as a number\r\n\tif (typeof sValue === \"number\") {\r\n\t\treturn sValue;\r\n\t}\r\n\r\n\t// Date in oData format\r\n\tif (jsonDateRE.test(sValue)) {\r\n\t\t/* The RegExp matches up to 4 groups:\r\n\t\t * 0: Full match\r\n\t\t * 1: Timestamp (mandatory)\r\n\t\t * 2: Timezone offset sign [ + | - ] (optional)\r\n\t\t * 3: Timezone offset minutes [0-9]{2,3} (optional)\r\n\t\t */\r\n\t\tarray = jsonDateRE.exec(sValue);\r\n\t\tdate = new Date(parseInt(array[1], 10));\r\n\r\n\t\tif (array[2] && array[3]) {\r\n\t\t\toffset = parseInt(array[2] + array[3], 10);\r\n\t\t\tdate.setUTCMinutes(date.getUTCMinutes() - offset);\r\n\t\t}\r\n\t\treturn date.getTime();\r\n\t} \r\n\r\n\t// Timestamp as a string\r\n\tif (isFinite(sValue)) {\r\n\t\treturn parseInt(sValue, 10);\r\n\t}\r\n\r\n\t// Date as a string\r\n\tdate = new Date(sValue);\r\n\tif (isFinite(date)) {\r\n\t\treturn date.getTime();\r\n\t}\r\n\r\n\t// Unrecognized date\r\n\treturn null;\r\n}\r\n\r\n/**\r\n * Gets converted property value from raw data.\r\n * Navigation properties are parsed. Data type values are converted from OData format to JS format (for date types).\r\n * \r\n * @param {Object} oRow - Raw data row\r\n * @param {Object} oCol - Column information\r\n * @param {Array} oCol.keys - Property name or key path for navigation properties\r\n * @param {string} oCol.type - Column data type\r\n * \r\n * @private\r\n */\r\nfunction getValue(oRow, oCol) {\r\n\t// Get property value\r\n\tvar value = oCol.keys.reduce(function (obj, key) {\r\n\t\treturn obj && obj[key];\r\n\t}, oRow);\r\n\t// Convert, if needed.\r\n\treturn (value && (oCol.type === 'date' || oCol.type === 'datetime')) ? parseDate(value) : value;\r\n}\r\n\r\n/**\r\n * Function to process the JSON result array from a ODataService.\r\n * \r\n * @param {Array} aRows - Data array that contains the received data\r\n * @param {Array} aCols - Columns that need to be converted\r\n * \r\n * @private\r\n */\r\nfunction convertData(aRows, aCols) {\r\n\taCols.forEach(function (col) {\r\n\t\taRows.forEach(function (row) {\r\n\t\t\trow[col.property] = getValue(row, col);\r\n\t\t});\r\n\t});\r\n\treturn aRows;\r\n}\r\n\r\n/**\r\n * The function returns array of columns that need special conversion for values.\r\n *\r\n * @param {Object} mSettings - Configuration object\r\n * @private\r\n */\r\nfunction getColsToConvert(mSettings) {\r\n\treturn mSettings.workbook.columns.reduce(function (result, col) {\r\n\t\t// Convert navigation property and date fields\r\n\t\tvar aKeys = col.property.split(\"/\");\r\n\t\tif (aKeys.length > 1 || col.type === 'date' || col.type === 'datetime') {\r\n\t\t\tresult.push({\r\n\t\t\t\tproperty: col.property,\r\n\t\t\t\tkeys: aKeys,\r\n\t\t\t\ttype: col.type\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn result;\r\n\t}, []);\r\n}\r\n\r\n/**\r\n * The function returns a conversion function for raw data.\r\n *\r\n * @param {Object} mSettings Configuration object\r\n * @returns {function} Conversion function\r\n */\r\nfunction getDataConverter(mSettings) {\r\n\tvar aColumns = getColsToConvert(mSettings);\r\n\treturn function(aRows) {\r\n\t\treturn convertData(aRows, aColumns);\r\n\t};\r\n}\r\n\r\n/**\r\n * The function requests several chunks of data until the maximum\r\n * amount of data is fetched.\r\n *\r\n * @param {Object} mSettings - Configuration object\r\n */\r\nfunction requestData(mSettings, fnProcessCallback) {\r\n\tvar iAvailableRows = 0;\r\n\tvar mDataSource = mSettings.dataSource;\r\n\tvar iTotalRows = Math.min(mDataSource.count || MAX_ROWS, MAX_ROWS);\r\n\tvar iBatchSize = Math.min(mDataSource.sizeLimit || MAX_ROWS, mSettings.batchSize || MAX_ROWS, iTotalRows);\r\n\tvar bCancelled = false;\r\n\tvar dataUrl = mDataSource.dataUrl;\r\n\tvar fnConvertData = getDataConverter(mSettings);\r\n\tvar url;\r\n\tvar mRequest;\r\n\r\n\tfunction cleanUrl (url) {\r\n\t\tif (!url) return \"\";\r\n\t\tvar mUri = URI.parse(url);\r\n\t\tmUri.path = mUri.path || \"\";\r\n\t\tif (mUri.path.slice(-1) !== \"/\") {\r\n\t\t\tmUri.path = mUri.path + \"/\";\r\n\t\t}\r\n\t\tdelete mUri.query;\r\n\t\tdelete mUri.hash;\r\n\t\tdelete mUri.fragment;\r\n\t\treturn (URI.serialize || URI.build)(mUri);\r\n\t}\r\n\r\n\t// Get download URL for the next batch\r\n\tfunction getUrl(iSkip, iTop, sNextUrl) {\r\n\t\tvar mDataUrl = URI.parse(dataUrl);\r\n\t\tif (sNextUrl) { // use __next from server, replace origin if proxy was used\r\n\t\t\tvar mNextUrl = URI.parse(sNextUrl);\r\n\t\t\tmDataUrl.query = mNextUrl.query;\r\n\t\t} else { // use $skip and $top\r\n\t\t\tvar aQuery = (mDataUrl.query || \"\").split(\"&\");\r\n\t\t\tvar mQuery = {};\r\n\t\t\taQuery.forEach(function(query) {\r\n\t\t\t\tvar keyValue = query.split(\"=\");\r\n\t\t\t\tif (keyValue[0]) {\r\n\t\t\t\t\tmQuery[keyValue[0]] = keyValue[1];\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tmQuery[\"$skip\"] = iSkip;\r\n\t\t\tmQuery[\"$top\"] = iTop;\r\n\t\t\taQuery = [];\r\n\t\t\tfor (var key in mQuery) {\r\n\t\t\t\taQuery.push(key + (mQuery[key] == null ? \"\" : \"=\" + mQuery[key]));\r\n\t\t\t}\r\n\t\t\tmDataUrl.query = aQuery.join(\"&\");\r\n\t\t}\r\n\t\treturn (URI.serialize || URI.build)(mDataUrl);\r\n\t}\r\n\r\n\t/**\r\n\t * Inner function that processes request handler exceptions.\r\n\t *\r\n\t * @param {string} sMessage - Error message.\r\n\t */\r\n\tfunction fnOnError(sMessage) {\r\n\t\tfnProcessCallback({\r\n\t\t\terror: sMessage\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Inner function that processes the received data. Processing\r\n\t * the data before executing the callback function allows to\r\n\t * apply transformations to the data.\r\n\t *\r\n\t * @param {Object} oResult - The result object that is provided by the Promise resolve.\r\n\t */\r\n\tfunction fnOnDataReceived(oResult) {\r\n\t\tvar aData, sNextUrl, iFetchedRows, fPercent, iRemainingRows;\r\n\t\tvar mCallbackParams = {};\r\n\r\n\t\tif (bCancelled) {\r\n\t\t\treturn; // cancelled by the application\r\n\t\t}\r\n\r\n\t\taData = (oResult && oResult.d && (oResult.d.results || oResult.d)) || oResult;\r\n\t\taData = (Array.isArray(aData)) ? aData : [];\r\n\t\tiFetchedRows = aData.length;\r\n\r\n\t\tiAvailableRows += iFetchedRows;\r\n\t\tiRemainingRows = iTotalRows - iAvailableRows;\r\n\t\tfPercent = iAvailableRows / iTotalRows;\r\n\r\n\t\tmCallbackParams.finished = iFetchedRows === 0 || iRemainingRows <= 0; // Done criteria\r\n\t\tmCallbackParams.progress = Math.round(fPercent * 100);\r\n\r\n\t\t// check if next url is provided\r\n\t\tsNextUrl = oResult && oResult.d && oResult.d.__next || null;\r\n\r\n\t\tif (!mCallbackParams.finished) {\r\n\t\t\t// Trigger next page request before processing received data. Fetch only configured/max limit rows\r\n\t\t\tmRequest.dataUrl = getUrl(iAvailableRows, Math.min(iBatchSize, iRemainingRows), sNextUrl);\r\n\t\t\tRequestHandler\r\n\t\t\t\t.sendRequest(mRequest)\r\n\t\t\t\t.then(fnOnDataReceived)\r\n\t\t\t\t.catch(fnOnError);\r\n\t\t}\r\n\r\n\t\tmCallbackParams.rows = fnConvertData(aData); // normalize data\r\n\t\tfnProcessCallback(mCallbackParams); // Return result\r\n\t}\r\n\r\n\t// Execution\r\n\tmRequest = {\r\n\t\tserviceUrl: cleanUrl(mDataSource.serviceUrl),\r\n\t\tdataUrl: getUrl(0, iBatchSize),\r\n\t\tmethod: mDataSource.useBatch ? \"BATCH\" : \"GET\",\r\n\t\theaders: mDataSource.headers\r\n\t};\r\n\r\n\tRequestHandler\r\n\t\t.sendRequest(mRequest)\r\n\t\t.then(fnOnDataReceived)\r\n\t\t.catch(fnOnError);\r\n\r\n\treturn {cancel: function() {bCancelled = true;}};\r\n}\r\n\r\nmodule.exports = {\r\n\trequestData: requestData,\r\n\tgetConverter: getDataConverter\r\n};",
    "/**\r\n * Returns a promise that is resolved once the data is fetched\r\n */\r\n\r\n/**\r\n * This method creates an XMLHttpRequest from the provided\r\n * configuration and requests the data from the backend. The\r\n * configuration is configured to use OData services.\r\n *\r\n * @param {Object} oRequest - Request configuration object\r\n * @param {string} oRequest.method - References the HTTP method that is used (default: GET)\r\n * @param {string} oRequest.url - References the resource URL that gets invoked\r\n * @return {Promise} Returns a Promise that will be resolve once the requested data was fetched\r\n */\r\nfunction sendRequest(oRequest) {\r\n\tif (typeof oRequest !== 'object' || oRequest === null || typeof oRequest.dataUrl !== 'string') {\r\n\t\tthrow new Error('Unable to send request - Mandatory parameters missing.');\r\n\t}\r\n\r\n\treturn (oRequest.method === \"BATCH\" && oRequest.serviceUrl ? sendBatchRequest : sendGetRequest)(oRequest);\r\n}\r\n\r\nfunction sendGetRequest(oRequest) {\r\n\treturn new Promise(function (fnResolve, fnReject) {\r\n\t\tvar xhr = new XMLHttpRequest();\r\n\t\txhr.onload = function () {\r\n\t\t\tif (this.status >= 400) {\r\n\t\t\t\tfnReject(this.responseText);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\ttry {\r\n\t\t\t\tfnResolve(JSON.parse(this.responseText));\r\n\t\t\t} catch (e) {\r\n\t\t\t\tfnReject(\"Server response is not a valid JSON:\\n\" + this.responseText);\r\n\t\t\t}\r\n\t\t};\r\n\t\txhr.onerror = function () {\r\n\t\t\tfnReject(this.responseText);\r\n\t\t}\r\n\t\txhr.open(\"GET\", oRequest.dataUrl, true);\r\n\t\txhr.setRequestHeader(\"accept\", \"application/json\");\r\n\t\txhr.send();\r\n\t});\r\n}\r\n\r\nfunction createGuid() {\r\n\treturn 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n\t\tvar r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n\t\treturn v.toString(16);\r\n\t});\r\n}\r\n\r\nfunction sendBatchRequest(oRequest) {\r\n\treturn new Promise(function (fnResolve, fnReject) {\r\n\t\tvar xhr = new XMLHttpRequest();\r\n\t\tvar boundary = \"batch_\" + createGuid();\r\n\t\tvar getUrl = oRequest.dataUrl.split(oRequest.serviceUrl)[1];\r\n\t\tvar body = [];\r\n\r\n\t\txhr.onload = function () {\r\n\t\t\tvar responseText = this.responseText;\r\n\t\t\tvar aLines = this.responseText.split(\"\\r\\n\");\r\n\r\n\t\t\t//TBD: check return codes\r\n\t\t\tvar iStart = 0, iLength = aLines.length, iEnd = iLength - 1;\r\n\t\t\twhile (iStart < iLength && aLines[iStart].slice(0,1) !== \"{\") {\r\n\t\t\t\tiStart++;\r\n\t\t\t}\r\n\t\t\twhile (iEnd > 0 && aLines[iEnd].slice(-1) !== \"}\") {\r\n\t\t\t\tiEnd--;\r\n\t\t\t}\r\n\t\t\taLines = aLines.slice(iStart, iEnd + 1);\r\n\t\t\tresponseText = aLines.join(\"\\r\\n\");\r\n\r\n\t\t\ttry {\r\n\t\t\t\tvar responseData = JSON.parse(responseText);\r\n\t\t\t\tfnResolve(responseData);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tfnReject(\"Server response is not a valid JSON\");\r\n\t\t\t}\r\n\t\t};\r\n\t\txhr.onerror = function () {\r\n\t\t\tfnReject(this.responseText);\r\n\t\t}\r\n\t\t// create request\r\n\t\txhr.open(\"POST\", oRequest.serviceUrl + \"$batch\", true);\r\n\r\n\t\txhr.setRequestHeader(\"Accept\", \"multipart/mixed\");\r\n\t\txhr.setRequestHeader(\"Content-Type\", \"multipart/mixed;boundary=\" + boundary);\r\n\r\n\t\tfor (var key in oRequest.headers) {\r\n\t\t\tif (key.toLowerCase() != \"accept\") {\r\n\t\t\t\txhr.setRequestHeader(key, oRequest.headers[key]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tbody.push(\"--\" + boundary);\r\n\t\tbody.push(\"Content-Type: application/http\");\r\n\t\tbody.push(\"Content-Transfer-Encoding: binary\");\r\n\t\tbody.push(\"\");\r\n\t\tbody.push(\"GET \" + getUrl + \" HTTP/1.1\");\r\n\t\tfor (var key in oRequest.headers) {\r\n\t\t\tbody.push(key + \":\" + oRequest.headers[key]);\r\n\t\t}\r\n\t\tbody.push(\"\");\r\n\t\tbody.push(\"\");\r\n\t\tbody.push(\"--\" + boundary + \"--\");\r\n\t\tbody.push(\"\");\r\n\t\tbody = body.join(\"\\r\\n\");\r\n\t\txhr.send(body);\r\n\t});\r\n}\r\n\r\nmodule.exports = { sendRequest: sendRequest };"
  ]
}