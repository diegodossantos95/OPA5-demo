asynctest('browser/core/MeasureTest',['ephox.mcagar.api.TinyLoader','tinymce/inlite/core/Measure','ephox.agar.api.Pipeline','ephox.mcagar.api.TinyApis','ephox.agar.api.Step','ephox.agar.api.Chain','ephox.agar.api.UiFinder','ephox.agar.api.Assertions'],function(T,M,P,c,S,C,U,A){var s=arguments[arguments.length-2];var f=arguments[arguments.length-1];var d=function(r,x,y){return x>=r.x&&x<=r.x+r.w&&y>=r.y&&y<=r.y+r.h;};var e=function(a,b){return d(a,b.x,b.y)&&d(a,b.x+b.w,b.y+b.h);};var g=function(a,m){return S.sync(function(){var b=m();var p=M.getPageAreaRect(a);var j=M.getContentAreaRect(a);A.assertEq('Rect is not in page area rect',e(p,b),true);A.assertEq('Rect is not in content area rect',e(j,b),true);A.assertEq('Rect should have width',b.w>0,true);A.assertEq('Rect should have height',b.h>0,true);});};var h=function(a,b){return function(){var j=a.dom.select(b)[0];var r=M.getElementRect(a,j);return r;};};var i=function(a){return function(){var r=M.getSelectionRect(a);return r;};};T.setup(function(a,o,b){var t=c(a);P.async({},[t.sSetContent('<p>a</p><div style="width: 50px; height: 300px">b</div><p>c</p>'),g(a,h(a,'p:nth-child(1)')),t.sSetCursor([0,0],0),g(a,i(a))],o,b);},{inline:true},s,f);});
