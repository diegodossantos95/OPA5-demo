asynctest('browser/core/ElementMatcherTest',['ephox.mcagar.api.TinyLoader','ephox.mcagar.api.TinyApis','ephox.agar.api.Step','ephox.agar.api.Assertions','tinymce/inlite/core/ElementMatcher','tinymce/inlite/core/PredicateId','ephox.agar.api.Pipeline'],function(T,a,S,A,E,P,b){var s=arguments[arguments.length-2];var f=arguments[arguments.length-1];var e=function(t){return function(g){return g===t;};};var c=function(){return false;};var d=function(t,g,i,h){return S.sync(function(){var j,r;g.setContent(i);j=g.dom.select(h)[0];r=E.element(j,[P.create('a',c),P.create('b',e(j))])(g);A.assertEq(r.id,'b','Should be matching B');A.assertEq(r.rect.w>0,true,'Should be have width');});};var p=function(t,g,i,h){return S.sync(function(){var j,k,r;g.setContent(i);j=g.dom.select(h)[0];k=g.dom.getParents(j);r=E.parent(k,[P.create('a',c),P.create('b',e(k[1])),P.create('c',e(k[0]))])(g);A.assertEq(r.id,'c','Should be matching C the closest one');A.assertEq(r.rect.w>0,true,'Should be have width');});};T.setup(function(g,o,h){var t=a(g);b.async({},[d(t,g,'<p>a</p>','p'),p(t,g,'<div><p><em>a</em></p></div>','em')],o,h);},{inline:true},s,f);});
