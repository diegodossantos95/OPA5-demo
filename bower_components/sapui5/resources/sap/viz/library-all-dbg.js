// This file has been generated by the SAPUI5 'AllInOne' Builder
/**
 * A class to parse color values
 * @author Stoyan Stefanov <sstoo@gmail.com>
 * @link   http://www.phpied.com/rgb-color-parser-in-javascript/
 * @license Use it if you like it
 */
function RGBColor(color_string)
{
    this.ok = false;

    // strip any leading #
    if (color_string.charAt(0) == '#') { // remove # if any
        color_string = color_string.substr(1,6);
    }

    color_string = color_string.replace(/ /g,'');
    color_string = color_string.toLowerCase();

    // before getting into regexps, try simple matches
    // and overwrite the input
    var simple_colors = {
        aliceblue: 'f0f8ff',
        antiquewhite: 'faebd7',
        aqua: '00ffff',
        aquamarine: '7fffd4',
        azure: 'f0ffff',
        beige: 'f5f5dc',
        bisque: 'ffe4c4',
        black: '000000',
        blanchedalmond: 'ffebcd',
        blue: '0000ff',
        blueviolet: '8a2be2',
        brown: 'a52a2a',
        burlywood: 'deb887',
        cadetblue: '5f9ea0',
        chartreuse: '7fff00',
        chocolate: 'd2691e',
        coral: 'ff7f50',
        cornflowerblue: '6495ed',
        cornsilk: 'fff8dc',
        crimson: 'dc143c',
        cyan: '00ffff',
        darkblue: '00008b',
        darkcyan: '008b8b',
        darkgoldenrod: 'b8860b',
        darkgray: 'a9a9a9',
        darkgreen: '006400',
        darkkhaki: 'bdb76b',
        darkmagenta: '8b008b',
        darkolivegreen: '556b2f',
        darkorange: 'ff8c00',
        darkorchid: '9932cc',
        darkred: '8b0000',
        darksalmon: 'e9967a',
        darkseagreen: '8fbc8f',
        darkslateblue: '483d8b',
        darkslategray: '2f4f4f',
        darkturquoise: '00ced1',
        darkviolet: '9400d3',
        deeppink: 'ff1493',
        deepskyblue: '00bfff',
        dimgray: '696969',
        dodgerblue: '1e90ff',
        feldspar: 'd19275',
        firebrick: 'b22222',
        floralwhite: 'fffaf0',
        forestgreen: '228b22',
        fuchsia: 'ff00ff',
        gainsboro: 'dcdcdc',
        ghostwhite: 'f8f8ff',
        gold: 'ffd700',
        goldenrod: 'daa520',
        gray: '808080',
        green: '008000',
        greenyellow: 'adff2f',
        honeydew: 'f0fff0',
        hotpink: 'ff69b4',
        indianred : 'cd5c5c',
        indigo : '4b0082',
        ivory: 'fffff0',
        khaki: 'f0e68c',
        lavender: 'e6e6fa',
        lavenderblush: 'fff0f5',
        lawngreen: '7cfc00',
        lemonchiffon: 'fffacd',
        lightblue: 'add8e6',
        lightcoral: 'f08080',
        lightcyan: 'e0ffff',
        lightgoldenrodyellow: 'fafad2',
        lightgrey: 'd3d3d3',
        lightgreen: '90ee90',
        lightpink: 'ffb6c1',
        lightsalmon: 'ffa07a',
        lightseagreen: '20b2aa',
        lightskyblue: '87cefa',
        lightslateblue: '8470ff',
        lightslategray: '778899',
        lightsteelblue: 'b0c4de',
        lightyellow: 'ffffe0',
        lime: '00ff00',
        limegreen: '32cd32',
        linen: 'faf0e6',
        magenta: 'ff00ff',
        maroon: '800000',
        mediumaquamarine: '66cdaa',
        mediumblue: '0000cd',
        mediumorchid: 'ba55d3',
        mediumpurple: '9370d8',
        mediumseagreen: '3cb371',
        mediumslateblue: '7b68ee',
        mediumspringgreen: '00fa9a',
        mediumturquoise: '48d1cc',
        mediumvioletred: 'c71585',
        midnightblue: '191970',
        mintcream: 'f5fffa',
        mistyrose: 'ffe4e1',
        moccasin: 'ffe4b5',
        navajowhite: 'ffdead',
        navy: '000080',
        oldlace: 'fdf5e6',
        olive: '808000',
        olivedrab: '6b8e23',
        orange: 'ffa500',
        orangered: 'ff4500',
        orchid: 'da70d6',
        palegoldenrod: 'eee8aa',
        palegreen: '98fb98',
        paleturquoise: 'afeeee',
        palevioletred: 'd87093',
        papayawhip: 'ffefd5',
        peachpuff: 'ffdab9',
        peru: 'cd853f',
        pink: 'ffc0cb',
        plum: 'dda0dd',
        powderblue: 'b0e0e6',
        purple: '800080',
        red: 'ff0000',
        rosybrown: 'bc8f8f',
        royalblue: '4169e1',
        saddlebrown: '8b4513',
        salmon: 'fa8072',
        sandybrown: 'f4a460',
        seagreen: '2e8b57',
        seashell: 'fff5ee',
        sienna: 'a0522d',
        silver: 'c0c0c0',
        skyblue: '87ceeb',
        slateblue: '6a5acd',
        slategray: '708090',
        snow: 'fffafa',
        springgreen: '00ff7f',
        steelblue: '4682b4',
        tan: 'd2b48c',
        teal: '008080',
        thistle: 'd8bfd8',
        tomato: 'ff6347',
        turquoise: '40e0d0',
        violet: 'ee82ee',
        violetred: 'd02090',
        wheat: 'f5deb3',
        white: 'ffffff',
        whitesmoke: 'f5f5f5',
        yellow: 'ffff00',
        yellowgreen: '9acd32'
    };
    for (var key in simple_colors) {
        if (color_string == key) {
            color_string = simple_colors[key];
        }
    }
    // emd of simple type-in colors

    // array of color definition objects
    var color_defs = [
        {
            re: /^rgb\((\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3})\)$/,
            example: ['rgb(123, 234, 45)', 'rgb(255,234,245)'],
            process: function (bits){
                return [
                    parseInt(bits[1]),
                    parseInt(bits[2]),
                    parseInt(bits[3])
                ];
            }
        },
        {
            re: /^(\w{2})(\w{2})(\w{2})$/,
            example: ['#00ff00', '336699'],
            process: function (bits){
                return [
                    parseInt(bits[1], 16),
                    parseInt(bits[2], 16),
                    parseInt(bits[3], 16)
                ];
            }
        },
        {
            re: /^(\w{1})(\w{1})(\w{1})$/,
            example: ['#fb0', 'f0f'],
            process: function (bits){
                return [
                    parseInt(bits[1] + bits[1], 16),
                    parseInt(bits[2] + bits[2], 16),
                    parseInt(bits[3] + bits[3], 16)
                ];
            }
        }
    ];

    // search through the definitions to find a match
    for (var i = 0; i < color_defs.length; i++) {
        var re = color_defs[i].re;
        var processor = color_defs[i].process;
        var bits = re.exec(color_string);
        if (bits) {
            channels = processor(bits);
            this.r = channels[0];
            this.g = channels[1];
            this.b = channels[2];
            this.ok = true;
        }

    }

    // validate/cleanup values
    this.r = (this.r < 0 || isNaN(this.r)) ? 0 : ((this.r > 255) ? 255 : this.r);
    this.g = (this.g < 0 || isNaN(this.g)) ? 0 : ((this.g > 255) ? 255 : this.g);
    this.b = (this.b < 0 || isNaN(this.b)) ? 0 : ((this.b > 255) ? 255 : this.b);

    // some getters
    this.toRGB = function () {
        return 'rgb(' + this.r + ', ' + this.g + ', ' + this.b + ')';
    }
    this.toHex = function () {
        var r = this.r.toString(16);
        var g = this.g.toString(16);
        var b = this.b.toString(16);
        if (r.length == 1) r = '0' + r;
        if (g.length == 1) g = '0' + g;
        if (b.length == 1) b = '0' + b;
        return '#' + r + g + b;
    }

    // help
    this.getHelpXML = function () {

        var examples = new Array();
        // add regexps
        for (var i = 0; i < color_defs.length; i++) {
            var example = color_defs[i].example;
            for (var j = 0; j < example.length; j++) {
                examples[examples.length] = example[j];
            }
        }
        // add type-in colors
        for (var sc in simple_colors) {
            examples[examples.length] = sc;
        }

        var xml = document.createElement('ul');
        xml.setAttribute('id', 'rgbcolor-examples');
        for (var i = 0; i < examples.length; i++) {
            try {
                var list_item = document.createElement('li');
                var list_color = new RGBColor(examples[i]);
                var example_div = document.createElement('div');
                example_div.style.cssText =
                        'margin: 3px; '
                        + 'border: 1px solid black; '
                        + 'background:' + list_color.toHex() + '; '
                        + 'color:' + list_color.toHex()
                ;
                example_div.appendChild(document.createTextNode('test'));
                var list_item_value = document.createTextNode(
                    ' ' + examples[i] + ' -> ' + list_color.toRGB() + ' -> ' + list_color.toHex()
                );
                list_item.appendChild(example_div);
                list_item.appendChild(list_item_value);
                xml.appendChild(list_item);

            } catch(e){}
        }
        return xml;

    }

}

/**
 * A class to parse color values
 * @author Stoyan Stefanov <sstoo@gmail.com>
 * @link   http://www.phpied.com/rgb-color-parser-in-javascript/
 * @license Use it if you like it
 */

(function() {

    RGBColorStatic = {};

    var SIMPLE_COLORS = {
        aliceblue : 'f0f8ff',
        antiquewhite : 'faebd7',
        aqua : '00ffff',
        aquamarine : '7fffd4',
        azure : 'f0ffff',
        beige : 'f5f5dc',
        bisque : 'ffe4c4',
        black : '000000',
        blanchedalmond : 'ffebcd',
        blue : '0000ff',
        blueviolet : '8a2be2',
        brown : 'a52a2a',
        burlywood : 'deb887',
        cadetblue : '5f9ea0',
        chartreuse : '7fff00',
        chocolate : 'd2691e',
        coral : 'ff7f50',
        cornflowerblue : '6495ed',
        cornsilk : 'fff8dc',
        crimson : 'dc143c',
        cyan : '00ffff',
        darkblue : '00008b',
        darkcyan : '008b8b',
        darkgoldenrod : 'b8860b',
        darkgray : 'a9a9a9',
        darkgreen : '006400',
        darkkhaki : 'bdb76b',
        darkmagenta : '8b008b',
        darkolivegreen : '556b2f',
        darkorange : 'ff8c00',
        darkorchid : '9932cc',
        darkred : '8b0000',
        darksalmon : 'e9967a',
        darkseagreen : '8fbc8f',
        darkslateblue : '483d8b',
        darkslategray : '2f4f4f',
        darkturquoise : '00ced1',
        darkviolet : '9400d3',
        deeppink : 'ff1493',
        deepskyblue : '00bfff',
        dimgray : '696969',
        dodgerblue : '1e90ff',
        feldspar : 'd19275',
        firebrick : 'b22222',
        floralwhite : 'fffaf0',
        forestgreen : '228b22',
        fuchsia : 'ff00ff',
        gainsboro : 'dcdcdc',
        ghostwhite : 'f8f8ff',
        gold : 'ffd700',
        goldenrod : 'daa520',
        gray : '808080',
        green : '008000',
        greenyellow : 'adff2f',
        honeydew : 'f0fff0',
        hotpink : 'ff69b4',
        indianred : 'cd5c5c',
        indigo : '4b0082',
        ivory : 'fffff0',
        khaki : 'f0e68c',
        lavender : 'e6e6fa',
        lavenderblush : 'fff0f5',
        lawngreen : '7cfc00',
        lemonchiffon : 'fffacd',
        lightblue : 'add8e6',
        lightcoral : 'f08080',
        lightcyan : 'e0ffff',
        lightgoldenrodyellow : 'fafad2',
        lightgrey : 'd3d3d3',
        lightgreen : '90ee90',
        lightpink : 'ffb6c1',
        lightsalmon : 'ffa07a',
        lightseagreen : '20b2aa',
        lightskyblue : '87cefa',
        lightslateblue : '8470ff',
        lightslategray : '778899',
        lightsteelblue : 'b0c4de',
        lightyellow : 'ffffe0',
        lime : '00ff00',
        limegreen : '32cd32',
        linen : 'faf0e6',
        magenta : 'ff00ff',
        maroon : '800000',
        mediumaquamarine : '66cdaa',
        mediumblue : '0000cd',
        mediumorchid : 'ba55d3',
        mediumpurple : '9370d8',
        mediumseagreen : '3cb371',
        mediumslateblue : '7b68ee',
        mediumspringgreen : '00fa9a',
        mediumturquoise : '48d1cc',
        mediumvioletred : 'c71585',
        midnightblue : '191970',
        mintcream : 'f5fffa',
        mistyrose : 'ffe4e1',
        moccasin : 'ffe4b5',
        navajowhite : 'ffdead',
        navy : '000080',
        oldlace : 'fdf5e6',
        olive : '808000',
        olivedrab : '6b8e23',
        orange : 'ffa500',
        orangered : 'ff4500',
        orchid : 'da70d6',
        palegoldenrod : 'eee8aa',
        palegreen : '98fb98',
        paleturquoise : 'afeeee',
        palevioletred : 'd87093',
        papayawhip : 'ffefd5',
        peachpuff : 'ffdab9',
        peru : 'cd853f',
        pink : 'ffc0cb',
        plum : 'dda0dd',
        powderblue : 'b0e0e6',
        purple : '800080',
        red : 'ff0000',
        rosybrown : 'bc8f8f',
        royalblue : '4169e1',
        saddlebrown : '8b4513',
        salmon : 'fa8072',
        sandybrown : 'f4a460',
        seagreen : '2e8b57',
        seashell : 'fff5ee',
        sienna : 'a0522d',
        silver : 'c0c0c0',
        skyblue : '87ceeb',
        slateblue : '6a5acd',
        slategray : '708090',
        snow : 'fffafa',
        springgreen : '00ff7f',
        steelblue : '4682b4',
        tan : 'd2b48c',
        teal : '008080',
        thistle : 'd8bfd8',
        tomato : 'ff6347',
        turquoise : '40e0d0',
        violet : 'ee82ee',
        violetred : 'd02090',
        wheat : 'f5deb3',
        white : 'ffffff',
        whitesmoke : 'f5f5f5',
        yellow : 'ffff00',
        yellowgreen : '9acd32'
    };

    // array of color definition objects
    var COLOR_DEFS = [{
        re : /^rgb\((\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3})\)$/,
        example : ['rgb(123, 234, 45)', 'rgb(255,234,245)'],
        process : function(bits) {
            return [clean_color_number(parseInt(bits[1])), 
                    clean_color_number(parseInt(bits[2])), 
                    clean_color_number(parseInt(bits[3]))];
        }
    }, {
        re : /^(\w{2})(\w{2})(\w{2})$/,
        example : ['#00ff00', '336699'],
        process : function(bits) {
            return [clean_color_number(parseInt(bits[1], 16)), 
                    clean_color_number(parseInt(bits[2], 16)), 
                    clean_color_number(parseInt(bits[3], 16))];
        }
    }, {
        re : /^(\w{1})(\w{1})(\w{1})$/,
        example : ['#fb0', 'f0f'],
        process : function(bits) {
            return [clean_color_number(parseInt(bits[1] + bits[1], 16)), 
                    clean_color_number(parseInt(bits[2] + bits[2], 16)), 
                    clean_color_number(parseInt(bits[3] + bits[3], 16))];
        }
    }];

    var clean_color_number = function(value) {
        return (value < 0 || isNaN(value)) ? 0 : ((value > 255) ? 255 : value);
    };
    
    /**
     *
     * @param {String} color_string rgb(123, 234, 45) or #FF22CC or ff22cc or #f0c or F2C
     * @return {[r, g, b]}
     */
    RGBColorStatic.parse = function(color_string) {
        if(color_string === ""){
            return [];
        }
        color_string = String(color_string).toLowerCase();
        // strip any leading #
        var is_hex_string = false;
        if (color_string.charAt(0) == '#') {// remove # if any
            color_string = color_string.substr(1, 6);
            is_hex_string = true;
        } else {
            color_string = color_string.replace(/ /g, '');
        }

        // seperate check for performance consideration
        if (is_hex_string == false && color_string.indexOf("rgb(") == 0) {
            var re = COLOR_DEFS[0].re;
            var processor = COLOR_DEFS[0].process;
            var bits = re.exec(color_string);
            if (bits) {
                return processor(bits);
            }
        } else {
            if (is_hex_string == false) {
                // before getting into regexps, try simple matches and overwrite the input
                for (var key in SIMPLE_COLORS) {
                    if (color_string == key) {
                        color_string = simple_colors[key];
                    }
                }
            }
            // search through the definitions to find a match
            for (var i = 1; i < COLOR_DEFS.length; i++) {
                var re = COLOR_DEFS[i].re;
                var processor = COLOR_DEFS[i].process;
                var bits = re.exec(color_string);
                if (bits) {
                    return processor(bits);
                }
            }
        }
        return [];
    };

})();
sap.viz.extapi.env.Language.register({id:'de',value: {VIZ_COMMON_YAXIS:"Y-Achse",VIZ_COMMON_SUBTOTAL:"Zwischensumme",VIZ_COMMON_DONT_SHOW_MESSAGE:"Nicht wieder anzeigen",VIZ_COMMON_ADD_ICON:"Hinzufügen",VIZ_COMMON_AXIS:"Achse",VIZ_COMMON_SHOW_BY_DIMENSION:"Nach {0} anzeigen",VIZ_COMMON_PIE_TEXT:"Kreisdiagramm",VIZ_COMMON_ITEM:"Element",VIZ_COMMON_BOXPLOT_TEXT:"Boxplot",VIZ_COMMON_DIMENSION_LIMITATION_WARN:"Maximale Dimension-Feeds für dieses Diagramm erreicht.",VIZ_COMMON_MIN:"Minimum",VIZ_COMMON_FEATUREANALYSIS:"Überlagerungsdaten",VIZ_COMMON_TABLE_MEASURE:"Primärwerte",VIZ_COMMON_PIE_DEPTH:"Kreistiefe",VIZ_COMMON_MAX_SHORT:"(Max)",VIZ_COMMON_SERIALIZATION_FAILED:"Serialisierungsfehler",VIZ_COMMON_LEFT_YAXIS:"Y-Achse links",VIZ_COMMON_RIGHT_YAXIS:"Y-Achse rechts",VIZ_COMMON_STACKED_COLUMN_TEXT:"Stapelsäulendiagramm",VIZ_COMMON_PRIMARY_YAXIS:"Y-Achse 1",VIZ_COMMON_TAGFAMILY:"Wortfarbe",VIZ_COMMON_ADD_MEASURES:"Kennzahlen hinzufügen",VIZ_COMMON_XAXIS:"X-Achse",VIZ_COMMON_DIMENSIONS_TIPS:"Von Kennzahl beeinflussten Wert anzeigen",VIZ_COMMON_TAG:"Tag",VIZ_COMMON_DELETE_COMMENT_MESSAGE:"Wollen Sie den Kommentar entfernen?",VIZ_COMMON_CHANGE_CALCULATION:"Berechnung ändern",VIZ_COMMON_DELETE:"Löschen",VIZ_COMMON_TABLE_COLUMNS_AXIS:"Spaltenachse",VIZ_COMMON_COLS_CAPITAL:"SPALTEN",VIZ_COMMON_BETWEEN:"ZWISCHEN",VIZ_COMMON_SETTINGS_ICON:"Einstellungen",VIZ_COMMON_OK:"OK",VIZ_COMMON_COUNT_ALL_SHORT:"(Anz-alle)",VIZ_COMMON_SUM_SHORT:"(Summe)",VIZ_COMMON_SIZE:"Größe",VIZ_COMMON_SCATTER_MATRIX_TEXT:"Streumatrixdiagramm",VIZ_COMMON_GEOMAP_TEXT:"Landkarte",VIZ_COMMON_SCATTER_TEXT:"Streudiagramm",VIZ_COMMON_MAX:"Maximum",VIZ_COMMON_LEGEND:"Legende",VIZ_COMMON_PRIMARY_XAXIS:"X-Achse 1",VIZ_COMMON_TOTAL_OF:"Gesamtsumme von",VIZ_COMMON_COUNT_OF:"Anzahl von",VIZ_COMMON_CANCEL:"Abbrechen",VIZ_COMMON_GEO_FEATURES:"Geografie",VIZ_COMMON_TAGCLOUD_TEXT:"Schlagwortwolke",VIZ_COMMON_NONE_SHORT:"(Keine)",VIZ_COMMON_CHOROPLETH_TEXT:"Geoflächenkartogramm",VIZ_COMMON_RADAR_AXES:"Netzachsen",VIZ_COMMON_COLUMNS:"Spalten",VIZ_COMMON_ADD_ONE_MEASURE:"Kennzahl hinzufügen",VIZ_COMMON_RADAR_TEXT:"Netzdiagramm",VIZ_COMMON_DUAL_STACKED_COMBINATION_TEXT:"Kombiniertes gestapeltes Liniendiagramm mit 2 X-Achsen",VIZ_COMMON_COUNT_DISTINCT:"Anzahl (Distinct)",VIZ_COMMON_TOP_XAXIS:"X-Achse oben",VIZ_COMMON_FAKE_DIMENSION:"Dimension",VIZ_COMMON_DUAL_LINE_TEXT:"Liniendiagramm mit 2 Y-Achsen",VIZ_COMMON_TABLE_COLUMNS_SUBTOTALS:"Spaltenzwischensummen",VIZ_COMMON_FEATUREVALUES:"Wert",VIZ_COMMON_LINE_TEXT:"Liniendiagramm",VIZ_COMMON_TABLE_TEXT:"Tabelle",VIZ_COMMON_MEASURE_TIPS:"Sortieren, Ranking anwenden, Berechnungen hinzufügen",VIZ_COMMON_ROWS:"Zeilen",VIZ_COMMON_SUBTOTALS_TIPS:"Wert der Zwischensumme anzeigen",VIZ_COMMON_DUAL_BAR_TEXT:"Balkendiagramm mit 2 Y-Achsen",VIZ_COMMON_FAKE_MEASURE:"Kennzahl",VIZ_COMMON_BUBBLE_HEIGHT:"Blasenhöhe",VIZ_COMMON_AVERAGE_SHORT:"(Durchschnitt)",VIZ_COMMON_REMOVE_ICON:"Entfernen",VIZ_COMMON_HEATMAP_TEXT:"Heatmap",VIZ_COMMON_TAGNAME:"Wort",VIZ_COMMON_VALUES:"Werte",VIZ_COMMON_DUAL_COLUMN_TEXT:"Säulendiagramm mit 2 Y-Achsen",VIZ_COMMON_COLUMN_WIDTH:"Spaltenbreite",VIZ_COMMON_RECTANGLEWEIGHT:"Bereichsgewicht",VIZ_COMMON_SUM_OF:"Summe von",VIZ_COMMON_HEIGHT:"Höhe",VIZ_COMMON_AVERAGE:"Durchschnitt",VIZ_COMMON_AREA_TEXT:"Flächendiagramm",VIZ_COMMON_COUNT_DISTINCT_SHORT:"(Anz-Dist)",VIZ_COMMON_3D_BAR_TEXT:"3D-Balkendiagramm",VIZ_COMMON_GEO_COLOR:"Farbe",VIZ_COMMON_SEARCH:"Suchen",VIZ_COMMON_REGIONCOLOR:"Legendenfarbe",VIZ_COMMON_ROWS_CAPITAL:"ZEILEN",VIZ_COMMON_ADD_DIMENSIONS:"Dimensionen hinzufügen",VIZ_COMMON_TREEMAP_TEXT:"Treemap",VIZ_COMMON_WATERFALL_TEXT:"Wasserfalldiagramm",VIZ_COMMON_GEOPIE_TEXT:"Geokreisdiagramm",VIZ_COMMON_TRELLIS:"TRELLIS",VIZ_COMMON_MIN_SHORT:"(Min)",VIZ_COMMON_BUBBLE_WIDTH:"Blasenbreite",VIZ_COMMON_REGIONSHAPE:"Legendenform",VIZ_COMMON_MEASURES:"KENNZAHLEN",VIZ_COMMON_SECONDARY_YAXIS:"Y-Achse 2",VIZ_COMMON_AXES:"Achsen",VIZ_COMMON_MAX_OF:"Maximum von",VIZ_COMMON_TAGWEIGHT:"Wortgewicht",VIZ_COMMON_TIMESERIES_LINE_TEXT:"Liniendiagramm für Datum/Zeitreihen",VIZ_COMMON_3D_COLUMN_TEXT:"3D-Säulendiagramm",VIZ_COMMON_BAR_HEIGHT:"Balkenhöhe",VIZ_COMMON_TIME_AXIS:"Zeitdimension",VIZ_COMMON_COUNT_ALL:"Anzahl (gesamt)",VIZ_COMMON_TRELLIS_TIPS:"Als Zeilen und Spalten hinzufügen",VIZ_COMMON_CHOOSE_MEASURE:"Wert auswählen",VIZ_COMMON_PIE_SECTORS:"Kreisabschnitte",VIZ_COMMON_EDIT:"Bearbeiten",VIZ_COMMON_TABLE_ROWS_SUBTOTALS:"Zeilenzwischensummen",VIZ_COMMON_LABEL:"Bezeichner",VIZ_COMMON_AVERAGE_OF:"Durchschnitt von",VIZ_COMMON_DIMENSIONS:"DIMENSIONEN",VIZ_COMMON_DEPENDENCY_ERROR:"Bei Verwendung von {1}, {0} einschließen.",VIZ_COMMON_INVALID_ARGUMENTS:"Argumente ungültig",VIZ_COMMON_DEPENDENCY_ERROR_WITH_UI_CONFIG:"Bei Verwendung von {1} mit {2}, {0} einschließen.",VIZ_COMMON_ANIMATION:"Animation",VIZ_COMMON_GEOBUBBLE_TEXT:"Geoblasendiagramm",VIZ_COMMON_RECTANGLECOLOR:"Bereichsfarbe",VIZ_COMMON_AREANAME:"Bereichsname",VIZ_COMMON_SECONDARY_XAXIS:"X-Achse 2",VIZ_COMMON_CROSSTAB_MEASURES:"Kennzahlen",VIZ_COMMON_CROSSTAB_TEXT:"Kreuztabelle",VIZ_COMMON_BAR_TEXT:"Balkendiagramm",VIZ_COMMON_STACKED_BAR_TEXT:"Stapelbalkendiagramm",VIZ_COMMON_COLOR:"Farbe",VIZ_COMMON_BUBBLE_TEXT:"Blasendiagramm",VIZ_COMMON_ADD_ONE_DIMENSION:"Dimension hinzufügen",VIZ_COMMON_DUAL_COMBINATION_TEXT:"Kombiniertes Säulen- und Liniendiagramm mit 2 Y-Achsen",VIZ_COMMON_NONE:"Keine",VIZ_COMMON_MIN_OF:"Minimum von",VIZ_COMMON_BOTTOM_XAXIS:"X-Achse unten",VIZ_COMMON_REGION:"Region",VIZ_COMMON_TABLE_DIMENSION:"Zeilenachse",VIZ_COMMON_SUBTOTALS:"ZWISCHENSUMMEN",VIZ_COMMON_COMBINATION_TEXT:"Kombiniertes Säulen- und Liniendiagramm",VIZ_COMMON_COLUMN_TEXT:"Säulendiagramm",VIZ_COMMON_SUM:"Summe",VIZ_COMMON_PIE_WITH_DEPTH_TEXT:"Kreisdiagramm mit variablen Segmenttiefen",VIZ_COMMON_DONUT_TEXT:"Ringdiagramm",VIZ_COMMON_INVALID_SERIALIZATION_PACKAGE:"Ungültiges Serialisierungspaket",VIZ_COMMON_SHAPE:"Form",VIZ_COMMON_CROSSTAB_MEASURES_TOOLTIP:"Zeigt, wo die Kennzahlen gerendert werden",VIZ_COMMON_SECONDARY_AREANAME:"Bereichsname 2",}});sap.viz.extapi.env.Language.register({id:'de',value: {INVALID_DATA_BINDING:"Ungültige Datenbindung",VIZ_CHART_BACK:"Zurück",VIZ_CHART_ADD_EVENT_FAILED:"Hinzufügen des Diagrammereignis-Callbacks fehlgeschlagen:",VIZ_CHART_UPDATE_CSS_FAILED:"Aktualisierung der Diagramm-CSS fehlgeschlagen:",VIZ_CHART_XAXIS_RANGE:"Bereich X-Achse",VIZ_CHART_TIMESERIES_DIMENSION_INCOMPLETE_DESCRIPTION:"Fügen Sie eine Zeitdimension hinzu",VIZ_CHART_EXPORTSVG_FAILED:"Export in SVG-String fehlgeschlagen",VIZ_CHART_TITLE_CONTEXT_MENU_EDIT:"Umbenennen",VIZ_CHART_INCOMPLETE_DESCRIPTION:"Fügen Sie weitere Kennzahlen oder Dimensionen hinzu",VIZ_CHART_END:"Beenden",VIZ_CHART_UPDATE_PROPERTIES_FAILED:"Aktualisierung der Diagrammeigenschaften fehlgeschlagen:",VIZ_CHART_GRADIENT:"Farbverlauf",VIZ_CHART_TRIGGER_ACTION_FAILED:"Auslösen der Diagrammaktion fehlgeschlagen:",VIZ_CHART_UPDATE_CHART_FAILED:"Aktualisierung des Diagramms fehlgeschlagen:",VIZ_CHART_ESRI_MAP_AUTHENTICATION_FAIL:"Esri-Authentifizierung fehlgeschlagen",VIZ_CHART_START:"Starten",VIZ_CHART_XAXIS2_RANGE:"Bereich X-Achse 2",VIZ_CHART_AXIS_ZOOM:"Zoom",VIZ_CHART_XAXIS1_RANGE:"Bereich X-Achse 1",VIZ_CHART_NO_DATA_MATCHES_YOUR_FILTER:"Keine Daten für Filter gefunden",VIZ_CHART_ESRI_SERVICES_UNACCESSIBLE:"Unbekannter Fehler bei Zugriff auf Esri-Online-Dienste; prüfen Sie Ihre Internetverbindung",VIZ_CHART_UPDATE_FEEDING_FAILED:"Aktualisierung des Diagramm-Feeds fehlgeschlagen:",VIZ_CHART_SEGMENTED:"Segmentiert",VIZ_CHART_SET_AXIS_RANGE:"Achsenbereich festlegen",VIZ_CHART_TRELLIS_DISABLED_WARN:"Trellis entweder in Viz-Frame oder Feeder-Bereich deaktiviert",VIZ_CHART_SELECTION_FAILED:"Abruf/Setzen der Diagrammauswahl fehlgeschlagen:",VIZ_CHART_IMPORT_ESRI_CUSTOM_SERVICE:"Esri-Kundenservice importieren",VIZ_CHART_NEGATIVE_VALUES_INFO:"Um negative Werte anzuzeigen, wählen Sie \"Einstellungen\" und danach im Kontextmenü die Option \"Negativwerte anzeigen\".",VIZ_CHART_ESRI_MAP_LOG_ON:"Anmelden bei Esri",VIZ_CHART_CREATE_CHART_FAILED:"Anlegen des Diagramms fehlgeschlagen:",VIZ_CHART_MEASURE_INCOMPLETE_DESCRIPTION:"Fügen Sie weitere Kennzahlen hinzu",VIZ_CHART_FIXED_RANGE:"Fest",VIZ_CHART_NEXT:"Weiter",VIZ_CHART_YAXIS_RANGE:"Bereich Y-Achse",VIZ_CHART_RESET:"Zurücksetzen",VIZ_CHART_GEO_INCOMPLETE_DESCRIPTION:"Fügen Sie weitere Geodimensionen hinzu",VIZ_CHART_UPDATE_DATA_FAILED:"Aktualisierung der Diagrammdaten fehlgeschlagen:",VIZ_CHART_TIMESERIES_INCOMPLETE_DESCRIPTION:"Fügen Sie weitere Kennzahlen oder eine Zeitdimension hinzu",VIZ_CHART_NO_ESRI_SERVICE:"Kein Feature-Service für Ihr Konto gefunden",VIZ_CHART_VIZINSTANCE_NOT_CREATED:"Visualisierungsinstanz nicht angelegt",VIZ_CHART_TITLE_TEXT_JOIN_BY:"{0} nach {1}",VIZ_CHART_INVALID_VIZ_TYPE:"Diagramm {0} kann nicht angezeigt werden.",VIZ_CHART_ESRI_MAP_LOADING:"Esri-Karte wird geladen",VIZ_CHART_REMOVE_EVENT_FAILED:"Entfernen des Diagrammereignis-Callbacks fehlgeschlagen:",VIZ_CHART_AUTO_RANGE:"Automatisch",VIZ_CHART_NEGATIVE_VALUES_WARN:"Negativwerte werden in diesem Blasendiagramm nicht angezeigt",VIZ_CHART_FEEDINGZONE_FAILED:"Abruf des Diagramm-Feeder-Bereichs fehlgeschlagen:",VIZ_CHART_GEO_BOTH_INCOMPLETE_DESCRIPTION:"Fügen Sie weitere Kennzahlen oder Geodimensionen hinzu",VIZ_CONTROLS_API_PARAMETER_ERROR:"API-Parameterfehler",VIZ_CHART_YAXIS2_RANGE:"Bereich Y-Achse 2",VIZ_CHART_YAXIS1_RANGE:"Bereich Y-Achse 1",VIZ_CHART_UPDATE_CUSTOMIZATIONS_FAILED:"Aktualisierung der Diagrammanpassungen fehlgeschlagen:",VIZ_CHART_TITLE_CONTEXT_MENU_RESTORE:"Standardtitel wiederherstellen",VIZ_CHART_SET_COLOR_LAYER:"Farbe in Feature-Layer setzen",VIZ_CHART_DESCRIPTION_FAILED:"Abruf/Setzen der Diagrammbeschreibung fehlgeschlagen:",VIZ_CHART_TITLE_TEXT_JOIN_AND:"und",VIZ_CHART_DIMENSION_INCOMPLETE_DESCRIPTION:"Fügen Sie weitere Dimensionen hinzu",VIZ_CHART_SELECT_DATASET:"Datenset auswählen",VIZ_CHART_CONFIRM:"Bestätigen",VIZ_CHART_SERIALIZE_FAILED:"Serialisierung des Diagramms fehlgeschlagen:",}});sap.viz.extapi.env.Language.register({id:'de',value: {VIZ_FRAME_FILTERBAR_DESCRIPTION:"Zum Filtern, Felder aus Datenset auswählen",VIZ_FRAME_FILTERMENU_FILTER:"Filter",VIZ_FRAME_FILTERMENU_EXCLUDE:"Ausschließen",}});
sap.viz.extapi.env.Language.register({id:'en',value: {VIZ_COMMON_YAXIS:"Y Axis",VIZ_COMMON_SUBTOTAL:"Subtotal",VIZ_COMMON_DONT_SHOW_MESSAGE:"Don't show this again",VIZ_COMMON_ADD_ICON:"Add",VIZ_COMMON_AXIS:"Axis",VIZ_COMMON_SHOW_BY_DIMENSION:"Show by {0}",VIZ_COMMON_PIE_TEXT:"Pie Chart",VIZ_COMMON_ITEM:"Item",VIZ_COMMON_BOXPLOT_TEXT:"Box Plot",VIZ_COMMON_DIMENSION_LIMITATION_WARN:"You have reached the maximum number of dimension feeds for this visualization.",VIZ_COMMON_MIN:"Min",VIZ_COMMON_FEATUREANALYSIS:"Overlay Data",VIZ_COMMON_TABLE_MEASURE:"Primary Values",VIZ_COMMON_PIE_DEPTH:"Pie Depth",VIZ_COMMON_MAX_SHORT:"(Max)",VIZ_COMMON_SERIALIZATION_FAILED:"Serialization error",VIZ_COMMON_LEFT_YAXIS:"Left Y Axis",VIZ_COMMON_RIGHT_YAXIS:"Right Y Axis",VIZ_COMMON_STACKED_COLUMN_TEXT:"Stacked Column Chart",VIZ_COMMON_PRIMARY_YAXIS:"Y Axis1",VIZ_COMMON_TAGFAMILY:"Word Color",VIZ_COMMON_ADD_MEASURES:"Add Measures",VIZ_COMMON_XAXIS:"X Axis",VIZ_COMMON_DIMENSIONS_TIPS:"Show value affected by measure",VIZ_COMMON_TAG:"Tag",VIZ_COMMON_DELETE_COMMENT_MESSAGE:"Are you sure to delete the comment?",VIZ_COMMON_CHANGE_CALCULATION:"Change Calculation",VIZ_COMMON_DELETE:"Delete",VIZ_COMMON_TABLE_COLUMNS_AXIS:"Columns Axis",VIZ_COMMON_COLS_CAPITAL:"COLUMNS",VIZ_COMMON_BETWEEN:"BETWEEN",VIZ_COMMON_SETTINGS_ICON:"Settings",VIZ_COMMON_OK:"OK",VIZ_COMMON_COUNT_ALL_SHORT:"(Cnt-All)",VIZ_COMMON_SUM_SHORT:"(Sum)",VIZ_COMMON_SIZE:"Size",VIZ_COMMON_SCATTER_MATRIX_TEXT:"Scatter Matrix Chart",VIZ_COMMON_GEOMAP_TEXT:"Geo Map",VIZ_COMMON_SCATTER_TEXT:"Scatter Plot",VIZ_COMMON_MAX:"Max",VIZ_COMMON_LEGEND:"Legend",VIZ_COMMON_PRIMARY_XAXIS:"X Axis1",VIZ_COMMON_TOTAL_OF:"Total of",VIZ_COMMON_COUNT_OF:"Count of",VIZ_COMMON_CANCEL:"Cancel",VIZ_COMMON_GEO_FEATURES:"Geography",VIZ_COMMON_TAGCLOUD_TEXT:"Tag Cloud",VIZ_COMMON_NONE_SHORT:"(None)",VIZ_COMMON_CHOROPLETH_TEXT:"Geo Choropleth Chart",VIZ_COMMON_RADAR_AXES:"Radar Branches",VIZ_COMMON_COLUMNS:"Columns",VIZ_COMMON_ADD_ONE_MEASURE:"Add one Measure",VIZ_COMMON_RADAR_TEXT:"Radar Chart",VIZ_COMMON_DUAL_STACKED_COMBINATION_TEXT:"Combined Stacked Line Chart with 2 Y-Axes",VIZ_COMMON_COUNT_DISTINCT:"Count-Distinct",VIZ_COMMON_TOP_XAXIS:"Top X Axis",VIZ_COMMON_FAKE_DIMENSION:"Dimension",VIZ_COMMON_DUAL_LINE_TEXT:"Line Chart With 2 Y-Axes",VIZ_COMMON_TABLE_COLUMNS_SUBTOTALS:"Columns Subtotals",VIZ_COMMON_FEATUREVALUES:"Value",VIZ_COMMON_LINE_TEXT:"Line Chart",VIZ_COMMON_TABLE_TEXT:"Table",VIZ_COMMON_MEASURE_TIPS:"Sort, rank, add calculations",VIZ_COMMON_ROWS:"Rows",VIZ_COMMON_SUBTOTALS_TIPS:"Show value of subtotal",VIZ_COMMON_DUAL_BAR_TEXT:"Bar Chart With 2 Y-Axes",VIZ_COMMON_FAKE_MEASURE:"Measure",VIZ_COMMON_BUBBLE_HEIGHT:"Bubble Height",VIZ_COMMON_AVERAGE_SHORT:"(Avg)",VIZ_COMMON_REMOVE_ICON:"Remove",VIZ_COMMON_HEATMAP_TEXT:"Heat Map",VIZ_COMMON_TAGNAME:"Word",VIZ_COMMON_VALUES:"Values",VIZ_COMMON_DUAL_COLUMN_TEXT:"Column Chart With 2 Y-Axes",VIZ_COMMON_COLUMN_WIDTH:"Column Width",VIZ_COMMON_RECTANGLEWEIGHT:"Area Weight",VIZ_COMMON_SUM_OF:"Sum of",VIZ_COMMON_HEIGHT:"Height",VIZ_COMMON_AVERAGE:"Average",VIZ_COMMON_AREA_TEXT:"Area Chart",VIZ_COMMON_COUNT_DISTINCT_SHORT:"(Cnt-Dis)",VIZ_COMMON_3D_BAR_TEXT:"3D Bar Chart",VIZ_COMMON_GEO_COLOR:"Color",VIZ_COMMON_SEARCH:"Search",VIZ_COMMON_REGIONCOLOR:"Legend Color",VIZ_COMMON_ROWS_CAPITAL:"ROWS",VIZ_COMMON_ADD_DIMENSIONS:"Add Dimensions",VIZ_COMMON_TREEMAP_TEXT:"Tree Map",VIZ_COMMON_WATERFALL_TEXT:"Waterfall Chart",VIZ_COMMON_GEOPIE_TEXT:"Geo Pie Chart",VIZ_COMMON_TRELLIS:"TRELLIS",VIZ_COMMON_MIN_SHORT:"(Min)",VIZ_COMMON_BUBBLE_WIDTH:"Bubble Width",VIZ_COMMON_REGIONSHAPE:"Legend Shape",VIZ_COMMON_MEASURES:"MEASURES",VIZ_COMMON_SECONDARY_YAXIS:"Y Axis2",VIZ_COMMON_AXES:"Axes",VIZ_COMMON_MAX_OF:"Maximum of",VIZ_COMMON_TAGWEIGHT:"Word Weight",VIZ_COMMON_TIMESERIES_LINE_TEXT:"Line Chart for Date/Time Series",VIZ_COMMON_3D_COLUMN_TEXT:"3D Column Chart",VIZ_COMMON_BAR_HEIGHT:"Bar Height",VIZ_COMMON_TIME_AXIS:"Time Dimension",VIZ_COMMON_COUNT_ALL:"Count-All",VIZ_COMMON_TRELLIS_TIPS:"Add as rows and columns",VIZ_COMMON_CHOOSE_MEASURE:"Choose value",VIZ_COMMON_PIE_SECTORS:"Pie Sectors",VIZ_COMMON_EDIT:"Edit",VIZ_COMMON_TABLE_ROWS_SUBTOTALS:"Rows Subtotals",VIZ_COMMON_LABEL:"Label",VIZ_COMMON_AVERAGE_OF:"Average of",VIZ_COMMON_DIMENSIONS:"DIMENSIONS",VIZ_COMMON_DEPENDENCY_ERROR:"Include {0} when using {1}.",VIZ_COMMON_INVALID_ARGUMENTS:"Invalid Arguments",VIZ_COMMON_DEPENDENCY_ERROR_WITH_UI_CONFIG:"Include {0} when using {1} with {2}.",VIZ_COMMON_ANIMATION:"Animation",VIZ_COMMON_GEOBUBBLE_TEXT:"Geographic Bubble Chart",VIZ_COMMON_RECTANGLECOLOR:"Area Color",VIZ_COMMON_AREANAME:"Area Name",VIZ_COMMON_SECONDARY_XAXIS:"X Axis2",VIZ_COMMON_CROSSTAB_MEASURES:"Measures",VIZ_COMMON_CROSSTAB_TEXT:"Crosstab",VIZ_COMMON_BAR_TEXT:"Bar Chart",VIZ_COMMON_STACKED_BAR_TEXT:"Stacked Bar Chart",VIZ_COMMON_COLOR:"Color",VIZ_COMMON_BUBBLE_TEXT:"Bubble Chart",VIZ_COMMON_ADD_ONE_DIMENSION:"Add one Dimension",VIZ_COMMON_DUAL_COMBINATION_TEXT:"Combined Column Line Chart With 2 Y-Axes",VIZ_COMMON_NONE:"None",VIZ_COMMON_MIN_OF:"Minimum of",VIZ_COMMON_BOTTOM_XAXIS:"Bottom X Axis",VIZ_COMMON_REGION:"Region",VIZ_COMMON_TABLE_DIMENSION:"Rows Axis",VIZ_COMMON_SUBTOTALS:"SUBTOTALS",VIZ_COMMON_COMBINATION_TEXT:"Combined Column Line Chart",VIZ_COMMON_COLUMN_TEXT:"Column Chart",VIZ_COMMON_SUM:"Sum",VIZ_COMMON_PIE_WITH_DEPTH_TEXT:"Pie With Variable Slice Depth",VIZ_COMMON_DONUT_TEXT:"Donut Chart",VIZ_COMMON_INVALID_SERIALIZATION_PACKAGE:"Invalid serialization package",VIZ_COMMON_SHAPE:"Shape",VIZ_COMMON_CROSSTAB_MEASURES_TOOLTIP:"A representation of where the Measures are rendered",VIZ_COMMON_SECONDARY_AREANAME:"Area Name2",}});sap.viz.extapi.env.Language.register({id:'en',value: {INVALID_DATA_BINDING:"Invalid data binding",VIZ_CHART_BACK:"Back",VIZ_CHART_ADD_EVENT_FAILED:"Failed to add chart event callback:",VIZ_CHART_UPDATE_CSS_FAILED:"Failed to update chart css:",VIZ_CHART_XAXIS_RANGE:"X Axis Range",VIZ_CHART_TIMESERIES_DIMENSION_INCOMPLETE_DESCRIPTION:"Add a time dimension",VIZ_CHART_EXPORTSVG_FAILED:"Failed to export to svg string.",VIZ_CHART_TITLE_CONTEXT_MENU_EDIT:"Rename",VIZ_CHART_INCOMPLETE_DESCRIPTION:"Add more measures or dimensions",VIZ_CHART_END:"End",VIZ_CHART_UPDATE_PROPERTIES_FAILED:"Failed to update chart properties:",VIZ_CHART_GRADIENT:"Gradient",VIZ_CHART_TRIGGER_ACTION_FAILED:"Failed to trigger chart action:",VIZ_CHART_UPDATE_CHART_FAILED:"Failed to update chart:",VIZ_CHART_ESRI_MAP_AUTHENTICATION_FAIL:"Esri Authentication Fail",VIZ_CHART_START:"Start",VIZ_CHART_XAXIS2_RANGE:"X Axis2 Range",VIZ_CHART_AXIS_ZOOM:"Zoom",VIZ_CHART_XAXIS1_RANGE:"X Axis1 Range",VIZ_CHART_NO_DATA_MATCHES_YOUR_FILTER:"No data matches your filter(s)",VIZ_CHART_ESRI_SERVICES_UNACCESSIBLE:"An unknown error has occurred while accessing ESRI online services. Check your internet connection.",VIZ_CHART_UPDATE_FEEDING_FAILED:"Failed to update chart feeding:",VIZ_CHART_SEGMENTED:"Segmented",VIZ_CHART_SET_AXIS_RANGE:"Set axis range",VIZ_CHART_TRELLIS_DISABLED_WARN:"The trellis is disabled in either the Viz Frame or Feeding Panel",VIZ_CHART_SELECTION_FAILED:"Failed to get/set chart selection:",VIZ_CHART_IMPORT_ESRI_CUSTOM_SERVICE:"Import Esri Custom Service",VIZ_CHART_NEGATIVE_VALUES_INFO:"To display negative values, click the Settings button and select Show Negative Values from the contextual menu.",VIZ_CHART_ESRI_MAP_LOG_ON:"Logging in to Esri now",VIZ_CHART_CREATE_CHART_FAILED:"Failed to create chart:",VIZ_CHART_MEASURE_INCOMPLETE_DESCRIPTION:"Add more measures",VIZ_CHART_FIXED_RANGE:"Fixed",VIZ_CHART_NEXT:"Next",VIZ_CHART_YAXIS_RANGE:"Y Axis Range",VIZ_CHART_RESET:"Reset",VIZ_CHART_GEO_INCOMPLETE_DESCRIPTION:"Add more geography dimensions",VIZ_CHART_UPDATE_DATA_FAILED:"Failed to update chart data:",VIZ_CHART_TIMESERIES_INCOMPLETE_DESCRIPTION:"Add more measures or a time dimension",VIZ_CHART_NO_ESRI_SERVICE:"No feature service was found for your account.",VIZ_CHART_VIZINSTANCE_NOT_CREATED:"VizInstance is not created",VIZ_CHART_TITLE_TEXT_JOIN_BY:"{0} by {1}",VIZ_CHART_INVALID_VIZ_TYPE:"Cannot display this chart: {0}.",VIZ_CHART_ESRI_MAP_LOADING:"Loading Esri Map",VIZ_CHART_REMOVE_EVENT_FAILED:"Failed to remove chart event callback:",VIZ_CHART_AUTO_RANGE:"Automatic",VIZ_CHART_NEGATIVE_VALUES_WARN:"Negative values are not shown in this Bubble chart",VIZ_CHART_FEEDINGZONE_FAILED:"Failed to get chart feeding zone:",VIZ_CHART_GEO_BOTH_INCOMPLETE_DESCRIPTION:"Add more measures or more geography dimensions",VIZ_CONTROLS_API_PARAMETER_ERROR:"API parameter error",VIZ_CHART_YAXIS2_RANGE:"Y Axis2 Range",VIZ_CHART_YAXIS1_RANGE:"Y Axis1 Range",VIZ_CHART_UPDATE_CUSTOMIZATIONS_FAILED:"Failed to update chart customizations:",VIZ_CHART_TITLE_CONTEXT_MENU_RESTORE:"Restore Default Title",VIZ_CHART_SET_COLOR_LAYER:"Set color to feature layer",VIZ_CHART_DESCRIPTION_FAILED:"Failed to get/set chart description:",VIZ_CHART_TITLE_TEXT_JOIN_AND:"and",VIZ_CHART_DIMENSION_INCOMPLETE_DESCRIPTION:"Add more dimensions",VIZ_CHART_SELECT_DATASET:"Select data set",VIZ_CHART_CONFIRM:"Confirm",VIZ_CHART_SERIALIZE_FAILED:"Failed to serialize chart:",}});sap.viz.extapi.env.Language.register({id:'en',value: {VIZ_FRAME_FILTERBAR_DESCRIPTION:"Select fields from the dataset to filter",VIZ_FRAME_FILTERMENU_FILTER:"Filter",VIZ_FRAME_FILTERMENU_EXCLUDE:"Exclude",}});
sap.viz.extapi.env.Language.register({id:'es',value: {VIZ_COMMON_YAXIS:"Eje Y",VIZ_COMMON_SUBTOTAL:"Subtotal",VIZ_COMMON_DONT_SHOW_MESSAGE:"No mostrar de nuevo",VIZ_COMMON_ADD_ICON:"Agregar",VIZ_COMMON_AXIS:"Eje",VIZ_COMMON_SHOW_BY_DIMENSION:"Mostrar por {0}",VIZ_COMMON_PIE_TEXT:"Gráfico circular",VIZ_COMMON_ITEM:"Elemento",VIZ_COMMON_BOXPLOT_TEXT:"Diagrama del cuadro",VIZ_COMMON_DIMENSION_LIMITATION_WARN:"Ha alcanzado el número máximo de alimentadores de dimensión para esta visualización.",VIZ_COMMON_MIN:"Mín.",VIZ_COMMON_FEATUREANALYSIS:"Superponer datos",VIZ_COMMON_TABLE_MEASURE:"Valores primarios",VIZ_COMMON_PIE_DEPTH:"Profundidad circular",VIZ_COMMON_MAX_SHORT:"(Máx.)",VIZ_COMMON_SERIALIZATION_FAILED:"Error de serialización",VIZ_COMMON_LEFT_YAXIS:"Eje Y izquierdo",VIZ_COMMON_RIGHT_YAXIS:"Eje Y derecho",VIZ_COMMON_STACKED_COLUMN_TEXT:"Gráfico de columnas apiladas",VIZ_COMMON_PRIMARY_YAXIS:"Eje Y 1",VIZ_COMMON_TAGFAMILY:"Color de palabra",VIZ_COMMON_ADD_MEASURES:"Agregar indicadores",VIZ_COMMON_XAXIS:"Eje X",VIZ_COMMON_DIMENSIONS_TIPS:"Mostrar valor afectado por el indicador",VIZ_COMMON_TAG:"Etiqueta",VIZ_COMMON_DELETE_COMMENT_MESSAGE:"¿Está seguro de que desea eliminar este comentario?",VIZ_COMMON_CHANGE_CALCULATION:"Cambiar cálculo",VIZ_COMMON_DELETE:"Eliminar",VIZ_COMMON_TABLE_COLUMNS_AXIS:"Eje de columnas",VIZ_COMMON_COLS_CAPITAL:"COLUMNAS",VIZ_COMMON_BETWEEN:"ENTRE",VIZ_COMMON_SETTINGS_ICON:"Configuración",VIZ_COMMON_OK:"Aceptar",VIZ_COMMON_COUNT_ALL_SHORT:"(Cuen. tot.)",VIZ_COMMON_SUM_SHORT:"(Suma)",VIZ_COMMON_SIZE:"Tamaño",VIZ_COMMON_SCATTER_MATRIX_TEXT:"Gráfico de matriz de dispersión",VIZ_COMMON_GEOMAP_TEXT:"Mapa geográfico",VIZ_COMMON_SCATTER_TEXT:"Diagrama de dispersión",VIZ_COMMON_MAX:"Máx.",VIZ_COMMON_LEGEND:"Leyenda",VIZ_COMMON_PRIMARY_XAXIS:"Eje X 1",VIZ_COMMON_TOTAL_OF:"Total de",VIZ_COMMON_COUNT_OF:"Recuento de",VIZ_COMMON_CANCEL:"Cancelar",VIZ_COMMON_GEO_FEATURES:"Geográfico",VIZ_COMMON_TAGCLOUD_TEXT:"Nube de etiquetas",VIZ_COMMON_NONE_SHORT:"(Ninguno)",VIZ_COMMON_CHOROPLETH_TEXT:"Gráfico de coropletas geográfico",VIZ_COMMON_RADAR_AXES:"Ramas radiales",VIZ_COMMON_COLUMNS:"Columnas",VIZ_COMMON_ADD_ONE_MEASURE:"Agregar un indicador",VIZ_COMMON_RADAR_TEXT:"Gráfico radial",VIZ_COMMON_DUAL_STACKED_COMBINATION_TEXT:"Gráfico de líneas apiladas combinado con 2 ejes Y",VIZ_COMMON_COUNT_DISTINCT:"Cálculo diferencial",VIZ_COMMON_TOP_XAXIS:"Eje X superior",VIZ_COMMON_FAKE_DIMENSION:"Dimensión",VIZ_COMMON_DUAL_LINE_TEXT:"Gráfico de líneas con 2 ejes Y",VIZ_COMMON_TABLE_COLUMNS_SUBTOTALS:"Subtotales de columnas",VIZ_COMMON_FEATUREVALUES:"Valor",VIZ_COMMON_LINE_TEXT:"Gráfico de líneas",VIZ_COMMON_TABLE_TEXT:"Tabla",VIZ_COMMON_MEASURE_TIPS:"Ordenar, clasificar, agregar cálculos",VIZ_COMMON_ROWS:"Filas",VIZ_COMMON_SUBTOTALS_TIPS:"Mostrar valor de subtotal",VIZ_COMMON_DUAL_BAR_TEXT:"Gráfico de barras con 2 ejes Y",VIZ_COMMON_FAKE_MEASURE:"Indicador",VIZ_COMMON_BUBBLE_HEIGHT:"Altura de burbuja",VIZ_COMMON_AVERAGE_SHORT:"(Prom.)",VIZ_COMMON_REMOVE_ICON:"Eliminar",VIZ_COMMON_HEATMAP_TEXT:"Mapa de actividad",VIZ_COMMON_TAGNAME:"Palabra",VIZ_COMMON_VALUES:"Valores",VIZ_COMMON_DUAL_COLUMN_TEXT:"Gráfico de columnas con dos ejes Y",VIZ_COMMON_COLUMN_WIDTH:"Ancho de columna",VIZ_COMMON_RECTANGLEWEIGHT:"Peso del área",VIZ_COMMON_SUM_OF:"Suma de",VIZ_COMMON_HEIGHT:"Altura",VIZ_COMMON_AVERAGE:"Promedio",VIZ_COMMON_AREA_TEXT:"Gráfico de superficie",VIZ_COMMON_COUNT_DISTINCT_SHORT:"(Cál. dif.)",VIZ_COMMON_3D_BAR_TEXT:"Gráfico de barras 3D",VIZ_COMMON_GEO_COLOR:"Color",VIZ_COMMON_SEARCH:"Buscar",VIZ_COMMON_REGIONCOLOR:"Color de la leyenda",VIZ_COMMON_ROWS_CAPITAL:"FILAS",VIZ_COMMON_ADD_DIMENSIONS:"Agregar dimensiones",VIZ_COMMON_TREEMAP_TEXT:"Mapa de árbol",VIZ_COMMON_WATERFALL_TEXT:"Gráfico en cascada",VIZ_COMMON_GEOPIE_TEXT:"Gráfico circular geográfico",VIZ_COMMON_TRELLIS:"TRELLIS",VIZ_COMMON_MIN_SHORT:"(Mín.)",VIZ_COMMON_BUBBLE_WIDTH:"Ancho de burbuja",VIZ_COMMON_REGIONSHAPE:"Forma de la leyenda",VIZ_COMMON_MEASURES:"INDICADORES",VIZ_COMMON_SECONDARY_YAXIS:"Eje Y 2",VIZ_COMMON_AXES:"Ejes",VIZ_COMMON_MAX_OF:"Máximo de",VIZ_COMMON_TAGWEIGHT:"Peso de la palabra",VIZ_COMMON_TIMESERIES_LINE_TEXT:"Gráfico de líneas para serie fecha/hora",VIZ_COMMON_3D_COLUMN_TEXT:"Gráfico de columnas 3D",VIZ_COMMON_BAR_HEIGHT:"Altura de barra",VIZ_COMMON_TIME_AXIS:"Dimensión de tiempo",VIZ_COMMON_COUNT_ALL:"Cuenta total",VIZ_COMMON_TRELLIS_TIPS:"Agregar como filas y columnas",VIZ_COMMON_CHOOSE_MEASURE:"Seleccionar valor",VIZ_COMMON_PIE_SECTORS:"Sectores circulares",VIZ_COMMON_EDIT:"Editar",VIZ_COMMON_TABLE_ROWS_SUBTOTALS:"Subtotales de filas",VIZ_COMMON_LABEL:"Etiqueta",VIZ_COMMON_AVERAGE_OF:"Promedio de",VIZ_COMMON_DIMENSIONS:"DIMENSIONES",VIZ_COMMON_DEPENDENCY_ERROR:"Incluir {0} al usar {1}.",VIZ_COMMON_INVALID_ARGUMENTS:"Argumentos no válidos",VIZ_COMMON_DEPENDENCY_ERROR_WITH_UI_CONFIG:"Incluir {0} al usar {1} con {2}.",VIZ_COMMON_ANIMATION:"Animación",VIZ_COMMON_GEOBUBBLE_TEXT:"Gráfico de burbujas geográfico",VIZ_COMMON_RECTANGLECOLOR:"Color del área",VIZ_COMMON_AREANAME:"Nombre de área",VIZ_COMMON_SECONDARY_XAXIS:"Eje X 2",VIZ_COMMON_CROSSTAB_MEASURES:"Indicadores",VIZ_COMMON_CROSSTAB_TEXT:"Tabla de referencias",VIZ_COMMON_BAR_TEXT:"Gráfico de barras",VIZ_COMMON_STACKED_BAR_TEXT:"Gráfico de barras apiladas",VIZ_COMMON_COLOR:"Color",VIZ_COMMON_BUBBLE_TEXT:"Gráfico de burbujas",VIZ_COMMON_ADD_ONE_DIMENSION:"Agregar una dimensión",VIZ_COMMON_DUAL_COMBINATION_TEXT:"Gráfico de líneas de columnas combinadas con 2 ejes Y",VIZ_COMMON_NONE:"Ninguno",VIZ_COMMON_MIN_OF:"Mínimo de",VIZ_COMMON_BOTTOM_XAXIS:"Eje X inferior",VIZ_COMMON_REGION:"Región",VIZ_COMMON_TABLE_DIMENSION:"Eje de fila",VIZ_COMMON_SUBTOTALS:"SUBTOTALES",VIZ_COMMON_COMBINATION_TEXT:"Gráfico de líneas de columnas combinadas",VIZ_COMMON_COLUMN_TEXT:"Gráfico de columnas",VIZ_COMMON_SUM:"Suma",VIZ_COMMON_PIE_WITH_DEPTH_TEXT:"Gráfico circular con profundidad de porciones variables",VIZ_COMMON_DONUT_TEXT:"Gráfico de anillos",VIZ_COMMON_INVALID_SERIALIZATION_PACKAGE:"Paquete de serialización no válido",VIZ_COMMON_SHAPE:"Forma",VIZ_COMMON_CROSSTAB_MEASURES_TOOLTIP:"Una representación de dónde se representan los indicadores",VIZ_COMMON_SECONDARY_AREANAME:"Nombre de área 2",}});sap.viz.extapi.env.Language.register({id:'es',value: {INVALID_DATA_BINDING:"Enlace de datos no válido",VIZ_CHART_BACK:"Atrás",VIZ_CHART_ADD_EVENT_FAILED:"Error al agregar la rellamada de eventos del gráfico:",VIZ_CHART_UPDATE_CSS_FAILED:"Error al actualizar el css del gráfico:",VIZ_CHART_XAXIS_RANGE:"Rango de eje X",VIZ_CHART_TIMESERIES_DIMENSION_INCOMPLETE_DESCRIPTION:"Agregar una dimensión de tiempo",VIZ_CHART_EXPORTSVG_FAILED:"Error al exportar a cadena svg.",VIZ_CHART_TITLE_CONTEXT_MENU_EDIT:"Cambiar nombre",VIZ_CHART_INCOMPLETE_DESCRIPTION:"Agregar más indicadores o dimensiones",VIZ_CHART_END:"Fin",VIZ_CHART_UPDATE_PROPERTIES_FAILED:"Error al actualizar las propiedades del gráfico:",VIZ_CHART_GRADIENT:"Degradado",VIZ_CHART_TRIGGER_ACTION_FAILED:"Error al desencadenar la acción del gráfico:",VIZ_CHART_UPDATE_CHART_FAILED:"Error al actualizar el gráfico:",VIZ_CHART_ESRI_MAP_AUTHENTICATION_FAIL:"Error de autenticación de Esri",VIZ_CHART_START:"Inicio",VIZ_CHART_XAXIS2_RANGE:"Rango de eje X 2",VIZ_CHART_AXIS_ZOOM:"Zoom",VIZ_CHART_XAXIS1_RANGE:"Rango de eje X 1",VIZ_CHART_NO_DATA_MATCHES_YOUR_FILTER:"No hay ningún dato que coincida con el filtro o los filtros",VIZ_CHART_ESRI_SERVICES_UNACCESSIBLE:"Se ha producido un error al acceder a los servicios en línea ESRI. Compruebe la conexión a Internet.",VIZ_CHART_UPDATE_FEEDING_FAILED:"Error al actualizar el alimentador de gráficos:",VIZ_CHART_SEGMENTED:"Segmentado",VIZ_CHART_SET_AXIS_RANGE:"Establecer rango de eje",VIZ_CHART_TRELLIS_DISABLED_WARN:"La cuadrícula no está habilitada en el marco Viz ni en el panel del alimentador",VIZ_CHART_SELECTION_FAILED:"Error al obtener/establecer la selección del gráfico:",VIZ_CHART_IMPORT_ESRI_CUSTOM_SERVICE:"Importar servicio personalizado de Esri",VIZ_CHART_NEGATIVE_VALUES_INFO:"Para mostrar valores negativos, haga clic en el botón Configuración y seleccione Mostrar valores negativos en el menú contextual.",VIZ_CHART_ESRI_MAP_LOG_ON:"Iniciando sesión a Esri ahora",VIZ_CHART_CREATE_CHART_FAILED:"Error al crear el gráfico:",VIZ_CHART_MEASURE_INCOMPLETE_DESCRIPTION:"Agregar más indicadores",VIZ_CHART_FIXED_RANGE:"Fijo",VIZ_CHART_NEXT:"Siguiente",VIZ_CHART_YAXIS_RANGE:"Rango de eje Y",VIZ_CHART_RESET:"Restablecer",VIZ_CHART_GEO_INCOMPLETE_DESCRIPTION:"Agregar más dimensiones geográficas",VIZ_CHART_UPDATE_DATA_FAILED:"Error al actualizar los datos del gráfico:",VIZ_CHART_TIMESERIES_INCOMPLETE_DESCRIPTION:"Agregar más indicadores o una dimensión de tiempo",VIZ_CHART_NO_ESRI_SERVICE:"No se ha encontrado ningún servicio de funciones para su cuenta.",VIZ_CHART_VIZINSTANCE_NOT_CREATED:"La instancia Viz no está creada",VIZ_CHART_TITLE_TEXT_JOIN_BY:"{0} por {1}",VIZ_CHART_INVALID_VIZ_TYPE:"No se puede mostrar este gráfico: {0}.",VIZ_CHART_ESRI_MAP_LOADING:"Cargando asignación Esri",VIZ_CHART_REMOVE_EVENT_FAILED:"Error al eliminar la rellamada de eventos del gráfico:",VIZ_CHART_AUTO_RANGE:"Automático",VIZ_CHART_NEGATIVE_VALUES_WARN:"En este gráfico de burbujas no se muestran los valores negativos",VIZ_CHART_FEEDINGZONE_FAILED:"Error al obtener la zona de alimentación del gráfico:",VIZ_CHART_GEO_BOTH_INCOMPLETE_DESCRIPTION:"Agregar más indocadores i más dimensiones geográficas",VIZ_CONTROLS_API_PARAMETER_ERROR:"Error de parámetro API",VIZ_CHART_YAXIS2_RANGE:"Rango de eje Y 2",VIZ_CHART_YAXIS1_RANGE:"Rango de eje Y 1",VIZ_CHART_UPDATE_CUSTOMIZATIONS_FAILED:"Error al actualizar las personalizaciones de gráfico:",VIZ_CHART_TITLE_CONTEXT_MENU_RESTORE:"Restaurar título predeterminado",VIZ_CHART_SET_COLOR_LAYER:"Establecer color para la capa de funciones",VIZ_CHART_DESCRIPTION_FAILED:"Error al obtener/establecer la descripción del gráfico:",VIZ_CHART_TITLE_TEXT_JOIN_AND:"y",VIZ_CHART_DIMENSION_INCOMPLETE_DESCRIPTION:"Agregar más dimensiones",VIZ_CHART_SELECT_DATASET:"Seleccionar conjunto de datos",VIZ_CHART_CONFIRM:"Confirmar",VIZ_CHART_SERIALIZE_FAILED:"Error al serializar el gráfico:",}});sap.viz.extapi.env.Language.register({id:'es',value: {VIZ_FRAME_FILTERBAR_DESCRIPTION:"Seleccione campos del conjunto de datos para filtrar",VIZ_FRAME_FILTERMENU_FILTER:"Filtro",VIZ_FRAME_FILTERMENU_EXCLUDE:"Excluir",}});
sap.viz.extapi.env.Language.register({id:'fr',value: {VIZ_COMMON_YAXIS:"Axe Y",VIZ_COMMON_SUBTOTAL:"Total intermédiaire",VIZ_COMMON_DONT_SHOW_MESSAGE:"Ne plus afficher ce message",VIZ_COMMON_ADD_ICON:"Ajouter",VIZ_COMMON_AXIS:"Axe",VIZ_COMMON_SHOW_BY_DIMENSION:"Afficher par {0}",VIZ_COMMON_PIE_TEXT:"Diagramme à secteurs",VIZ_COMMON_ITEM:"Élément",VIZ_COMMON_BOXPLOT_TEXT:"Diagramme à surfaces",VIZ_COMMON_DIMENSION_LIMITATION_WARN:"Vous avez atteint le nombre maximal de flux de dimension pour cette visualisation.",VIZ_COMMON_MIN:"Min",VIZ_COMMON_FEATUREANALYSIS:"Superposer les données",VIZ_COMMON_TABLE_MEASURE:"Valeurs primaires",VIZ_COMMON_PIE_DEPTH:"Épaisseur de secteur",VIZ_COMMON_MAX_SHORT:"(Max)",VIZ_COMMON_SERIALIZATION_FAILED:"Erreur de sérialisation",VIZ_COMMON_LEFT_YAXIS:"Axe Y - gauche",VIZ_COMMON_RIGHT_YAXIS:"Axe Y - droite",VIZ_COMMON_STACKED_COLUMN_TEXT:"Diagramme à colonnes empilées",VIZ_COMMON_PRIMARY_YAXIS:"Axe Y 1",VIZ_COMMON_TAGFAMILY:"Couleur des mots",VIZ_COMMON_ADD_MEASURES:"Ajouter des indicateurs",VIZ_COMMON_XAXIS:"Axe X",VIZ_COMMON_DIMENSIONS_TIPS:"Afficher la valeur affectée par indicateur",VIZ_COMMON_TAG:"Balise",VIZ_COMMON_DELETE_COMMENT_MESSAGE:"Etes-vous sûr de vouloir supprimer le commentaire ?",VIZ_COMMON_CHANGE_CALCULATION:"Modifier le calcul",VIZ_COMMON_DELETE:"Supprimer",VIZ_COMMON_TABLE_COLUMNS_AXIS:"Axe des colonnes",VIZ_COMMON_COLS_CAPITAL:"COLONNES",VIZ_COMMON_BETWEEN:"ENTRE",VIZ_COMMON_SETTINGS_ICON:"Paramètres",VIZ_COMMON_OK:"OK",VIZ_COMMON_COUNT_ALL_SHORT:"(Cpte-tout)",VIZ_COMMON_SUM_SHORT:"(Som)",VIZ_COMMON_SIZE:"Taille",VIZ_COMMON_SCATTER_MATRIX_TEXT:"Diagramme matriciel à nuage de points",VIZ_COMMON_GEOMAP_TEXT:"Carte géographique",VIZ_COMMON_SCATTER_TEXT:"Nuage de points",VIZ_COMMON_MAX:"Max",VIZ_COMMON_LEGEND:"Légende",VIZ_COMMON_PRIMARY_XAXIS:"Axe X 1",VIZ_COMMON_TOTAL_OF:"Total de",VIZ_COMMON_COUNT_OF:"Nombre de",VIZ_COMMON_CANCEL:"Annuler",VIZ_COMMON_GEO_FEATURES:"Géographie",VIZ_COMMON_TAGCLOUD_TEXT:"Nuage de mots clés",VIZ_COMMON_NONE_SHORT:"(Aucun)",VIZ_COMMON_CHOROPLETH_TEXT:"Diagramme choroplèthe géographique",VIZ_COMMON_RADAR_AXES:"Radar avec branches",VIZ_COMMON_COLUMNS:"Colonnes",VIZ_COMMON_ADD_ONE_MEASURE:"Ajouter un indicateur",VIZ_COMMON_RADAR_TEXT:"Diagramme en radar",VIZ_COMMON_DUAL_STACKED_COMBINATION_TEXT:"Diagramme à courbes empilées combinées avec 2 axes Y",VIZ_COMMON_COUNT_DISTINCT:"Compte-Eléments uniques",VIZ_COMMON_TOP_XAXIS:"Axe X supérieur",VIZ_COMMON_FAKE_DIMENSION:"Dimension",VIZ_COMMON_DUAL_LINE_TEXT:"Diagramme à courbes avec 2 axes Y",VIZ_COMMON_TABLE_COLUMNS_SUBTOTALS:"Sous-totaux des colonnes",VIZ_COMMON_FEATUREVALUES:"Valeur",VIZ_COMMON_LINE_TEXT:"Diagramme à courbes",VIZ_COMMON_TABLE_TEXT:"Table",VIZ_COMMON_MEASURE_TIPS:"Trier, classer, ajouter des calculs",VIZ_COMMON_ROWS:"Lignes",VIZ_COMMON_SUBTOTALS_TIPS:"Afficher la valeur du sous-total",VIZ_COMMON_DUAL_BAR_TEXT:"Diagramme à barres avec 2 axes Y",VIZ_COMMON_FAKE_MEASURE:"Indicateur",VIZ_COMMON_BUBBLE_HEIGHT:"Hauteur de bulle",VIZ_COMMON_AVERAGE_SHORT:"(Moy)",VIZ_COMMON_REMOVE_ICON:"Supprimer",VIZ_COMMON_HEATMAP_TEXT:"Carte des points chauds",VIZ_COMMON_TAGNAME:"Mot",VIZ_COMMON_VALUES:"Valeurs",VIZ_COMMON_DUAL_COLUMN_TEXT:"Diagramme à colonnes avec 2 axes Y",VIZ_COMMON_COLUMN_WIDTH:"Largeur de colonne",VIZ_COMMON_RECTANGLEWEIGHT:"Épaisseur de la zone",VIZ_COMMON_SUM_OF:"Somme de",VIZ_COMMON_HEIGHT:"Hauteur",VIZ_COMMON_AVERAGE:"Moyenne",VIZ_COMMON_AREA_TEXT:"Diagramme à aires",VIZ_COMMON_COUNT_DISTINCT_SHORT:"(Cpte-uniq)",VIZ_COMMON_3D_BAR_TEXT:"Diagramme à barres en 3D",VIZ_COMMON_GEO_COLOR:"Couleur",VIZ_COMMON_SEARCH:"Rechercher",VIZ_COMMON_REGIONCOLOR:"Couleur de la légende",VIZ_COMMON_ROWS_CAPITAL:"LIGNES",VIZ_COMMON_ADD_DIMENSIONS:"Ajouter des dimensions",VIZ_COMMON_TREEMAP_TEXT:"Carte d'arborescence",VIZ_COMMON_WATERFALL_TEXT:"Diagramme en cascade",VIZ_COMMON_GEOPIE_TEXT:"Diagramme à secteurs géographique",VIZ_COMMON_TRELLIS:"TREILLIS",VIZ_COMMON_MIN_SHORT:"(Min)",VIZ_COMMON_BUBBLE_WIDTH:"Largeur de bulle",VIZ_COMMON_REGIONSHAPE:"Forme de la légende",VIZ_COMMON_MEASURES:"INDICATEURS",VIZ_COMMON_SECONDARY_YAXIS:"Axe Y 2",VIZ_COMMON_AXES:"Axes",VIZ_COMMON_MAX_OF:"Maximum de",VIZ_COMMON_TAGWEIGHT:"Épaisseur des mots",VIZ_COMMON_TIMESERIES_LINE_TEXT:"Diagramme à courbes pour séries chronologiques/date",VIZ_COMMON_3D_COLUMN_TEXT:"Diagramme à colonnes en 3D",VIZ_COMMON_BAR_HEIGHT:"Hauteur de barre",VIZ_COMMON_TIME_AXIS:"Dimension temporelle",VIZ_COMMON_COUNT_ALL:"Compte-Tout",VIZ_COMMON_TRELLIS_TIPS:"Ajouter en tant que lignes et colonnes",VIZ_COMMON_CHOOSE_MEASURE:"Sélectionner la valeur",VIZ_COMMON_PIE_SECTORS:"Portions de secteurs",VIZ_COMMON_EDIT:"Modifier",VIZ_COMMON_TABLE_ROWS_SUBTOTALS:"Sous-totaux des lignes",VIZ_COMMON_LABEL:"Étiquette",VIZ_COMMON_AVERAGE_OF:"Valeur moyenne de",VIZ_COMMON_DIMENSIONS:"DIMENSIONS",VIZ_COMMON_DEPENDENCY_ERROR:"Veuillez inclure {0} lors de l''utilisation de {1}.",VIZ_COMMON_INVALID_ARGUMENTS:"Arguments non valides",VIZ_COMMON_DEPENDENCY_ERROR_WITH_UI_CONFIG:"Veuillez inclure {0} lors de l''utilisation de {1} avec {2}.",VIZ_COMMON_ANIMATION:"Animation",VIZ_COMMON_GEOBUBBLE_TEXT:"Diagramme à bulles géographique",VIZ_COMMON_RECTANGLECOLOR:"Couleur de la zone",VIZ_COMMON_AREANAME:"Nom de zone",VIZ_COMMON_SECONDARY_XAXIS:"Axe X 2",VIZ_COMMON_CROSSTAB_MEASURES:"Indicateurs",VIZ_COMMON_CROSSTAB_TEXT:"Tableau croisé",VIZ_COMMON_BAR_TEXT:"Diagramme à barres",VIZ_COMMON_STACKED_BAR_TEXT:"Diagramme à barres empilées",VIZ_COMMON_COLOR:"Couleur",VIZ_COMMON_BUBBLE_TEXT:"Diagramme à bulles",VIZ_COMMON_ADD_ONE_DIMENSION:"Ajouter une dimension",VIZ_COMMON_DUAL_COMBINATION_TEXT:"Diagramme combiné à courbes et à colonnes avec 2 axes Y",VIZ_COMMON_NONE:"Aucun",VIZ_COMMON_MIN_OF:"Minimum de",VIZ_COMMON_BOTTOM_XAXIS:"Axe X inférieur",VIZ_COMMON_REGION:"Région",VIZ_COMMON_TABLE_DIMENSION:"Axe des lignes",VIZ_COMMON_SUBTOTALS:"SOUS-TOTAUX",VIZ_COMMON_COMBINATION_TEXT:"Diagramme combiné à courbes et à colonnes",VIZ_COMMON_COLUMN_TEXT:"Diagramme à colonnes",VIZ_COMMON_SUM:"Somme",VIZ_COMMON_PIE_WITH_DEPTH_TEXT:"Diagramme à secteurs avec profondeur de tranche variable",VIZ_COMMON_DONUT_TEXT:"Diagramme en anneaux",VIZ_COMMON_INVALID_SERIALIZATION_PACKAGE:"Package de sérialisation non valide",VIZ_COMMON_SHAPE:"Forme",VIZ_COMMON_CROSSTAB_MEASURES_TOOLTIP:"Représentation de l'emplacement où les indicateurs sont rendus",VIZ_COMMON_SECONDARY_AREANAME:"Nom de zone 2",}});sap.viz.extapi.env.Language.register({id:'fr',value: {INVALID_DATA_BINDING:"Liaison de données non valide",VIZ_CHART_BACK:"Précédent",VIZ_CHART_ADD_EVENT_FAILED:"Impossible d'ajouter un rappel d'événement du diagramme :",VIZ_CHART_UPDATE_CSS_FAILED:"Impossible de mettre à jour le css du diagramme :",VIZ_CHART_XAXIS_RANGE:"Plage d'axe X",VIZ_CHART_TIMESERIES_DIMENSION_INCOMPLETE_DESCRIPTION:"Ajoutez une dimension temporelle",VIZ_CHART_EXPORTSVG_FAILED:"Echec de l'exportation de la chaîne svg.",VIZ_CHART_TITLE_CONTEXT_MENU_EDIT:"Renommer",VIZ_CHART_INCOMPLETE_DESCRIPTION:"Ajouter des indicateurs ou dimensions",VIZ_CHART_END:"Fin",VIZ_CHART_UPDATE_PROPERTIES_FAILED:"Impossible de mettre à jour les propriétés du diagramme :",VIZ_CHART_GRADIENT:"Gradient",VIZ_CHART_TRIGGER_ACTION_FAILED:"Impossible de déclencher l'action du diagramme :",VIZ_CHART_UPDATE_CHART_FAILED:"Impossible de mettre à jour le diagramme :",VIZ_CHART_ESRI_MAP_AUTHENTICATION_FAIL:"Echec de l'authentification Esri",VIZ_CHART_START:"Début",VIZ_CHART_XAXIS2_RANGE:"Plage d'axe X 2",VIZ_CHART_AXIS_ZOOM:"Zoom",VIZ_CHART_XAXIS1_RANGE:"Plage d'axe X 1",VIZ_CHART_NO_DATA_MATCHES_YOUR_FILTER:"Aucune donnée ne correspond à vos filtres.",VIZ_CHART_ESRI_SERVICES_UNACCESSIBLE:"Une erreur inconnue est survenue lors de l'accès aux services en ligne Esri. Vérifiez votre connexion Internet.",VIZ_CHART_UPDATE_FEEDING_FAILED:"Impossible de mettre à jour l'opération de flux du diagramme :",VIZ_CHART_SEGMENTED:"Segmenté",VIZ_CHART_SET_AXIS_RANGE:"Définir la plage d'axe",VIZ_CHART_TRELLIS_DISABLED_WARN:"Le treillis est désactivé dans le volet de visualisation ou dans le panneau Opération de flux.",VIZ_CHART_SELECTION_FAILED:"Impossible d'obtenir/de définir la sélection de diagramme :",VIZ_CHART_IMPORT_ESRI_CUSTOM_SERVICE:"Importation du service personnalisé Esri",VIZ_CHART_NEGATIVE_VALUES_INFO:"Pour afficher les valeurs négatives, cliquez sur le bouton Paramètres et sélectionnez Afficher les valeurs négatives dans le menu contextuel.",VIZ_CHART_ESRI_MAP_LOG_ON:"Connexion à Esri",VIZ_CHART_CREATE_CHART_FAILED:"Impossible de créer le diagramme :",VIZ_CHART_MEASURE_INCOMPLETE_DESCRIPTION:"Ajouter des indicateurs",VIZ_CHART_FIXED_RANGE:"Fixe",VIZ_CHART_NEXT:"Suivant",VIZ_CHART_YAXIS_RANGE:"Plage d'axe Y",VIZ_CHART_RESET:"Réinitialiser",VIZ_CHART_GEO_INCOMPLETE_DESCRIPTION:"Ajouter des dimensions géographiques",VIZ_CHART_UPDATE_DATA_FAILED:"Impossible de mettre à jour les données du diagramme :",VIZ_CHART_TIMESERIES_INCOMPLETE_DESCRIPTION:"Ajoutez plus d'indicateurs ou une dimension temporelle",VIZ_CHART_NO_ESRI_SERVICE:"Aucun service lié à la fonctionnalité trouvé pour votre compte.",VIZ_CHART_VIZINSTANCE_NOT_CREATED:"Aucune instance Viz créée",VIZ_CHART_TITLE_TEXT_JOIN_BY:"{0} par {1}",VIZ_CHART_INVALID_VIZ_TYPE:"Impossible d''afficher ce diagramme : {0}.",VIZ_CHART_ESRI_MAP_LOADING:"Carte Esri en cours de chargement",VIZ_CHART_REMOVE_EVENT_FAILED:"Impossible de supprimer le rappel d'événement du diagramme :",VIZ_CHART_AUTO_RANGE:"Automatique",VIZ_CHART_NEGATIVE_VALUES_WARN:"Les valeurs négatives ne sont pas affichées dans ce diagramme à bulles",VIZ_CHART_FEEDINGZONE_FAILED:"Impossible d'accéder à la zone de création de diagrammes :",VIZ_CHART_GEO_BOTH_INCOMPLETE_DESCRIPTION:"Ajoutez plus d'indicateurs ou plus de dimensions géographiques",VIZ_CONTROLS_API_PARAMETER_ERROR:"Erreur du paramètre API",VIZ_CHART_YAXIS2_RANGE:"Plage d'axe Y 2",VIZ_CHART_YAXIS1_RANGE:"Plage d'axe Y 1",VIZ_CHART_UPDATE_CUSTOMIZATIONS_FAILED:"La mise à jour des personnalisations du diagramme a échoué :",VIZ_CHART_TITLE_CONTEXT_MENU_RESTORE:"Rétablir le titre par défaut",VIZ_CHART_SET_COLOR_LAYER:"Définir la couleur pour afficher la couche",VIZ_CHART_DESCRIPTION_FAILED:"Impossible d'accéder à/de définir la description du diagramme :",VIZ_CHART_TITLE_TEXT_JOIN_AND:"et",VIZ_CHART_DIMENSION_INCOMPLETE_DESCRIPTION:"Ajouter des dimensions",VIZ_CHART_SELECT_DATASET:"Sélectionner le jeu de données",VIZ_CHART_CONFIRM:"Confirmer",VIZ_CHART_SERIALIZE_FAILED:"Impossible de sérialiser le diagramme :",}});sap.viz.extapi.env.Language.register({id:'fr',value: {VIZ_FRAME_FILTERBAR_DESCRIPTION:"Sélectionner les champs dans le jeu de données pour le filtrage",VIZ_FRAME_FILTERMENU_FILTER:"Filtrer",VIZ_FRAME_FILTERMENU_EXCLUDE:"Exclure",}});
sap.viz.extapi.env.Language.register({id:'hu',value: {VIZ_COMMON_YAXIS:"y tengely",VIZ_COMMON_SUBTOTAL:"Részösszeg",VIZ_COMMON_DONT_SHOW_MESSAGE:"Ne jelenjen meg újra",VIZ_COMMON_ADD_ICON:"Hozzáadás",VIZ_COMMON_AXIS:"Tengely",VIZ_COMMON_SHOW_BY_DIMENSION:"Megjelenítés {0} szerint",VIZ_COMMON_PIE_TEXT:"Kördiagram",VIZ_COMMON_ITEM:"Elem",VIZ_COMMON_BOXPLOT_TEXT:"Gyertyadiagram",VIZ_COMMON_DIMENSION_LIMITATION_WARN:"Elérte a jelenlegi képi megjelenítés dimenzióforrásainak maximális számát.",VIZ_COMMON_MIN:"Min",VIZ_COMMON_FEATUREANALYSIS:"Átfedés adatai",VIZ_COMMON_TABLE_MEASURE:"Elsődleges értékek",VIZ_COMMON_PIE_DEPTH:"Kördiagram mélysége",VIZ_COMMON_MAX_SHORT:"(Max)",VIZ_COMMON_SERIALIZATION_FAILED:"Szerializálási hiba",VIZ_COMMON_LEFT_YAXIS:"Bal Y tengely",VIZ_COMMON_RIGHT_YAXIS:"Jobb Y tengely",VIZ_COMMON_STACKED_COLUMN_TEXT:"Halmozott oszlopdiagram",VIZ_COMMON_PRIMARY_YAXIS:"1. y tengely",VIZ_COMMON_TAGFAMILY:"Szó színe",VIZ_COMMON_ADD_MEASURES:"Mutatószámok hozzáadása",VIZ_COMMON_XAXIS:"x tengely",VIZ_COMMON_DIMENSIONS_TIPS:"Mutatószámtól függő érték megjelenítése",VIZ_COMMON_TAG:"Címke",VIZ_COMMON_DELETE_COMMENT_MESSAGE:"Biztosan törli a megjegyzést?",VIZ_COMMON_CHANGE_CALCULATION:"Számítás módosítása",VIZ_COMMON_DELETE:"Törlés",VIZ_COMMON_TABLE_COLUMNS_AXIS:"Oszlopok tengelye",VIZ_COMMON_COLS_CAPITAL:"OSZLOPOK",VIZ_COMMON_BETWEEN:"A TARTOMÁNYBAN",VIZ_COMMON_SETTINGS_ICON:"Beállítások",VIZ_COMMON_OK:"OK",VIZ_COMMON_COUNT_ALL_SHORT:"(Teljes darabszám)",VIZ_COMMON_SUM_SHORT:"(Összeg)",VIZ_COMMON_SIZE:"Méret",VIZ_COMMON_SCATTER_MATRIX_TEXT:"Klasztermátrix-diagram",VIZ_COMMON_GEOMAP_TEXT:"Geotérkép",VIZ_COMMON_SCATTER_TEXT:"Klaszterdiagram",VIZ_COMMON_MAX:"Max",VIZ_COMMON_LEGEND:"Magyarázat",VIZ_COMMON_PRIMARY_XAXIS:"1. x tengely",VIZ_COMMON_TOTAL_OF:"A következő összesen:",VIZ_COMMON_COUNT_OF:"A következők darabszáma:",VIZ_COMMON_CANCEL:"Mégse",VIZ_COMMON_GEO_FEATURES:"Földrajz",VIZ_COMMON_TAGCLOUD_TEXT:"Címkefelhő",VIZ_COMMON_NONE_SHORT:"(Egyik sem)",VIZ_COMMON_CHOROPLETH_TEXT:"Geo koropletikus diagram",VIZ_COMMON_RADAR_AXES:"Sugárdiagram tengelyei",VIZ_COMMON_COLUMNS:"Oszlopok",VIZ_COMMON_ADD_ONE_MEASURE:"Egy mutatószám hozzáadása",VIZ_COMMON_RADAR_TEXT:"Sugárdiagram",VIZ_COMMON_DUAL_STACKED_COMBINATION_TEXT:"Kombinált, halmozott vonaldiagram 2 Y tengellyel",VIZ_COMMON_COUNT_DISTINCT:"Egyedi darabszám",VIZ_COMMON_TOP_XAXIS:"Felső X tengely",VIZ_COMMON_FAKE_DIMENSION:"Dimenzió",VIZ_COMMON_DUAL_LINE_TEXT:"Vonaldiagram két y tengellyel",VIZ_COMMON_TABLE_COLUMNS_SUBTOTALS:"Oszlopok részösszege",VIZ_COMMON_FEATUREVALUES:"Érték",VIZ_COMMON_LINE_TEXT:"Vonaldiagram",VIZ_COMMON_TABLE_TEXT:"Tábla",VIZ_COMMON_MEASURE_TIPS:"Számítások rendezése, rangsorolása és hozzáadása",VIZ_COMMON_ROWS:"Sorok",VIZ_COMMON_SUBTOTALS_TIPS:"Részösszeg értékének megjelenítése",VIZ_COMMON_DUAL_BAR_TEXT:"Sávdiagram két y tengellyel",VIZ_COMMON_FAKE_MEASURE:"Mutatószám",VIZ_COMMON_BUBBLE_HEIGHT:"Buborék magassága",VIZ_COMMON_AVERAGE_SHORT:"(Átlag)",VIZ_COMMON_REMOVE_ICON:"Eltávolítás",VIZ_COMMON_HEATMAP_TEXT:"Heat Map",VIZ_COMMON_TAGNAME:"Szó",VIZ_COMMON_VALUES:"Értékek",VIZ_COMMON_DUAL_COLUMN_TEXT:"Oszlopdiagram két y tengellyel",VIZ_COMMON_COLUMN_WIDTH:"Oszlop szélessége",VIZ_COMMON_RECTANGLEWEIGHT:"Terület súlya",VIZ_COMMON_SUM_OF:"A következők összege:",VIZ_COMMON_HEIGHT:"Magasság",VIZ_COMMON_AVERAGE:"Átlag",VIZ_COMMON_AREA_TEXT:"Területdiagram",VIZ_COMMON_COUNT_DISTINCT_SHORT:"(Egyedi darabszám)",VIZ_COMMON_3D_BAR_TEXT:"3D-sávdiagram",VIZ_COMMON_GEO_COLOR:"Szín",VIZ_COMMON_SEARCH:"Keresés",VIZ_COMMON_REGIONCOLOR:"Magyarázat színe",VIZ_COMMON_ROWS_CAPITAL:"SOROK",VIZ_COMMON_ADD_DIMENSIONS:"Dimenziók hozzáadása",VIZ_COMMON_TREEMAP_TEXT:"Tree Map",VIZ_COMMON_WATERFALL_TEXT:"Vízesésdiagram",VIZ_COMMON_GEOPIE_TEXT:"Geokördiagram",VIZ_COMMON_TRELLIS:"HÁLÓ",VIZ_COMMON_MIN_SHORT:"(Min)",VIZ_COMMON_BUBBLE_WIDTH:"Buborék szélessége",VIZ_COMMON_REGIONSHAPE:"Magyarázat alakja",VIZ_COMMON_MEASURES:"MUTATÓSZÁMOK",VIZ_COMMON_SECONDARY_YAXIS:"2. y tengely",VIZ_COMMON_AXES:"Tengelyek",VIZ_COMMON_MAX_OF:"A következők maximuma:",VIZ_COMMON_TAGWEIGHT:"Szó vastagsága",VIZ_COMMON_TIMESERIES_LINE_TEXT:"Vonaldiagram dátum/idő adatsorhoz",VIZ_COMMON_3D_COLUMN_TEXT:"3D-oszlopdiagram",VIZ_COMMON_BAR_HEIGHT:"Sáv magassága",VIZ_COMMON_TIME_AXIS:"Idődimenzió",VIZ_COMMON_COUNT_ALL:"Teljes darabszám",VIZ_COMMON_TRELLIS_TIPS:"Hozzáadás sorokként és oszlopokként",VIZ_COMMON_CHOOSE_MEASURE:"Érték kiválasztása",VIZ_COMMON_PIE_SECTORS:"Körcikkek",VIZ_COMMON_EDIT:"Szerkesztés",VIZ_COMMON_TABLE_ROWS_SUBTOTALS:"Sorok részösszege",VIZ_COMMON_LABEL:"Címke",VIZ_COMMON_AVERAGE_OF:"A következők átlaga:",VIZ_COMMON_DIMENSIONS:"DIMENZIÓK",VIZ_COMMON_DEPENDENCY_ERROR:"A(z) {1} használatakor szerepeltesse a következőt is: {0}.",VIZ_COMMON_INVALID_ARGUMENTS:"Érvénytelen argumentumok",VIZ_COMMON_DEPENDENCY_ERROR_WITH_UI_CONFIG:"A(z) {1} és a(z) {2} együttes használatakor szerepeltesse a következőt is: {0}.",VIZ_COMMON_ANIMATION:"Animáció",VIZ_COMMON_GEOBUBBLE_TEXT:"Geobuborék-diagram",VIZ_COMMON_RECTANGLECOLOR:"Terület színe",VIZ_COMMON_AREANAME:"Területnév",VIZ_COMMON_SECONDARY_XAXIS:"2. x tengely",VIZ_COMMON_CROSSTAB_MEASURES:"Mutatószámok",VIZ_COMMON_CROSSTAB_TEXT:"Kereszttábla",VIZ_COMMON_BAR_TEXT:"Sávdiagram",VIZ_COMMON_STACKED_BAR_TEXT:"Halmozott sávdiagram",VIZ_COMMON_COLOR:"Szín",VIZ_COMMON_BUBBLE_TEXT:"Buborékdiagram",VIZ_COMMON_ADD_ONE_DIMENSION:"Egy dimenzió hozzáadása",VIZ_COMMON_DUAL_COMBINATION_TEXT:"Kombinált oszlop- és vonaldiagram két y tengellyel",VIZ_COMMON_NONE:"Egyik sem",VIZ_COMMON_MIN_OF:"A következők minimuma:",VIZ_COMMON_BOTTOM_XAXIS:"Alsó X tengely",VIZ_COMMON_REGION:"Régió",VIZ_COMMON_TABLE_DIMENSION:"Sortengely",VIZ_COMMON_SUBTOTALS:"RÉSZÖSSZEGEK",VIZ_COMMON_COMBINATION_TEXT:"Kombinált oszlop- és vonaldiagram",VIZ_COMMON_COLUMN_TEXT:"Oszlopdiagram",VIZ_COMMON_SUM:"Összeg",VIZ_COMMON_PIE_WITH_DEPTH_TEXT:"Kördiagram változó szeletmélységgel",VIZ_COMMON_DONUT_TEXT:"Perecdiagram",VIZ_COMMON_INVALID_SERIALIZATION_PACKAGE:"Érvénytelen szerializálási csomag",VIZ_COMMON_SHAPE:"Alakzat",VIZ_COMMON_CROSSTAB_MEASURES_TOOLTIP:"A mutatószámok megjelenítési helyét mutatja meg",VIZ_COMMON_SECONDARY_AREANAME:"2. területnév",}});sap.viz.extapi.env.Language.register({id:'hu',value: {INVALID_DATA_BINDING:"Érvénytelen adatkötés",VIZ_CHART_BACK:"Vissza",VIZ_CHART_ADD_EVENT_FAILED:"A diagram esemény-visszahívásának hozzáadása sikertelen:",VIZ_CHART_UPDATE_CSS_FAILED:"A diagram CSS-kódjának frissítése sikertelen:",VIZ_CHART_XAXIS_RANGE:"X tengely tartománya",VIZ_CHART_TIMESERIES_DIMENSION_INCOMPLETE_DESCRIPTION:"Adjon hozzá idődimenziót",VIZ_CHART_EXPORTSVG_FAILED:"Nem sikerült exportálni az SVG-karakterláncot.",VIZ_CHART_TITLE_CONTEXT_MENU_EDIT:"Átnevezés",VIZ_CHART_INCOMPLETE_DESCRIPTION:"Adjon hozzá további mutatószámokat vagy dimenziókat.",VIZ_CHART_END:"Vége",VIZ_CHART_UPDATE_PROPERTIES_FAILED:"A diagram tulajdonságainak frissítése sikertelen:",VIZ_CHART_GRADIENT:"Átmenet",VIZ_CHART_TRIGGER_ACTION_FAILED:"Nem sikerült elindítani a diagramműveletet:",VIZ_CHART_UPDATE_CHART_FAILED:"A diagram frissítése sikertelen:",VIZ_CHART_ESRI_MAP_AUTHENTICATION_FAIL:"Az Esri-hitelesítés sikertelen",VIZ_CHART_START:"Kezdete",VIZ_CHART_XAXIS2_RANGE:"2. x tengely tartománya",VIZ_CHART_AXIS_ZOOM:"Nagyítás",VIZ_CHART_XAXIS1_RANGE:"1. x tengely tartománya",VIZ_CHART_NO_DATA_MATCHES_YOUR_FILTER:"Egyetlen adat sem felel meg a szűrőknek",VIZ_CHART_ESRI_SERVICES_UNACCESSIBLE:"Ismeretlen hiba történt az ESRI online szolgáltatásainak elérésekor. Ellenőrizze az internetkapcsolatot.",VIZ_CHART_UPDATE_FEEDING_FAILED:"A diagram adatfeltöltésének frissítése sikertelen:",VIZ_CHART_SEGMENTED:"Felosztott",VIZ_CHART_SET_AXIS_RANGE:"Tengelytartomány megadása",VIZ_CHART_TRELLIS_DISABLED_WARN:"A háló le van tiltva a Vizualizációs keretben vagy az Adatfeltöltési panelen",VIZ_CHART_SELECTION_FAILED:"Nem sikerült beolvasni/beállítani a diagramkijelölést:",VIZ_CHART_IMPORT_ESRI_CUSTOM_SERVICE:"Egyedi Esri-szolgáltatás importálása",VIZ_CHART_NEGATIVE_VALUES_INFO:"A negatív értékek megjelenítéséhez kattintson a Beállítások gombra, és válassza a helyi menü Negatív értékek megjelenítése menüpontját.",VIZ_CHART_ESRI_MAP_LOG_ON:"Bejelentkezés az Esri szolgáltatásba most",VIZ_CHART_CREATE_CHART_FAILED:"A diagram létrehozása sikertelen:",VIZ_CHART_MEASURE_INCOMPLETE_DESCRIPTION:"Adjon hozzá további mutatószámokat",VIZ_CHART_FIXED_RANGE:"Rögzített",VIZ_CHART_NEXT:"Tovább",VIZ_CHART_YAXIS_RANGE:"Y tengely tartománya",VIZ_CHART_RESET:"Alaphelyzetbe állítás",VIZ_CHART_GEO_INCOMPLETE_DESCRIPTION:"Adjon hozzá további földrajzi dimenziókat",VIZ_CHART_UPDATE_DATA_FAILED:"A diagram adatainak frissítése sikertelen:",VIZ_CHART_TIMESERIES_INCOMPLETE_DESCRIPTION:"Adjon hozzá további mutatószámokat vagy idődimenziót",VIZ_CHART_NO_ESRI_SERVICE:"A fiókhoz nem található tereptárgy-szolgáltatás.",VIZ_CHART_VIZINSTANCE_NOT_CREATED:"Nem jött létre a VizInstance",VIZ_CHART_TITLE_TEXT_JOIN_BY:"{0} – szerző: {1}",VIZ_CHART_INVALID_VIZ_TYPE:"Nem jeleníthető meg a diagram: {0}.",VIZ_CHART_ESRI_MAP_LOADING:"Esri-térkép betöltése",VIZ_CHART_REMOVE_EVENT_FAILED:"A diagram esemény-visszahívásának eltávolítása sikertelen:",VIZ_CHART_AUTO_RANGE:"Automatikus",VIZ_CHART_NEGATIVE_VALUES_WARN:"A buborékdiagramon nem jelennek meg a negatív értékek",VIZ_CHART_FEEDINGZONE_FAILED:"Nem sikerült beolvasni a diagram betöltőzónáját:",VIZ_CHART_GEO_BOTH_INCOMPLETE_DESCRIPTION:"Adjon hozzá további mutatószámokat vagy további földrajzi dimenziókat",VIZ_CONTROLS_API_PARAMETER_ERROR:"Hibás API-paraméter",VIZ_CHART_YAXIS2_RANGE:"2. y tengely tartománya",VIZ_CHART_YAXIS1_RANGE:"1. y tengely tartománya",VIZ_CHART_UPDATE_CUSTOMIZATIONS_FAILED:"Nem sikerült frissíteni a diagram egyéni beállításait:",VIZ_CHART_TITLE_CONTEXT_MENU_RESTORE:"Alapértelmezett cím visszaállítása",VIZ_CHART_SET_COLOR_LAYER:"Szín beállítása a tereptárgyréteg számára",VIZ_CHART_DESCRIPTION_FAILED:"Nem sikerült beolvasni/beállítani a diagramleírást:",VIZ_CHART_TITLE_TEXT_JOIN_AND:"és",VIZ_CHART_DIMENSION_INCOMPLETE_DESCRIPTION:"Adjon hozzá további dimenziókat",VIZ_CHART_SELECT_DATASET:"Adathalmaz kiválasztása",VIZ_CHART_CONFIRM:"Jóváhagyás",VIZ_CHART_SERIALIZE_FAILED:"Nem sikerült szerializálni a diagramot:",}});sap.viz.extapi.env.Language.register({id:'hu',value: {VIZ_FRAME_FILTERBAR_DESCRIPTION:"Mezők választása az adathalmazból a szűréshez",VIZ_FRAME_FILTERMENU_FILTER:"Szűrő",VIZ_FRAME_FILTERMENU_EXCLUDE:"Kizárás",}});
sap.viz.extapi.env.Language.register({id:'ja',value: {VIZ_COMMON_YAXIS:"Y 軸",VIZ_COMMON_SUBTOTAL:"小計",VIZ_COMMON_DONT_SHOW_MESSAGE:"今後はこのメッセージを表示しない",VIZ_COMMON_ADD_ICON:"追加",VIZ_COMMON_AXIS:"軸",VIZ_COMMON_SHOW_BY_DIMENSION:"{0} 別に表示",VIZ_COMMON_PIE_TEXT:"円チャート",VIZ_COMMON_ITEM:"項目",VIZ_COMMON_BOXPLOT_TEXT:"ボックスプロット",VIZ_COMMON_DIMENSION_LIMITATION_WARN:"このビジュアライゼーションの最大ディメンションフィード数に達しました。",VIZ_COMMON_MIN:"最小",VIZ_COMMON_FEATUREANALYSIS:"オーバーレイデータ",VIZ_COMMON_TABLE_MEASURE:"1 次値",VIZ_COMMON_PIE_DEPTH:"奥行き",VIZ_COMMON_MAX_SHORT:"(最大)",VIZ_COMMON_SERIALIZATION_FAILED:"シリアル化エラー",VIZ_COMMON_LEFT_YAXIS:"左 Y 軸",VIZ_COMMON_RIGHT_YAXIS:"右 Y 軸",VIZ_COMMON_STACKED_COLUMN_TEXT:"積み上げ縦棒チャート",VIZ_COMMON_PRIMARY_YAXIS:"Y 軸 1",VIZ_COMMON_TAGFAMILY:"単語の色",VIZ_COMMON_ADD_MEASURES:"メジャーを追加",VIZ_COMMON_XAXIS:"X 軸",VIZ_COMMON_DIMENSIONS_TIPS:"メジャー別に影響を受ける値を表示",VIZ_COMMON_TAG:"タグ",VIZ_COMMON_DELETE_COMMENT_MESSAGE:"コメントを削除してもよろしいですか?",VIZ_COMMON_CHANGE_CALCULATION:"計算の変更",VIZ_COMMON_DELETE:"削除",VIZ_COMMON_TABLE_COLUMNS_AXIS:"列軸",VIZ_COMMON_COLS_CAPITAL:"列",VIZ_COMMON_BETWEEN:"中間",VIZ_COMMON_SETTINGS_ICON:"設定",VIZ_COMMON_OK:"OK",VIZ_COMMON_COUNT_ALL_SHORT:"(件数 - すべて)",VIZ_COMMON_SUM_SHORT:"(合計)",VIZ_COMMON_SIZE:"サイズ",VIZ_COMMON_SCATTER_MATRIX_TEXT:"散布図マトリクス",VIZ_COMMON_GEOMAP_TEXT:"地理マップ",VIZ_COMMON_SCATTER_TEXT:"散布図",VIZ_COMMON_MAX:"最大",VIZ_COMMON_LEGEND:"凡例",VIZ_COMMON_PRIMARY_XAXIS:"X 軸1",VIZ_COMMON_TOTAL_OF:"合計",VIZ_COMMON_COUNT_OF:"件数",VIZ_COMMON_CANCEL:"キャンセル",VIZ_COMMON_GEO_FEATURES:"地理",VIZ_COMMON_TAGCLOUD_TEXT:"タグクラウド",VIZ_COMMON_NONE_SHORT:"(なし)",VIZ_COMMON_CHOROPLETH_TEXT:"地理コロプレスチャート",VIZ_COMMON_RADAR_AXES:"レーダーブランチ",VIZ_COMMON_COLUMNS:"列",VIZ_COMMON_ADD_ONE_MEASURE:"メジャーを 1 つ追加",VIZ_COMMON_RADAR_TEXT:"レーダーチャート",VIZ_COMMON_DUAL_STACKED_COMBINATION_TEXT:"二重 Y 軸の複合積み上げ折れ線チャート",VIZ_COMMON_COUNT_DISTINCT:"件数 - 固有",VIZ_COMMON_TOP_XAXIS:"上 X 軸",VIZ_COMMON_FAKE_DIMENSION:"ディメンション",VIZ_COMMON_DUAL_LINE_TEXT:"二重 Y 軸の折れ線チャート",VIZ_COMMON_TABLE_COLUMNS_SUBTOTALS:"列の小計",VIZ_COMMON_FEATUREVALUES:"値",VIZ_COMMON_LINE_TEXT:"折れ線チャート",VIZ_COMMON_TABLE_TEXT:"テーブル",VIZ_COMMON_MEASURE_TIPS:"計算の並べ替え、順位付け、追加",VIZ_COMMON_ROWS:"行",VIZ_COMMON_SUBTOTALS_TIPS:"小計値の表示",VIZ_COMMON_DUAL_BAR_TEXT:"二重 Y 軸の棒チャート",VIZ_COMMON_FAKE_MEASURE:"メジャー",VIZ_COMMON_BUBBLE_HEIGHT:"バブルの高さ",VIZ_COMMON_AVERAGE_SHORT:"(平均)",VIZ_COMMON_REMOVE_ICON:"削除",VIZ_COMMON_HEATMAP_TEXT:"ヒートマップ",VIZ_COMMON_TAGNAME:"単語",VIZ_COMMON_VALUES:"値",VIZ_COMMON_DUAL_COLUMN_TEXT:"二重 Y 軸の縦棒チャート",VIZ_COMMON_COLUMN_WIDTH:"列幅",VIZ_COMMON_RECTANGLEWEIGHT:"領域の加重",VIZ_COMMON_SUM_OF:"合計",VIZ_COMMON_HEIGHT:"高さ",VIZ_COMMON_AVERAGE:"平均",VIZ_COMMON_AREA_TEXT:"面チャート",VIZ_COMMON_COUNT_DISTINCT_SHORT:"(件数 - 固有)",VIZ_COMMON_3D_BAR_TEXT:"立体棒チャート",VIZ_COMMON_GEO_COLOR:"色",VIZ_COMMON_SEARCH:"検索",VIZ_COMMON_REGIONCOLOR:"凡例の色",VIZ_COMMON_ROWS_CAPITAL:"行",VIZ_COMMON_ADD_DIMENSIONS:"ディメンションを追加",VIZ_COMMON_TREEMAP_TEXT:"ツリーマップ",VIZ_COMMON_WATERFALL_TEXT:"ウォーターフォールチャート",VIZ_COMMON_GEOPIE_TEXT:"地理円チャート",VIZ_COMMON_TRELLIS:"トレリス",VIZ_COMMON_MIN_SHORT:"(最小)",VIZ_COMMON_BUBBLE_WIDTH:"バブルの幅",VIZ_COMMON_REGIONSHAPE:"凡例の形",VIZ_COMMON_MEASURES:"メジャー",VIZ_COMMON_SECONDARY_YAXIS:"Y 軸 2",VIZ_COMMON_AXES:"軸",VIZ_COMMON_MAX_OF:"最大",VIZ_COMMON_TAGWEIGHT:"単語の加重",VIZ_COMMON_TIMESERIES_LINE_TEXT:"日付/時系列の折れ線チャート",VIZ_COMMON_3D_COLUMN_TEXT:"立体縦棒チャート",VIZ_COMMON_BAR_HEIGHT:"棒の高さ",VIZ_COMMON_TIME_AXIS:"時間ディメンション",VIZ_COMMON_COUNT_ALL:"件数 - すべて",VIZ_COMMON_TRELLIS_TIPS:"行および列として追加",VIZ_COMMON_CHOOSE_MEASURE:"値を選択",VIZ_COMMON_PIE_SECTORS:"円セクタ",VIZ_COMMON_EDIT:"編集",VIZ_COMMON_TABLE_ROWS_SUBTOTALS:"行の小計",VIZ_COMMON_LABEL:"ラベル",VIZ_COMMON_AVERAGE_OF:"平均",VIZ_COMMON_DIMENSIONS:"ディメンション",VIZ_COMMON_DEPENDENCY_ERROR:"{1} を使用する場合は {0} を含めます。",VIZ_COMMON_INVALID_ARGUMENTS:"無効な引数",VIZ_COMMON_DEPENDENCY_ERROR_WITH_UI_CONFIG:"{2} と共に {1} を使用する場合は {0} を含めます。",VIZ_COMMON_ANIMATION:"アニメーション",VIZ_COMMON_GEOBUBBLE_TEXT:"地理バブルチャート",VIZ_COMMON_RECTANGLECOLOR:"領域の色",VIZ_COMMON_AREANAME:"領域名",VIZ_COMMON_SECONDARY_XAXIS:"X 軸2",VIZ_COMMON_CROSSTAB_MEASURES:"メジャー",VIZ_COMMON_CROSSTAB_TEXT:"クロスタブ",VIZ_COMMON_BAR_TEXT:"棒チャート",VIZ_COMMON_STACKED_BAR_TEXT:"積み上げ棒チャート",VIZ_COMMON_COLOR:"色",VIZ_COMMON_BUBBLE_TEXT:"バブルチャート",VIZ_COMMON_ADD_ONE_DIMENSION:"ディメンションを 1 つ追加",VIZ_COMMON_DUAL_COMBINATION_TEXT:"二重 Y 軸の縦棒および折れ線結合チャート",VIZ_COMMON_NONE:"なし",VIZ_COMMON_MIN_OF:"最小",VIZ_COMMON_BOTTOM_XAXIS:"下 X 軸",VIZ_COMMON_REGION:"地域",VIZ_COMMON_TABLE_DIMENSION:"行軸",VIZ_COMMON_SUBTOTALS:"小計",VIZ_COMMON_COMBINATION_TEXT:"縦棒および折れ線結合チャート",VIZ_COMMON_COLUMN_TEXT:"縦棒チャート",VIZ_COMMON_SUM:"合計",VIZ_COMMON_PIE_WITH_DEPTH_TEXT:"スライス奥行きが可変の円チャート",VIZ_COMMON_DONUT_TEXT:"ドーナツ型チャート",VIZ_COMMON_INVALID_SERIALIZATION_PACKAGE:"無効なシリアル化パッケージ",VIZ_COMMON_SHAPE:"形",VIZ_COMMON_CROSSTAB_MEASURES_TOOLTIP:"メジャーが表示される場所を示します",VIZ_COMMON_SECONDARY_AREANAME:"領域名 2",}});sap.viz.extapi.env.Language.register({id:'ja',value: {INVALID_DATA_BINDING:"データバインドが無効です",VIZ_CHART_BACK:"戻る",VIZ_CHART_ADD_EVENT_FAILED:"チャートイベントコールバックを追加できませんでした:",VIZ_CHART_UPDATE_CSS_FAILED:"チャート CSS を更新できませんでした:",VIZ_CHART_XAXIS_RANGE:"X 軸範囲",VIZ_CHART_TIMESERIES_DIMENSION_INCOMPLETE_DESCRIPTION:"時間ディメンションの追加",VIZ_CHART_EXPORTSVG_FAILED:"svg 文字列にエクスポートできませんでした。",VIZ_CHART_TITLE_CONTEXT_MENU_EDIT:"名前の変更",VIZ_CHART_INCOMPLETE_DESCRIPTION:"さらにメジャーまたはディメンションを追加",VIZ_CHART_END:"終了",VIZ_CHART_UPDATE_PROPERTIES_FAILED:"チャートプロパティを更新できませんでした:",VIZ_CHART_GRADIENT:"傾き",VIZ_CHART_TRIGGER_ACTION_FAILED:"チャートアクションを開始できませんでした:",VIZ_CHART_UPDATE_CHART_FAILED:"チャートを更新できませんでした:",VIZ_CHART_ESRI_MAP_AUTHENTICATION_FAIL:"Esri 認証に失敗しました",VIZ_CHART_START:"開始",VIZ_CHART_XAXIS2_RANGE:"X 軸 2 範囲",VIZ_CHART_AXIS_ZOOM:"ズーム",VIZ_CHART_XAXIS1_RANGE:"X 軸 1 範囲",VIZ_CHART_NO_DATA_MATCHES_YOUR_FILTER:"フィルタにマッチするデータがありません",VIZ_CHART_ESRI_SERVICES_UNACCESSIBLE:"ESRI オンラインサービスへのアクセス中に不明なエラーが発生しました。インターネット接続を確認してください。",VIZ_CHART_UPDATE_FEEDING_FAILED:"チャートフィードを更新できませんでした:",VIZ_CHART_SEGMENTED:"セグメント化",VIZ_CHART_SET_AXIS_RANGE:"軸範囲の設定",VIZ_CHART_TRELLIS_DISABLED_WARN:"トレリスがビジュアライズフレームンまたはフィードパネルで無効化されています",VIZ_CHART_SELECTION_FAILED:"チャートの選択を取得/設定できませんでした:",VIZ_CHART_IMPORT_ESRI_CUSTOM_SERVICE:"Esri カスタムサービスのインポート",VIZ_CHART_NEGATIVE_VALUES_INFO:"負の値を表示するには、［設定］ボタンをクリックしてコンテキストメニューから［負の値を表示］を選択します。",VIZ_CHART_ESRI_MAP_LOG_ON:"今すぐ Esri にログインする",VIZ_CHART_CREATE_CHART_FAILED:"チャートを作成できませんでした:",VIZ_CHART_MEASURE_INCOMPLETE_DESCRIPTION:"さらにメジャーを追加",VIZ_CHART_FIXED_RANGE:"固定",VIZ_CHART_NEXT:"次へ",VIZ_CHART_YAXIS_RANGE:"Y 軸範囲",VIZ_CHART_RESET:"リセット",VIZ_CHART_GEO_INCOMPLETE_DESCRIPTION:"さらに地理ディメンションを追加",VIZ_CHART_UPDATE_DATA_FAILED:"チャートデータを更新できませんでした:",VIZ_CHART_TIMESERIES_INCOMPLETE_DESCRIPTION:"さらにメジャーまたは時間ディメンションを追加",VIZ_CHART_NO_ESRI_SERVICE:"アカウントに機能サービスが見つかりませんでした。",VIZ_CHART_VIZINSTANCE_NOT_CREATED:"Viz インスタンスが作成されませんでした",VIZ_CHART_TITLE_TEXT_JOIN_BY:"{0} 作成者 {1}",VIZ_CHART_INVALID_VIZ_TYPE:"このチャートを表示できません:  {0}.",VIZ_CHART_ESRI_MAP_LOADING:"Esri マップをロードしています",VIZ_CHART_REMOVE_EVENT_FAILED:"チャートイベントコールバックを削除できませんでした:",VIZ_CHART_AUTO_RANGE:"自動",VIZ_CHART_NEGATIVE_VALUES_WARN:"負の値はこのバブルチャートでは表示されません",VIZ_CHART_FEEDINGZONE_FAILED:"チャートのフィードゾーンを取得できませんでした:",VIZ_CHART_GEO_BOTH_INCOMPLETE_DESCRIPTION:"さらにメジャーまたは地理ディメンションを追加",VIZ_CONTROLS_API_PARAMETER_ERROR:"API パラメータエラー",VIZ_CHART_YAXIS2_RANGE:"Y 軸 2 範囲",VIZ_CHART_YAXIS1_RANGE:"Y 軸 1 範囲",VIZ_CHART_UPDATE_CUSTOMIZATIONS_FAILED:"チャートカスタマイゼーションを更新できませんでした:",VIZ_CHART_TITLE_CONTEXT_MENU_RESTORE:"デフォルトタイトルを復元",VIZ_CHART_SET_COLOR_LAYER:"機能レイヤに色を設定",VIZ_CHART_DESCRIPTION_FAILED:"チャートの説明を取得/設定できませんでした:",VIZ_CHART_TITLE_TEXT_JOIN_AND:"/",VIZ_CHART_DIMENSION_INCOMPLETE_DESCRIPTION:"さらにディメンションを追加",VIZ_CHART_SELECT_DATASET:"データセットの選択",VIZ_CHART_CONFIRM:"確認",VIZ_CHART_SERIALIZE_FAILED:"チャートをシリアル化できませんでした:",}});sap.viz.extapi.env.Language.register({id:'ja',value: {VIZ_FRAME_FILTERBAR_DESCRIPTION:"データセットからフィルタするフィールドを選択します",VIZ_FRAME_FILTERMENU_FILTER:"フィルタ",VIZ_FRAME_FILTERMENU_EXCLUDE:"除外",}});
sap.viz.extapi.env.Language.register({id:'ko',value: {VIZ_COMMON_YAXIS:"Y축",VIZ_COMMON_SUBTOTAL:"소계",VIZ_COMMON_DONT_SHOW_MESSAGE:"다시 표시 안 함",VIZ_COMMON_ADD_ICON:"추가",VIZ_COMMON_AXIS:"축",VIZ_COMMON_SHOW_BY_DIMENSION:"{0}별 표시",VIZ_COMMON_PIE_TEXT:"원형 차트",VIZ_COMMON_ITEM:"항목",VIZ_COMMON_BOXPLOT_TEXT:"상자 그림",VIZ_COMMON_DIMENSION_LIMITATION_WARN:"시각화에 사용할 수 있는 차원 수의 한도에 도달했습니다.",VIZ_COMMON_MIN:"최소",VIZ_COMMON_FEATUREANALYSIS:"오버레이 데이터",VIZ_COMMON_TABLE_MEASURE:"기본 값",VIZ_COMMON_PIE_DEPTH:"원형 깊이",VIZ_COMMON_MAX_SHORT:"(최대)",VIZ_COMMON_SERIALIZATION_FAILED:"일련화 오류",VIZ_COMMON_LEFT_YAXIS:"왼쪽 Y축",VIZ_COMMON_RIGHT_YAXIS:"오른쪽 Y축",VIZ_COMMON_STACKED_COLUMN_TEXT:"누적 세로 막대형 차트",VIZ_COMMON_PRIMARY_YAXIS:"Y축 1",VIZ_COMMON_TAGFAMILY:"단어 색",VIZ_COMMON_ADD_MEASURES:"계수 추가",VIZ_COMMON_XAXIS:"X축",VIZ_COMMON_DIMENSIONS_TIPS:"계수에 영향을 받는 값 표시",VIZ_COMMON_TAG:"태그",VIZ_COMMON_DELETE_COMMENT_MESSAGE:"주석을 삭제하시겠습니까?",VIZ_COMMON_CHANGE_CALCULATION:"계산 변경",VIZ_COMMON_DELETE:"삭제",VIZ_COMMON_TABLE_COLUMNS_AXIS:"열 축",VIZ_COMMON_COLS_CAPITAL:"열",VIZ_COMMON_BETWEEN:"사이에 있음",VIZ_COMMON_SETTINGS_ICON:"설정",VIZ_COMMON_OK:"확인",VIZ_COMMON_COUNT_ALL_SHORT:"(모든 개수)",VIZ_COMMON_SUM_SHORT:"(합계)",VIZ_COMMON_SIZE:"크기",VIZ_COMMON_SCATTER_MATRIX_TEXT:"산란 행렬 차트",VIZ_COMMON_GEOMAP_TEXT:"지도",VIZ_COMMON_SCATTER_TEXT:"산점도",VIZ_COMMON_MAX:"최대",VIZ_COMMON_LEGEND:"범례",VIZ_COMMON_PRIMARY_XAXIS:"X축 1",VIZ_COMMON_TOTAL_OF:"총계 -",VIZ_COMMON_COUNT_OF:"개수 -",VIZ_COMMON_CANCEL:"취소",VIZ_COMMON_GEO_FEATURES:"지역",VIZ_COMMON_TAGCLOUD_TEXT:"태그 클라우드",VIZ_COMMON_NONE_SHORT:"(없음)",VIZ_COMMON_CHOROPLETH_TEXT:"지리적 코로플레스 차트",VIZ_COMMON_RADAR_AXES:"방사형 분기",VIZ_COMMON_COLUMNS:"열",VIZ_COMMON_ADD_ONE_MEASURE:"하나의 계수 추가",VIZ_COMMON_RADAR_TEXT:"방사형 차트",VIZ_COMMON_DUAL_STACKED_COMBINATION_TEXT:"Y축이 2개인 누적 꺾은선 조합 차트",VIZ_COMMON_COUNT_DISTINCT:"고유 값만 세기",VIZ_COMMON_TOP_XAXIS:"맨 위 X 축",VIZ_COMMON_FAKE_DIMENSION:"차원",VIZ_COMMON_DUAL_LINE_TEXT:"Y축이 2개인 꺾은선형 차트",VIZ_COMMON_TABLE_COLUMNS_SUBTOTALS:"열 부분합",VIZ_COMMON_FEATUREVALUES:"값",VIZ_COMMON_LINE_TEXT:"꺾은선형 차트",VIZ_COMMON_TABLE_TEXT:"테이블",VIZ_COMMON_MEASURE_TIPS:"계산 정렬, 순위 지정, 추가",VIZ_COMMON_ROWS:"행",VIZ_COMMON_SUBTOTALS_TIPS:"부분합의 값 표시",VIZ_COMMON_DUAL_BAR_TEXT:"Y축이 2개인 막대형 차트",VIZ_COMMON_FAKE_MEASURE:"계수",VIZ_COMMON_BUBBLE_HEIGHT:"거품 높이",VIZ_COMMON_AVERAGE_SHORT:"(평균)",VIZ_COMMON_REMOVE_ICON:"제거",VIZ_COMMON_HEATMAP_TEXT:"히트 맵",VIZ_COMMON_TAGNAME:"단어",VIZ_COMMON_VALUES:"값",VIZ_COMMON_DUAL_COLUMN_TEXT:"Y축이 2개인 세로 막대형 차트",VIZ_COMMON_COLUMN_WIDTH:"열 너비",VIZ_COMMON_RECTANGLEWEIGHT:"영역 가중치",VIZ_COMMON_SUM_OF:"합계 -",VIZ_COMMON_HEIGHT:"높이",VIZ_COMMON_AVERAGE:"평균",VIZ_COMMON_AREA_TEXT:"영역형 차트",VIZ_COMMON_COUNT_DISTINCT_SHORT:"(고유 개수)",VIZ_COMMON_3D_BAR_TEXT:"3D 막대형 차트",VIZ_COMMON_GEO_COLOR:"색",VIZ_COMMON_SEARCH:"검색",VIZ_COMMON_REGIONCOLOR:"범례 색",VIZ_COMMON_ROWS_CAPITAL:"행",VIZ_COMMON_ADD_DIMENSIONS:"차원 추가",VIZ_COMMON_TREEMAP_TEXT:"트리 맵",VIZ_COMMON_WATERFALL_TEXT:"폭포형 차트",VIZ_COMMON_GEOPIE_TEXT:"지리적 원형 차트",VIZ_COMMON_TRELLIS:"격자",VIZ_COMMON_MIN_SHORT:"(최소)",VIZ_COMMON_BUBBLE_WIDTH:"거품 너비",VIZ_COMMON_REGIONSHAPE:"범례 모양",VIZ_COMMON_MEASURES:"계수",VIZ_COMMON_SECONDARY_YAXIS:"Y축 2",VIZ_COMMON_AXES:"축",VIZ_COMMON_MAX_OF:"최대값 -",VIZ_COMMON_TAGWEIGHT:"단어 가중치",VIZ_COMMON_TIMESERIES_LINE_TEXT:"날짜/시간 계열의 꺽은선형 차트",VIZ_COMMON_3D_COLUMN_TEXT:"3D 세로 막대형 차트",VIZ_COMMON_BAR_HEIGHT:"막대 높이",VIZ_COMMON_TIME_AXIS:"시간 차원",VIZ_COMMON_COUNT_ALL:"모두 세기",VIZ_COMMON_TRELLIS_TIPS:"행과 열로 추가",VIZ_COMMON_CHOOSE_MEASURE:"값 선택",VIZ_COMMON_PIE_SECTORS:"원형 섹터",VIZ_COMMON_EDIT:"편집",VIZ_COMMON_TABLE_ROWS_SUBTOTALS:"행 부분합",VIZ_COMMON_LABEL:"레이블",VIZ_COMMON_AVERAGE_OF:"평균 -",VIZ_COMMON_DIMENSIONS:"차원",VIZ_COMMON_DEPENDENCY_ERROR:"{1}을(를) 사용하는 동안 {0}을(를) 포함합니다.",VIZ_COMMON_INVALID_ARGUMENTS:"잘못된 인수",VIZ_COMMON_DEPENDENCY_ERROR_WITH_UI_CONFIG:"{2}(으)로 {1}을(를) 사용하는 동안 {0}을(를) 포함합니다.",VIZ_COMMON_ANIMATION:"애니메이션",VIZ_COMMON_GEOBUBBLE_TEXT:"지리적 거품형 차트",VIZ_COMMON_RECTANGLECOLOR:"영역 색",VIZ_COMMON_AREANAME:"영역 이름",VIZ_COMMON_SECONDARY_XAXIS:"X축 2",VIZ_COMMON_CROSSTAB_MEASURES:"계수",VIZ_COMMON_CROSSTAB_TEXT:"크로스탭",VIZ_COMMON_BAR_TEXT:"막대형 차트",VIZ_COMMON_STACKED_BAR_TEXT:"누적 막대형 차트",VIZ_COMMON_COLOR:"색",VIZ_COMMON_BUBBLE_TEXT:"거품형 차트",VIZ_COMMON_ADD_ONE_DIMENSION:"하나의 차원 추가",VIZ_COMMON_DUAL_COMBINATION_TEXT:"Y축이 2개인 세로 막대-꺾은선 조합 차트",VIZ_COMMON_NONE:"없음",VIZ_COMMON_MIN_OF:"최소값 -",VIZ_COMMON_BOTTOM_XAXIS:"맨 아래 X 축",VIZ_COMMON_REGION:"지역",VIZ_COMMON_TABLE_DIMENSION:"행 축",VIZ_COMMON_SUBTOTALS:"부분합",VIZ_COMMON_COMBINATION_TEXT:"세로 막대-꺾은선 조합 차트",VIZ_COMMON_COLUMN_TEXT:"세로 막대형 차트",VIZ_COMMON_SUM:"합계",VIZ_COMMON_PIE_WITH_DEPTH_TEXT:"조각 깊이가 다양한 원형",VIZ_COMMON_DONUT_TEXT:"도넛형 차트",VIZ_COMMON_INVALID_SERIALIZATION_PACKAGE:"잘못된 일련화 패키지",VIZ_COMMON_SHAPE:"모양",VIZ_COMMON_CROSSTAB_MEASURES_TOOLTIP:"계수가 렌더링된 위치 표시",VIZ_COMMON_SECONDARY_AREANAME:"영역 이름 2",}});sap.viz.extapi.env.Language.register({id:'ko',value: {INVALID_DATA_BINDING:"잘못된 데이터 바인딩입니다.",VIZ_CHART_BACK:"뒤로",VIZ_CHART_ADD_EVENT_FAILED:"차트 이벤트 콜백을 추가하지 못했습니다.",VIZ_CHART_UPDATE_CSS_FAILED:"차트 css를 업데이트하지 못했습니다.",VIZ_CHART_XAXIS_RANGE:"X 축 범위",VIZ_CHART_TIMESERIES_DIMENSION_INCOMPLETE_DESCRIPTION:"시간 차원 추가",VIZ_CHART_EXPORTSVG_FAILED:"svg 문자열로 내보내지 못했습니다.",VIZ_CHART_TITLE_CONTEXT_MENU_EDIT:"이름 바꾸기",VIZ_CHART_INCOMPLETE_DESCRIPTION:"추가 계수 또는 차원 추가",VIZ_CHART_END:"종료",VIZ_CHART_UPDATE_PROPERTIES_FAILED:"차트 속성을 업데이트하지 못했습니다.",VIZ_CHART_GRADIENT:"그라데이션",VIZ_CHART_TRIGGER_ACTION_FAILED:"차트 작업을 트리거하지 못했습니다.",VIZ_CHART_UPDATE_CHART_FAILED:"차트를 업데이트하지 못했습니다.",VIZ_CHART_ESRI_MAP_AUTHENTICATION_FAIL:"Esri 인증 실패",VIZ_CHART_START:"시작",VIZ_CHART_XAXIS2_RANGE:"X 축 2 범위",VIZ_CHART_AXIS_ZOOM:"확대/축소",VIZ_CHART_XAXIS1_RANGE:"X 축 1 범위",VIZ_CHART_NO_DATA_MATCHES_YOUR_FILTER:"데이터가 필터와 맞지 않습니다.",VIZ_CHART_ESRI_SERVICES_UNACCESSIBLE:"ESRI 온라인 서비스에 액세스하는 동안 알 수 없는 오류가 발생했습니다. 인터넷 연결을 확인하십시오.",VIZ_CHART_UPDATE_FEEDING_FAILED:"차트 피딩을 업데이트하지 못했습니다.",VIZ_CHART_SEGMENTED:"분할됨",VIZ_CHART_SET_AXIS_RANGE:"축 범위 설정",VIZ_CHART_TRELLIS_DISABLED_WARN:"격자가 시각화 프레임 또는 피딩 패널에서 비활성화되었습니다.",VIZ_CHART_SELECTION_FAILED:"차트 선택을 가져오거나 설정하지 못했습니다.",VIZ_CHART_IMPORT_ESRI_CUSTOM_SERVICE:"Esri 사용자 지정 서비스 가져오기",VIZ_CHART_NEGATIVE_VALUES_INFO:"음수 값을 표시하려면 설정 버튼을 클릭하고 상화별 메뉴에서 '음수 값 표시'를 선택합니다.",VIZ_CHART_ESRI_MAP_LOG_ON:"지금 Esri에 로그인 중",VIZ_CHART_CREATE_CHART_FAILED:"차트를 만들지 못했습니다.",VIZ_CHART_MEASURE_INCOMPLETE_DESCRIPTION:"추가 계수 추가",VIZ_CHART_FIXED_RANGE:"고정",VIZ_CHART_NEXT:"다음",VIZ_CHART_YAXIS_RANGE:"Y 축 범위",VIZ_CHART_RESET:"재설정",VIZ_CHART_GEO_INCOMPLETE_DESCRIPTION:"추가 지역 차원 추가",VIZ_CHART_UPDATE_DATA_FAILED:"차트 데이터를 업데이트하지 못했습니다.",VIZ_CHART_TIMESERIES_INCOMPLETE_DESCRIPTION:"추가 계수 또는 시간 차원 추가",VIZ_CHART_NO_ESRI_SERVICE:"계정에 대한 기능 서비스를 찾을 수 없습니다.",VIZ_CHART_VIZINSTANCE_NOT_CREATED:"시각화 인스턴스가 만들어지지 않았습니다.",VIZ_CHART_TITLE_TEXT_JOIN_BY:"{0} by {1}",VIZ_CHART_INVALID_VIZ_TYPE:"이 차트를 표시할 수 없음: {0}.",VIZ_CHART_ESRI_MAP_LOADING:"Esri 지도를 로드 중",VIZ_CHART_REMOVE_EVENT_FAILED:"차트 이벤트 콜백을 제거하지 못했습니다.",VIZ_CHART_AUTO_RANGE:"자동",VIZ_CHART_NEGATIVE_VALUES_WARN:"음수 값이 이 거품형 차트에 표시되지 않습니다.",VIZ_CHART_FEEDINGZONE_FAILED:"차트 피딩 영역을 가져오지 못했습니다.",VIZ_CHART_GEO_BOTH_INCOMPLETE_DESCRIPTION:"추가 계수 또는 추가 지역 차원 추가",VIZ_CONTROLS_API_PARAMETER_ERROR:"API 매개 변수 오류",VIZ_CHART_YAXIS2_RANGE:"Y 축 2 범위",VIZ_CHART_YAXIS1_RANGE:"Y 축 1 범위",VIZ_CHART_UPDATE_CUSTOMIZATIONS_FAILED:"차트 사용자 지정 내용을 업데이트하지 못했습니다.",VIZ_CHART_TITLE_CONTEXT_MENU_RESTORE:"기본 제목 복원",VIZ_CHART_SET_COLOR_LAYER:"기능 계층에 대한 색 선택",VIZ_CHART_DESCRIPTION_FAILED:"차트 설명을 가져오거나 설정하지 못했습니다.",VIZ_CHART_TITLE_TEXT_JOIN_AND:"및",VIZ_CHART_DIMENSION_INCOMPLETE_DESCRIPTION:"추가 차원 추가",VIZ_CHART_SELECT_DATASET:"데이터 집합 설정",VIZ_CHART_CONFIRM:"확인",VIZ_CHART_SERIALIZE_FAILED:"차트를 일련화하지 못했습니다.",}});sap.viz.extapi.env.Language.register({id:'ko',value: {VIZ_FRAME_FILTERBAR_DESCRIPTION:"필터링할 데이터 집합에서 필드 선택",VIZ_FRAME_FILTERMENU_FILTER:"필터",VIZ_FRAME_FILTERMENU_EXCLUDE:"제외",}});
sap.viz.extapi.env.Language.register({id:'pl',value: {VIZ_COMMON_YAXIS:"Oś Y",VIZ_COMMON_SUBTOTAL:"Suma częściowa",VIZ_COMMON_DONT_SHOW_MESSAGE:"Nie pokazuj tego ponownie",VIZ_COMMON_ADD_ICON:"Dodaj",VIZ_COMMON_AXIS:"Oś",VIZ_COMMON_SHOW_BY_DIMENSION:"Pokaż wg {0}",VIZ_COMMON_PIE_TEXT:"Wykres kołowy",VIZ_COMMON_ITEM:"Element",VIZ_COMMON_BOXPLOT_TEXT:"Wykres skrzynkowy",VIZ_COMMON_DIMENSION_LIMITATION_WARN:"Osiągnięta została maksymalna liczba danych wymiarów dla tej wizualizacji.",VIZ_COMMON_MIN:"Minimum",VIZ_COMMON_FEATUREANALYSIS:"Dane nakładki",VIZ_COMMON_TABLE_MEASURE:"Wartości podstawowe",VIZ_COMMON_PIE_DEPTH:"Głębokość koła",VIZ_COMMON_MAX_SHORT:"(Maks)",VIZ_COMMON_SERIALIZATION_FAILED:"Błąd serializacji",VIZ_COMMON_LEFT_YAXIS:"Lewa oś Y",VIZ_COMMON_RIGHT_YAXIS:"Prawa oś Y",VIZ_COMMON_STACKED_COLUMN_TEXT:"Skumulowany wykres kolumnowy",VIZ_COMMON_PRIMARY_YAXIS:"Oś Y1",VIZ_COMMON_TAGFAMILY:"Kolor słowa",VIZ_COMMON_ADD_MEASURES:"Dodaj miary",VIZ_COMMON_XAXIS:"Oś X",VIZ_COMMON_DIMENSIONS_TIPS:"Pokaż wartość, na którą ma wpływ miara",VIZ_COMMON_TAG:"Znacznik",VIZ_COMMON_DELETE_COMMENT_MESSAGE:"Czy na pewno chcesz usunąć komentarz?",VIZ_COMMON_CHANGE_CALCULATION:"Zmień obliczenie",VIZ_COMMON_DELETE:"Usuń",VIZ_COMMON_TABLE_COLUMNS_AXIS:"Oś kolumn",VIZ_COMMON_COLS_CAPITAL:"KOLUMNY",VIZ_COMMON_BETWEEN:"POMIĘDZY",VIZ_COMMON_SETTINGS_ICON:"Ustawienia",VIZ_COMMON_OK:"OK",VIZ_COMMON_COUNT_ALL_SHORT:"(Zlicz-wsz)",VIZ_COMMON_SUM_SHORT:"(Suma)",VIZ_COMMON_SIZE:"Rozmiar",VIZ_COMMON_SCATTER_MATRIX_TEXT:"Macierzowy wykres punktowy",VIZ_COMMON_GEOMAP_TEXT:"Mapa geograficzna",VIZ_COMMON_SCATTER_TEXT:"Wykres punktowy",VIZ_COMMON_MAX:"Maksimum",VIZ_COMMON_LEGEND:"Legenda",VIZ_COMMON_PRIMARY_XAXIS:"Oś X1",VIZ_COMMON_TOTAL_OF:"Ogółem z",VIZ_COMMON_COUNT_OF:"Liczność",VIZ_COMMON_CANCEL:"Anuluj",VIZ_COMMON_GEO_FEATURES:"Geografia",VIZ_COMMON_TAGCLOUD_TEXT:"Chmura znaczników",VIZ_COMMON_NONE_SHORT:"(Brak)",VIZ_COMMON_CHOROPLETH_TEXT:"Geograficzny wykres kartogramowy",VIZ_COMMON_RADAR_AXES:"Gałęzie radaru",VIZ_COMMON_COLUMNS:"Kolumny",VIZ_COMMON_ADD_ONE_MEASURE:"Dodaj jedną miarę",VIZ_COMMON_RADAR_TEXT:"Wykres radarowy",VIZ_COMMON_DUAL_STACKED_COMBINATION_TEXT:"Łączony spiętrzony wykres liniowy z dwiema osiami Y",VIZ_COMMON_COUNT_DISTINCT:"Zlicz-wyodrębnione",VIZ_COMMON_TOP_XAXIS:"Góra osi X",VIZ_COMMON_FAKE_DIMENSION:"Wymiar",VIZ_COMMON_DUAL_LINE_TEXT:"Wykres liniowy z dwiema osiami Y",VIZ_COMMON_TABLE_COLUMNS_SUBTOTALS:"Sumy częściowe kolumn",VIZ_COMMON_FEATUREVALUES:"Wartość",VIZ_COMMON_LINE_TEXT:"Wykres liniowy",VIZ_COMMON_TABLE_TEXT:"Tabela",VIZ_COMMON_MEASURE_TIPS:"Sortuj, określaj pozycję, dodawaj obliczenia",VIZ_COMMON_ROWS:"Wiersze",VIZ_COMMON_SUBTOTALS_TIPS:"Pokaż wartość sumy częściowej",VIZ_COMMON_DUAL_BAR_TEXT:"Wykres słupkowy z dwiema osiami Y",VIZ_COMMON_FAKE_MEASURE:"Miara",VIZ_COMMON_BUBBLE_HEIGHT:"Wysokość bąbelka",VIZ_COMMON_AVERAGE_SHORT:"(Śr)",VIZ_COMMON_REMOVE_ICON:"Usuń",VIZ_COMMON_HEATMAP_TEXT:"Mapa termiczna",VIZ_COMMON_TAGNAME:"Słowo",VIZ_COMMON_VALUES:"Wartości",VIZ_COMMON_DUAL_COLUMN_TEXT:"Wykres kolumnowy z dwiema osiami Y",VIZ_COMMON_COLUMN_WIDTH:"Szerokość kolumn",VIZ_COMMON_RECTANGLEWEIGHT:"Waga obszaru",VIZ_COMMON_SUM_OF:"Suma",VIZ_COMMON_HEIGHT:"Wysokość",VIZ_COMMON_AVERAGE:"Średnia",VIZ_COMMON_AREA_TEXT:"Wykres warstwowy",VIZ_COMMON_COUNT_DISTINCT_SHORT:"(Zlicz-wyo)",VIZ_COMMON_3D_BAR_TEXT:"Wykres słupkowy 3-W",VIZ_COMMON_GEO_COLOR:"Kolor",VIZ_COMMON_SEARCH:"Szukaj",VIZ_COMMON_REGIONCOLOR:"Kolor legendy",VIZ_COMMON_ROWS_CAPITAL:"WIERSZE",VIZ_COMMON_ADD_DIMENSIONS:"Dodaj wymiary",VIZ_COMMON_TREEMAP_TEXT:"Mapa drzewiasta",VIZ_COMMON_WATERFALL_TEXT:"Wykres wodospadowy",VIZ_COMMON_GEOPIE_TEXT:"Geograficzny wykres kołowy",VIZ_COMMON_TRELLIS:"KRATKA",VIZ_COMMON_MIN_SHORT:"(Min)",VIZ_COMMON_BUBBLE_WIDTH:"Szerokość bąbelka",VIZ_COMMON_REGIONSHAPE:"Kształt legendy",VIZ_COMMON_MEASURES:"MIARY",VIZ_COMMON_SECONDARY_YAXIS:"Oś Y2",VIZ_COMMON_AXES:"Osie",VIZ_COMMON_MAX_OF:"Maksimum z",VIZ_COMMON_TAGWEIGHT:"Waga słowa",VIZ_COMMON_TIMESERIES_LINE_TEXT:"Wykres liniowy dla daty/szeregu czasowego",VIZ_COMMON_3D_COLUMN_TEXT:"Wykres kolumnowy 3-W",VIZ_COMMON_BAR_HEIGHT:"Wysokość słupków",VIZ_COMMON_TIME_AXIS:"Wymiar czasu",VIZ_COMMON_COUNT_ALL:"Zlicz-wszystko",VIZ_COMMON_TRELLIS_TIPS:"Dodaj jako wiersze i kolumny",VIZ_COMMON_CHOOSE_MEASURE:"Wybierz wartość",VIZ_COMMON_PIE_SECTORS:"Wycinki koła",VIZ_COMMON_EDIT:"Edytuj",VIZ_COMMON_TABLE_ROWS_SUBTOTALS:"Sumy częściowe wierszy",VIZ_COMMON_LABEL:"Etykieta",VIZ_COMMON_AVERAGE_OF:"Średnia",VIZ_COMMON_DIMENSIONS:"WYMIARY",VIZ_COMMON_DEPENDENCY_ERROR:"Uwzględnij {0}, korzystając z {1}.",VIZ_COMMON_INVALID_ARGUMENTS:"Nieprawidłowe argumenty",VIZ_COMMON_DEPENDENCY_ERROR_WITH_UI_CONFIG:"Uwzględnij {0}, korzystając z {1} razem z {2}.",VIZ_COMMON_ANIMATION:"Animacja",VIZ_COMMON_GEOBUBBLE_TEXT:"Geograficzny wykres bąbelkowy",VIZ_COMMON_RECTANGLECOLOR:"Kolor obszaru",VIZ_COMMON_AREANAME:"Nazwa obszaru",VIZ_COMMON_SECONDARY_XAXIS:"Oś X2",VIZ_COMMON_CROSSTAB_MEASURES:"Miary",VIZ_COMMON_CROSSTAB_TEXT:"Macierz",VIZ_COMMON_BAR_TEXT:"Wykres słupkowy",VIZ_COMMON_STACKED_BAR_TEXT:"Skumulowany wykres słupkowy",VIZ_COMMON_COLOR:"Kolor",VIZ_COMMON_BUBBLE_TEXT:"Wykres bąbelkowy",VIZ_COMMON_ADD_ONE_DIMENSION:"Dodaj jeden wymiar",VIZ_COMMON_DUAL_COMBINATION_TEXT:"Mieszany wykres kolumnowo-liniowy z dwiema osiami Y",VIZ_COMMON_NONE:"Brak",VIZ_COMMON_MIN_OF:"Minimum z",VIZ_COMMON_BOTTOM_XAXIS:"Dół osi X",VIZ_COMMON_REGION:"Region",VIZ_COMMON_TABLE_DIMENSION:"Oś wierszy",VIZ_COMMON_SUBTOTALS:"SUMY CZĘŚCIOWE",VIZ_COMMON_COMBINATION_TEXT:"Mieszany wykres kolumnowo-liniowy",VIZ_COMMON_COLUMN_TEXT:"Wykres kolumnowy",VIZ_COMMON_SUM:"Suma",VIZ_COMMON_PIE_WITH_DEPTH_TEXT:"Wykres kołowy ze zmienną głębią wycinka",VIZ_COMMON_DONUT_TEXT:"Wykres pierścieniowy",VIZ_COMMON_INVALID_SERIALIZATION_PACKAGE:"Nieprawidłowy pakiet serializacji",VIZ_COMMON_SHAPE:"Kształt",VIZ_COMMON_CROSSTAB_MEASURES_TOOLTIP:"Przedstawia gdzie renderowane są miary",VIZ_COMMON_SECONDARY_AREANAME:"Nazwa2 obszaru",}});sap.viz.extapi.env.Language.register({id:'pl',value: {INVALID_DATA_BINDING:"Nieprawidłowe powiązanie danych",VIZ_CHART_BACK:"Wstecz",VIZ_CHART_ADD_EVENT_FAILED:"Nie można dodać wywołania zwrotnego zdarzenia wykresu:",VIZ_CHART_UPDATE_CSS_FAILED:"Nie można zaktualizować arkusza CSS wykresu:",VIZ_CHART_XAXIS_RANGE:"Zakres osi X",VIZ_CHART_TIMESERIES_DIMENSION_INCOMPLETE_DESCRIPTION:"Dodaj wymiar czasu",VIZ_CHART_EXPORTSVG_FAILED:"Nie można wyeksportować do ciągu svg.",VIZ_CHART_TITLE_CONTEXT_MENU_EDIT:"Zmień nazwę",VIZ_CHART_INCOMPLETE_DESCRIPTION:"Dodaj więcej miar lub wymiarów",VIZ_CHART_END:"Koniec",VIZ_CHART_UPDATE_PROPERTIES_FAILED:"Nie można zaktualizować właściwości wykresu:",VIZ_CHART_GRADIENT:"Gradient",VIZ_CHART_TRIGGER_ACTION_FAILED:"Nie można wyzwolić działania wykresu:",VIZ_CHART_UPDATE_CHART_FAILED:"Nie można zaktualizować wykresu:",VIZ_CHART_ESRI_MAP_AUTHENTICATION_FAIL:"Niepowodzenie uwierzytelniania w usłudze ESRI",VIZ_CHART_START:"Początek",VIZ_CHART_XAXIS2_RANGE:"Zakres osi X2",VIZ_CHART_AXIS_ZOOM:"Powiększ",VIZ_CHART_XAXIS1_RANGE:"Zakres osi X1",VIZ_CHART_NO_DATA_MATCHES_YOUR_FILTER:"Brak danych zgodnych z filtrami",VIZ_CHART_ESRI_SERVICES_UNACCESSIBLE:"Wystąpił nieznany błąd podczas uzyskiwania dostępu do usług online ESRI. Sprawdź swoje połączenie internetowe.",VIZ_CHART_UPDATE_FEEDING_FAILED:"Nie można zaktualizować źródła wykresu:",VIZ_CHART_SEGMENTED:"Podzielony na segmenty",VIZ_CHART_SET_AXIS_RANGE:"Ustaw zakres osi",VIZ_CHART_TRELLIS_DISABLED_WARN:"Kratka jest wyłączona w obszarze wizualizacji lub w panelu źródła",VIZ_CHART_SELECTION_FAILED:"Nie można pobrać/ustawić wyboru wykresu:",VIZ_CHART_IMPORT_ESRI_CUSTOM_SERVICE:"Importuj usługę niestandardową ESRI",VIZ_CHART_NEGATIVE_VALUES_INFO:"Aby wyświetlić wartości ujemne, kliknij przycisk Ustawienia i wybierz opcję Pokaż wartości ujemne z menu kontekstowego.",VIZ_CHART_ESRI_MAP_LOG_ON:"Trwa logowanie do usługi ESRI",VIZ_CHART_CREATE_CHART_FAILED:"Nie można utworzyć wykresu:",VIZ_CHART_MEASURE_INCOMPLETE_DESCRIPTION:"Dodaj więcej miar",VIZ_CHART_FIXED_RANGE:"Stałe",VIZ_CHART_NEXT:"Dalej",VIZ_CHART_YAXIS_RANGE:"Zakres osi Y",VIZ_CHART_RESET:"Resetuj",VIZ_CHART_GEO_INCOMPLETE_DESCRIPTION:"Dodaj więcej wymiarów geograficznych",VIZ_CHART_UPDATE_DATA_FAILED:"Nie można zaktualizować danych wykresu:",VIZ_CHART_TIMESERIES_INCOMPLETE_DESCRIPTION:"Dodaj więcej miar lub wymiar czasu",VIZ_CHART_NO_ESRI_SERVICE:"Nie znaleziono usługi funkcji dla konta.",VIZ_CHART_VIZINSTANCE_NOT_CREATED:"Nie utworzono wystąpienia wizualizacji",VIZ_CHART_TITLE_TEXT_JOIN_BY:"{0} według {1}",VIZ_CHART_INVALID_VIZ_TYPE:"Nie można wyświetlić tego wykresu: {0}.",VIZ_CHART_ESRI_MAP_LOADING:"Ładowanie mapy ESRI",VIZ_CHART_REMOVE_EVENT_FAILED:"Nie można usunąć wywołania zwrotnego zdarzenia wykresu:",VIZ_CHART_AUTO_RANGE:"Automatyczne",VIZ_CHART_NEGATIVE_VALUES_WARN:"Wartości ujemne nie są wyświetlane na tym wykresie bąbelkowym",VIZ_CHART_FEEDINGZONE_FAILED:"Nie można pobrać strefy źródła wykresu:",VIZ_CHART_GEO_BOTH_INCOMPLETE_DESCRIPTION:"Dodaj więcej miar lub wymiarów geograficznych",VIZ_CONTROLS_API_PARAMETER_ERROR:"Błąd parametru API",VIZ_CHART_YAXIS2_RANGE:"Zakres osi Y2",VIZ_CHART_YAXIS1_RANGE:"Zakres osi Y1",VIZ_CHART_UPDATE_CUSTOMIZATIONS_FAILED:"Błąd aktualizacji konfiguracji wykresu:",VIZ_CHART_TITLE_CONTEXT_MENU_RESTORE:"Przywróć domyślny tytuł",VIZ_CHART_SET_COLOR_LAYER:"Ustaw kolor warstwy funkcji",VIZ_CHART_DESCRIPTION_FAILED:"Nie można pobrać/ustawić opisu wykresu:",VIZ_CHART_TITLE_TEXT_JOIN_AND:"i",VIZ_CHART_DIMENSION_INCOMPLETE_DESCRIPTION:"Dodaj więcej wymiarów",VIZ_CHART_SELECT_DATASET:"Wybierz zbiór danych",VIZ_CHART_CONFIRM:"Potwierdź",VIZ_CHART_SERIALIZE_FAILED:"Nie można zserializować wykresu:",}});sap.viz.extapi.env.Language.register({id:'pl',value: {VIZ_FRAME_FILTERBAR_DESCRIPTION:"Wybierz pola ze zbioru danych do filtrowania",VIZ_FRAME_FILTERMENU_FILTER:"Filtr",VIZ_FRAME_FILTERMENU_EXCLUDE:"Wyklucz",}});
sap.viz.extapi.env.Language.register({id:'pt',value: {VIZ_COMMON_YAXIS:"Eixo Y",VIZ_COMMON_SUBTOTAL:"Subtotal",VIZ_COMMON_DONT_SHOW_MESSAGE:"Não exibir novamente",VIZ_COMMON_ADD_ICON:"Adicionar",VIZ_COMMON_AXIS:"Eixo",VIZ_COMMON_SHOW_BY_DIMENSION:"Mostrar por {0}",VIZ_COMMON_PIE_TEXT:"Gráfico de pizza",VIZ_COMMON_ITEM:"Item",VIZ_COMMON_BOXPLOT_TEXT:"Diagrama de caixa",VIZ_COMMON_DIMENSION_LIMITATION_WARN:"Você alcançou o número máximo de feeds de dimensão para essa visualização.",VIZ_COMMON_MIN:"Mín.",VIZ_COMMON_FEATUREANALYSIS:"Dados de sobreposição",VIZ_COMMON_TABLE_MEASURE:"Valores principais",VIZ_COMMON_PIE_DEPTH:"Profundidade da pizza",VIZ_COMMON_MAX_SHORT:"(Máx.)",VIZ_COMMON_SERIALIZATION_FAILED:"Erro de serialização",VIZ_COMMON_LEFT_YAXIS:"Eixo Y esquerdo",VIZ_COMMON_RIGHT_YAXIS:"Eixo Y direito",VIZ_COMMON_STACKED_COLUMN_TEXT:"Gráfico de colunas empilhadas",VIZ_COMMON_PRIMARY_YAXIS:"Eixo Y 1",VIZ_COMMON_TAGFAMILY:"Cor da palavra",VIZ_COMMON_ADD_MEASURES:"Adicionar medidas",VIZ_COMMON_XAXIS:"Eixo X",VIZ_COMMON_DIMENSIONS_TIPS:"Mostrar valor afetado pela medida",VIZ_COMMON_TAG:"Marcar",VIZ_COMMON_DELETE_COMMENT_MESSAGE:"Tem certeza de que deseja excluir o comentário?",VIZ_COMMON_CHANGE_CALCULATION:"Alterar cálculo",VIZ_COMMON_DELETE:"Excluir",VIZ_COMMON_TABLE_COLUMNS_AXIS:"Eixo de colunas",VIZ_COMMON_COLS_CAPITAL:"COLUNAS",VIZ_COMMON_BETWEEN:"ENTRE",VIZ_COMMON_SETTINGS_ICON:"Configurações",VIZ_COMMON_OK:"OK",VIZ_COMMON_COUNT_ALL_SHORT:"(Cnt-Td)",VIZ_COMMON_SUM_SHORT:"(Soma)",VIZ_COMMON_SIZE:"Tamanho",VIZ_COMMON_SCATTER_MATRIX_TEXT:"Gráfico de matriz de dispersão",VIZ_COMMON_GEOMAP_TEXT:"Mapa geográfico",VIZ_COMMON_SCATTER_TEXT:"Diagrama de dispersão",VIZ_COMMON_MAX:"Máx.",VIZ_COMMON_LEGEND:"Legenda",VIZ_COMMON_PRIMARY_XAXIS:"Eixo1 X",VIZ_COMMON_TOTAL_OF:"Total de",VIZ_COMMON_COUNT_OF:"Contagem de",VIZ_COMMON_CANCEL:"Cancelar",VIZ_COMMON_GEO_FEATURES:"Geografia",VIZ_COMMON_TAGCLOUD_TEXT:"Nuvem de tags",VIZ_COMMON_NONE_SHORT:"(Nenhum)",VIZ_COMMON_CHOROPLETH_TEXT:"Gráfico coroplético geográfico",VIZ_COMMON_RADAR_AXES:"Ramificações do radar",VIZ_COMMON_COLUMNS:"Colunas",VIZ_COMMON_ADD_ONE_MEASURE:"Adicionar uma medida",VIZ_COMMON_RADAR_TEXT:"Gráfico radial",VIZ_COMMON_DUAL_STACKED_COMBINATION_TEXT:"Gráfico combinado de linhas empilhadas com 2 eixos Y",VIZ_COMMON_COUNT_DISTINCT:"Contagem-Distintos",VIZ_COMMON_TOP_XAXIS:"Eixo X superior",VIZ_COMMON_FAKE_DIMENSION:"Dimensão",VIZ_COMMON_DUAL_LINE_TEXT:"Gráfico de linhas com 2 eixos Y",VIZ_COMMON_TABLE_COLUMNS_SUBTOTALS:"Subtotais de colunas",VIZ_COMMON_FEATUREVALUES:"Valor",VIZ_COMMON_LINE_TEXT:"Gráfico de linhas",VIZ_COMMON_TABLE_TEXT:"Tabela",VIZ_COMMON_MEASURE_TIPS:"Ordenar, classificar, adicionar cálculos",VIZ_COMMON_ROWS:"Linhas",VIZ_COMMON_SUBTOTALS_TIPS:"Mostrar valor do subtotal",VIZ_COMMON_DUAL_BAR_TEXT:"Gráfico de barras com 2 eixos Y",VIZ_COMMON_FAKE_MEASURE:"Medida",VIZ_COMMON_BUBBLE_HEIGHT:"Altura da bolha",VIZ_COMMON_AVERAGE_SHORT:"(Méd.)",VIZ_COMMON_REMOVE_ICON:"Remover",VIZ_COMMON_HEATMAP_TEXT:"Mapa de calor",VIZ_COMMON_TAGNAME:"Palavra",VIZ_COMMON_VALUES:"Valores",VIZ_COMMON_DUAL_COLUMN_TEXT:"Gráfico de colunas com 2 eixos Y",VIZ_COMMON_COLUMN_WIDTH:"Largura de coluna",VIZ_COMMON_RECTANGLEWEIGHT:"Peso da área",VIZ_COMMON_SUM_OF:"Soma de",VIZ_COMMON_HEIGHT:"Altura",VIZ_COMMON_AVERAGE:"Média",VIZ_COMMON_AREA_TEXT:"Gráfico de áreas",VIZ_COMMON_COUNT_DISTINCT_SHORT:"(Cnt-Dis)",VIZ_COMMON_3D_BAR_TEXT:"Gráfico de barras 3D",VIZ_COMMON_GEO_COLOR:"Cor",VIZ_COMMON_SEARCH:"Pesquisar",VIZ_COMMON_REGIONCOLOR:"Cor da legenda",VIZ_COMMON_ROWS_CAPITAL:"LINHAS",VIZ_COMMON_ADD_DIMENSIONS:"Adicionar dimensões",VIZ_COMMON_TREEMAP_TEXT:"Mapa em árvore",VIZ_COMMON_WATERFALL_TEXT:"Gráfico em cascata",VIZ_COMMON_GEOPIE_TEXT:"Gráfico de pizza geográfico",VIZ_COMMON_TRELLIS:"GRADE",VIZ_COMMON_MIN_SHORT:"(Mín.)",VIZ_COMMON_BUBBLE_WIDTH:"Largura da bolha",VIZ_COMMON_REGIONSHAPE:"Formato da legenda",VIZ_COMMON_MEASURES:"MEDIDAS",VIZ_COMMON_SECONDARY_YAXIS:"Eixo Y 2",VIZ_COMMON_AXES:"Eixos",VIZ_COMMON_MAX_OF:"Máximo de",VIZ_COMMON_TAGWEIGHT:"Peso da palavra",VIZ_COMMON_TIMESERIES_LINE_TEXT:"Gráfico de linha para série de data/tempo",VIZ_COMMON_3D_COLUMN_TEXT:"Gráfico de colunas 3D",VIZ_COMMON_BAR_HEIGHT:"Altura de barra",VIZ_COMMON_TIME_AXIS:"Dimensão de tempo",VIZ_COMMON_COUNT_ALL:"Contagem-Tudo",VIZ_COMMON_TRELLIS_TIPS:"Adicionar como linhas e colunas",VIZ_COMMON_CHOOSE_MEASURE:"Escolher valor",VIZ_COMMON_PIE_SECTORS:"Setores de pizza",VIZ_COMMON_EDIT:"Editar",VIZ_COMMON_TABLE_ROWS_SUBTOTALS:"Subtotais de linhas",VIZ_COMMON_LABEL:"Rótulo",VIZ_COMMON_AVERAGE_OF:"Média de",VIZ_COMMON_DIMENSIONS:"DIMENSÕES",VIZ_COMMON_DEPENDENCY_ERROR:"Incluir {0} ao usar {1}.",VIZ_COMMON_INVALID_ARGUMENTS:"Argumentos inválidos",VIZ_COMMON_DEPENDENCY_ERROR_WITH_UI_CONFIG:"Incluir {0} ao usar {1} com {2}.",VIZ_COMMON_ANIMATION:"Animação",VIZ_COMMON_GEOBUBBLE_TEXT:"Gráfico de bolhas geográfico",VIZ_COMMON_RECTANGLECOLOR:"Cor da área",VIZ_COMMON_AREANAME:"Nome da área",VIZ_COMMON_SECONDARY_XAXIS:"Eixo2 X",VIZ_COMMON_CROSSTAB_MEASURES:"Medidas",VIZ_COMMON_CROSSTAB_TEXT:"Tabela de referência cruzada",VIZ_COMMON_BAR_TEXT:"Gráfico de barras",VIZ_COMMON_STACKED_BAR_TEXT:"Gráfico de barras empilhadas",VIZ_COMMON_COLOR:"Cor",VIZ_COMMON_BUBBLE_TEXT:"Gráfico de bolhas",VIZ_COMMON_ADD_ONE_DIMENSION:"Adicionar uma dimensão",VIZ_COMMON_DUAL_COMBINATION_TEXT:"Gráfico de colunas e linhas combinadas com 2 eixos Y",VIZ_COMMON_NONE:"Nenhum",VIZ_COMMON_MIN_OF:"Mínimo de",VIZ_COMMON_BOTTOM_XAXIS:"Eixo X inferior",VIZ_COMMON_REGION:"Região",VIZ_COMMON_TABLE_DIMENSION:"Eixo de linhas",VIZ_COMMON_SUBTOTALS:"SUBTOTAIS",VIZ_COMMON_COMBINATION_TEXT:"Gráfico de colunas e linhas combinadas",VIZ_COMMON_COLUMN_TEXT:"Gráfico de colunas",VIZ_COMMON_SUM:"Soma",VIZ_COMMON_PIE_WITH_DEPTH_TEXT:"Pizza com profundidade de fatia variável",VIZ_COMMON_DONUT_TEXT:"Gráfico de rosca",VIZ_COMMON_INVALID_SERIALIZATION_PACKAGE:"Pacote de serialização inválido",VIZ_COMMON_SHAPE:"Forma",VIZ_COMMON_CROSSTAB_MEASURES_TOOLTIP:"Uma representação de onde as medidas são renderizadas",VIZ_COMMON_SECONDARY_AREANAME:"Nome da área 2",}});sap.viz.extapi.env.Language.register({id:'pt',value: {INVALID_DATA_BINDING:"Ligação de dados inválida",VIZ_CHART_BACK:"Voltar",VIZ_CHART_ADD_EVENT_FAILED:"Falha ao adicionar retorno do evento do gráfico:",VIZ_CHART_UPDATE_CSS_FAILED:"Falha ao atualizar CSS do gráfico:",VIZ_CHART_XAXIS_RANGE:"Intervalo do eixo X",VIZ_CHART_TIMESERIES_DIMENSION_INCOMPLETE_DESCRIPTION:"Adicionar uma dimensão de tempo",VIZ_CHART_EXPORTSVG_FAILED:"Falha ao exportar string svg.",VIZ_CHART_TITLE_CONTEXT_MENU_EDIT:"Renomear",VIZ_CHART_INCOMPLETE_DESCRIPTION:"Adicionar mais medidas ou dimensões",VIZ_CHART_END:"Fim",VIZ_CHART_UPDATE_PROPERTIES_FAILED:"Falha ao atualizar propriedades do gráfico:",VIZ_CHART_GRADIENT:"Gradiente",VIZ_CHART_TRIGGER_ACTION_FAILED:"Falha ao ativar ação do gráfico:",VIZ_CHART_UPDATE_CHART_FAILED:"Falha ao atualizar gráfico:",VIZ_CHART_ESRI_MAP_AUTHENTICATION_FAIL:"Falha na autenticação do Esri",VIZ_CHART_START:"Início",VIZ_CHART_XAXIS2_RANGE:"Intervalo do eixo2 X",VIZ_CHART_AXIS_ZOOM:"Zoom",VIZ_CHART_XAXIS1_RANGE:"Intervalo do eixo1 X",VIZ_CHART_NO_DATA_MATCHES_YOUR_FILTER:"Nenhum dado corresponde a seus filtros",VIZ_CHART_ESRI_SERVICES_UNACCESSIBLE:"Ocorreu um erro desconhecido ao acessar os serviços on-line ESRI. Verifique sua conexão com a internet.",VIZ_CHART_UPDATE_FEEDING_FAILED:"Falha ao atualizar alimentação do gráfico:",VIZ_CHART_SEGMENTED:"Segmentado",VIZ_CHART_SET_AXIS_RANGE:"Definir intervalo de eixos",VIZ_CHART_TRELLIS_DISABLED_WARN:"A grade está desativada no quadro Viz ou no Painel de Alimentação",VIZ_CHART_SELECTION_FAILED:"Falha ao obter/definir seleção do gráfico:",VIZ_CHART_IMPORT_ESRI_CUSTOM_SERVICE:"Importar serviço personalizado Esri",VIZ_CHART_NEGATIVE_VALUES_INFO:"Para exibir valores negativos, clique no botão Configurações e selecione Mostrar valores negativos no menu contextual.",VIZ_CHART_ESRI_MAP_LOG_ON:"Conectando-se ao Esri agora",VIZ_CHART_CREATE_CHART_FAILED:"Falha ao criar gráfico:",VIZ_CHART_MEASURE_INCOMPLETE_DESCRIPTION:"Adicionar mais medidas",VIZ_CHART_FIXED_RANGE:"Fixo",VIZ_CHART_NEXT:"Avançar",VIZ_CHART_YAXIS_RANGE:"Intervalo do eixo Y",VIZ_CHART_RESET:"Redefinir",VIZ_CHART_GEO_INCOMPLETE_DESCRIPTION:"Adicionar mais dimensões geográficas",VIZ_CHART_UPDATE_DATA_FAILED:"Falha ao atualizar dados do gráfico:",VIZ_CHART_TIMESERIES_INCOMPLETE_DESCRIPTION:"Adicionar mais medidas ou uma dimensão de tempo",VIZ_CHART_NO_ESRI_SERVICE:"Nenhum recurso de serviço encontrado para a conta.",VIZ_CHART_VIZINSTANCE_NOT_CREATED:"VizInstance não criada",VIZ_CHART_TITLE_TEXT_JOIN_BY:"{0} por {1}",VIZ_CHART_INVALID_VIZ_TYPE:"Não é possível exibir este gráfico: {0}.",VIZ_CHART_ESRI_MAP_LOADING:"Carregando mapa Esri",VIZ_CHART_REMOVE_EVENT_FAILED:"Falha ao remover retorno do evento do gráfico:",VIZ_CHART_AUTO_RANGE:"Automático",VIZ_CHART_NEGATIVE_VALUES_WARN:"Valores negativos não são mostrados nesse gráfico de bolhas",VIZ_CHART_FEEDINGZONE_FAILED:"Falha ao obter zona de alimentação do gráfico:",VIZ_CHART_GEO_BOTH_INCOMPLETE_DESCRIPTION:"Adicionar mais medidas ou dimensões geográficas",VIZ_CONTROLS_API_PARAMETER_ERROR:"Erro de parâmetro API",VIZ_CHART_YAXIS2_RANGE:"Intervalo do eixo2 Y",VIZ_CHART_YAXIS1_RANGE:"Intervalo do eixo1 Y",VIZ_CHART_UPDATE_CUSTOMIZATIONS_FAILED:"Falha ao atualizar personalizações do gráfico:",VIZ_CHART_TITLE_CONTEXT_MENU_RESTORE:"Restaurar título padrão",VIZ_CHART_SET_COLOR_LAYER:"Definir cor para camada do recurso",VIZ_CHART_DESCRIPTION_FAILED:"Falha ao obter/definir descrição do gráfico:",VIZ_CHART_TITLE_TEXT_JOIN_AND:"e",VIZ_CHART_DIMENSION_INCOMPLETE_DESCRIPTION:"Adicionar mais dimensões",VIZ_CHART_SELECT_DATASET:"Selecionar conjunto de dados",VIZ_CHART_CONFIRM:"Confirmar",VIZ_CHART_SERIALIZE_FAILED:"Falha ao serializar gráfico:",}});sap.viz.extapi.env.Language.register({id:'pt',value: {VIZ_FRAME_FILTERBAR_DESCRIPTION:"Selecionar campos do conjunto de dados para serem filtrados",VIZ_FRAME_FILTERMENU_FILTER:"Filtrar",VIZ_FRAME_FILTERMENU_EXCLUDE:"Excluir",}});
sap.viz.extapi.env.Language.register({id:'ru',value: {VIZ_COMMON_YAXIS:"Ось Y",VIZ_COMMON_SUBTOTAL:"Подытог",VIZ_COMMON_DONT_SHOW_MESSAGE:"Больше не показывать",VIZ_COMMON_ADD_ICON:"Добавить",VIZ_COMMON_AXIS:"Ось",VIZ_COMMON_SHOW_BY_DIMENSION:"Показать по {0}",VIZ_COMMON_PIE_TEXT:"Круговая диаграмма",VIZ_COMMON_ITEM:"Позиция",VIZ_COMMON_BOXPLOT_TEXT:"Коробчатая диаграмма",VIZ_COMMON_DIMENSION_LIMITATION_WARN:"Для этой визуализации достигнуто максимальное число фидов измерений.",VIZ_COMMON_MIN:"Минимум",VIZ_COMMON_FEATUREANALYSIS:"Наложение данных",VIZ_COMMON_TABLE_MEASURE:"Первичные значения",VIZ_COMMON_PIE_DEPTH:"Глубина круговой диаграммы",VIZ_COMMON_MAX_SHORT:"(Макс)",VIZ_COMMON_SERIALIZATION_FAILED:"Ошибка сериализации",VIZ_COMMON_LEFT_YAXIS:"Левая ось Y",VIZ_COMMON_RIGHT_YAXIS:"Правая ось Y",VIZ_COMMON_STACKED_COLUMN_TEXT:"Столбчатая диаграмма с накоплением",VIZ_COMMON_PRIMARY_YAXIS:"Ось Y1",VIZ_COMMON_TAGFAMILY:"Цвет слова",VIZ_COMMON_ADD_MEASURES:"Добавить показатели",VIZ_COMMON_XAXIS:"Ось X",VIZ_COMMON_DIMENSIONS_TIPS:"Показать значение, на которое влияет показатель",VIZ_COMMON_TAG:"Тег",VIZ_COMMON_DELETE_COMMENT_MESSAGE:"Удалить комментарий?",VIZ_COMMON_CHANGE_CALCULATION:"Изменить вычисление",VIZ_COMMON_DELETE:"Удалить",VIZ_COMMON_TABLE_COLUMNS_AXIS:"Оси столбцов",VIZ_COMMON_COLS_CAPITAL:"Столбцы",VIZ_COMMON_BETWEEN:"между",VIZ_COMMON_SETTINGS_ICON:"Настройки",VIZ_COMMON_OK:"ОК",VIZ_COMMON_COUNT_ALL_SHORT:"(Кол-все)",VIZ_COMMON_SUM_SHORT:"(Итог)",VIZ_COMMON_SIZE:"Размер",VIZ_COMMON_SCATTER_MATRIX_TEXT:"Точечная матричная диаграмма",VIZ_COMMON_GEOMAP_TEXT:"Геокарта",VIZ_COMMON_SCATTER_TEXT:"Точечная диаграмма",VIZ_COMMON_MAX:"Максимум",VIZ_COMMON_LEGEND:"Условные обозначения",VIZ_COMMON_PRIMARY_XAXIS:"Ось X 1",VIZ_COMMON_TOTAL_OF:"Итоги",VIZ_COMMON_COUNT_OF:"Количество",VIZ_COMMON_CANCEL:"Отмена",VIZ_COMMON_GEO_FEATURES:"География",VIZ_COMMON_TAGCLOUD_TEXT:"Облако тегов",VIZ_COMMON_NONE_SHORT:"(Нет)",VIZ_COMMON_CHOROPLETH_TEXT:"Географическая картограмма",VIZ_COMMON_RADAR_AXES:"Лепестки диаграммы",VIZ_COMMON_COLUMNS:"Столбцы",VIZ_COMMON_ADD_ONE_MEASURE:"Добавить один показатель",VIZ_COMMON_RADAR_TEXT:"Лепестковая диаграмма",VIZ_COMMON_DUAL_STACKED_COMBINATION_TEXT:"Комбинированный график с накоплением с двумя осями Y",VIZ_COMMON_COUNT_DISTINCT:"Количество - уникальные",VIZ_COMMON_TOP_XAXIS:"Верхняя ось X",VIZ_COMMON_FAKE_DIMENSION:"Измерение",VIZ_COMMON_DUAL_LINE_TEXT:"График с двумя осями Y",VIZ_COMMON_TABLE_COLUMNS_SUBTOTALS:"Промежуточные итоги столбцов",VIZ_COMMON_FEATUREVALUES:"Значение",VIZ_COMMON_LINE_TEXT:"График",VIZ_COMMON_TABLE_TEXT:"Таблица",VIZ_COMMON_MEASURE_TIPS:"Сортировать, ранжировать, добавить вычисления",VIZ_COMMON_ROWS:"Строки",VIZ_COMMON_SUBTOTALS_TIPS:"Показать значение промежуточного итога",VIZ_COMMON_DUAL_BAR_TEXT:"Линейчатая диаграмма с двумя осями Y",VIZ_COMMON_FAKE_MEASURE:"Показатель",VIZ_COMMON_BUBBLE_HEIGHT:"Высота пузырька",VIZ_COMMON_AVERAGE_SHORT:"(Ср)",VIZ_COMMON_REMOVE_ICON:"Удалить",VIZ_COMMON_HEATMAP_TEXT:"Тепловая карта",VIZ_COMMON_TAGNAME:"Слово",VIZ_COMMON_VALUES:"Значения",VIZ_COMMON_DUAL_COLUMN_TEXT:"Столбчатая диаграмма с двумя осями Y",VIZ_COMMON_COLUMN_WIDTH:"Ширина столбца",VIZ_COMMON_RECTANGLEWEIGHT:"Вес области",VIZ_COMMON_SUM_OF:"Сумма",VIZ_COMMON_HEIGHT:"Высота",VIZ_COMMON_AVERAGE:"Среднее",VIZ_COMMON_AREA_TEXT:"Диаграмма с областями",VIZ_COMMON_COUNT_DISTINCT_SHORT:"(Кол-уник)",VIZ_COMMON_3D_BAR_TEXT:"Трехмерная линейчатая диаграмма",VIZ_COMMON_GEO_COLOR:"Цвет",VIZ_COMMON_SEARCH:"Поиск",VIZ_COMMON_REGIONCOLOR:"Цвет условных обозначений",VIZ_COMMON_ROWS_CAPITAL:"Строки",VIZ_COMMON_ADD_DIMENSIONS:"Добавить измерения",VIZ_COMMON_TREEMAP_TEXT:"Древовидная карта",VIZ_COMMON_WATERFALL_TEXT:"Каскадная диаграмма",VIZ_COMMON_GEOPIE_TEXT:"Географическая круговая диаграмма",VIZ_COMMON_TRELLIS:"СЕТКА КООРДИНАТ",VIZ_COMMON_MIN_SHORT:"(Мин)",VIZ_COMMON_BUBBLE_WIDTH:"Ширина пузырька",VIZ_COMMON_REGIONSHAPE:"Форма условных обозначений",VIZ_COMMON_MEASURES:"ПОКАЗАТЕЛИ",VIZ_COMMON_SECONDARY_YAXIS:"Ось Y2",VIZ_COMMON_AXES:"Оси",VIZ_COMMON_MAX_OF:"Максимальное значение",VIZ_COMMON_TAGWEIGHT:"Вес слова",VIZ_COMMON_TIMESERIES_LINE_TEXT:"График для рядов даты/времени",VIZ_COMMON_3D_COLUMN_TEXT:"Трехмерная столбчатая диаграмма",VIZ_COMMON_BAR_HEIGHT:"Высота полосы",VIZ_COMMON_TIME_AXIS:"Измерение времени",VIZ_COMMON_COUNT_ALL:"Количество - все",VIZ_COMMON_TRELLIS_TIPS:"Добавить как строки и столбцы",VIZ_COMMON_CHOOSE_MEASURE:"Выбрать значение",VIZ_COMMON_PIE_SECTORS:"Секторы круговой диаграммы",VIZ_COMMON_EDIT:"Изменить",VIZ_COMMON_TABLE_ROWS_SUBTOTALS:"Промежуточные итоги строк",VIZ_COMMON_LABEL:"Метка",VIZ_COMMON_AVERAGE_OF:"Среднее значение",VIZ_COMMON_DIMENSIONS:"ИЗМЕРЕНИЯ",VIZ_COMMON_DEPENDENCY_ERROR:"Включите {0}, когда используете {1}.",VIZ_COMMON_INVALID_ARGUMENTS:"Недействительные аргументы",VIZ_COMMON_DEPENDENCY_ERROR_WITH_UI_CONFIG:"Включите {0}, когда используете {1} с {2}.",VIZ_COMMON_ANIMATION:"Анимация",VIZ_COMMON_GEOBUBBLE_TEXT:"Географическая пузырьковая диаграмма",VIZ_COMMON_RECTANGLECOLOR:"Цвет области",VIZ_COMMON_AREANAME:"Имя области",VIZ_COMMON_SECONDARY_XAXIS:"Ось X 2",VIZ_COMMON_CROSSTAB_MEASURES:"Показатели",VIZ_COMMON_CROSSTAB_TEXT:"Кросс-таблица",VIZ_COMMON_BAR_TEXT:"Линейчатая диаграмма",VIZ_COMMON_STACKED_BAR_TEXT:"Линейчатая диаграмма с накоплением",VIZ_COMMON_COLOR:"Цвет",VIZ_COMMON_BUBBLE_TEXT:"Пузырьковая диаграмма",VIZ_COMMON_ADD_ONE_DIMENSION:"Добавить одно измерение",VIZ_COMMON_DUAL_COMBINATION_TEXT:"Комбинированная столбчатая диаграмма/график с двумя осями Y",VIZ_COMMON_NONE:"Нет",VIZ_COMMON_MIN_OF:"Минимальное значение",VIZ_COMMON_BOTTOM_XAXIS:"Нижняя ось X",VIZ_COMMON_REGION:"Регион",VIZ_COMMON_TABLE_DIMENSION:"Ось строк",VIZ_COMMON_SUBTOTALS:"ПРОМЕЖУТОЧНЫЕ ИТОГИ",VIZ_COMMON_COMBINATION_TEXT:"Комбинированная столбчатая диаграмма/график",VIZ_COMMON_COLUMN_TEXT:"Столбчатая диаграмма",VIZ_COMMON_SUM:"Сумма",VIZ_COMMON_PIE_WITH_DEPTH_TEXT:"Круговая диаграмма с изменяемой глубиной секторов",VIZ_COMMON_DONUT_TEXT:"Кольцевая диаграмма",VIZ_COMMON_INVALID_SERIALIZATION_PACKAGE:"Недопустимый пакет сериализации",VIZ_COMMON_SHAPE:"Форма",VIZ_COMMON_CROSSTAB_MEASURES_TOOLTIP:"Представление, в котором отображаются показатели",VIZ_COMMON_SECONDARY_AREANAME:"Имя области2",}});sap.viz.extapi.env.Language.register({id:'ru',value: {INVALID_DATA_BINDING:"Недопустимая привязка данных",VIZ_CHART_BACK:"Назад",VIZ_CHART_ADD_EVENT_FAILED:"Не удалось добавить обратный вызов события диаграммы:",VIZ_CHART_UPDATE_CSS_FAILED:"Не удалось обновить CSS диаграммы:",VIZ_CHART_XAXIS_RANGE:"Диапазон оси X",VIZ_CHART_TIMESERIES_DIMENSION_INCOMPLETE_DESCRIPTION:"Добавить измерение времени",VIZ_CHART_EXPORTSVG_FAILED:"Не удалось экспортировать в строку svg.",VIZ_CHART_TITLE_CONTEXT_MENU_EDIT:"Переименовать",VIZ_CHART_INCOMPLETE_DESCRIPTION:"Добавить дополнительные показатели или измерения",VIZ_CHART_END:"Окончание",VIZ_CHART_UPDATE_PROPERTIES_FAILED:"Не удалось обновить свойства диаграммы:",VIZ_CHART_GRADIENT:"Градиент",VIZ_CHART_TRIGGER_ACTION_FAILED:"Не удалось инициировать действие диаграммы:",VIZ_CHART_UPDATE_CHART_FAILED:"Не удалось обновить диаграмму:",VIZ_CHART_ESRI_MAP_AUTHENTICATION_FAIL:"Сбой аутентификации Esri",VIZ_CHART_START:"Начало",VIZ_CHART_XAXIS2_RANGE:"Диапазон оси X 2",VIZ_CHART_AXIS_ZOOM:"Масштаб",VIZ_CHART_XAXIS1_RANGE:"Диапазон оси X 1",VIZ_CHART_NO_DATA_MATCHES_YOUR_FILTER:"Отсутствуют данные, соответствующие фильтрам.",VIZ_CHART_ESRI_SERVICES_UNACCESSIBLE:"При получении доступа к онлайн-сервисам ESRI произошла ошибка. Проверьте подключение к Интернету.",VIZ_CHART_UPDATE_FEEDING_FAILED:"Не удалось обновить фидер диаграммы:",VIZ_CHART_SEGMENTED:"Сегментировано",VIZ_CHART_SET_AXIS_RANGE:"Установить диапазон осей",VIZ_CHART_TRELLIS_DISABLED_WARN:"В окне визуализации или панели фидера отключена сетка координат",VIZ_CHART_SELECTION_FAILED:"Не удалось получить/задать выбор диаграммы:",VIZ_CHART_IMPORT_ESRI_CUSTOM_SERVICE:"Импорт пользовательского сервиса Esri",VIZ_CHART_NEGATIVE_VALUES_INFO:"Чтобы отобразить отрицательные значения, нажмите кнопку настроек и выберите в контекстном меню \"Показать отрицательные значения\".",VIZ_CHART_ESRI_MAP_LOG_ON:"Выполнить вход в Esri",VIZ_CHART_CREATE_CHART_FAILED:"Не удалось создать диаграмму:",VIZ_CHART_MEASURE_INCOMPLETE_DESCRIPTION:"Добавить дополнительные показатели",VIZ_CHART_FIXED_RANGE:"Фиксированный",VIZ_CHART_NEXT:"Далее",VIZ_CHART_YAXIS_RANGE:"Диапазон оси Y",VIZ_CHART_RESET:"Сброс",VIZ_CHART_GEO_INCOMPLETE_DESCRIPTION:"Добавить дополнительные географические измерения",VIZ_CHART_UPDATE_DATA_FAILED:"Не удалось обновить данные диаграммы:",VIZ_CHART_TIMESERIES_INCOMPLETE_DESCRIPTION:"Добавить дополнительные показатели или измерение времени",VIZ_CHART_NO_ESRI_SERVICE:"Для вашей учетной записи служба функции не найдена.",VIZ_CHART_VIZINSTANCE_NOT_CREATED:"Визуализация не создана.",VIZ_CHART_TITLE_TEXT_JOIN_BY:"{0} по: {1}",VIZ_CHART_INVALID_VIZ_TYPE:"Не удается отобразить диаграмму: {0}.",VIZ_CHART_ESRI_MAP_LOADING:"Загрузка карты Esri",VIZ_CHART_REMOVE_EVENT_FAILED:"Не удалось удалить обратный вызов события диаграммы:",VIZ_CHART_AUTO_RANGE:"Автоматически",VIZ_CHART_NEGATIVE_VALUES_WARN:"Отрицательные значения не отображаются в пузырьковой диаграмме",VIZ_CHART_FEEDINGZONE_FAILED:"Не удалось получить зону фидера диаграммы:",VIZ_CHART_GEO_BOTH_INCOMPLETE_DESCRIPTION:"Добавить дополнительные показатели или географические измерения",VIZ_CONTROLS_API_PARAMETER_ERROR:"Ошибка параметра API",VIZ_CHART_YAXIS2_RANGE:"Диапазон оси Y 2",VIZ_CHART_YAXIS1_RANGE:"Диапазон оси Y 1",VIZ_CHART_UPDATE_CUSTOMIZATIONS_FAILED:"Сбой при обновлении настроек диаграммы:",VIZ_CHART_TITLE_CONTEXT_MENU_RESTORE:"Восстановить заголовок по умолчанию",VIZ_CHART_SET_COLOR_LAYER:"Настроить цвет для уровня функции",VIZ_CHART_DESCRIPTION_FAILED:"Не удалось получить/задать описание диаграммы:",VIZ_CHART_TITLE_TEXT_JOIN_AND:"и",VIZ_CHART_DIMENSION_INCOMPLETE_DESCRIPTION:"Добавить дополнительные измерения",VIZ_CHART_SELECT_DATASET:"Выбор набора данных",VIZ_CHART_CONFIRM:"Подтвердить",VIZ_CHART_SERIALIZE_FAILED:"Не удалось выполнить сериализацию диаграммы:",}});sap.viz.extapi.env.Language.register({id:'ru',value: {VIZ_FRAME_FILTERBAR_DESCRIPTION:"Выберите поля набора данных для фильтрации",VIZ_FRAME_FILTERMENU_FILTER:"Фильтр",VIZ_FRAME_FILTERMENU_EXCLUDE:"Исключить",}});
sap.viz.extapi.env.Language.register({id:'zh_CN',value: {VIZ_COMMON_YAXIS:"Y 轴",VIZ_COMMON_SUBTOTAL:"小计",VIZ_COMMON_DONT_SHOW_MESSAGE:"不再显示",VIZ_COMMON_ADD_ICON:"添加",VIZ_COMMON_AXIS:"轴",VIZ_COMMON_SHOW_BY_DIMENSION:"按“{0}”显示",VIZ_COMMON_PIE_TEXT:"饼图",VIZ_COMMON_ITEM:"项目",VIZ_COMMON_BOXPLOT_TEXT:"箱线图",VIZ_COMMON_DIMENSION_LIMITATION_WARN:"已达到此可视化对象的最大维源数量。",VIZ_COMMON_MIN:"最小值",VIZ_COMMON_FEATUREANALYSIS:"覆盖数据",VIZ_COMMON_TABLE_MEASURE:"主值",VIZ_COMMON_PIE_DEPTH:"饼图深度",VIZ_COMMON_MAX_SHORT:"（最大值）",VIZ_COMMON_SERIALIZATION_FAILED:"序列化错误",VIZ_COMMON_LEFT_YAXIS:"左侧 Y 轴",VIZ_COMMON_RIGHT_YAXIS:"右侧 Y 轴",VIZ_COMMON_STACKED_COLUMN_TEXT:"堆积柱形图",VIZ_COMMON_PRIMARY_YAXIS:"Y 轴 1",VIZ_COMMON_TAGFAMILY:"单词颜色",VIZ_COMMON_ADD_MEASURES:"添加度量",VIZ_COMMON_XAXIS:"X 轴",VIZ_COMMON_DIMENSIONS_TIPS:"显示度量影响的值",VIZ_COMMON_TAG:"标签",VIZ_COMMON_DELETE_COMMENT_MESSAGE:"是否确定要删除注释？",VIZ_COMMON_CHANGE_CALCULATION:"更改计算",VIZ_COMMON_DELETE:"删除",VIZ_COMMON_TABLE_COLUMNS_AXIS:"列轴",VIZ_COMMON_COLS_CAPITAL:"列",VIZ_COMMON_BETWEEN:"介于",VIZ_COMMON_SETTINGS_ICON:"设置",VIZ_COMMON_OK:"确定",VIZ_COMMON_COUNT_ALL_SHORT:"（全部计数）",VIZ_COMMON_SUM_SHORT:"（总和）",VIZ_COMMON_SIZE:"大小",VIZ_COMMON_SCATTER_MATRIX_TEXT:"散点矩阵图",VIZ_COMMON_GEOMAP_TEXT:"地理地图",VIZ_COMMON_SCATTER_TEXT:"散点图",VIZ_COMMON_MAX:"最大值",VIZ_COMMON_LEGEND:"图例",VIZ_COMMON_PRIMARY_XAXIS:"X 轴 1",VIZ_COMMON_TOTAL_OF:"下列项的总计：",VIZ_COMMON_COUNT_OF:"下列项的计数：",VIZ_COMMON_CANCEL:"取消",VIZ_COMMON_GEO_FEATURES:"地理区域",VIZ_COMMON_TAGCLOUD_TEXT:"标签云图",VIZ_COMMON_NONE_SHORT:"（无）",VIZ_COMMON_CHOROPLETH_TEXT:"地理区域分级统计图",VIZ_COMMON_RADAR_AXES:"雷达图分支",VIZ_COMMON_COLUMNS:"列",VIZ_COMMON_ADD_ONE_MEASURE:"添加一个度量",VIZ_COMMON_RADAR_TEXT:"雷达图",VIZ_COMMON_DUAL_STACKED_COMBINATION_TEXT:"双 Y 轴组合堆积折线图",VIZ_COMMON_COUNT_DISTINCT:"计数（非重复）",VIZ_COMMON_TOP_XAXIS:"顶部 X 轴",VIZ_COMMON_FAKE_DIMENSION:"维",VIZ_COMMON_DUAL_LINE_TEXT:"双 Y 轴折线图",VIZ_COMMON_TABLE_COLUMNS_SUBTOTALS:"列小计",VIZ_COMMON_FEATUREVALUES:"值",VIZ_COMMON_LINE_TEXT:"折线图",VIZ_COMMON_TABLE_TEXT:"表",VIZ_COMMON_MEASURE_TIPS:"对计算进行排序、排名和添加操作",VIZ_COMMON_ROWS:"行",VIZ_COMMON_SUBTOTALS_TIPS:"显示小计值",VIZ_COMMON_DUAL_BAR_TEXT:"双 Y 轴条形图",VIZ_COMMON_FAKE_MEASURE:"度量",VIZ_COMMON_BUBBLE_HEIGHT:"气泡高度",VIZ_COMMON_AVERAGE_SHORT:"（平均值）",VIZ_COMMON_REMOVE_ICON:"删除",VIZ_COMMON_HEATMAP_TEXT:"热图",VIZ_COMMON_TAGNAME:"单词",VIZ_COMMON_VALUES:"值",VIZ_COMMON_DUAL_COLUMN_TEXT:"双 Y 轴柱形图",VIZ_COMMON_COLUMN_WIDTH:"列宽度",VIZ_COMMON_RECTANGLEWEIGHT:"区域权重",VIZ_COMMON_SUM_OF:"下列项的总和：",VIZ_COMMON_HEIGHT:"高度",VIZ_COMMON_AVERAGE:"平均值",VIZ_COMMON_AREA_TEXT:"面积图",VIZ_COMMON_COUNT_DISTINCT_SHORT:"（非重复计数）",VIZ_COMMON_3D_BAR_TEXT:"三维条形图",VIZ_COMMON_GEO_COLOR:"颜色",VIZ_COMMON_SEARCH:"搜索",VIZ_COMMON_REGIONCOLOR:"图例颜色",VIZ_COMMON_ROWS_CAPITAL:"行",VIZ_COMMON_ADD_DIMENSIONS:"添加维",VIZ_COMMON_TREEMAP_TEXT:"树图",VIZ_COMMON_WATERFALL_TEXT:"瀑布图",VIZ_COMMON_GEOPIE_TEXT:"地理区域饼图",VIZ_COMMON_TRELLIS:"格",VIZ_COMMON_MIN_SHORT:"（最小值）",VIZ_COMMON_BUBBLE_WIDTH:"气泡宽度",VIZ_COMMON_REGIONSHAPE:"图例形状",VIZ_COMMON_MEASURES:"度量",VIZ_COMMON_SECONDARY_YAXIS:"Y 轴 2",VIZ_COMMON_AXES:"轴",VIZ_COMMON_MAX_OF:"下列项的最大值：",VIZ_COMMON_TAGWEIGHT:"单词权重",VIZ_COMMON_TIMESERIES_LINE_TEXT:"日期/时间系列折线图",VIZ_COMMON_3D_COLUMN_TEXT:"三维柱形图",VIZ_COMMON_BAR_HEIGHT:"条高度",VIZ_COMMON_TIME_AXIS:"时间维",VIZ_COMMON_COUNT_ALL:"计数（全部）",VIZ_COMMON_TRELLIS_TIPS:"添加为行和列",VIZ_COMMON_CHOOSE_MEASURE:"选择值",VIZ_COMMON_PIE_SECTORS:"饼图扇区",VIZ_COMMON_EDIT:"编辑",VIZ_COMMON_TABLE_ROWS_SUBTOTALS:"行小计",VIZ_COMMON_LABEL:"标签",VIZ_COMMON_AVERAGE_OF:"下列项的平均值：",VIZ_COMMON_DIMENSIONS:"维",VIZ_COMMON_DEPENDENCY_ERROR:"使用“{1}”时请包含“{0}”。",VIZ_COMMON_INVALID_ARGUMENTS:"无效参数",VIZ_COMMON_DEPENDENCY_ERROR_WITH_UI_CONFIG:"通过“{2}”使用“{1}”时请包含“{0}”。",VIZ_COMMON_ANIMATION:"动画",VIZ_COMMON_GEOBUBBLE_TEXT:"地理气泡图",VIZ_COMMON_RECTANGLECOLOR:"区域颜色",VIZ_COMMON_AREANAME:"区域名称",VIZ_COMMON_SECONDARY_XAXIS:"X 轴 2",VIZ_COMMON_CROSSTAB_MEASURES:"度量",VIZ_COMMON_CROSSTAB_TEXT:"交叉表",VIZ_COMMON_BAR_TEXT:"条形图",VIZ_COMMON_STACKED_BAR_TEXT:"堆积条形图",VIZ_COMMON_COLOR:"颜色",VIZ_COMMON_BUBBLE_TEXT:"气泡图",VIZ_COMMON_ADD_ONE_DIMENSION:"添加一个维",VIZ_COMMON_DUAL_COMBINATION_TEXT:"双 Y 轴柱形折线组合图",VIZ_COMMON_NONE:"无",VIZ_COMMON_MIN_OF:"下列项的最小值：",VIZ_COMMON_BOTTOM_XAXIS:"底部 X 轴",VIZ_COMMON_REGION:"区域",VIZ_COMMON_TABLE_DIMENSION:"行轴",VIZ_COMMON_SUBTOTALS:"小计",VIZ_COMMON_COMBINATION_TEXT:"柱形折线组合图",VIZ_COMMON_COLUMN_TEXT:"柱形图",VIZ_COMMON_SUM:"总和",VIZ_COMMON_PIE_WITH_DEPTH_TEXT:"可变扇区深度饼图",VIZ_COMMON_DONUT_TEXT:"圆环图",VIZ_COMMON_INVALID_SERIALIZATION_PACKAGE:"序列化包无效",VIZ_COMMON_SHAPE:"形状",VIZ_COMMON_CROSSTAB_MEASURES_TOOLTIP:"表示度量呈现的位置",VIZ_COMMON_SECONDARY_AREANAME:"区域名称 2",}});sap.viz.extapi.env.Language.register({id:'zh_CN',value: {INVALID_DATA_BINDING:"无效的数据绑定",VIZ_CHART_BACK:"上一步",VIZ_CHART_ADD_EVENT_FAILED:"未能添加统计图事件回调：",VIZ_CHART_UPDATE_CSS_FAILED:"未能更新统计图 CSS：",VIZ_CHART_XAXIS_RANGE:"X 轴范围",VIZ_CHART_TIMESERIES_DIMENSION_INCOMPLETE_DESCRIPTION:"添加时间维",VIZ_CHART_EXPORTSVG_FAILED:"未能导出为 SVG 字符串。",VIZ_CHART_TITLE_CONTEXT_MENU_EDIT:"重命名",VIZ_CHART_INCOMPLETE_DESCRIPTION:"添加更多度量或维",VIZ_CHART_END:"结束",VIZ_CHART_UPDATE_PROPERTIES_FAILED:"未能更新统计图属性：",VIZ_CHART_GRADIENT:"渐变",VIZ_CHART_TRIGGER_ACTION_FAILED:"未能触发统计图操作：",VIZ_CHART_UPDATE_CHART_FAILED:"未能更新统计图：",VIZ_CHART_ESRI_MAP_AUTHENTICATION_FAIL:"Esri 身份验证失败",VIZ_CHART_START:"启动",VIZ_CHART_XAXIS2_RANGE:"X 轴 2 范围",VIZ_CHART_AXIS_ZOOM:"缩放",VIZ_CHART_XAXIS1_RANGE:"X 轴 1 范围",VIZ_CHART_NO_DATA_MATCHES_YOUR_FILTER:"没有任何数据与您的过滤器相匹配",VIZ_CHART_ESRI_SERVICES_UNACCESSIBLE:"访问 ESRI 联机服务时发生未知错误。请检查您的 Internet 连接。",VIZ_CHART_UPDATE_FEEDING_FAILED:"未能更新统计图源：",VIZ_CHART_SEGMENTED:"分段的",VIZ_CHART_SET_AXIS_RANGE:"设置轴范围",VIZ_CHART_TRELLIS_DISABLED_WARN:"已在可视化对象框架或源面板中禁用格",VIZ_CHART_SELECTION_FAILED:"未能获取/设置统计图选择：",VIZ_CHART_IMPORT_ESRI_CUSTOM_SERVICE:"导入 ESRI 自定义服务",VIZ_CHART_NEGATIVE_VALUES_INFO:"要显示负值，请单击“设置”按钮，然后从上下文菜单中选择“显示负值”。",VIZ_CHART_ESRI_MAP_LOG_ON:"正在登录到 ESRI",VIZ_CHART_CREATE_CHART_FAILED:"未能创建统计图：",VIZ_CHART_MEASURE_INCOMPLETE_DESCRIPTION:"添加更多度量",VIZ_CHART_FIXED_RANGE:"固定",VIZ_CHART_NEXT:"下一步",VIZ_CHART_YAXIS_RANGE:"Y 轴范围",VIZ_CHART_RESET:"重置",VIZ_CHART_GEO_INCOMPLETE_DESCRIPTION:"添加更多地理区域维",VIZ_CHART_UPDATE_DATA_FAILED:"未能更新统计图数据：",VIZ_CHART_TIMESERIES_INCOMPLETE_DESCRIPTION:"添加更多度量或时间维",VIZ_CHART_NO_ESRI_SERVICE:"未找到您帐户的功能服务。",VIZ_CHART_VIZINSTANCE_NOT_CREATED:"未创建 VizInstance",VIZ_CHART_TITLE_TEXT_JOIN_BY:"{0} 按 {1}",VIZ_CHART_INVALID_VIZ_TYPE:"无法显示此统计图：{0}。",VIZ_CHART_ESRI_MAP_LOADING:"正在加载 ESRI 映射",VIZ_CHART_REMOVE_EVENT_FAILED:"未能删除统计图事件回调：",VIZ_CHART_AUTO_RANGE:"自动",VIZ_CHART_NEGATIVE_VALUES_WARN:"此气泡图不显示负值",VIZ_CHART_FEEDINGZONE_FAILED:"未能获取统计图源区：",VIZ_CHART_GEO_BOTH_INCOMPLETE_DESCRIPTION:"添加更多度量或更多地理区域维",VIZ_CONTROLS_API_PARAMETER_ERROR:"API 参数错误",VIZ_CHART_YAXIS2_RANGE:"Y 轴 2 范围",VIZ_CHART_YAXIS1_RANGE:"Y 轴 1 范围",VIZ_CHART_UPDATE_CUSTOMIZATIONS_FAILED:"未能更新统计图自定义：",VIZ_CHART_TITLE_CONTEXT_MENU_RESTORE:"恢复默认标题",VIZ_CHART_SET_COLOR_LAYER:"选择特征层颜色",VIZ_CHART_DESCRIPTION_FAILED:"未能获取/设置统计图说明：",VIZ_CHART_TITLE_TEXT_JOIN_AND:"和",VIZ_CHART_DIMENSION_INCOMPLETE_DESCRIPTION:"添加更多维",VIZ_CHART_SELECT_DATASET:"选择数据集",VIZ_CHART_CONFIRM:"确认",VIZ_CHART_SERIALIZE_FAILED:"未能序列化统计图：",}});sap.viz.extapi.env.Language.register({id:'zh_CN',value: {VIZ_FRAME_FILTERBAR_DESCRIPTION:"从数据集中选择要过滤的字段",VIZ_FRAME_FILTERMENU_FILTER:"过滤器",VIZ_FRAME_FILTERMENU_EXCLUDE:"排除",}});
sap.viz.extapi.env.Language.register({id:'zh_TW',value: {VIZ_COMMON_YAXIS:"Y Axis",VIZ_COMMON_DONT_SHOW_MESSAGE:"Don't show this again",VIZ_COMMON_ADD_ICON:"Add",VIZ_COMMON_SHOW_BY_DIMENSION:"Show by {0}",VIZ_COMMON_PIE_TEXT:"Pie Chart",VIZ_COMMON_ITEM:"Item",VIZ_COMMON_BOXPLOT_TEXT:"Box Plot",VIZ_COMMON_DIMENSION_LIMITATION_WARN:"You have reached the maximum number of dimension feeds for this visualization.",VIZ_COMMON_MIN:"Min",VIZ_COMMON_FEATUREANALYSIS:"Overlay Data",VIZ_COMMON_TABLE_MEASURE:"Primary Values",VIZ_COMMON_PIE_DEPTH:"Pie Depth",VIZ_COMMON_MAX_SHORT:"(Max)",VIZ_COMMON_SERIALIZATION_FAILED:"Serialization error",VIZ_COMMON_STACKED_COLUMN_TEXT:"Stacked Column Chart",VIZ_COMMON_PRIMARY_YAXIS:"Y Axis1",VIZ_COMMON_TAGFAMILY:"Word Color",VIZ_COMMON_ADD_MEASURES:"Add Measures",VIZ_COMMON_XAXIS:"X Axis",VIZ_COMMON_DIMENSIONS_TIPS:"Show value affected by measure",VIZ_COMMON_DELETE_COMMENT_MESSAGE:"Are you sure to delete the comment?",VIZ_COMMON_CHANGE_CALCULATION:"Change Calculation",VIZ_COMMON_DELETE:"Delete",VIZ_COMMON_TABLE_COLUMNS_AXIS:"Columns Axis",VIZ_COMMON_BETWEEN:"BETWEEN",VIZ_COMMON_SETTINGS_ICON:"Settings",VIZ_COMMON_OK:"OK",VIZ_COMMON_COUNT_ALL_SHORT:"(Cnt-All)",VIZ_COMMON_SUM_SHORT:"(Sum)",VIZ_COMMON_SCATTER_MATRIX_TEXT:"Scatter Matrix Chart",VIZ_COMMON_GEOMAP_TEXT:"Geo Map",VIZ_COMMON_SCATTER_TEXT:"Scatter Plot",VIZ_COMMON_MAX:"Max",VIZ_COMMON_LEGEND:"Legend",VIZ_COMMON_PRIMARY_XAXIS:"X Axis1",VIZ_COMMON_TOTAL_OF:"Total of",VIZ_COMMON_COUNT_OF:"Count of",VIZ_COMMON_CANCEL:"Cancel",VIZ_COMMON_GEO_FEATURES:"Geography",VIZ_COMMON_TAGCLOUD_TEXT:"Tag Cloud",VIZ_COMMON_NONE_SHORT:"(None)",VIZ_COMMON_CHOROPLETH_TEXT:"Geo Choropleth Chart",VIZ_COMMON_RADAR_AXES:"Radar Branches",VIZ_COMMON_COLUMNS:"Columns",VIZ_COMMON_ADD_ONE_MEASURE:"Add one Measure",VIZ_COMMON_RADAR_TEXT:"Radar Chart",VIZ_COMMON_COUNT_DISTINCT:"Count-Distinct",VIZ_COMMON_FAKE_DIMENSION:"Dimension",VIZ_COMMON_DUAL_LINE_TEXT:"Line Chart With 2 Y-Axes",VIZ_COMMON_TABLE_COLUMNS_SUBTOTALS:"Columns Subtotals",VIZ_COMMON_FEATUREVALUES:"Value",VIZ_COMMON_LINE_TEXT:"Line Chart",VIZ_COMMON_TABLE_TEXT:"Table",VIZ_COMMON_MEASURE_TIPS:"Sort, rank, add calculations",VIZ_COMMON_ROWS:"Rows",VIZ_COMMON_SUBTOTALS_TIPS:"Show value of subtotal",VIZ_COMMON_DUAL_BAR_TEXT:"Bar Chart With 2 Y-Axes",VIZ_COMMON_FAKE_MEASURE:"Measure",VIZ_COMMON_BUBBLE_HEIGHT:"Bubble Height",VIZ_COMMON_AVERAGE_SHORT:"(Avg)",VIZ_COMMON_REMOVE_ICON:"Remove",VIZ_COMMON_HEATMAP_TEXT:"Heat Map",VIZ_COMMON_TAGNAME:"Word",VIZ_COMMON_DUAL_COLUMN_TEXT:"Column Chart With 2 Y-Axes",VIZ_COMMON_RECTANGLEWEIGHT:"Area Weight",VIZ_COMMON_SUM_OF:"Sum of",VIZ_COMMON_AVERAGE:"Average",VIZ_COMMON_AREA_TEXT:"Area Chart",VIZ_COMMON_COUNT_DISTINCT_SHORT:"(Cnt-Dis)",VIZ_COMMON_GEO_COLOR:"Color",VIZ_COMMON_3D_BAR_TEXT:"3D Bar Chart",VIZ_COMMON_SEARCH:"Search",VIZ_COMMON_REGIONCOLOR:"Legend Color",VIZ_COMMON_ADD_DIMENSIONS:"Add Dimensions",VIZ_COMMON_TREEMAP_TEXT:"Tree Map",VIZ_COMMON_WATERFALL_TEXT:"Waterfall Chart",VIZ_COMMON_GEOPIE_TEXT:"Geo Pie Chart",VIZ_COMMON_TRELLIS:"TRELLIS",VIZ_COMMON_MIN_SHORT:"(Min)",VIZ_COMMON_BUBBLE_WIDTH:"Bubble Width",VIZ_COMMON_REGIONSHAPE:"Legend Shape",VIZ_COMMON_MEASURES:"MEASURES",VIZ_COMMON_SECONDARY_YAXIS:"Y Axis2",VIZ_COMMON_MAX_OF:"Maximum of",VIZ_COMMON_TAGWEIGHT:"Word Weight",VIZ_COMMON_3D_COLUMN_TEXT:"3D Column Chart",VIZ_COMMON_COUNT_ALL:"Count-All",VIZ_COMMON_TRELLIS_TIPS:"Add as rows and columns",VIZ_COMMON_CHOOSE_MEASURE:"Choose value",VIZ_COMMON_PIE_SECTORS:"Pie Sectors",VIZ_COMMON_EDIT:"Edit",VIZ_COMMON_TABLE_ROWS_SUBTOTALS:"Rows Subtotals",VIZ_COMMON_AVERAGE_OF:"Average of",VIZ_COMMON_DIMENSIONS:"DIMENSIONS",VIZ_COMMON_DEPENDENCY_ERROR:"Please include {0} when using {1}.",VIZ_COMMON_DEPENDENCY_ERROR_WITH_UI_CONFIG:"Please include {0} when using {1} with {2}.",VIZ_COMMON_ANIMATION:"Animation",VIZ_COMMON_GEOBUBBLE_TEXT:"Geographic Bubble Chart",VIZ_COMMON_RECTANGLECOLOR:"Area Color",VIZ_COMMON_AREANAME:"Area Name",VIZ_COMMON_SECONDARY_XAXIS:"X Axis2",VIZ_COMMON_CROSSTAB_TEXT:"Crosstab",VIZ_COMMON_BAR_TEXT:"Bar Chart",VIZ_COMMON_STACKED_BAR_TEXT:"Stacked Bar Chart",VIZ_COMMON_BUBBLE_TEXT:"Bubble Chart",VIZ_COMMON_ADD_ONE_DIMENSION:"Add one Dimension",VIZ_COMMON_DUAL_COMBINATION_TEXT:"Combined Column Line Chart With 2 Y-Axes",VIZ_COMMON_NONE:"None",VIZ_COMMON_MIN_OF:"Minimum of",VIZ_COMMON_REGION:"Region",VIZ_COMMON_TABLE_DIMENSION:"Rows Axis",VIZ_COMMON_SUBTOTALS:"SUBTOTALS",VIZ_COMMON_COMBINATION_TEXT:"Combined Column Line Chart",VIZ_COMMON_COLUMN_TEXT:"Column Chart",VIZ_COMMON_SUM:"Sum",VIZ_COMMON_PIE_WITH_DEPTH_TEXT:"Pie With Variable Slice Depth",VIZ_COMMON_DONUT_TEXT:"Donut Chart",VIZ_COMMON_INVALID_SERIALIZATION_PACKAGE:"Invalid serialization package",VIZ_COMMON_SECONDARY_AREANAME:"Area Name2",}});sap.viz.extapi.env.Language.register({id:'zh_TW',value: {VIZ_CHART_BACK:"Back",VIZ_CHART_ADD_EVENT_FAILED:"Failed to add chart event callback:",VIZ_CHART_UPDATE_CSS_FAILED:"Failed to update chart css:",VIZ_CHART_XAXIS_RANGE:"X Axis Range",VIZ_CHART_EXPORTSVG_FAILED:"Failed to export to svg string.",VIZ_CHART_TITLE_CONTEXT_MENU_EDIT:"Rename",VIZ_CHART_INCOMPLETE_DESCRIPTION:"Add more measures or dimensions",VIZ_CHART_END:"End",VIZ_CHART_UPDATE_PROPERTIES_FAILED:"Failed to update chart properties:",VIZ_CHART_GRADIENT:"Gradient",VIZ_CHART_TRIGGER_ACTION_FAILED:"Failed to trigger chart action:",VIZ_CHART_UPDATE_CHART_FAILED:"Failed to update chart:",VIZ_CHART_ESRI_MAP_AUTHENTICATION_FAIL:"Esri Authentication Fail",VIZ_CHART_START:"Start",VIZ_CHART_XAXIS2_RANGE:"X Axis2 Range",VIZ_CHART_AXIS_ZOOM:"Zoom",VIZ_CHART_XAXIS1_RANGE:"X Axis1 Range",VIZ_CHART_NO_DATA_MATCHES_YOUR_FILTER:"No data matches your filter(s)",VIZ_CHART_ESRI_SERVICES_UNACCESSIBLE:"An unknown error has occurred while accessing ESRI online services. Check your internet connection.",VIZ_CHART_UPDATE_FEEDING_FAILED:"Failed to update chart feeding:",VIZ_CHART_SEGMENTED:"Segmented",VIZ_CHART_SET_AXIS_RANGE:"Set axis range",VIZ_CHART_TRELLIS_DISABLED_WARN:"The trellis is disabled in either Viz Frame or Feeding Panel",VIZ_CHART_SELECTION_FAILED:"Failed to get/set chart selection:",VIZ_CHART_IMPORT_ESRI_CUSTOM_SERVICE:"Import Esri Custom Service",VIZ_CHART_NEGATIVE_VALUES_INFO:"To display negative values, click the Settings button and select Show Negative Values from the contextual menu.",VIZ_CHART_ESRI_MAP_LOG_ON:"Logging in to Esri now",VIZ_CHART_CREATE_CHART_FAILED:"Failed to create chart:",VIZ_CHART_MEASURE_INCOMPLETE_DESCRIPTION:"Add more measures",VIZ_CHART_FIXED_RANGE:"Fixed",VIZ_CHART_NEXT:"Next",VIZ_CHART_YAXIS_RANGE:"Y Axis Range",VIZ_CHART_RESET:"Reset",VIZ_CHART_UPDATE_DATA_FAILED:"Failed to update chart data:",VIZ_CHART_GEO_INCOMPLETE_DESCRIPTION:"Add more geography dimensions",VIZ_CHART_NO_ESRI_SERVICE:"No feature service was found for your account.",VIZ_CHART_VIZINSTANCE_NOT_CREATED:"VizInstance is not created",VIZ_CHART_TITLE_TEXT_JOIN_BY:"{0} by {1}",VIZ_CHART_INVALID_VIZ_TYPE:"Cannot display this chart: {0}",VIZ_CHART_ESRI_MAP_LOADING:"Loading Esri Map",VIZ_CHART_REMOVE_EVENT_FAILED:"Failed to remove chart event callback:",VIZ_CHART_AUTO_RANGE:"Automatic",VIZ_CHART_NEGATIVE_VALUES_WARN:"Negative values are not shown in this Bubble chart",VIZ_CHART_FEEDINGZONE_FAILED:"Failed to get chart feedingzone:",VIZ_CONTROLS_API_PARAMETER_ERROR:"API parameter error",VIZ_CHART_YAXIS2_RANGE:"Y Axis2 Range",VIZ_CHART_YAXIS1_RANGE:"Y Axis1 Range",VIZ_CHART_TITLE_CONTEXT_MENU_RESTORE:"Restore Default Title",VIZ_CHART_SET_COLOR_LAYER:"Set color to feature layer",VIZ_CHART_DESCRIPTION_FAILED:"Failed to get/set chart description:",VIZ_CHART_TITLE_TEXT_JOIN_AND:"and",VIZ_CHART_DIMENSION_INCOMPLETE_DESCRIPTION:"Add more dimensions",VIZ_CHART_SELECT_DATASET:"Select data set",VIZ_CHART_CONFIRM:"Confirm",VIZ_CHART_SERIALIZE_FAILED:"Failed to serialize chart:",}});sap.viz.extapi.env.Language.register({id:'zh_TW',value: {VIZ_FRAME_FILTERBAR_DESCRIPTION:"Select fields from the dataset to filter",VIZ_FRAME_FILTERMENU_FILTER:"Filter",VIZ_FRAME_CHART_EDITOR:"Chart Editor",VIZ_FRAME_FILTERMENU_EXCLUDE:"Exclude",}});
/*
 * canvg.js - Javascript SVG parser and renderer on Canvas
 * MIT Licensed 
 * Gabe Lerner (gabelerner@gmail.com)
 * http://code.google.com/p/canvg/
 *
 * Requires: rgbcolor.js - http://www.phpied.com/rgb-color-parser-in-javascript/
 */
(function(){
	// canvg(target, s)
	// empty parameters: replace all 'svg' elements on page with 'canvas' elements
	// target: canvas element or the id of a canvas element
	// s: svg string, url to svg file, or xml document
	// opts: optional hash of options
	//		 ignoreMouse: true => ignore mouse events
	//		 ignoreAnimation: true => ignore animations
	//		 ignoreDimensions: true => does not try to resize canvas
	//		 ignoreClear: true => does not clear canvas
	//		 offsetX: int => draws at a x offset
	//		 offsetY: int => draws at a y offset
	//		 scaleWidth: int => scales horizontally to width
	//		 scaleHeight: int => scales vertically to height
	//		 renderCallback: function => will call the function after the first render is completed
	//		 forceRedraw: function => will call the function on every frame, if it returns true, will redraw
	this.canvg = function (target, s, opts) {
		// no parameters
		if (target == null && s == null && opts == null) {
			var svgTags = document.getElementsByTagName('svg');
			for (var i=0; i<svgTags.length; i++) {
				var svgTag = svgTags[i];
				var c = document.createElement('canvas');
				c.width = svgTag.clientWidth;
				c.height = svgTag.clientHeight;
				svgTag.parentNode.insertBefore(c, svgTag);
				svgTag.parentNode.removeChild(svgTag);
				var div = document.createElement('div');
				div.appendChild(svgTag);
				canvg(c, div.innerHTML);
			}
			return;
		}	
		opts = opts || {};
	
		if (typeof target == 'string') {
			target = document.getElementById(target);
		}
		
		// store class on canvas
		if (target.svg != null) target.svg.stop();
		target.svg = svg = build();
		svg.opts = opts;
		
		var ctx = target.getContext('2d');
		if (typeof(s.documentElement) != 'undefined') {
			// load from xml doc
			svg.loadXmlDoc(ctx, s);
		}
		else if (s.substr(0,1) == '<') {
			// load from xml string
			svg.loadXml(ctx, s);
		}
		else {
			// load from url
			svg.load(ctx, s);
		}
	}

	function build() {
		var svg = { };
		
		svg.FRAMERATE = 30;
		svg.MAX_VIRTUAL_PIXELS = 30000;
		
		// globals
		svg.init = function(ctx) {
			svg.Definitions = {};
			svg.Styles = {};
			svg.Animations = [];
			svg.Images = [];
			svg.ctx = ctx;
			svg.ViewPort = new (function () {
				this.viewPorts = [];
				this.Clear = function() { this.viewPorts = []; }
				this.SetCurrent = function(width, height) { this.viewPorts.push({ width: width, height: height }); }
				this.RemoveCurrent = function() { this.viewPorts.pop(); }
				this.Current = function() { return this.viewPorts[this.viewPorts.length - 1]; }
				this.width = function() { return this.Current().width; }
				this.height = function() { return this.Current().height; }
				this.ComputeSize = function(d) {
					if (d != null && typeof(d) == 'number') return d;
					if (d == 'x') return this.width();
					if (d == 'y') return this.height();
					return Math.sqrt(Math.pow(this.width(), 2) + Math.pow(this.height(), 2)) / Math.sqrt(2);			
				}
			});
		}
		svg.init();
		
		// images loaded
		svg.ImagesLoaded = function() { 
			for (var i=0; i<svg.Images.length; i++) {
				if (!svg.Images[i].loaded) return false;
			}
			return true;
		}

		// trim
		svg.trim = function(s) { return s.replace(/^\s+|\s+$/g, ''); }
		
		// compress spaces
		svg.compressSpaces = function(s) { return s.replace(/[\s\r\t\n]+/gm,' '); }
		
		// ajax
		svg.ajax = function(url) {
			var AJAX;
			if(window.XMLHttpRequest){AJAX=new XMLHttpRequest();}
			else{AJAX=new ActiveXObject('Microsoft.XMLHTTP');}
			if(AJAX){
			   AJAX.open('GET',url,false);
			   AJAX.send(null);
			   return AJAX.responseText;
			}
			return null;
		} 
		
		// parse xml
		svg.parseXml = function(xml) {
			if (window.DOMParser)
			{
				var parser = new DOMParser();
				return parser.parseFromString(xml, 'text/xml');
			}
			else 
			{
				xml = xml.replace(/<!DOCTYPE svg[^>]*>/, '');
				var xmlDoc = new ActiveXObject('Microsoft.XMLDOM');
				xmlDoc.async = 'false';
				xmlDoc.loadXML(xml); 
				return xmlDoc;
			}		
		}
		
		svg.Property = function(name, value) {
			this.name = name;
			this.value = value;
		}	
			svg.Property.prototype.getValue = function() {
				return this.value;
			}
		
			svg.Property.prototype.hasValue = function() {
				return (this.value != null && this.value !== '');
			}
							
			// return the numerical value of the property
			svg.Property.prototype.numValue = function() {
				if (!this.hasValue()) return 0;
				
				var n = parseFloat(this.value);
				if ((this.value + '').match(/%$/)) {
					n = n / 100.0;
				}
				return n;
			}
			
			svg.Property.prototype.valueOrDefault = function(def) {
				if (this.hasValue()) return this.value;
				return def;
			}
			
			svg.Property.prototype.numValueOrDefault = function(def) {
				if (this.hasValue()) return this.numValue();
				return def;
			}
			
			// color extensions
				// augment the current color value with the opacity
				svg.Property.prototype.addOpacity = function(opacity) {
					var newValue = this.value;
					if (opacity != null && opacity != '' && typeof(this.value)=='string') { // can only add opacity to colors, not patterns
						var color = new RGBColor(this.value);
						if (color.ok) {
							newValue = 'rgba(' + color.r + ', ' + color.g + ', ' + color.b + ', ' + opacity + ')';
						}
					}
					return new svg.Property(this.name, newValue);
				}
			
			// definition extensions
				// get the definition from the definitions table
				svg.Property.prototype.getDefinition = function() {
					var name = this.value.replace(/^(url\()?#([^\)]+)\)?$/, '$2');
					return svg.Definitions[name];
				}
				
				svg.Property.prototype.isUrlDefinition = function() {
					return this.value.indexOf('url(') == 0
				}
				
				svg.Property.prototype.getFillStyleDefinition = function(e) {
					var def = this.getDefinition();
					
					// gradient
					if (def != null && def.createGradient) {
						return def.createGradient(svg.ctx, e);
					}
					
					// pattern
					if (def != null && def.createPattern) {
						return def.createPattern(svg.ctx, e);
					}
					
					return null;
				}
			
			// length extensions
				svg.Property.prototype.getDPI = function(viewPort) {
					return 96.0; // TODO: compute?
				}
				
				svg.Property.prototype.getEM = function(viewPort) {
					var em = 12;
					
					var fontSize = new svg.Property('fontSize', svg.Font.Parse(svg.ctx.font).fontSize);
					if (fontSize.hasValue()) em = fontSize.toPixels(viewPort);
					
					return em;
				}
				
				svg.Property.prototype.getUnits = function() {
					var s = this.value+'';
					return s.replace(/[0-9\.\-]/g,'');
				}
			
				// get the length as pixels
				svg.Property.prototype.toPixels = function(viewPort) {
					if (!this.hasValue()) return 0;
					var s = this.value+'';
					if (s.match(/em$/)) return this.numValue() * this.getEM(viewPort);
					if (s.match(/ex$/)) return this.numValue() * this.getEM(viewPort) / 2.0;
					if (s.match(/px$/)) return this.numValue();
					if (s.match(/pt$/)) return this.numValue() * this.getDPI(viewPort) * (1.0 / 72.0);
					if (s.match(/pc$/)) return this.numValue() * 15;
					if (s.match(/cm$/)) return this.numValue() * this.getDPI(viewPort) / 2.54;
					if (s.match(/mm$/)) return this.numValue() * this.getDPI(viewPort) / 25.4;
					if (s.match(/in$/)) return this.numValue() * this.getDPI(viewPort);
					if (s.match(/%$/)) return this.numValue() * svg.ViewPort.ComputeSize(viewPort);
					return this.numValue();
				}

			// time extensions
				// get the time as milliseconds
				svg.Property.prototype.toMilliseconds = function() {
					if (!this.hasValue()) return 0;
					var s = this.value+'';
					if (s.match(/s$/)) return this.numValue() * 1000;
					if (s.match(/ms$/)) return this.numValue();
					return this.numValue();
				}
			
			// angle extensions
				// get the angle as radians
				svg.Property.prototype.toRadians = function() {
					if (!this.hasValue()) return 0;
					var s = this.value+'';
					if (s.match(/deg$/)) return this.numValue() * (Math.PI / 180.0);
					if (s.match(/grad$/)) return this.numValue() * (Math.PI / 200.0);
					if (s.match(/rad$/)) return this.numValue();
					return this.numValue() * (Math.PI / 180.0);
				}
		
		// fonts
		svg.Font = new (function() {
			this.Styles = 'normal|italic|oblique|inherit';
			this.Variants = 'normal|small-caps|inherit';
			this.Weights = 'normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit';
			
			this.CreateFont = function(fontStyle, fontVariant, fontWeight, fontSize, fontFamily, inherit) { 
				var f = inherit != null ? this.Parse(inherit) : this.CreateFont('', '', '', '', '', svg.ctx.font);
				return { 
					fontFamily: fontFamily || f.fontFamily, 
					fontSize: fontSize || f.fontSize, 
					fontStyle: fontStyle || f.fontStyle, 
					fontWeight: fontWeight || f.fontWeight, 
					fontVariant: fontVariant || f.fontVariant,
					toString: function () { return [this.fontStyle, this.fontVariant, this.fontWeight, this.fontSize, this.fontFamily].join(' ') } 
				} 
			}
			
			var that = this;
			this.Parse = function(s) {
				var f = {};
				var d = svg.trim(svg.compressSpaces(s || '')).split(' ');
				var set = { fontSize: false, fontStyle: false, fontWeight: false, fontVariant: false }
				var ff = '';
				for (var i=0; i<d.length; i++) {
					if (!set.fontStyle && that.Styles.indexOf(d[i]) != -1) { if (d[i] != 'inherit') f.fontStyle = d[i]; set.fontStyle = true; }
					else if (!set.fontVariant && that.Variants.indexOf(d[i]) != -1) { if (d[i] != 'inherit') f.fontVariant = d[i]; set.fontStyle = set.fontVariant = true;	}
					else if (!set.fontWeight && that.Weights.indexOf(d[i]) != -1) {	if (d[i] != 'inherit') f.fontWeight = d[i]; set.fontStyle = set.fontVariant = set.fontWeight = true; }
					else if (!set.fontSize) { if (d[i] != 'inherit') f.fontSize = d[i].split('/')[0]; set.fontStyle = set.fontVariant = set.fontWeight = set.fontSize = true; }
					else { if (d[i] != 'inherit') ff += d[i]; }
				} if (ff != '') f.fontFamily = ff;
				return f;
			}
		});
		
		// points and paths
		svg.ToNumberArray = function(s) {
			var a = svg.trim(svg.compressSpaces((s || '').replace(/,/g, ' '))).split(' ');
			for (var i=0; i<a.length; i++) {
				a[i] = parseFloat(a[i]);
			}
			return a;
		}		
		svg.Point = function(x, y) {
			this.x = x;
			this.y = y;
		}	
			svg.Point.prototype.angleTo = function(p) {
				return Math.atan2(p.y - this.y, p.x - this.x);
			}
			
			svg.Point.prototype.applyTransform = function(v) {
				var xp = this.x * v[0] + this.y * v[2] + v[4];
				var yp = this.x * v[1] + this.y * v[3] + v[5];
				this.x = xp;
				this.y = yp;
			}

		svg.CreatePoint = function(s) {
			var a = svg.ToNumberArray(s);
			return new svg.Point(a[0], a[1]);
		}
		svg.CreatePath = function(s) {
			var a = svg.ToNumberArray(s);
			var path = [];
			for (var i=0; i<a.length; i+=2) {
				path.push(new svg.Point(a[i], a[i+1]));
			}
			return path;
		}
		
		// bounding box
		svg.BoundingBox = function(x1, y1, x2, y2) { // pass in initial points if you want
			this.x1 = Number.NaN;
			this.y1 = Number.NaN;
			this.x2 = Number.NaN;
			this.y2 = Number.NaN;
			
			this.x = function() { return this.x1; }
			this.y = function() { return this.y1; }
			this.width = function() { return this.x2 - this.x1; }
			this.height = function() { return this.y2 - this.y1; }
			
			this.addPoint = function(x, y) {	
				if (x != null) {
					if (isNaN(this.x1) || isNaN(this.x2)) {
						this.x1 = x;
						this.x2 = x;
					}
					if (x < this.x1) this.x1 = x;
					if (x > this.x2) this.x2 = x;
				}
			
				if (y != null) {
					if (isNaN(this.y1) || isNaN(this.y2)) {
						this.y1 = y;
						this.y2 = y;
					}
					if (y < this.y1) this.y1 = y;
					if (y > this.y2) this.y2 = y;
				}
			}			
			this.addX = function(x) { this.addPoint(x, null); }
			this.addY = function(y) { this.addPoint(null, y); }
			
			this.addBoundingBox = function(bb) {
				this.addPoint(bb.x1, bb.y1);
				this.addPoint(bb.x2, bb.y2);
			}
			
			this.addQuadraticCurve = function(p0x, p0y, p1x, p1y, p2x, p2y) {
				var cp1x = p0x + 2/3 * (p1x - p0x); // CP1 = QP0 + 2/3 *(QP1-QP0)
				var cp1y = p0y + 2/3 * (p1y - p0y); // CP1 = QP0 + 2/3 *(QP1-QP0)
				var cp2x = cp1x + 1/3 * (p2x - p0x); // CP2 = CP1 + 1/3 *(QP2-QP0)
				var cp2y = cp1y + 1/3 * (p2y - p0y); // CP2 = CP1 + 1/3 *(QP2-QP0)
				this.addBezierCurve(p0x, p0y, cp1x, cp2x, cp1y,	cp2y, p2x, p2y);
			}
			
			this.addBezierCurve = function(p0x, p0y, p1x, p1y, p2x, p2y, p3x, p3y) {
				// from http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html
				var p0 = [p0x, p0y], p1 = [p1x, p1y], p2 = [p2x, p2y], p3 = [p3x, p3y];
				this.addPoint(p0[0], p0[1]);
				this.addPoint(p3[0], p3[1]);
				
				for (i=0; i<=1; i++) {
					var f = function(t) { 
						return Math.pow(1-t, 3) * p0[i]
						+ 3 * Math.pow(1-t, 2) * t * p1[i]
						+ 3 * (1-t) * Math.pow(t, 2) * p2[i]
						+ Math.pow(t, 3) * p3[i];
					}
					
					var b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];
					var a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];
					var c = 3 * p1[i] - 3 * p0[i];
					
					if (a == 0) {
						if (b == 0) continue;
						var t = -c / b;
						if (0 < t && t < 1) {
							if (i == 0) this.addX(f(t));
							if (i == 1) this.addY(f(t));
						}
						continue;
					}
					
					var b2ac = Math.pow(b, 2) - 4 * c * a;
					if (b2ac < 0) continue;
					var t1 = (-b + Math.sqrt(b2ac)) / (2 * a);
					if (0 < t1 && t1 < 1) {
						if (i == 0) this.addX(f(t1));
						if (i == 1) this.addY(f(t1));
					}
					var t2 = (-b - Math.sqrt(b2ac)) / (2 * a);
					if (0 < t2 && t2 < 1) {
						if (i == 0) this.addX(f(t2));
						if (i == 1) this.addY(f(t2));
					}
				}
			}
			
			this.isPointInBox = function(x, y) {
				return (this.x1 <= x && x <= this.x2 && this.y1 <= y && y <= this.y2);
			}
			
			this.addPoint(x1, y1);
			this.addPoint(x2, y2);
		}
		
		// transforms
		svg.Transform = function(v) {	
			var that = this;
			this.Type = {}
		
			// translate
			this.Type.translate = function(s) {
				this.p = svg.CreatePoint(s);			
				this.apply = function(ctx) {
					ctx.translate(this.p.x || 0.0, this.p.y || 0.0);
				}
				this.applyToPoint = function(p) {
					p.applyTransform([1, 0, 0, 1, this.p.x || 0.0, this.p.y || 0.0]);
				}
			}
			
			// rotate
			this.Type.rotate = function(s) {
				var a = svg.ToNumberArray(s);
				this.angle = new svg.Property('angle', a[0]);
				this.cx = a[1] || 0;
				this.cy = a[2] || 0;
				this.apply = function(ctx) {
					ctx.translate(this.cx, this.cy);
					ctx.rotate(this.angle.toRadians());
					ctx.translate(-this.cx, -this.cy);
				}
				this.applyToPoint = function(p) {
					var a = this.angle.toRadians();
					p.applyTransform([1, 0, 0, 1, this.p.x || 0.0, this.p.y || 0.0]);
					p.applyTransform([Math.cos(a), Math.sin(a), -Math.sin(a), Math.cos(a), 0, 0]);
					p.applyTransform([1, 0, 0, 1, -this.p.x || 0.0, -this.p.y || 0.0]);
				}			
			}
			
			this.Type.scale = function(s) {
				this.p = svg.CreatePoint(s);
				this.apply = function(ctx) {
					ctx.scale(this.p.x || 1.0, this.p.y || this.p.x || 1.0);
				}
				this.applyToPoint = function(p) {
					p.applyTransform([this.p.x || 0.0, 0, 0, this.p.y || 0.0, 0, 0]);
				}				
			}
			
			this.Type.matrix = function(s) {
				this.m = svg.ToNumberArray(s);
				this.apply = function(ctx) {
					ctx.transform(this.m[0], this.m[1], this.m[2], this.m[3], this.m[4], this.m[5]);
				}
				this.applyToPoint = function(p) {
					p.applyTransform(this.m);
				}					
			}
			
			this.Type.SkewBase = function(s) {
				this.base = that.Type.matrix;
				this.base(s);
				this.angle = new svg.Property('angle', s);
			}
			this.Type.SkewBase.prototype = new this.Type.matrix;
			
			this.Type.skewX = function(s) {
				this.base = that.Type.SkewBase;
				this.base(s);
				this.m = [1, 0, Math.tan(this.angle.toRadians()), 1, 0, 0];
			}
			this.Type.skewX.prototype = new this.Type.SkewBase;
			
			this.Type.skewY = function(s) {
				this.base = that.Type.SkewBase;
				this.base(s);
				this.m = [1, Math.tan(this.angle.toRadians()), 0, 1, 0, 0];
			}
			this.Type.skewY.prototype = new this.Type.SkewBase;
		
			this.transforms = [];
			
			this.apply = function(ctx) {
				for (var i=0; i<this.transforms.length; i++) {
					this.transforms[i].apply(ctx);
				}
			}
			
			this.applyToPoint = function(p) {
				for (var i=0; i<this.transforms.length; i++) {
					this.transforms[i].applyToPoint(p);
				}
			}
			
			var data = svg.trim(svg.compressSpaces(v)).split(/\s(?=[a-z])/);
			for (var i=0; i<data.length; i++) {
				var type = data[i].split('(')[0];
				var s = data[i].split('(')[1].replace(')','');
				var transform = new this.Type[type](s);
				this.transforms.push(transform);
			}
		}
		
		// aspect ratio
		svg.AspectRatio = function(ctx, aspectRatio, width, desiredWidth, height, desiredHeight, minX, minY, refX, refY) {
			// aspect ratio - http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute
			aspectRatio = svg.compressSpaces(aspectRatio);
			aspectRatio = aspectRatio.replace(/^defer\s/,''); // ignore defer
			var align = aspectRatio.split(' ')[0] || 'xMidYMid';
			var meetOrSlice = aspectRatio.split(' ')[1] || 'meet';					
	
			// calculate scale
			var scaleX = width / desiredWidth;
			var scaleY = height / desiredHeight;
			var scaleMin = Math.min(scaleX, scaleY);
			var scaleMax = Math.max(scaleX, scaleY);
			if (meetOrSlice == 'meet') { desiredWidth *= scaleMin; desiredHeight *= scaleMin; }
			if (meetOrSlice == 'slice') { desiredWidth *= scaleMax; desiredHeight *= scaleMax; }	
			
			refX = new svg.Property('refX', refX);
			refY = new svg.Property('refY', refY);
			if (refX.hasValue() && refY.hasValue()) {				
				ctx.translate(-scaleMin * refX.toPixels('x'), -scaleMin * refY.toPixels('y'));
			} 
			else {					
				// align
				if (align.match(/^xMid/) && ((meetOrSlice == 'meet' && scaleMin == scaleY) || (meetOrSlice == 'slice' && scaleMax == scaleY))) ctx.translate(width / 2.0 - desiredWidth / 2.0, 0); 
				if (align.match(/YMid$/) && ((meetOrSlice == 'meet' && scaleMin == scaleX) || (meetOrSlice == 'slice' && scaleMax == scaleX))) ctx.translate(0, height / 2.0 - desiredHeight / 2.0); 
				if (align.match(/^xMax/) && ((meetOrSlice == 'meet' && scaleMin == scaleY) || (meetOrSlice == 'slice' && scaleMax == scaleY))) ctx.translate(width - desiredWidth, 0); 
				if (align.match(/YMax$/) && ((meetOrSlice == 'meet' && scaleMin == scaleX) || (meetOrSlice == 'slice' && scaleMax == scaleX))) ctx.translate(0, height - desiredHeight); 
			}
			
			// scale
			if (align == 'none') ctx.scale(scaleX, scaleY);
			else if (meetOrSlice == 'meet') ctx.scale(scaleMin, scaleMin); 
			else if (meetOrSlice == 'slice') ctx.scale(scaleMax, scaleMax); 	
			
			// translate
			ctx.translate(minX == null ? 0 : -minX, minY == null ? 0 : -minY);			
		}
		
		// elements
		svg.Element = {}
		
		svg.EmptyProperty = new svg.Property('EMPTY', '');
		
		svg.Element.ElementBase = function(node) {	
			this.attributes = {};
			this.styles = {};
			this.children = [];
			
			// get or create attribute
			this.attribute = function(name, createIfNotExists) {
				var a = this.attributes[name];
				if (a != null) return a;
							
				if (createIfNotExists == true) { a = new svg.Property(name, ''); this.attributes[name] = a; }
				return a || svg.EmptyProperty;
			}
			
			// get or create style, crawls up node tree
			this.style = function(name, createIfNotExists) {
				var s = this.styles[name];
				if (s != null) return s;
				
				var a = this.attribute(name);
				if (a != null && a.hasValue()) {
					this.styles[name] = a; // move up to me to cache
					return a;
				}
				
				var p = this.parent;
				if (p != null) {
					var ps = p.style(name);
					if (ps != null && ps.hasValue()) {
						return ps;
					}
				}
					
				if (createIfNotExists == true) { s = new svg.Property(name, ''); this.styles[name] = s; }
				return s || svg.EmptyProperty;
			}
			
			// base render
			this.render = function(ctx) {
				// don't render display=none
				if (this.style('display').value == 'none') return;
				
				// don't render visibility=hidden
				if (this.attribute('visibility').value == 'hidden') return;
			
				ctx.save();
					this.setContext(ctx);
						// mask
						if (this.attribute('mask').hasValue()) {
							var mask = this.attribute('mask').getDefinition();
							if (mask != null) mask.apply(ctx, this);
						}
						else if (this.style('filter').hasValue()) {
							var filter = this.style('filter').getDefinition();
							if (filter != null) filter.apply(ctx, this);
						}
						else this.renderChildren(ctx);				
					this.clearContext(ctx);
				ctx.restore();
			}
			
			// base set context
			this.setContext = function(ctx) {
				// OVERRIDE ME!
			}
			
			// base clear context
			this.clearContext = function(ctx) {
				// OVERRIDE ME!
			}			
			
			// base render children
			this.renderChildren = function(ctx) {
				for (var i=0; i<this.children.length; i++) {
					this.children[i].render(ctx);
				}
			}
			
			this.addChild = function(childNode, create) {
				var child = childNode;
				if (create) child = svg.CreateElement(childNode);
				child.parent = this;
				this.children.push(child);			
			}
				
			if (node != null && node.nodeType == 1) { //ELEMENT_NODE
				// add children
				for (var i=0; i<node.childNodes.length; i++) {
					var childNode = node.childNodes[i];
					if (childNode.nodeType == 1) this.addChild(childNode, true); //ELEMENT_NODE
				}
				
				// add attributes
				for (var i=0; i<node.attributes.length; i++) {
					var attribute = node.attributes[i];
					this.attributes[attribute.nodeName] = new svg.Property(attribute.nodeName, attribute.nodeValue);
				}
										
				// add tag styles
				var styles = svg.Styles[node.nodeName];
				if (styles != null) {
					for (var name in styles) {
						this.styles[name] = styles[name];
					}
				}					
				
				// add class styles
				if (this.attribute('class').hasValue()) {
					var classes = svg.compressSpaces(this.attribute('class').value).split(' ');
					for (var j=0; j<classes.length; j++) {
						styles = svg.Styles['.'+classes[j]];
						if (styles != null) {
							for (var name in styles) {
								this.styles[name] = styles[name];
							}
						}
						styles = svg.Styles[node.nodeName+'.'+classes[j]];
						if (styles != null) {
							for (var name in styles) {
								this.styles[name] = styles[name];
							}
						}
					}
				}
				
				// add id styles
				if (this.attribute('id').hasValue()) {
					var styles = svg.Styles['#' + this.attribute('id').value];
					if (styles != null) {
						for (var name in styles) {
							this.styles[name] = styles[name];
						}
					}
				}
				
				// add inline styles
				if (this.attribute('style').hasValue()) {
					var styles = this.attribute('style').value.split(';');
					for (var i=0; i<styles.length; i++) {
						if (svg.trim(styles[i]) != '') {
							var style = styles[i].split(':');
							var name = svg.trim(style[0]);
							var value = svg.trim(style[1]);
							this.styles[name] = new svg.Property(name, value);
						}
					}
				}	

				// add id
				if (this.attribute('id').hasValue()) {
					if (svg.Definitions[this.attribute('id').value] == null) {
						svg.Definitions[this.attribute('id').value] = this;
					}
				}
			}
		}
		
		svg.Element.RenderedElementBase = function(node) {
			this.base = svg.Element.ElementBase;
			this.base(node);
			
			this.setContext = function(ctx) {
				// fill
				if (this.style('fill').isUrlDefinition()) {
					var fs = this.style('fill').getFillStyleDefinition(this);
					if (fs != null) ctx.fillStyle = fs;
				}
				else if (this.style('fill').hasValue()) {
					var fillStyle = this.style('fill');
					if (fillStyle.value == 'currentColor') fillStyle.value = this.style('color').value;
					ctx.fillStyle = (fillStyle.value == 'none' ? 'rgba(0,0,0,0)' : fillStyle.value);
				}
				if (this.style('fill-opacity').hasValue()) {
					var fillStyle = new svg.Property('fill', ctx.fillStyle);
					fillStyle = fillStyle.addOpacity(this.style('fill-opacity').value);
					ctx.fillStyle = fillStyle.value;
				}
									
				// stroke
				if (this.style('stroke').isUrlDefinition()) {
					var fs = this.style('stroke').getFillStyleDefinition(this);
					if (fs != null) ctx.strokeStyle = fs;
				}
				else if (this.style('stroke').hasValue()) {
					var strokeStyle = this.style('stroke');
					if (strokeStyle.value == 'currentColor') strokeStyle.value = this.style('color').value;
					ctx.strokeStyle = (strokeStyle.value == 'none' ? 'rgba(0,0,0,0)' : strokeStyle.value);
				}
				if (this.style('stroke-opacity').hasValue()) {
					var strokeStyle = new svg.Property('stroke', ctx.strokeStyle);
					strokeStyle = strokeStyle.addOpacity(this.style('stroke-opacity').value);
					ctx.strokeStyle = strokeStyle.value;
				}
				if (this.style('stroke-width').hasValue()) ctx.lineWidth = this.style('stroke-width').toPixels();
				if (this.style('stroke-linecap').hasValue()) ctx.lineCap = this.style('stroke-linecap').value;
				if (this.style('stroke-linejoin').hasValue()) ctx.lineJoin = this.style('stroke-linejoin').value;
				if (this.style('stroke-miterlimit').hasValue()) ctx.miterLimit = this.style('stroke-miterlimit').value;

				// font
				if (typeof(ctx.font) != 'undefined') {
					ctx.font = svg.Font.CreateFont( 
						this.style('font-style').value, 
						this.style('font-variant').value, 
						this.style('font-weight').value, 
						this.style('font-size').hasValue() ? this.style('font-size').toPixels() + 'px' : '', 
						this.style('font-family').value).toString();
				}
				
				// transform
				if (this.attribute('transform').hasValue()) { 
					var transform = new svg.Transform(this.attribute('transform').value);
					transform.apply(ctx);
				}
				
				// clip
				if (this.attribute('clip-path').hasValue()) {
					var clip = this.attribute('clip-path').getDefinition();
					if (clip != null) clip.apply(ctx);
				}
				
				// opacity
				if (this.style('opacity').hasValue()) {
					ctx.globalAlpha = this.style('opacity').numValue();
				}
			}		
		}
		svg.Element.RenderedElementBase.prototype = new svg.Element.ElementBase;
		
		svg.Element.PathElementBase = function(node) {
			this.base = svg.Element.RenderedElementBase;
			this.base(node);
			
			this.path = function(ctx) {
				if (ctx != null) ctx.beginPath();
				return new svg.BoundingBox();
			}
			
			this.renderChildren = function(ctx) {
				this.path(ctx);
				svg.Mouse.checkPath(this, ctx);
				if (ctx.fillStyle != '') ctx.fill();
				if (ctx.strokeStyle != '') ctx.stroke();
				
				var markers = this.getMarkers();
				if (markers != null) {
					if (this.style('marker-start').isUrlDefinition()) {
						var marker = this.style('marker-start').getDefinition();
						marker.render(ctx, markers[0][0], markers[0][1]);
					}
					if (this.style('marker-mid').isUrlDefinition()) {
						var marker = this.style('marker-mid').getDefinition();
						for (var i=1;i<markers.length-1;i++) {
							marker.render(ctx, markers[i][0], markers[i][1]);
						}
					}
					if (this.style('marker-end').isUrlDefinition()) {
						var marker = this.style('marker-end').getDefinition();
						marker.render(ctx, markers[markers.length-1][0], markers[markers.length-1][1]);
					}
				}					
			}
			
			this.getBoundingBox = function() {
				return this.path();
			}
			
			this.getMarkers = function() {
				return null;
			}
		}
		svg.Element.PathElementBase.prototype = new svg.Element.RenderedElementBase;
		
		// svg element
		svg.Element.svg = function(node) {
			this.base = svg.Element.RenderedElementBase;
			this.base(node);
			
			this.baseClearContext = this.clearContext;
			this.clearContext = function(ctx) {
				this.baseClearContext(ctx);
				svg.ViewPort.RemoveCurrent();
			}
			
			this.baseSetContext = this.setContext;
			this.setContext = function(ctx) {
				// initial values
				ctx.strokeStyle = 'rgba(0,0,0,0)';
				ctx.lineCap = 'butt';
				ctx.lineJoin = 'miter';
				ctx.miterLimit = 4;			
			
				this.baseSetContext(ctx);
				
				// create new view port
				if (!this.attribute('x').hasValue()) this.attribute('x', true).value = 0;
				if (!this.attribute('y').hasValue()) this.attribute('y', true).value = 0;
				ctx.translate(this.attribute('x').toPixels('x'), this.attribute('y').toPixels('y'));
				
				var width = svg.ViewPort.width();
				var height = svg.ViewPort.height();
				
				if (!this.attribute('width').hasValue()) this.attribute('width', true).value = '100%';
				if (!this.attribute('height').hasValue()) this.attribute('height', true).value = '100%';
				if (typeof(this.root) == 'undefined') {
					width = this.attribute('width').toPixels('x');
					height = this.attribute('height').toPixels('y');
					
					var x = 0;
					var y = 0;
					if (this.attribute('refX').hasValue() && this.attribute('refY').hasValue()) {
						x = -this.attribute('refX').toPixels('x');
						y = -this.attribute('refY').toPixels('y');
					}
					
					ctx.beginPath();
					ctx.moveTo(x, y);
					ctx.lineTo(width, y);
					ctx.lineTo(width, height);
					ctx.lineTo(x, height);
					ctx.closePath();
					ctx.clip();
				}
				svg.ViewPort.SetCurrent(width, height);	
						
				// viewbox
				if (this.attribute('viewBox').hasValue()) {				
					var viewBox = svg.ToNumberArray(this.attribute('viewBox').value);
					var minX = viewBox[0];
					var minY = viewBox[1];
					width = viewBox[2];
					height = viewBox[3];
					
					svg.AspectRatio(ctx,
									this.attribute('preserveAspectRatio').value, 
									svg.ViewPort.width(), 
									width,
									svg.ViewPort.height(),
									height,
									minX,
									minY,
									this.attribute('refX').value,
									this.attribute('refY').value);
										
					svg.ViewPort.RemoveCurrent();	
					svg.ViewPort.SetCurrent(viewBox[2], viewBox[3]);						
				}				
			}
		}
		svg.Element.svg.prototype = new svg.Element.RenderedElementBase;

		// rect element
		svg.Element.rect = function(node) {
			this.base = svg.Element.PathElementBase;
			this.base(node);
			
			this.path = function(ctx) {
				var x = this.attribute('x').toPixels('x');
				var y = this.attribute('y').toPixels('y');
				var width = this.attribute('width').toPixels('x');
				var height = this.attribute('height').toPixels('y');
				var rx = this.attribute('rx').toPixels('x');
				var ry = this.attribute('ry').toPixels('y');
				if (this.attribute('rx').hasValue() && !this.attribute('ry').hasValue()) ry = rx;
				if (this.attribute('ry').hasValue() && !this.attribute('rx').hasValue()) rx = ry;
				
				if (ctx != null) {
					ctx.beginPath();
					ctx.moveTo(x + rx, y);
					ctx.lineTo(x + width - rx, y);
					ctx.quadraticCurveTo(x + width, y, x + width, y + ry)
					ctx.lineTo(x + width, y + height - ry);
					ctx.quadraticCurveTo(x + width, y + height, x + width - rx, y + height)
					ctx.lineTo(x + rx, y + height);
					ctx.quadraticCurveTo(x, y + height, x, y + height - ry)
					ctx.lineTo(x, y + ry);
					ctx.quadraticCurveTo(x, y, x + rx, y)
					ctx.closePath();
				}
				
				return new svg.BoundingBox(x, y, x + width, y + height);
			}
		}
		svg.Element.rect.prototype = new svg.Element.PathElementBase;
		
		// circle element
		svg.Element.circle = function(node) {
			this.base = svg.Element.PathElementBase;
			this.base(node);
			
			this.path = function(ctx) {
				var cx = this.attribute('cx').toPixels('x');
				var cy = this.attribute('cy').toPixels('y');
				var r = this.attribute('r').toPixels();
			
				if (ctx != null) {
					ctx.beginPath();
					ctx.arc(cx, cy, r, 0, Math.PI * 2, true); 
					ctx.closePath();
				}
				
				return new svg.BoundingBox(cx - r, cy - r, cx + r, cy + r);
			}
		}
		svg.Element.circle.prototype = new svg.Element.PathElementBase;	

		// ellipse element
		svg.Element.ellipse = function(node) {
			this.base = svg.Element.PathElementBase;
			this.base(node);
			
			this.path = function(ctx) {
				var KAPPA = 4 * ((Math.sqrt(2) - 1) / 3);
				var rx = this.attribute('rx').toPixels('x');
				var ry = this.attribute('ry').toPixels('y');
				var cx = this.attribute('cx').toPixels('x');
				var cy = this.attribute('cy').toPixels('y');
				
				if (ctx != null) {
					ctx.beginPath();
					ctx.moveTo(cx, cy - ry);
					ctx.bezierCurveTo(cx + (KAPPA * rx), cy - ry,  cx + rx, cy - (KAPPA * ry), cx + rx, cy);
					ctx.bezierCurveTo(cx + rx, cy + (KAPPA * ry), cx + (KAPPA * rx), cy + ry, cx, cy + ry);
					ctx.bezierCurveTo(cx - (KAPPA * rx), cy + ry, cx - rx, cy + (KAPPA * ry), cx - rx, cy);
					ctx.bezierCurveTo(cx - rx, cy - (KAPPA * ry), cx - (KAPPA * rx), cy - ry, cx, cy - ry);
					ctx.closePath();
				}
				
				return new svg.BoundingBox(cx - rx, cy - ry, cx + rx, cy + ry);
			}
		}
		svg.Element.ellipse.prototype = new svg.Element.PathElementBase;			
		
		// line element
		svg.Element.line = function(node) {
			this.base = svg.Element.PathElementBase;
			this.base(node);
			
			this.getPoints = function() {
				return [
					new svg.Point(this.attribute('x1').toPixels('x'), this.attribute('y1').toPixels('y')),
					new svg.Point(this.attribute('x2').toPixels('x'), this.attribute('y2').toPixels('y'))];
			}
								
			this.path = function(ctx) {
				var points = this.getPoints();
				
				if (ctx != null) {
					ctx.beginPath();
					ctx.moveTo(points[0].x, points[0].y);
					ctx.lineTo(points[1].x, points[1].y);
				}
				
				return new svg.BoundingBox(points[0].x, points[0].y, points[1].x, points[1].y);
			}
			
			this.getMarkers = function() {
				var points = this.getPoints();	
				var a = points[0].angleTo(points[1]);
				return [[points[0], a], [points[1], a]];
			}
		}
		svg.Element.line.prototype = new svg.Element.PathElementBase;		
				
		// polyline element
		svg.Element.polyline = function(node) {
			this.base = svg.Element.PathElementBase;
			this.base(node);
			
			this.points = svg.CreatePath(this.attribute('points').value);
			this.path = function(ctx) {
				var bb = new svg.BoundingBox(this.points[0].x, this.points[0].y);
				if (ctx != null) {
					ctx.beginPath();
					ctx.moveTo(this.points[0].x, this.points[0].y);
				}
				for (var i=1; i<this.points.length; i++) {
					bb.addPoint(this.points[i].x, this.points[i].y);
					if (ctx != null) ctx.lineTo(this.points[i].x, this.points[i].y);
				}
				return bb;
			}
			
			this.getMarkers = function() {
				var markers = [];
				for (var i=0; i<this.points.length - 1; i++) {
					markers.push([this.points[i], this.points[i].angleTo(this.points[i+1])]);
				}
				markers.push([this.points[this.points.length-1], markers[markers.length-1][1]]);
				return markers;
			}			
		}
		svg.Element.polyline.prototype = new svg.Element.PathElementBase;				
				
		// polygon element
		svg.Element.polygon = function(node) {
			this.base = svg.Element.polyline;
			this.base(node);
			
			this.basePath = this.path;
			this.path = function(ctx) {
				var bb = this.basePath(ctx);
				if (ctx != null) {
					ctx.lineTo(this.points[0].x, this.points[0].y);
					ctx.closePath();
				}
				return bb;
			}
		}
		svg.Element.polygon.prototype = new svg.Element.polyline;

		// path element
		svg.Element.path = function(node) {
			this.base = svg.Element.PathElementBase;
			this.base(node);
					
			var d = this.attribute('d').value;
			// TODO: convert to real lexer based on http://www.w3.org/TR/SVG11/paths.html#PathDataBNF
			d = d.replace(/,/gm,' '); // get rid of all commas
			d = d.replace(/([MmZzLlHhVvCcSsQqTtAa])([MmZzLlHhVvCcSsQqTtAa])/gm,'$1 $2'); // separate commands from commands
			d = d.replace(/([MmZzLlHhVvCcSsQqTtAa])([MmZzLlHhVvCcSsQqTtAa])/gm,'$1 $2'); // separate commands from commands
			d = d.replace(/([MmZzLlHhVvCcSsQqTtAa])([^\s])/gm,'$1 $2'); // separate commands from points
			d = d.replace(/([^\s])([MmZzLlHhVvCcSsQqTtAa])/gm,'$1 $2'); // separate commands from points
			d = d.replace(/([0-9])([+\-])/gm,'$1 $2'); // separate digits when no comma
			d = d.replace(/(\.[0-9]*)(\.)/gm,'$1 $2'); // separate digits when no comma
			d = d.replace(/([Aa](\s+[0-9]+){3})\s+([01])\s*([01])/gm,'$1 $3 $4 '); // shorthand elliptical arc path syntax
			d = svg.compressSpaces(d); // compress multiple spaces
			d = svg.trim(d);
			this.PathParser = new (function(d) {
				this.tokens = d.split(' ');
				
				this.reset = function() {
					this.i = -1;
					this.command = '';
					this.previousCommand = '';
					this.start = new svg.Point(0, 0);
					this.control = new svg.Point(0, 0);
					this.current = new svg.Point(0, 0);
					this.points = [];
					this.angles = [];
				}
								
				this.isEnd = function() {
					return this.i >= this.tokens.length - 1;
				}
				
				this.isCommandOrEnd = function() {
					if (this.isEnd()) return true;
					return this.tokens[this.i + 1].match(/^[A-Za-z]$/) != null;
				}
				
				this.isRelativeCommand = function() {
					switch(this.command)
					{
						case 'm':
						case 'l':
						case 'h':
						case 'v':
						case 'c':
						case 's':
						case 'q':
						case 't':
						case 'a':
						case 'z':
							return true;
							break;
					}
					return false;
				}
							
				this.getToken = function() {
					this.i++;
					return this.tokens[this.i];
				}
				
				this.getScalar = function() {
					return parseFloat(this.getToken());
				}
				
				this.nextCommand = function() {
					this.previousCommand = this.command;
					this.command = this.getToken();
				}				
				
				this.getPoint = function() {
					var p = new svg.Point(this.getScalar(), this.getScalar());
					return this.makeAbsolute(p);
				}
				
				this.getAsControlPoint = function() {
					var p = this.getPoint();
					this.control = p;
					return p;
				}
				
				this.getAsCurrentPoint = function() {
					var p = this.getPoint();
					this.current = p;
					return p;	
				}
				
				this.getReflectedControlPoint = function() {
					if (this.previousCommand.toLowerCase() != 'c' && this.previousCommand.toLowerCase() != 's') {
						return this.current;
					}
					
					// reflect point
					var p = new svg.Point(2 * this.current.x - this.control.x, 2 * this.current.y - this.control.y);					
					return p;
				}
				
				this.makeAbsolute = function(p) {
					if (this.isRelativeCommand()) {
						p.x += this.current.x;
						p.y += this.current.y;
					}
					return p;
				}
				
				this.addMarker = function(p, from, priorTo) {
					// if the last angle isn't filled in because we didn't have this point yet ...
					if (priorTo != null && this.angles.length > 0 && this.angles[this.angles.length-1] == null) {
						this.angles[this.angles.length-1] = this.points[this.points.length-1].angleTo(priorTo);
					}
					this.addMarkerAngle(p, from == null ? null : from.angleTo(p));
				}
				
				this.addMarkerAngle = function(p, a) {
					this.points.push(p);
					this.angles.push(a);
				}				
				
				this.getMarkerPoints = function() { return this.points; }
				this.getMarkerAngles = function() {
					for (var i=0; i<this.angles.length; i++) {
						if (this.angles[i] == null) {
							for (var j=i+1; j<this.angles.length; j++) {
								if (this.angles[j] != null) {
									this.angles[i] = this.angles[j];
									break;
								}
							}
						}
					}
					return this.angles;
				}
			})(d);

			this.path = function(ctx) {
				var pp = this.PathParser;
				pp.reset();

				var bb = new svg.BoundingBox();
				if (ctx != null) ctx.beginPath();
				while (!pp.isEnd()) {
					pp.nextCommand();
					switch (pp.command) {
					case 'M':
					case 'm':
						var p = pp.getAsCurrentPoint();
						pp.addMarker(p);
						bb.addPoint(p.x, p.y);
						if (ctx != null) ctx.moveTo(p.x, p.y);
						pp.start = pp.current;
						while (!pp.isCommandOrEnd()) {
							var p = pp.getAsCurrentPoint();
							pp.addMarker(p, pp.start);
							bb.addPoint(p.x, p.y);
							if (ctx != null) ctx.lineTo(p.x, p.y);
						}
						break;
					case 'L':
					case 'l':
						while (!pp.isCommandOrEnd()) {
							var c = pp.current;
							var p = pp.getAsCurrentPoint();
							pp.addMarker(p, c);
							bb.addPoint(p.x, p.y);
							if (ctx != null) ctx.lineTo(p.x, p.y);
						}
						break;
					case 'H':
					case 'h':
						while (!pp.isCommandOrEnd()) {
							var newP = new svg.Point((pp.isRelativeCommand() ? pp.current.x : 0) + pp.getScalar(), pp.current.y);
							pp.addMarker(newP, pp.current);
							pp.current = newP;
							bb.addPoint(pp.current.x, pp.current.y);
							if (ctx != null) ctx.lineTo(pp.current.x, pp.current.y);
						}
						break;
					case 'V':
					case 'v':
						while (!pp.isCommandOrEnd()) {
							var newP = new svg.Point(pp.current.x, (pp.isRelativeCommand() ? pp.current.y : 0) + pp.getScalar());
							pp.addMarker(newP, pp.current);
							pp.current = newP;
							bb.addPoint(pp.current.x, pp.current.y);
							if (ctx != null) ctx.lineTo(pp.current.x, pp.current.y);
						}
						break;
					case 'C':
					case 'c':
						while (!pp.isCommandOrEnd()) {
							var curr = pp.current;
							var p1 = pp.getPoint();
							var cntrl = pp.getAsControlPoint();
							var cp = pp.getAsCurrentPoint();
							pp.addMarker(cp, cntrl, p1);
							bb.addBezierCurve(curr.x, curr.y, p1.x, p1.y, cntrl.x, cntrl.y, cp.x, cp.y);
							if (ctx != null) ctx.bezierCurveTo(p1.x, p1.y, cntrl.x, cntrl.y, cp.x, cp.y);
						}
						break;
					case 'S':
					case 's':
						while (!pp.isCommandOrEnd()) {
							var curr = pp.current;
							var p1 = pp.getReflectedControlPoint();
							var cntrl = pp.getAsControlPoint();
							var cp = pp.getAsCurrentPoint();
							pp.addMarker(cp, cntrl, p1);
							bb.addBezierCurve(curr.x, curr.y, p1.x, p1.y, cntrl.x, cntrl.y, cp.x, cp.y);
							if (ctx != null) ctx.bezierCurveTo(p1.x, p1.y, cntrl.x, cntrl.y, cp.x, cp.y);
						}
						break;
					case 'Q':
					case 'q':
						while (!pp.isCommandOrEnd()) {
							var curr = pp.current;
							var cntrl = pp.getAsControlPoint();
							var cp = pp.getAsCurrentPoint();
							pp.addMarker(cp, cntrl, cntrl);
							bb.addQuadraticCurve(curr.x, curr.y, cntrl.x, cntrl.y, cp.x, cp.y);
							if (ctx != null) ctx.quadraticCurveTo(cntrl.x, cntrl.y, cp.x, cp.y);
						}
						break;
					case 'T':
					case 't':
						while (!pp.isCommandOrEnd()) {
							var curr = pp.current;
							var cntrl = pp.getReflectedControlPoint();
							pp.control = cntrl;
							var cp = pp.getAsCurrentPoint();
							pp.addMarker(cp, cntrl, cntrl);
							bb.addQuadraticCurve(curr.x, curr.y, cntrl.x, cntrl.y, cp.x, cp.y);
							if (ctx != null) ctx.quadraticCurveTo(cntrl.x, cntrl.y, cp.x, cp.y);
						}
						break;
					case 'A':
					case 'a':
						while (!pp.isCommandOrEnd()) {
						    var curr = pp.current;
							var rx = pp.getScalar();
							var ry = pp.getScalar();
							var xAxisRotation = pp.getScalar() * (Math.PI / 180.0);
							var largeArcFlag = pp.getScalar();
							var sweepFlag = pp.getScalar();
							var cp = pp.getAsCurrentPoint();

							// Conversion from endpoint to center parameterization
							// http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes
							// x1', y1'
							var currp = new svg.Point(
								Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,
								-Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0
							);
							// adjust radii
							var l = Math.pow(currp.x,2)/Math.pow(rx,2)+Math.pow(currp.y,2)/Math.pow(ry,2);
							if (l > 1) {
								rx *= Math.sqrt(l);
								ry *= Math.sqrt(l);
							}
							// cx', cy'
							var s = (largeArcFlag == sweepFlag ? -1 : 1) * Math.sqrt(
								((Math.pow(rx,2)*Math.pow(ry,2))-(Math.pow(rx,2)*Math.pow(currp.y,2))-(Math.pow(ry,2)*Math.pow(currp.x,2))) /
								(Math.pow(rx,2)*Math.pow(currp.y,2)+Math.pow(ry,2)*Math.pow(currp.x,2))
							);
							if (isNaN(s)) s = 0;
							var cpp = new svg.Point(s * rx * currp.y / ry, s * -ry * currp.x / rx);
							// cx, cy
							var centp = new svg.Point(
								(curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,
								(curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y
							);
							// vector magnitude
							var m = function(v) { return Math.sqrt(Math.pow(v[0],2) + Math.pow(v[1],2)); }
							// ratio between two vectors
							var r = function(u, v) { return (u[0]*v[0]+u[1]*v[1]) / (m(u)*m(v)) }
							// angle between two vectors
							var a = function(u, v) { return (u[0]*v[1] < u[1]*v[0] ? -1 : 1) * Math.acos(r(u,v)); }
							// initial angle
							var a1 = a([1,0], [(currp.x-cpp.x)/rx,(currp.y-cpp.y)/ry]);
							// angle delta
							var u = [(currp.x-cpp.x)/rx,(currp.y-cpp.y)/ry];
							var v = [(-currp.x-cpp.x)/rx,(-currp.y-cpp.y)/ry];
							var ad = a(u, v);
							if (r(u,v) <= -1) ad = Math.PI;
							if (r(u,v) >= 1) ad = 0;

							if (sweepFlag == 0 && ad > 0) ad = ad - 2 * Math.PI;
							if (sweepFlag == 1 && ad < 0) ad = ad + 2 * Math.PI;

							// for markers
							var halfWay = new svg.Point(
								centp.x + rx * Math.cos((a1 + (a1 + ad)) / 2),
								centp.y + ry * Math.sin((a1 + (a1 + ad)) / 2)
							);
							pp.addMarkerAngle(halfWay, (a1 + (a1 + ad)) / 2 + (sweepFlag == 0 ? -1 : 1) * Math.PI / 2);
							pp.addMarkerAngle(cp, (a1 + ad) + (sweepFlag == 0 ? -1 : 1) * Math.PI / 2);

							bb.addPoint(cp.x, cp.y); // TODO: this is too naive, make it better
							if (ctx != null) {
								var r = rx > ry ? rx : ry;
								var sx = rx > ry ? 1 : rx / ry;
								var sy = rx > ry ? ry / rx : 1;

								ctx.translate(centp.x, centp.y);
								ctx.rotate(xAxisRotation);
								ctx.scale(sx, sy);
								ctx.arc(0, 0, r, a1, a1 + ad, 1 - sweepFlag);
								ctx.scale(1/sx, 1/sy);
								ctx.rotate(-xAxisRotation);
								ctx.translate(-centp.x, -centp.y);
							}
						}
						break;
					case 'Z':
					case 'z':
						if (ctx != null) ctx.closePath();
						pp.current = pp.start;
					}
				}

				return bb;
			}

			this.getMarkers = function() {
				var points = this.PathParser.getMarkerPoints();
				var angles = this.PathParser.getMarkerAngles();
				
				var markers = [];
				for (var i=0; i<points.length; i++) {
					markers.push([points[i], angles[i]]);
				}
				return markers;
			}
		}
		svg.Element.path.prototype = new svg.Element.PathElementBase;
		
		// pattern element
		svg.Element.pattern = function(node) {
			this.base = svg.Element.ElementBase;
			this.base(node);
			
			this.createPattern = function(ctx, element) {
				// render me using a temporary svg element
				var tempSvg = new svg.Element.svg();
				tempSvg.attributes['viewBox'] = new svg.Property('viewBox', this.attribute('viewBox').value);
				tempSvg.attributes['x'] = new svg.Property('x', this.attribute('x').value);
				tempSvg.attributes['y'] = new svg.Property('y', this.attribute('y').value);
				tempSvg.attributes['width'] = new svg.Property('width', this.attribute('width').value);
				tempSvg.attributes['height'] = new svg.Property('height', this.attribute('height').value);
				tempSvg.children = this.children;
				
				var c = document.createElement('canvas');
				document.body.appendChild(c);
				c.width = this.attribute('width').toPixels('x') + this.attribute('x').toPixels('x');
				c.height = this.attribute('height').toPixels('y')  + this.attribute('y').toPixels('y');
				tempSvg.render(c.getContext('2d'));		
				return ctx.createPattern(c, 'repeat');
			}
		}
		svg.Element.pattern.prototype = new svg.Element.ElementBase;
		
		// marker element
		svg.Element.marker = function(node) {
			this.base = svg.Element.ElementBase;
			this.base(node);
			
			this.baseRender = this.render;
			this.render = function(ctx, point, angle) {
				ctx.translate(point.x, point.y);
				if (this.attribute('orient').valueOrDefault('auto') == 'auto') ctx.rotate(angle);
				if (this.attribute('markerUnits').valueOrDefault('strokeWidth') == 'strokeWidth') ctx.scale(ctx.lineWidth, ctx.lineWidth);
				ctx.save();
							
				// render me using a temporary svg element
				var tempSvg = new svg.Element.svg();
				tempSvg.attributes['viewBox'] = new svg.Property('viewBox', this.attribute('viewBox').value);
				tempSvg.attributes['refX'] = new svg.Property('refX', this.attribute('refX').value);
				tempSvg.attributes['refY'] = new svg.Property('refY', this.attribute('refY').value);
				tempSvg.attributes['width'] = new svg.Property('width', this.attribute('markerWidth').value);
				tempSvg.attributes['height'] = new svg.Property('height', this.attribute('markerHeight').value);
				tempSvg.attributes['fill'] = new svg.Property('fill', this.attribute('fill').valueOrDefault('black'));
				tempSvg.attributes['stroke'] = new svg.Property('stroke', this.attribute('stroke').valueOrDefault('none'));
				tempSvg.children = this.children;
				tempSvg.render(ctx);
				
				ctx.restore();
				if (this.attribute('markerUnits').valueOrDefault('strokeWidth') == 'strokeWidth') ctx.scale(1/ctx.lineWidth, 1/ctx.lineWidth);
				if (this.attribute('orient').valueOrDefault('auto') == 'auto') ctx.rotate(-angle);
				ctx.translate(-point.x, -point.y);
			}
		}
		svg.Element.marker.prototype = new svg.Element.ElementBase;
		
		// definitions element
		svg.Element.defs = function(node) {
			this.base = svg.Element.ElementBase;
			this.base(node);	
			
			this.render = function(ctx) {
				// NOOP
			}
		}
		svg.Element.defs.prototype = new svg.Element.ElementBase;
		
		// base for gradients
		svg.Element.GradientBase = function(node) {
			this.base = svg.Element.ElementBase;
			this.base(node);
			
			this.gradientUnits = this.attribute('gradientUnits').valueOrDefault('objectBoundingBox');
			
			this.stops = [];			
			for (var i=0; i<this.children.length; i++) {
				var child = this.children[i];
				this.stops.push(child);
			}	
			
			this.getGradient = function() {
				// OVERRIDE ME!
			}			

			this.createGradient = function(ctx, element) {
				var stopsContainer = this;
				if (this.attribute('xlink:href').hasValue()) {
					stopsContainer = this.attribute('xlink:href').getDefinition();
				}
			
				var g = this.getGradient(ctx, element);
				if (g == null) return stopsContainer.stops[stopsContainer.stops.length - 1].color;
				for (var i=0; i<stopsContainer.stops.length; i++) {
					g.addColorStop(stopsContainer.stops[i].offset, stopsContainer.stops[i].color);
				}
				
				if (this.attribute('gradientTransform').hasValue()) {
					// render as transformed pattern on temporary canvas
					var rootView = svg.ViewPort.viewPorts[0];
					
					var rect = new svg.Element.rect();
					rect.attributes['x'] = new svg.Property('x', -svg.MAX_VIRTUAL_PIXELS/3.0);
					rect.attributes['y'] = new svg.Property('y', -svg.MAX_VIRTUAL_PIXELS/3.0);
					rect.attributes['width'] = new svg.Property('width', svg.MAX_VIRTUAL_PIXELS);
					rect.attributes['height'] = new svg.Property('height', svg.MAX_VIRTUAL_PIXELS);
					
					var group = new svg.Element.g();
					group.attributes['transform'] = new svg.Property('transform', this.attribute('gradientTransform').value);
					group.children = [ rect ];
					
					var tempSvg = new svg.Element.svg();
					tempSvg.attributes['x'] = new svg.Property('x', 0);
					tempSvg.attributes['y'] = new svg.Property('y', 0);
					tempSvg.attributes['width'] = new svg.Property('width', rootView.width);
					tempSvg.attributes['height'] = new svg.Property('height', rootView.height);
					tempSvg.children = [ group ];
					
					var c = document.createElement('canvas');
					c.width = rootView.width;
					c.height = rootView.height;
					var tempCtx = c.getContext('2d');
					tempCtx.fillStyle = g;
					tempSvg.render(tempCtx);		
					return tempCtx.createPattern(c, 'no-repeat');
				}
				
				return g;				
			}
		}
		svg.Element.GradientBase.prototype = new svg.Element.ElementBase;
		
		// linear gradient element
		svg.Element.linearGradient = function(node) {
			this.base = svg.Element.GradientBase;
			this.base(node);
			
			this.getGradient = function(ctx, element) {
				var bb = element.getBoundingBox();
				
				var x1 = (this.gradientUnits == 'objectBoundingBox' 
					? bb.x() + bb.width() * this.attribute('x1').numValue() 
					: this.attribute('x1').toPixels('x'));
				var y1 = (this.gradientUnits == 'objectBoundingBox' 
					? bb.y() + bb.height() * this.attribute('y1').numValue()
					: this.attribute('y1').toPixels('y'));
				var x2 = (this.gradientUnits == 'objectBoundingBox' 
					? bb.x() + bb.width() * this.attribute('x2').numValue()
					: this.attribute('x2').toPixels('x'));
				var y2 = (this.gradientUnits == 'objectBoundingBox' 
					? bb.y() + bb.height() * this.attribute('y2').numValue()
					: this.attribute('y2').toPixels('y'));

				if (x1 == x2 && y1 == y2) return null;
				return ctx.createLinearGradient(x1, y1, x2, y2);
			}
		}
		svg.Element.linearGradient.prototype = new svg.Element.GradientBase;
		
		// radial gradient element
		svg.Element.radialGradient = function(node) {
			this.base = svg.Element.GradientBase;
			this.base(node);
			
			this.getGradient = function(ctx, element) {
				var bb = element.getBoundingBox();
				
				if (!this.attribute('cx').hasValue()) this.attribute('cx', true).value = '50%';
				if (!this.attribute('cy').hasValue()) this.attribute('cy', true).value = '50%';
				if (!this.attribute('r').hasValue()) this.attribute('r', true).value = '50%';
				
				var cx = (this.gradientUnits == 'objectBoundingBox' 
					? bb.x() + bb.width() * this.attribute('cx').numValue() 
					: this.attribute('cx').toPixels('x'));
				var cy = (this.gradientUnits == 'objectBoundingBox' 
					? bb.y() + bb.height() * this.attribute('cy').numValue() 
					: this.attribute('cy').toPixels('y'));
				
				var fx = cx;
				var fy = cy;
				if (this.attribute('fx').hasValue()) {
					fx = (this.gradientUnits == 'objectBoundingBox' 
					? bb.x() + bb.width() * this.attribute('fx').numValue() 
					: this.attribute('fx').toPixels('x'));
				}
				if (this.attribute('fy').hasValue()) {
					fy = (this.gradientUnits == 'objectBoundingBox' 
					? bb.y() + bb.height() * this.attribute('fy').numValue() 
					: this.attribute('fy').toPixels('y'));
				}
				
				var r = (this.gradientUnits == 'objectBoundingBox' 
					? (bb.width() + bb.height()) / 2.0 * this.attribute('r').numValue()
					: this.attribute('r').toPixels());
				
				return ctx.createRadialGradient(fx, fy, 0, cx, cy, r);
			}
		}
		svg.Element.radialGradient.prototype = new svg.Element.GradientBase;
		
		// gradient stop element
		svg.Element.stop = function(node) {
			this.base = svg.Element.ElementBase;
			this.base(node);
			
			this.offset = this.attribute('offset').numValue();
			
			var stopColor = this.style('stop-color');
			if (this.style('stop-opacity').hasValue()) stopColor = stopColor.addOpacity(this.style('stop-opacity').value);
			this.color = stopColor.value;
		}
		svg.Element.stop.prototype = new svg.Element.ElementBase;
		
		// animation base element
		svg.Element.AnimateBase = function(node) {
			this.base = svg.Element.ElementBase;
			this.base(node);
			
			svg.Animations.push(this);
			
			this.duration = 0.0;
			this.begin = this.attribute('begin').toMilliseconds();
			this.maxDuration = this.begin + this.attribute('dur').toMilliseconds();
			
			this.getProperty = function() {
				var attributeType = this.attribute('attributeType').value;
				var attributeName = this.attribute('attributeName').value;
				
				if (attributeType == 'CSS') {
					return this.parent.style(attributeName, true);
				}
				return this.parent.attribute(attributeName, true);			
			};
			
			this.initialValue = null;
			this.initialUnits = '';
			this.removed = false;			

			this.calcValue = function() {
				// OVERRIDE ME!
				return '';
			}
					
			this.update = function(delta) {	
				// set initial value
				if (this.initialValue == null) {
					this.initialValue = this.getProperty().value;
					this.initialUnits = this.getProperty().getUnits();
				}
			
				// if we're past the end time
				if (this.duration > this.maxDuration) {
					// loop for indefinitely repeating animations
					if (this.attribute('repeatCount').value == 'indefinite') {
						this.duration = 0.0
					}
					else if (this.attribute('fill').valueOrDefault('remove') == 'remove' && !this.removed) {
						this.removed = true;
						this.getProperty().value = this.initialValue;
						return true;
					}
					else {
						return false; // no updates made
					}
				}			
				this.duration = this.duration + delta;
			
				// if we're past the begin time
				var updated = false;
				if (this.begin < this.duration) {
					var newValue = this.calcValue(); // tween
					
					if (this.attribute('type').hasValue()) {
						// for transform, etc.
						var type = this.attribute('type').value;
						newValue = type + '(' + newValue + ')';
					}
					
					this.getProperty().value = newValue;
					updated = true;
				}
				
				return updated;
			}
			
			this.from = this.attribute('from');
			this.to = this.attribute('to');
			this.values = this.attribute('values');
			if (this.values.hasValue()) this.values.value = this.values.value.split(';');
			
			// fraction of duration we've covered
			this.progress = function() {
				var ret = { progress: (this.duration - this.begin) / (this.maxDuration - this.begin) };
				if (this.values.hasValue()) {
					var p = ret.progress * (this.values.value.length - 1);
					var lb = Math.floor(p), ub = Math.ceil(p);
					ret.from = new svg.Property('from', parseFloat(this.values.value[lb]));
					ret.to = new svg.Property('to', parseFloat(this.values.value[ub]));
					ret.progress = (p - lb) / (ub - lb);
				}
				else {
					ret.from = this.from;
					ret.to = this.to;
				}
				return ret;
			}			
		}
		svg.Element.AnimateBase.prototype = new svg.Element.ElementBase;
		
		// animate element
		svg.Element.animate = function(node) {
			this.base = svg.Element.AnimateBase;
			this.base(node);
			
			this.calcValue = function() {
				var p = this.progress();
				
				// tween value linearly
				var newValue = p.from.numValue() + (p.to.numValue() - p.from.numValue()) * p.progress; 
				return newValue + this.initialUnits;
			};
		}
		svg.Element.animate.prototype = new svg.Element.AnimateBase;
			
		// animate color element
		svg.Element.animateColor = function(node) {
			this.base = svg.Element.AnimateBase;
			this.base(node);

			this.calcValue = function() {
				var p = this.progress();
				var from = new RGBColor(p.from.value);
				var to = new RGBColor(p.to.value);
				
				if (from.ok && to.ok) {
					// tween color linearly
					var r = from.r + (to.r - from.r) * p.progress;
					var g = from.g + (to.g - from.g) * p.progress;
					var b = from.b + (to.b - from.b) * p.progress;
					return 'rgb('+parseInt(r,10)+','+parseInt(g,10)+','+parseInt(b,10)+')';
				}
				return this.attribute('from').value;
			};
		}
		svg.Element.animateColor.prototype = new svg.Element.AnimateBase;
		
		// animate transform element
		svg.Element.animateTransform = function(node) {
			this.base = svg.Element.animate;
			this.base(node);
		}
		svg.Element.animateTransform.prototype = new svg.Element.animate;
		
		// font element
		svg.Element.font = function(node) {
			this.base = svg.Element.ElementBase;
			this.base(node);

			this.horizAdvX = this.attribute('horiz-adv-x').numValue();			
			
			this.isRTL = false;
			this.isArabic = false;
			this.fontFace = null;
			this.missingGlyph = null;
			this.glyphs = [];			
			for (var i=0; i<this.children.length; i++) {
				var child = this.children[i];
				if (child.type == 'font-face') {
					this.fontFace = child;
					if (child.style('font-family').hasValue()) {
						svg.Definitions[child.style('font-family').value] = this;
					}
				}
				else if (child.type == 'missing-glyph') this.missingGlyph = child;
				else if (child.type == 'glyph') {
					if (child.arabicForm != '') {
						this.isRTL = true;
						this.isArabic = true;
						if (typeof(this.glyphs[child.unicode]) == 'undefined') this.glyphs[child.unicode] = [];
						this.glyphs[child.unicode][child.arabicForm] = child;
					}
					else {
						this.glyphs[child.unicode] = child;
					}
				}
			}	
		}
		svg.Element.font.prototype = new svg.Element.ElementBase;
		
		// font-face element
		svg.Element.fontface = function(node) {
			this.base = svg.Element.ElementBase;
			this.base(node);	
			
			this.ascent = this.attribute('ascent').value;
			this.descent = this.attribute('descent').value;
			this.unitsPerEm = this.attribute('units-per-em').numValue();				
		}
		svg.Element.fontface.prototype = new svg.Element.ElementBase;
		
		// missing-glyph element
		svg.Element.missingglyph = function(node) {
			this.base = svg.Element.path;
			this.base(node);	
			
			this.horizAdvX = 0;
		}
		svg.Element.missingglyph.prototype = new svg.Element.path;
		
		// glyph element
		svg.Element.glyph = function(node) {
			this.base = svg.Element.path;
			this.base(node);	
			
			this.horizAdvX = this.attribute('horiz-adv-x').numValue();
			this.unicode = this.attribute('unicode').value;
			this.arabicForm = this.attribute('arabic-form').value;
		}
		svg.Element.glyph.prototype = new svg.Element.path;
		
		// text element
		svg.Element.text = function(node) {
			this.base = svg.Element.RenderedElementBase;
			this.base(node);
			
			if (node != null) {
				// add children
				this.children = [];
				for (var i=0; i<node.childNodes.length; i++) {
					var childNode = node.childNodes[i];
					if (childNode.nodeType == 1) { // capture tspan and tref nodes
						this.addChild(childNode, true);
					}
					else if (childNode.nodeType == 3) { // capture text
						this.addChild(new svg.Element.tspan(childNode), false);
					}
				}
			}
			
			this.baseSetContext = this.setContext;
			this.setContext = function(ctx) {
				this.baseSetContext(ctx);
				if (this.style('dominant-baseline').hasValue()) ctx.textBaseline = this.style('dominant-baseline').value;
				if (this.style('alignment-baseline').hasValue()) ctx.textBaseline = this.style('alignment-baseline').value;
			}
			
			this.renderChildren = function(ctx) {
				var textAnchor = this.style('text-anchor').valueOrDefault('start');
				var x = this.attribute('x').toPixels('x');
				var y = this.attribute('y').toPixels('y');
				for (var i=0; i<this.children.length; i++) {
					var child = this.children[i];
				
					if (child.attribute('x').hasValue()) {
						child.x = child.attribute('x').toPixels('x');
					}
					else {
						if (this.attribute('dx').hasValue()) y += this.attribute('dx').toPixels('x');
						if (child.attribute('dx').hasValue()) x += child.attribute('dx').toPixels('x');
						child.x = x;
					}
					
					var childLength = child.measureText(ctx);
					if (textAnchor != 'start' && (i==0 || child.attribute('x').hasValue())) { // new group?
						// loop through rest of children
						var groupLength = childLength;
						for (var j=i+1; j<this.children.length; j++) {
							var childInGroup = this.children[j];
							if (childInGroup.attribute('x').hasValue()) break; // new group
							groupLength += childInGroup.measureText(ctx);
						}
						child.x -= (textAnchor == 'end' ? groupLength : groupLength / 2.0);
					}
					x = child.x + childLength;
					
					if (child.attribute('y').hasValue()) {
						child.y = child.attribute('y').toPixels('y');
					}
					else {
						if (this.attribute('dy').hasValue()) y += this.attribute('dy').toPixels('y');
						if (child.attribute('dy').hasValue()) y += child.attribute('dy').toPixels('y');
						child.y = y;
					}	
					y = child.y;
					
					child.render(ctx);
				}
			}
		}
		svg.Element.text.prototype = new svg.Element.RenderedElementBase;
		
		// text base
		svg.Element.TextElementBase = function(node) {
			this.base = svg.Element.RenderedElementBase;
			this.base(node);
			
			this.getGlyph = function(font, text, i) {
				var c = text[i];
				var glyph = null;
				if (font.isArabic) {
					var arabicForm = 'isolated';
					if ((i==0 || text[i-1]==' ') && i<text.length-2 && text[i+1]!=' ') arabicForm = 'terminal'; 
					if (i>0 && text[i-1]!=' ' && i<text.length-2 && text[i+1]!=' ') arabicForm = 'medial';
					if (i>0 && text[i-1]!=' ' && (i == text.length-1 || text[i+1]==' ')) arabicForm = 'initial';
					if (typeof(font.glyphs[c]) != 'undefined') {
						glyph = font.glyphs[c][arabicForm];
						if (glyph == null && font.glyphs[c].type == 'glyph') glyph = font.glyphs[c];
					}
				}
				else {
					glyph = font.glyphs[c];
				}
				if (glyph == null) glyph = font.missingGlyph;
				return glyph;
			}
			
			this.renderChildren = function(ctx) {
				var customFont = this.parent.style('font-family').getDefinition();
				if (customFont != null) {
					var fontSize = this.parent.style('font-size').numValueOrDefault(svg.Font.Parse(svg.ctx.font).fontSize);
					var fontStyle = this.parent.style('font-style').valueOrDefault(svg.Font.Parse(svg.ctx.font).fontStyle);
					var text = this.getText();
					if (customFont.isRTL) text = text.split("").reverse().join("");
					
					var dx = svg.ToNumberArray(this.parent.attribute('dx').value);
					for (var i=0; i<text.length; i++) {
						var glyph = this.getGlyph(customFont, text, i);
						var scale = fontSize / customFont.fontFace.unitsPerEm;
						ctx.translate(this.x, this.y);
						ctx.scale(scale, -scale);
						var lw = ctx.lineWidth;
						ctx.lineWidth = ctx.lineWidth * customFont.fontFace.unitsPerEm / fontSize;
						if (fontStyle == 'italic') ctx.transform(1, 0, .4, 1, 0, 0);
						glyph.render(ctx);
						if (fontStyle == 'italic') ctx.transform(1, 0, -.4, 1, 0, 0);
						ctx.lineWidth = lw;
						ctx.scale(1/scale, -1/scale);
						ctx.translate(-this.x, -this.y);	
						
						this.x += fontSize * (glyph.horizAdvX || customFont.horizAdvX) / customFont.fontFace.unitsPerEm;
						if (typeof(dx[i]) != 'undefined' && !isNaN(dx[i])) {
							this.x += dx[i];
						}
					}
					return;
				}
			
				if (ctx.strokeStyle != '') ctx.strokeText(svg.compressSpaces(this.getText()), this.x, this.y);
				if (ctx.fillStyle != '') ctx.fillText(svg.compressSpaces(this.getText()), this.x, this.y);
			}
			
			this.getText = function() {
				// OVERRIDE ME
			}
			
			this.measureText = function(ctx) {
				var customFont = this.parent.style('font-family').getDefinition();
				if (customFont != null) {
					var fontSize = this.parent.style('font-size').numValueOrDefault(svg.Font.Parse(svg.ctx.font).fontSize);
					var measure = 0;
					var text = this.getText();
					if (customFont.isRTL) text = text.split("").reverse().join("");
					var dx = svg.ToNumberArray(this.parent.attribute('dx').value);
					for (var i=0; i<text.length; i++) {
						var glyph = this.getGlyph(customFont, text, i);
						measure += (glyph.horizAdvX || customFont.horizAdvX) * fontSize / customFont.fontFace.unitsPerEm;
						if (typeof(dx[i]) != 'undefined' && !isNaN(dx[i])) {
							measure += dx[i];
						}
					}
					return measure;
				}
			
				var textToMeasure = svg.compressSpaces(this.getText());
				if (!ctx.measureText) return textToMeasure.length * 10;
				
				ctx.save();
				this.setContext(ctx);
				var width = ctx.measureText(textToMeasure).width;
				ctx.restore();
				return width;
			}
		}
		svg.Element.TextElementBase.prototype = new svg.Element.RenderedElementBase;
		
		// tspan 
		svg.Element.tspan = function(node) {
			this.base = svg.Element.TextElementBase;
			this.base(node);
			
			this.text = node.nodeType == 3 ? node.nodeValue : // text
						node.childNodes.length > 0 ? node.childNodes[0].nodeValue : // element
						node.text;
			this.getText = function() {
				return this.text;
			}
		}
		svg.Element.tspan.prototype = new svg.Element.TextElementBase;
		
		// tref
		svg.Element.tref = function(node) {
			this.base = svg.Element.TextElementBase;
			this.base(node);
			
			this.getText = function() {
				var element = this.attribute('xlink:href').getDefinition();
				if (element != null) return element.children[0].getText();
			}
		}
		svg.Element.tref.prototype = new svg.Element.TextElementBase;		
		
		// a element
		svg.Element.a = function(node) {
			this.base = svg.Element.TextElementBase;
			this.base(node);
			
			this.hasText = true;
			for (var i=0; i<node.childNodes.length; i++) {
				if (node.childNodes[i].nodeType != 3) this.hasText = false;
			}
			
			// this might contain text
			this.text = this.hasText ? node.childNodes[0].nodeValue : '';
			this.getText = function() {
				return this.text;
			}		

			this.baseRenderChildren = this.renderChildren;
			this.renderChildren = function(ctx) {
				if (this.hasText) {
					// render as text element
					this.baseRenderChildren(ctx);
					var fontSize = new svg.Property('fontSize', svg.Font.Parse(svg.ctx.font).fontSize);
					svg.Mouse.checkBoundingBox(this, new svg.BoundingBox(this.x, this.y - fontSize.toPixels('y'), this.x + this.measureText(ctx), this.y));					
				}
				else {
					// render as temporary group
					var g = new svg.Element.g();
					g.children = this.children;
					g.parent = this;
					g.render(ctx);
				}
			}
			
			this.onclick = function() {
				window.open(this.attribute('xlink:href').value);
			}
			
			this.onmousemove = function() {
				svg.ctx.canvas.style.cursor = 'pointer';
			}
		}
		svg.Element.a.prototype = new svg.Element.TextElementBase;		
		
		// image element
		svg.Element.image = function(node) {
			this.base = svg.Element.RenderedElementBase;
			this.base(node);
			
			var href = this.attribute('xlink:href').value;
			var isSvg = href.match(/\.svg$/)
			
			svg.Images.push(this);
			this.loaded = false;
			if (!isSvg) {
				this.img = document.createElement('img');
				var self = this;
				this.img.onload = function() { self.loaded = true; }
				this.img.onerror = function() { if (console) console.log('ERROR: image "' + href + '" not found'); self.loaded = true; }
				this.img.src = href;
			}
			else {
				this.img = svg.ajax(href);
				this.loaded = true;
			}
			
			this.renderChildren = function(ctx) {
				var x = this.attribute('x').toPixels('x');
				var y = this.attribute('y').toPixels('y');
				
				var width = this.attribute('width').toPixels('x');
				var height = this.attribute('height').toPixels('y');			
				if (width == 0 || height == 0) return;
			
				ctx.save();
				if (isSvg) {
					ctx.drawSvg(this.img, x, y, width, height);
				}
				else {
					ctx.translate(x, y);
					svg.AspectRatio(ctx,
									this.attribute('preserveAspectRatio').value,
									width,
									this.img.width,
									height,
									this.img.height,
									0,
									0);	
					ctx.drawImage(this.img, 0, 0);		
				}
				ctx.restore();
			}
		}
		svg.Element.image.prototype = new svg.Element.RenderedElementBase;
		
		// group element
		svg.Element.g = function(node) {
			this.base = svg.Element.RenderedElementBase;
			this.base(node);
			
			this.getBoundingBox = function() {
				var bb = new svg.BoundingBox();
				for (var i=0; i<this.children.length; i++) {
					bb.addBoundingBox(this.children[i].getBoundingBox());
				}
				return bb;
			};
		}
		svg.Element.g.prototype = new svg.Element.RenderedElementBase;

		// symbol element
		svg.Element.symbol = function(node) {
			this.base = svg.Element.RenderedElementBase;
			this.base(node);
			
			this.baseSetContext = this.setContext;
			this.setContext = function(ctx) {		
				this.baseSetContext(ctx);
				
				// viewbox
				if (this.attribute('viewBox').hasValue()) {				
					var viewBox = svg.ToNumberArray(this.attribute('viewBox').value);
					var minX = viewBox[0];
					var minY = viewBox[1];
					width = viewBox[2];
					height = viewBox[3];
					
					svg.AspectRatio(ctx,
									this.attribute('preserveAspectRatio').value, 
									this.attribute('width').toPixels('x'),
									width,
									this.attribute('height').toPixels('y'),
									height,
									minX,
									minY);

					svg.ViewPort.SetCurrent(viewBox[2], viewBox[3]);						
				}
			}			
		}
		svg.Element.symbol.prototype = new svg.Element.RenderedElementBase;		
			
		// style element
		svg.Element.style = function(node) { 
			this.base = svg.Element.ElementBase;
			this.base(node);
			
			// text, or spaces then CDATA
			var css = node.childNodes[0].nodeValue + (node.childNodes.length > 1 ? node.childNodes[1].nodeValue : '');
			css = css.replace(/(\/\*([^*]|[\r\n]|(\*+([^*\/]|[\r\n])))*\*+\/)|(^[\s]*\/\/.*)/gm, ''); // remove comments
			css = svg.compressSpaces(css); // replace whitespace
			var cssDefs = css.split('}');
			for (var i=0; i<cssDefs.length; i++) {
				if (svg.trim(cssDefs[i]) != '') {
					var cssDef = cssDefs[i].split('{');
					var cssClasses = cssDef[0].split(',');
					var cssProps = cssDef[1].split(';');
					for (var j=0; j<cssClasses.length; j++) {
						var cssClass = svg.trim(cssClasses[j]);
						if (cssClass != '') {
							var props = {};
							for (var k=0; k<cssProps.length; k++) {
								var prop = cssProps[k].indexOf(':');
								var name = cssProps[k].substr(0, prop);
								var value = cssProps[k].substr(prop + 1, cssProps[k].length - prop);
								if (name != null && value != null) {
									props[svg.trim(name)] = new svg.Property(svg.trim(name), svg.trim(value));
								}
							}
							svg.Styles[cssClass] = props;
							if (cssClass == '@font-face') {
								var fontFamily = props['font-family'].value.replace(/"/g,'');
								var srcs = props['src'].value.split(',');
								for (var s=0; s<srcs.length; s++) {
									if (srcs[s].indexOf('format("svg")') > 0) {
										var urlStart = srcs[s].indexOf('url');
										var urlEnd = srcs[s].indexOf(')', urlStart);
										var url = srcs[s].substr(urlStart + 5, urlEnd - urlStart - 6);
										var doc = svg.parseXml(svg.ajax(url));
										var fonts = doc.getElementsByTagName('font');
										for (var f=0; f<fonts.length; f++) {
											var font = svg.CreateElement(fonts[f]);
											svg.Definitions[fontFamily] = font;
										}
									}
								}
							}
						}
					}
				}
			}
		}
		svg.Element.style.prototype = new svg.Element.ElementBase;
		
		// use element 
		svg.Element.use = function(node) {
			this.base = svg.Element.RenderedElementBase;
			this.base(node);
			
			this.baseSetContext = this.setContext;
			this.setContext = function(ctx) {
				this.baseSetContext(ctx);
				if (this.attribute('x').hasValue()) ctx.translate(this.attribute('x').toPixels('x'), 0);
				if (this.attribute('y').hasValue()) ctx.translate(0, this.attribute('y').toPixels('y'));
			}
			
			this.getDefinition = function() {
				var element = this.attribute('xlink:href').getDefinition();
				if (this.attribute('width').hasValue()) element.attribute('width', true).value = this.attribute('width').value;
				if (this.attribute('height').hasValue()) element.attribute('height', true).value = this.attribute('height').value;
				return element;
			}
			
			this.path = function(ctx) {
				var element = this.getDefinition();
				if (element != null) element.path(ctx);
			}
			
			this.renderChildren = function(ctx) {
				var element = this.getDefinition();
				if (element != null) {
					// temporarily detach from parent and render
					var oldParent = element.parent;
					element.parent = null;
					element.render(ctx);
					element.parent = oldParent;
				}
			}
		}
		svg.Element.use.prototype = new svg.Element.RenderedElementBase;
		
		// mask element
		svg.Element.mask = function(node) {
			this.base = svg.Element.ElementBase;
			this.base(node);
						
			this.apply = function(ctx, element) {
				// render as temp svg	
				var x = this.attribute('x').toPixels('x');
				var y = this.attribute('y').toPixels('y');
				var width = this.attribute('width').toPixels('x');
				var height = this.attribute('height').toPixels('y');
				
				// temporarily remove mask to avoid recursion
				var mask = element.attribute('mask').value;
				element.attribute('mask').value = '';
				
					var cMask = document.createElement('canvas');
					cMask.width = x + width;
					cMask.height = y + height;
					var maskCtx = cMask.getContext('2d');
					this.renderChildren(maskCtx);
				
					var c = document.createElement('canvas');
					c.width = x + width;
					c.height = y + height;
					var tempCtx = c.getContext('2d');
					element.render(tempCtx);
					tempCtx.globalCompositeOperation = 'destination-in';
					tempCtx.fillStyle = maskCtx.createPattern(cMask, 'no-repeat');
					tempCtx.fillRect(0, 0, x + width, y + height);
					
					ctx.fillStyle = tempCtx.createPattern(c, 'no-repeat');
					ctx.fillRect(0, 0, x + width, y + height);
					
				// reassign mask
				element.attribute('mask').value = mask;	
			}
			
			this.render = function(ctx) {
				// NO RENDER
			}
		}
		svg.Element.mask.prototype = new svg.Element.ElementBase;
		
		// clip element
		svg.Element.clipPath = function(node) {
			this.base = svg.Element.ElementBase;
			this.base(node);
			
			this.apply = function(ctx) {
				for (var i=0; i<this.children.length; i++) {
					if (this.children[i].path) {
						this.children[i].path(ctx);
						ctx.clip();
					}
				}
			}
			
			this.render = function(ctx) {
				// NO RENDER
			}
		}
		svg.Element.clipPath.prototype = new svg.Element.ElementBase;

		// filters
		svg.Element.filter = function(node) {
			this.base = svg.Element.ElementBase;
			this.base(node);
						
			this.apply = function(ctx, element) {
				// render as temp svg	
				var bb = element.getBoundingBox();
				var x = this.attribute('x').toPixels('x');
				var y = this.attribute('y').toPixels('y');
				if (x == 0 || y == 0) {
					x = bb.x1;
					y = bb.y1;
				}
				var width = this.attribute('width').toPixels('x');
				var height = this.attribute('height').toPixels('y');
				if (width == 0 || height == 0) {
					width = bb.width();
					height = bb.height();
				}
				
				// temporarily remove filter to avoid recursion
				var filter = element.style('filter').value;
				element.style('filter').value = '';
				
				// max filter distance
				var extraPercent = .20;
				var px = extraPercent * width;
				var py = extraPercent * height;
				
				var c = document.createElement('canvas');
				c.width = width + 2*px;
				c.height = height + 2*py;
				var tempCtx = c.getContext('2d');
				tempCtx.translate(-x + px, -y + py);
				element.render(tempCtx);
			
				// apply filters
				for (var i=0; i<this.children.length; i++) {
					this.children[i].apply(tempCtx, 0, 0, width + 2*px, height + 2*py);
				}
				
				// render on me
				ctx.drawImage(c, 0, 0, width + 2*px, height + 2*py, x - px, y - py, width + 2*px, height + 2*py);
				
				// reassign filter
				element.style('filter', true).value = filter;	
			}
			
			this.render = function(ctx) {
				// NO RENDER
			}		
		}
		svg.Element.filter.prototype = new svg.Element.ElementBase;
		
		svg.Element.feGaussianBlur = function(node) {
			this.base = svg.Element.ElementBase;
			this.base(node);	
			
			function make_fgauss(sigma) {
				sigma = Math.max(sigma, 0.01);			      
				var len = Math.ceil(sigma * 4.0) + 1;                     
				mask = [];                               
				for (var i = 0; i < len; i++) {                             
					mask[i] = Math.exp(-0.5 * (i / sigma) * (i / sigma));                                           
				}                                                           
				return mask; 
			}
			
			function normalize(mask) {
				var sum = 0;
				for (var i = 1; i < mask.length; i++) {
					sum += Math.abs(mask[i]);
				}
				sum = 2 * sum + Math.abs(mask[0]);
				for (var i = 0; i < mask.length; i++) {
					mask[i] /= sum;
				}
				return mask;
			}
			
			function convolve_even(src, dst, mask, width, height) {
			  for (var y = 0; y < height; y++) {
				for (var x = 0; x < width; x++) {
				  var a = imGet(src, x, y, width, height, 3)/255;
				  for (var rgba = 0; rgba < 4; rgba++) {					  
					  var sum = mask[0] * (a==0?255:imGet(src, x, y, width, height, rgba)) * (a==0||rgba==3?1:a);
					  for (var i = 1; i < mask.length; i++) {
						var a1 = imGet(src, Math.max(x-i,0), y, width, height, 3)/255;
					    var a2 = imGet(src, Math.min(x+i, width-1), y, width, height, 3)/255;
						sum += mask[i] * 
						  ((a1==0?255:imGet(src, Math.max(x-i,0), y, width, height, rgba)) * (a1==0||rgba==3?1:a1) + 
						   (a2==0?255:imGet(src, Math.min(x+i, width-1), y, width, height, rgba)) * (a2==0||rgba==3?1:a2));
					  }
					  imSet(dst, y, x, height, width, rgba, sum);
				  }			  
				}
			  }
			}		

			function imGet(img, x, y, width, height, rgba) {
				return img[y*width*4 + x*4 + rgba];
			}
			
			function imSet(img, x, y, width, height, rgba, val) {
				img[y*width*4 + x*4 + rgba] = val;
			}
						
			function blur(ctx, width, height, sigma)
			{
				var srcData = ctx.getImageData(0, 0, width, height);
				var mask = make_fgauss(sigma);
				mask = normalize(mask);
				tmp = [];
				convolve_even(srcData.data, tmp, mask, width, height);
				convolve_even(tmp, srcData.data, mask, height, width);
				ctx.clearRect(0, 0, width, height);
				ctx.putImageData(srcData, 0, 0);
			}			
		
			this.apply = function(ctx, x, y, width, height) {
				// assuming x==0 && y==0 for now
				blur(ctx, width, height, this.attribute('stdDeviation').numValue());
			}
		}
		svg.Element.filter.prototype = new svg.Element.feGaussianBlur;
		
		// title element, do nothing
		svg.Element.title = function(node) {
		}
		svg.Element.title.prototype = new svg.Element.ElementBase;

		// desc element, do nothing
		svg.Element.desc = function(node) {
		}
		svg.Element.desc.prototype = new svg.Element.ElementBase;		
		
		svg.Element.MISSING = function(node) {
			if (console) console.log('ERROR: Element \'' + node.nodeName + '\' not yet implemented.');
		}
		svg.Element.MISSING.prototype = new svg.Element.ElementBase;
		
		// element factory
		svg.CreateElement = function(node) {	
			var className = node.nodeName.replace(/^[^:]+:/,''); // remove namespace
			className = className.replace(/\-/g,''); // remove dashes
			var e = null;
			if (typeof(svg.Element[className]) != 'undefined') {
				e = new svg.Element[className](node);
			}
			else {
				e = new svg.Element.MISSING(node);
			}

			e.type = node.nodeName;
			return e;
		}
				
		// load from url
		svg.load = function(ctx, url) {
			svg.loadXml(ctx, svg.ajax(url));
		}
		
		// load from xml
		svg.loadXml = function(ctx, xml) {
			svg.loadXmlDoc(ctx, svg.parseXml(xml));
		}
		
		svg.loadXmlDoc = function(ctx, dom) {
			svg.init(ctx);
			
			var mapXY = function(p) {
				var e = ctx.canvas;
				while (e) {
					p.x -= e.offsetLeft;
					p.y -= e.offsetTop;
					e = e.offsetParent;
				}
				if (window.scrollX) p.x += window.scrollX;
				if (window.scrollY) p.y += window.scrollY;
				return p;
			}
			
			// bind mouse
			if (svg.opts['ignoreMouse'] != true) {
				ctx.canvas.onclick = function(e) {
					var p = mapXY(new svg.Point(e != null ? e.clientX : event.clientX, e != null ? e.clientY : event.clientY));
					svg.Mouse.onclick(p.x, p.y);
				};
				ctx.canvas.onmousemove = function(e) {
					var p = mapXY(new svg.Point(e != null ? e.clientX : event.clientX, e != null ? e.clientY : event.clientY));
					svg.Mouse.onmousemove(p.x, p.y);
				};
			}
		
			var e = svg.CreateElement(dom.documentElement);
			e.root = true;
					
			// render loop
			var isFirstRender = true;
			var draw = function() {
				svg.ViewPort.Clear();
				if (ctx.canvas.parentNode) svg.ViewPort.SetCurrent(ctx.canvas.parentNode.clientWidth, ctx.canvas.parentNode.clientHeight);
			
				if (svg.opts['ignoreDimensions'] != true) {
					// set canvas size
					if (e.style('width').hasValue()) {
						ctx.canvas.width = e.style('width').toPixels('x');
						ctx.canvas.style.width = ctx.canvas.width + 'px';
					}
					if (e.style('height').hasValue()) {
						ctx.canvas.height = e.style('height').toPixels('y');
						ctx.canvas.style.height = ctx.canvas.height + 'px';
					}
				}
				var cWidth = ctx.canvas.clientWidth || ctx.canvas.width;
				var cHeight = ctx.canvas.clientHeight || ctx.canvas.height;
				if (svg.opts['ignoreDimensions'] == true && e.style('width').hasValue() && e.style('height').hasValue()) {
					cWidth = e.style('width').toPixels('x');
					cHeight = e.style('height').toPixels('y');
				}
				svg.ViewPort.SetCurrent(cWidth, cHeight);		
				
				if (svg.opts['offsetX'] != null) e.attribute('x', true).value = svg.opts['offsetX'];
				if (svg.opts['offsetY'] != null) e.attribute('y', true).value = svg.opts['offsetY'];
				if (svg.opts['scaleWidth'] != null && svg.opts['scaleHeight'] != null) {
					var xRatio = 1, yRatio = 1, viewBox = svg.ToNumberArray(e.attribute('viewBox').value);
					if (e.attribute('width').hasValue()) xRatio = e.attribute('width').toPixels('x') / svg.opts['scaleWidth'];
					else if (!isNaN(viewBox[2])) xRatio = viewBox[2] / svg.opts['scaleWidth'];
					if (e.attribute('height').hasValue()) yRatio = e.attribute('height').toPixels('y') / svg.opts['scaleHeight'];
					else if (!isNaN(viewBox[3])) yRatio = viewBox[3] / svg.opts['scaleHeight'];
					
					e.attribute('width', true).value = svg.opts['scaleWidth'];
					e.attribute('height', true).value = svg.opts['scaleHeight'];			
					e.attribute('viewBox', true).value = '0 0 ' + (cWidth * xRatio) + ' ' + (cHeight * yRatio);
					e.attribute('preserveAspectRatio', true).value = 'none';
				}
			
				// clear and render
				if (svg.opts['ignoreClear'] != true) {
					ctx.clearRect(0, 0, cWidth, cHeight);
				}
				e.render(ctx);
				if (isFirstRender) {
					isFirstRender = false;
					if (typeof(svg.opts['renderCallback']) == 'function') svg.opts['renderCallback']();
				}			
			}
			
			var waitingForImages = true;
			if (svg.ImagesLoaded()) {
				waitingForImages = false;
				draw();
			}
			svg.intervalID = setInterval(function() { 
				var needUpdate = false;
				
				if (waitingForImages && svg.ImagesLoaded()) {
					waitingForImages = false;
					needUpdate = true;
				}
			
				// need update from mouse events?
				if (svg.opts['ignoreMouse'] != true) {
					needUpdate = needUpdate | svg.Mouse.hasEvents();
				}
			
				// need update from animations?
				if (svg.opts['ignoreAnimation'] != true) {
					for (var i=0; i<svg.Animations.length; i++) {
						needUpdate = needUpdate | svg.Animations[i].update(1000 / svg.FRAMERATE);
					}
				}
				
				// need update from redraw?
				if (typeof(svg.opts['forceRedraw']) == 'function') {
					if (svg.opts['forceRedraw']() == true) needUpdate = true;
				}
				
				// render if needed
				if (needUpdate) {
					draw();				
					svg.Mouse.runEvents(); // run and clear our events
				}
			}, 1000 / svg.FRAMERATE);
		}
		
		svg.stop = function() {
			if (svg.intervalID) {
				clearInterval(svg.intervalID);
			}
		}
		
		svg.Mouse = new (function() {
			this.events = [];
			this.hasEvents = function() { return this.events.length != 0; }
		
			this.onclick = function(x, y) {
				this.events.push({ type: 'onclick', x: x, y: y, 
					run: function(e) { if (e.onclick) e.onclick(); }
				});
			}
			
			this.onmousemove = function(x, y) {
				this.events.push({ type: 'onmousemove', x: x, y: y,
					run: function(e) { if (e.onmousemove) e.onmousemove(); }
				});
			}			
			
			this.eventElements = [];
			
			this.checkPath = function(element, ctx) {
				for (var i=0; i<this.events.length; i++) {
					var e = this.events[i];
					if (ctx.isPointInPath && ctx.isPointInPath(e.x, e.y)) this.eventElements[i] = element;
				}
			}
			
			this.checkBoundingBox = function(element, bb) {
				for (var i=0; i<this.events.length; i++) {
					var e = this.events[i];
					if (bb.isPointInBox(e.x, e.y)) this.eventElements[i] = element;
				}			
			}
			
			this.runEvents = function() {
				svg.ctx.canvas.style.cursor = '';
				
				for (var i=0; i<this.events.length; i++) {
					var e = this.events[i];
					var element = this.eventElements[i];
					while (element) {
						e.run(element);
						element = element.parent;
					}
				}		
			
				// done running, clear
				this.events = []; 
				this.eventElements = [];
			}
		});
		
		return svg;
	}
})();

if (CanvasRenderingContext2D) {
	CanvasRenderingContext2D.prototype.drawSvg = function(s, dx, dy, dw, dh) {
		canvg(this.canvas, s, { 
			ignoreMouse: true, 
			ignoreAnimation: true, 
			ignoreDimensions: true, 
			ignoreClear: true, 
			offsetX: dx, 
			offsetY: dy, 
			scaleWidth: dw, 
			scaleHeight: dh
		});
	}
}
jQuery.sap.declare('sap.viz.library-all');
jQuery.sap.declare('sap.viz.libs.rgbcolor'); // raw module, declared by SAPUI5 'AllInOne' Builder
jQuery.sap.declare('sap.viz.ui5.container.libs.common.libs.rgbcolor.rgbcolor_static'); // raw module, declared by SAPUI5 'AllInOne' Builder
jQuery.sap.declare('sap.viz.ui5.controls.libs.resources.locale.language_de'); // raw module, declared by SAPUI5 'AllInOne' Builder
jQuery.sap.declare('sap.viz.ui5.controls.libs.resources.locale.language_en'); // raw module, declared by SAPUI5 'AllInOne' Builder
jQuery.sap.declare('sap.viz.ui5.controls.libs.resources.locale.language_es'); // raw module, declared by SAPUI5 'AllInOne' Builder
jQuery.sap.declare('sap.viz.ui5.controls.libs.resources.locale.language_fr'); // raw module, declared by SAPUI5 'AllInOne' Builder
jQuery.sap.declare('sap.viz.ui5.controls.libs.resources.locale.language_hu'); // raw module, declared by SAPUI5 'AllInOne' Builder
jQuery.sap.declare('sap.viz.ui5.controls.libs.resources.locale.language_ja'); // raw module, declared by SAPUI5 'AllInOne' Builder
jQuery.sap.declare('sap.viz.ui5.controls.libs.resources.locale.language_ko'); // raw module, declared by SAPUI5 'AllInOne' Builder
jQuery.sap.declare('sap.viz.ui5.controls.libs.resources.locale.language_pl'); // raw module, declared by SAPUI5 'AllInOne' Builder
jQuery.sap.declare('sap.viz.ui5.controls.libs.resources.locale.language_pt'); // raw module, declared by SAPUI5 'AllInOne' Builder
jQuery.sap.declare('sap.viz.ui5.controls.libs.resources.locale.language_ru'); // raw module, declared by SAPUI5 'AllInOne' Builder
jQuery.sap.declare('sap.viz.ui5.controls.libs.resources.locale.language_zh_CN'); // raw module, declared by SAPUI5 'AllInOne' Builder
jQuery.sap.declare('sap.viz.ui5.controls.libs.resources.locale.language_zh_TW'); // raw module, declared by SAPUI5 'AllInOne' Builder
jQuery.sap.declare('sap.viz.libs.canvg'); // raw module, declared by SAPUI5 'AllInOne' Builder
if ( !jQuery.sap.isDeclared('sap.viz.ui5.VizContainerRenderer') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

jQuery.sap.declare('sap.viz.ui5.VizContainerRenderer'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/VizContainerRenderer",function() {
	"use strict";

	/**
	 * @class VizContainer renderer.
	 * @static
	 */
	var VizContainerRenderer = {};

	/**
	 * Renders the HTML for the given control, using the provided
	 * {@link sap.ui.core.RenderManager}.
	 * 
	 * @param {sap.ui.core.RenderManager}
	 *            oRm the RenderManager that can be used for writing to the render
	 *            output buffer
	 * @param {sap.ui.core.Control}
	 *            oControl an object representation of the control that should be
	 *            rendered
	 */
	VizContainerRenderer.render = function(oRm, oControl) {

		// write the HTML into the render manager
		// oRm.write("<DIV>This is sap.viz.ui5.VizContainer</DIV>");
		oRm.write("<DIV");
		oRm.writeControlData(oControl);

		oRm.addClass("sapVizContainer");
		oRm.writeClasses();
		if (oControl.getWidth()) {
			oRm.addStyle("width", oControl.getWidth());
		} else {
			oRm.addStyle("width", "100%");
		}
		if (oControl.getHeight()) {
			oRm.addStyle("height", oControl.getHeight());
		} else {
			oRm.addStyle("height", "100%");
		}
		oRm.writeStyles();
		oRm.write(">");

		oRm.write("</DIV>");
	};


	return VizContainerRenderer;

}, /* bExport= */ true);

}; // end of sap/viz/ui5/VizContainerRenderer.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.api.env.Format') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

jQuery.sap.declare('sap.viz.ui5.api.env.Format'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/api/env/Format",function() {
	"use strict";

	/**
	 * @class Provides methods set global formatter for VizFrame. 
	 *
	 * @static
	 * @public
	 * @since 1.24.0
	 * @alias sap.viz.ui5.api.env.Format
	 */
	var Format = {};

	/**
	 * Customize the global numeric formatter. If you set a formatter, it will
	 * replace the existing formatter. This function will take effect globally.
	 * 
	 * 
	 * Example:
	 * <pre>
	 * var customerFormatter = {
	 *     format : function(value, pattern) {
	 *         // add your codes here to convert number value to formatted string
	 *         // according to the pattern string
	 *         return formattedString;
	 *     }
	 * };
	 * sap.viz.ui5.api.env.Format.numericFormatter(customerFormatter);
	 * </pre>
	 * 
	 * @param {function}
	 *            formatter
	 * @returns {sap.viz.ui5.api.env.Format}
	 * @public
	 */
	Format.numericFormatter = function(formatter) {
		return sap.viz.api.env.Format.numericFormatter.apply(null, arguments);
	};



	return Format;

}, /* bExport= */ true);

}; // end of sap/viz/ui5/api/env/Format.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.container.VizControlsHelper') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

jQuery.sap.declare('sap.viz.ui5.container.VizControlsHelper'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/container/VizControlsHelper",function() {
	"use strict";

	var VizControlsHelper = {};

	VizControlsHelper.getFeedInstances = function(feeds) {
	    if (feeds) {
	        return sap.viz.ui5.controls.common.feeds.FeedItem.toVizControlsFmt(feeds);
	    } else {
	        return [];
	    }
	};

	VizControlsHelper.updateAxis = function(dimensions, vizType, feeds) {
	    if (!feeds || feeds.length === 0 || !dimensions || dimensions.length === 0) {
	        return;
	    }
	    // Map of dimensions
	    var dimMap = {};
	    dimensions.forEach(function(dim) {
	        dimMap[dim.getName()] = dim;
	    });
	    // Map of feed definations
	    var feedDefsMap = VizControlsHelper.getFeedDefsMap(vizType);

	    // Travesal
	    feeds.forEach(function(feed) {
			var def = feedDefsMap[feed.getUid()];
			if (def.type !== 'Dimension') {
				return;
			}
	        var aaIndex = def.aaIndex;
	        feed.getValues().forEach(function(value) {
	            var dim = dimMap[value];
	            if (dim) {
	                dim.setProperty('axis', aaIndex, true);
	            }
	        });
	    });
	};

	/**
	 * Used in VizContainer only
	 */
	VizControlsHelper.getFakedDataInstance = function(vizType, vizData, feeds) {
	    var getFeedInstances = VizControlsHelper.getFeedInstances;
	    var getDataInstance = VizControlsHelper.getDataInstance;

	    var dataInstance = getDataInstance(vizData);
	    if (dataInstance) {
	        var fs = new sap.viz.controls.services.FakeDataService(vizType, JSON.parse(JSON.stringify(dataInstance.data())), getFeedInstances(feeds));

	        dataInstance = new sap.viz.api.data.CrosstableDataset();
	        dataInstance.data(fs.getVizDataset());
	        return dataInstance;
	    } else {
	        return null;
	    }
	};

	/**
	 * Used in VizContainer only
	 */
	VizControlsHelper.getDataInstance = function(vizData) {
	    if (vizData) {
	        return vizData.getVIZDataset();
	    } else {
	        return null;
	    }
	};

	/**
	 * Used in VizContainer only
	 * Update feeds in sequences of aaIndexs of manifest
	 */
	VizControlsHelper.updateFeedsByAAIndex = function(vizType, feeds) {
	    if (!feeds || feeds.length === 0 || feeds.length === 1) {
	        return feeds;
	    }
	    var vizFeedDefsMap = VizControlsHelper.getFeedDefsMap(vizType);
	    if (vizFeedDefsMap) {
	        feeds.sort(function(f1, f2) {
	            var feedDef1 = vizFeedDefsMap[f1.getUid()];
	            var feedDef2 = vizFeedDefsMap[f2.getUid()];
	            var priority1 = feedDef1.aaIndex ? feedDef1.aaIndex : feedDef1.aaIndex + 1000;
	            var priority2 = feedDef2.aaIndex ? feedDef2.aaIndex : feedDef2.aaIndex + 1000;
	            return priority1 - priority2;
	        });
	    }
	};

	/**
	 * Used in VizContainer only
	 */
	VizControlsHelper.getSwitchBarGroups = function() {
	    var LangManager = sap.viz.controls.common.managers.LangManager;

	    var switchBarGroups = [{
	        "name" : LangManager.get("VIZ_SWITCHBAR_COLUMN_CHARTS"),
	        "types" : [{
	            "id" : "viz/column"
	        }, {
	            "id" : "viz/stacked_column"
	        }, {
	            "id" : "viz/dual_column"
	        }]
	    }, {
	        "name" : LangManager.get("VIZ_SWITCHBAR_LINE_CHARTS"),
	        "types" : [{
	            "id" : "viz/line"
	        }, {
	            "id" : "viz/area"
	        }, {
	            "id" : "viz/combination"
	        }, {
	            "id" : "viz/dual_line"
	        }, {
	            "id" : "viz/dual_combination"
	        }]
	    }, {
	        "name" : LangManager.get("VIZ_SWITCHBAR_PIE_CHARTS"),
	        "types" : [{
	            "id" : "viz/pie"
	        }, {
	            "id" : "viz/donut"
	        }]
	    }, {
	        "name" : LangManager.get("VIZ_SWITCHBAR_SCATTER_CHARTS"),
	        "types" : [{
	            "id" : "viz/scatter"
	        }, {
	            "id" : "viz/bubble"
	        }]
	    }, {
	        "name" : LangManager.get("VIZ_SWITCHBAR_MAP_CHARTS"),
	        "types" : [{
	            "id" : "viz/heatmap"
	        }, {
	            "id" : "viz/treemap"
	        }]
	    }];

	    return switchBarGroups;
	};

	VizControlsHelper.getFeedDefsMap = function(vizType) {
	    var allFeeds;
	    try {
	        allFeeds = sap.viz.api.manifest.Viz.get(vizType)[0].allFeeds();
	    } catch (e) {
	        try {
	            allFeeds = sap.viz.api.metadata.Viz.get(vizType).bindings;
	        } catch (error) {
	            return null;
	        }
	    }
	    var map = {};
	    for (var i = 0; i < allFeeds.length; i++) {
	        map[allFeeds[i].id] = allFeeds[i];
	    }
	    return map;
	};


	return VizControlsHelper;

}, /* bExport= */ true);

}; // end of sap/viz/ui5/container/VizControlsHelper.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.controls.PopoverRenderer') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */
jQuery.sap.declare('sap.viz.ui5.controls.PopoverRenderer'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/controls/PopoverRenderer",function() {
	"use strict";

	/**
	 * @class Chart Popover Renderer.
	 * @static
	 */
	var PopoverRenderer = {

	    /**
	     * Renders the HTML for the given control, using the provided {@link sap.ui.core.RenderManager}.
	     *
	     * @param {sap.ui.core.RenderManager} oRm the RenderManager that can be used for writing to the render output buffer
	     * @param {sap.ui.core.Control} oControl an object representation of the control that should be rendered
	     */
	    render: function (oRm, oControl) {
	        oRm.write("<div");
	        oRm.writeControlData(oControl);
	        oRm.writeClasses();
	        oRm.writeStyles();
	        oRm.write('>');      
	        oRm.write('</div>');
	    }
	};


	return PopoverRenderer;

}, /* bExport= */ true);

}; // end of sap/viz/ui5/controls/PopoverRenderer.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.controls.ResponsiveLegend') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */
jQuery.sap.declare('sap.viz.ui5.controls.ResponsiveLegend'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/controls/ResponsiveLegend",[],
  function(){
    /**
     * Contructor for ResponsiveLegend - must not be used: To get a ResponsiveLegend instance, please use VizFrame.getResponsiveLegend.
     * 
     * @deprecated Since 1.27.
     * @name sap.viz.ui5.controls.ResponsiveLegend
     */
    var ResponsiveLegend = function(){
      //Do not use the constructor
      throw new Error();
    };
    
    ResponsiveLegend.createInstance = function(oControl){
        var oResponsiveLegendControl = jQuery.sap.newObject(this.prototype);
        oResponsiveLegendControl._oLegendControl = oControl;
        return oResponsiveLegendControl;
    };
    
    ResponsiveLegend.prototype._oLegendControl = undefined;
    
    ResponsiveLegend.prototype.show = function(){    
    };
    
    ResponsiveLegend.prototype.hide = function(){
    };
    
    ResponsiveLegend.prototype.setOpenBy = function(openBy){
    };
    
    return ResponsiveLegend;
}, true);

}; // end of sap/viz/ui5/controls/ResponsiveLegend.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.controls.VizFrameRenderer') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

jQuery.sap.declare('sap.viz.ui5.controls.VizFrameRenderer'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/controls/VizFrameRenderer",function() {
	"use strict";

	/**
	 * @class VizFrame renderer.
	 * @static
	 */
	var VizFrameRenderer = {
	};


	/**
	 * Renders the HTML for the given control, using the provided {@link sap.ui.core.RenderManager}.
	 *
	 * @param {sap.ui.core.RenderManager} oRm the RenderManager that can be used for writing to the render output buffer
	 * @param {sap.ui.core.Control} oControl an object representation of the control that should be rendered
	 */
	VizFrameRenderer.render = function(oRm, oControl){		
		// write the HTML into the render manager
		oRm.write("<DIV");
		oRm.writeControlData(oControl);
	
		oRm.addClass("sapVizFrame");
		oRm.writeClasses();
		oRm.addStyle("width", oControl.getWidth());
		oRm.addStyle("height", oControl.getHeight());
		oRm.writeStyles();	
		oRm.write(">");
	
		oRm.write("</DIV>");
	};


	return VizFrameRenderer;

}, /* bExport= */ true);

}; // end of sap/viz/ui5/controls/VizFrameRenderer.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.controls.chartpopover.HeaderBar') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */
jQuery.sap.declare('sap.viz.ui5.controls.chartpopover.HeaderBar'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
jQuery.sap.require('jquery.sap.global'); // unlisted dependency retained
jQuery.sap.require('sap.m.Bar'); // unlisted dependency retained
jQuery.sap.require('sap.m.Button'); // unlisted dependency retained
jQuery.sap.require('sap.m.Label'); // unlisted dependency retained
jQuery.sap.require('sap.ui.core.IconPool'); // unlisted dependency retained
sap.ui.define("sap/viz/ui5/controls/chartpopover/HeaderBar",[
    'jquery.sap.global',
    'sap/m/Bar',
    'sap/m/Button',
    'sap/m/Label',
    'sap/ui/core/IconPool'
    ],
function(jQuery, Bar, Button, Label, IconPool) {

    var HeaderBar = Bar.extend('sap.viz.ui5.controls.chartpopover.HeaderBar', {
        metadata : {
            properties : {
                'showNavButton' : 'boolean',
                'title' : 'string'
            },
            publicMethods : [],
            events : {
                "navButtonPress" : {},
                "closeButtonPress" : {}
            }
        },
        renderer : {}
    });
    
    HeaderBar.prototype.getContentLeft = function() {
        if (!this._oNavButton) {
            this._oNavButton = new Button(this._createId("popoverNavButton"), {
                type : sap.m.ButtonType.Back,
                tooltip : sap.ui.getCore().getLibraryResourceBundle("sap.m").getText("PAGE_NAVBUTTON_TEXT"),
                press : jQuery.proxy(function() {
                    this.fireNavButtonPress();
                }, this)
            }).addStyleClass('viz-controls-chartPopover-backButton');
        }
        this._oNavButton.setVisible(this.getShowNavButton());
        this._oNavButton.onAfterRendering = function(){
            this.focus();
        }
        return [this._oNavButton];
    };

    HeaderBar.prototype.getContentMiddle = function() {
        if (!this._oTitleLabel) {
            this._oTitleLabel = new Label(this._createId('popoverHeaderTitle'));
            this.addAriaLabelledBy(this._oTitleLabel);
        }
        this._oTitleLabel.setText(this.getTitle());
        return [this._oTitleLabel];
    };

    HeaderBar.prototype.getContentRight = function() {
        if (!this._oCloseButton) {
            this._oCloseButton = new Button(this._createId("popoverCloseButton"), {
                icon : IconPool.getIconURI("decline"),
                tooltip : sap.ui.getCore().getLibraryResourceBundle("sap.m").getText("MESSAGEPOPOVER_CLOSE"),
                press : jQuery.proxy(function() {
                    this.fireCloseButtonPress();
                }, this)
            }).addStyleClass('viz-controls-chartPopover-closeButton');
        }
        return [this._oCloseButton];
    };
    
//    HeaderBar.prototype.onBeforeRendering = function () {
//        this.addAriaLabelledBy(this._oTitleLabel);
//    };
    
    HeaderBar.prototype.exit = function() {
        if (this._oCloseButton) {
            this._oCloseButton.destroy();
            this._oCloseButton = null;
        }

        if (this._oTitleLabel) {
            this._oTitleLabel.destroy();
            this._oTitleLabel = null;
        }

        if (this._oNavButton) {
            this._oNavButton.destroy();
            this._oNavButton = null;
        }
    };

    HeaderBar.prototype._createId = function(sId) {
        return this.getId() + "-" + sId;
    };
    
    return HeaderBar;
});

}; // end of sap/viz/ui5/controls/chartpopover/HeaderBar.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.controls.chartpopover.SubActionItemsPage') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */
jQuery.sap.declare('sap.viz.ui5.controls.chartpopover.SubActionItemsPage'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
jQuery.sap.require('jquery.sap.global'); // unlisted dependency retained
jQuery.sap.require('sap.ui.core.Control'); // unlisted dependency retained
sap.ui.define("sap/viz/ui5/controls/chartpopover/SubActionItemsPage",[
    'jquery.sap.global',
    'sap/ui/core/Control'
    ],
function(jQuery, Control) {

    var SubActionItemsPage = Control.extend('sap.viz.ui5.controls.chartpopover.SubActionItemsPage', {
        metadata : {
            properties : {
                items : {
                    type : 'sap.m.ListBase[]'
                }
            }
        },
        renderer : {
            render : function(oRm, oControl) {
                oRm.write('<div');
                oRm.addClass("viz-controls-chartPopover-subActionItemsPage");
                oRm.writeClasses();
                oRm.write('>');
                oRm.renderControl(oControl._oList);
                oRm.write('</div>');
            }
        }
    });

    SubActionItemsPage.prototype.init = function() {
        this._oList = new sap.m.List({
        });
    };
    
    SubActionItemsPage.prototype.onAfterRendering = function() {
        jQuery.sap.delayedCall(10, this, function(){
            this._oList.focus();
        });
    };

    SubActionItemsPage.prototype.exit = function() {
        if (this._oList) {
            this._oList.destroy();
            this._oList = null;
        }
    };

    SubActionItemsPage.prototype.setItems = function(items) {
        this._oList.removeAllItems();
        var item;
        for (var i = 0; i < items.length; i++) {
            item = new sap.m.ActionListItem({
                text : items[i].text,
                press : items[i].press ? items[i].press : function() {
                }
            });
            this._oList.addItem(item);
        }
    };

    SubActionItemsPage.prototype._createId = function(sId) {
        return this.getId() + "-" + sId;
    };
    
    return SubActionItemsPage;
});

}; // end of sap/viz/ui5/controls/chartpopover/SubActionItemsPage.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.controls.charttooltip.ContentPanel') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */
jQuery.sap.declare('sap.viz.ui5.controls.charttooltip.ContentPanel'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
jQuery.sap.require('sap.ui.core.Control'); // unlisted dependency retained
jQuery.sap.require('sap.ui.layout.VerticalLayout'); // unlisted dependency retained
jQuery.sap.require('sap.ui.layout.HorizontalLayout'); // unlisted dependency retained
jQuery.sap.require('sap.m.Label'); // unlisted dependency retained
jQuery.sap.require('sap.m.Text'); // unlisted dependency retained
jQuery.sap.require('sap.m.ObjectNumber'); // unlisted dependency retained
sap.ui.define("sap/viz/ui5/controls/charttooltip/ContentPanel",[
    'sap/ui/core/Control',
    'sap/ui/layout/VerticalLayout',
    'sap/ui/layout/HorizontalLayout',
    'sap/m/Label',
    'sap/m/Text',
    'sap/m/ObjectNumber'
], function(
    Control,
    VerticalLayout,
    HorizontalLayout,
    Label,
    Text,
    ObjectNumber
) {
    "use strict";

    var ContentPanel = Control.extend("sap.viz.ui5.controls.charttooltip.ContentPanel", {
        metadata: {
            properties: {}
        },

        renderer: {
            render: function(oRm, oControl) {
                var sId = oControl.getId();
                oRm.write('<div');
                oRm.writeAttribute("id", sId);
                oRm.addClass("viz-controls-chartTooltip-contentPanel");
                oRm.writeClasses();
                oRm.write('>');
                oRm.renderControl(oControl._oPanel);
                oRm.write('</div>');
            }
        }
    });

    ContentPanel.prototype.init = function() {
        this._oPanel = new VerticalLayout({});
    };

    ContentPanel.prototype.setContent = function(data) {
        var oPanel = this._oPanel;
        oPanel.destroyContent();
        var first = true;
        var that = this;
        data.forEach(function(item, i) {
            if (item.type) {
                var label = new Label({
                    text: item.dataName || item.name
                });

                var secondLabel;
                var secondHl;
                var secondValue;

                var value, dimValue, msrValue, hl;

                var colonLabel = new Label({
                    text: ":"
                });
                colonLabel.addStyleClass("viz-controls-chartTooltip-separator");

                if (item.type.toLowerCase() === "dimension") {
                    var dimText;
                    var dimSecondText;
                    var itemValue = item.value;
                    if (data.timeDimensions && data.timeDimensions.indexOf(i) > -1) {
                        //Time Dimension
                        var fiscalLabels = (item.timeAxis && item.timeAxis.getFiscalUnitLabels &&
                            item.timeAxis.getFiscalUnitLabels());
                        if (fiscalLabels && fiscalLabels.length > 0) {
                            label = new Label({
                                text: fiscalLabels[0]
                            });
                            dimText = itemValue.fiscalyear;
                            if (fiscalLabels.length > 1) {
                                secondLabel = new Label({
                                    text: fiscalLabels[1]
                                });
                                dimSecondText = itemValue.fiscalperiod;
                            }
                        }
                        else {
                            if (itemValue.time && itemValue.time.legnth > itemValue.day.length) {
                                dimText = itemValue.time;
                            } else {
                                dimText = itemValue.day;
                            }
                        }
                    } else {
                        dimText = itemValue;
                    }
                    dimText = (dimText == null) ? that._getNoValueLabel() : dimText;
                    dimValue = new Text({
                        text: dimText
                    });
                    dimValue.addStyleClass("viz-controls-chartTooltip-dimension-value");
                    value = dimValue;

                    if (secondLabel) {
                        dimSecondText = (dimSecondText == null) ? that._getNoValueLabel() : dimSecondText;
                        secondValue = new Text({
                            text: dimSecondText
                        });
                        secondValue.addStyleClass("viz-controls-chartTooltip-dimension-value");
                    }
                } else if (item.type.toLowerCase() === "measure") {
                    var msrText = item.value;
                    if (msrText == null) {
                        msrText = that._getNoValueLabel();
                    }
                    if (item.value !== null) {
                        msrValue = new ObjectNumber({
                            number: msrText,
                            unit: item.unit
                        });
                    } else {
                        msrValue = new ObjectNumber({
                            number: msrText
                        });
                    }
                    msrValue.addStyleClass("viz-controls-chartTooltip-measure-value");
                    value = msrValue;
                }

                label.addStyleClass("viz-controls-chartTooltip-label");
                hl = new HorizontalLayout({
                    content: [label, colonLabel, value]
                });
                if (!first) {
                    hl.addStyleClass("sapUI5TooltipRowSpacing");
                } else {
                    first = false;
                }

                oPanel.addContent(hl);
                if (secondLabel) {
                    secondLabel.addStyleClass("viz-controls-chartTooltip-label");
                    var secondColonLabel = new Label({
                        text: ":"
                    });
                    secondColonLabel.addStyleClass("viz-controls-chartTooltip-separator");
                    secondHl = new HorizontalLayout({
                        content: [secondLabel, secondColonLabel, secondValue]
                    });
                    secondHl.addStyleClass("sapUI5TooltipRowSpacing");
                    oPanel.addContent(secondHl);
                }
            }
        });
    };

    ContentPanel.prototype.exit = function() {
        if (this._oPanel) {
            this._oPanel.destroy();
            this._oPanel = null;
        }
    };

    ContentPanel.prototype._getNoValueLabel = function(){
        return sap.viz.extapi.env.Language.getResourceString("IDS_ISNOVALUE");
    };

    return ContentPanel;
});

}; // end of sap/viz/ui5/controls/charttooltip/ContentPanel.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.controls.charttooltip.TooltipContainer') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */
jQuery.sap.declare('sap.viz.ui5.controls.charttooltip.TooltipContainer'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
jQuery.sap.require('sap.ui.core.Control'); // unlisted dependency retained
sap.ui.define("sap/viz/ui5/controls/charttooltip/TooltipContainer",[
    'sap/ui/core/Control',
    './ContentPanel'
], function(
    Control,
    ContentPanel
) {
    "use strict";

    var TooltipContainer = Control.extend("sap.viz.ui5.controls.charttooltip.TooltipContainer", {
        metadata: {
            properties: {}
        },

        renderer: {
            render: function(oRm, oControl) {
                var sId = oControl.getId();
                oRm.write('<div');
                oRm.writeAttribute("id", sId);
                oRm.addClass("viz-controls-chartTooltip");
                oRm.writeClasses();
                oRm.write('>');
                oRm.renderControl(oControl._oPanel);
                oRm.write('</div>');
            }
        }
    });

    TooltipContainer.prototype.init = function() {
        this._oPanel = new ContentPanel();
    };

    TooltipContainer.prototype.setContent = function(data) {
        this._oPanel.setContent(data);
    };

    TooltipContainer.prototype.exit = function() {
        if (this._oPanel) {
            this._oPanel.destroy();
            this._oPanel = null;
        }
    };

    return TooltipContainer;
});

}; // end of sap/viz/ui5/controls/charttooltip/TooltipContainer.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.controls.common.BaseControlRenderer') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

jQuery.sap.declare('sap.viz.ui5.controls.common.BaseControlRenderer'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/controls/common/BaseControlRenderer",function() {
	"use strict";

	/**
	 * @class BaseControl renderer.
	 * @static
	 */
	var BaseControlRenderer = {
	};


	/**
	 * Renders the HTML for the given control, using the provided {@link sap.ui.core.RenderManager}.
	 *
	 * @param {sap.ui.core.RenderManager} oRm the RenderManager that can be used for writing to the render output buffer
	 * @param {sap.ui.core.Control} oControl an object representation of the control that should be rendered
	 */
	BaseControlRenderer.render = function(oRm, oControl){
	};


	return BaseControlRenderer;

}, /* bExport= */ true);

}; // end of sap/viz/ui5/controls/common/BaseControlRenderer.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.controls.common.feeds.FeedHelper') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

jQuery.sap.declare('sap.viz.ui5.controls.common.feeds.FeedHelper'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/controls/common/feeds/FeedHelper",function() {
    "use strict";

    var FeedHelper = {};

    FeedHelper.getFeedDefsMap = function(vizType) {
        var allFeeds;
        try {
            allFeeds = sap.viz.api.manifest.Viz.get(vizType)[0].allFeeds();
        } catch (e) {
            try {
                allFeeds = sap.viz.api.metadata.Viz.get(vizType).bindings;
            } catch (error) {
                return null;
            }
        }
        var map = {};
        for (var i = 0; i < allFeeds.length; i++) {
            map[allFeeds[i].id] = allFeeds[i];
        }
        return map;
    };

    FeedHelper.updateAxis = function(dimensions, vizType, feeds) {
        if (!feeds || feeds.length === 0 || !dimensions || dimensions.length === 0) {
            return;
        }
        // Map of dimensions
        var dimMap = {};
        dimensions.forEach(function(dim) {
            dimMap[dim.getName()] = dim;
        });
        // Map of feed definations
        var feedDefsMap = FeedHelper.getFeedDefsMap(vizType);

        // Travesal
        feeds.forEach(function(feed) {
            var def = feedDefsMap[feed.getUid()];
            if (def.type !== 'Dimension') {
                return;
            }
            var aaIndex = def.aaIndex;
            feed.getValues().forEach(function(value) {
                var dim = dimMap[value];
                if (dim) {
                    dim.setProperty('axis', aaIndex, true);
                }
            });
        });
    };

    return FeedHelper;
});

}; // end of sap/viz/ui5/controls/common/feeds/FeedHelper.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.controls.common.helpers.RuntimeOptionsHelper') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 * set specific properties to align the Fiori UX standard at runtime according to chart type and feeding  
 */

jQuery.sap.declare('sap.viz.ui5.controls.common.helpers.RuntimeOptionsHelper'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/controls/common/helpers/RuntimeOptionsHelper",function() {
    "use strict";

    var RuntimeOptionsHelper = {};
    
    RuntimeOptionsHelper.decorateFiori = function(options, feeds, vizProp) {
        return RuntimeOptionsHelper._processCategoryTicker(options, feeds, vizProp);
    };

    RuntimeOptionsHelper.processBulletProperty = function(savedOptions, inputOptions){
        var plotArea = inputOptions.plotArea;
        if (plotArea){
            var keys = ['colorPalette', 'actualColor', 'additionalColor', 'forecastColor'];
            for (var i = 0; i < keys.length; ++i){
                 if (plotArea.hasOwnProperty(keys[i]) ){
                    if (plotArea[keys[i]]){
                        savedOptions.plotArea[keys[i]] = plotArea[keys[i]];  
                    }else {
                        delete savedOptions.plotArea[keys[i]];
                    }
                }
            }

        }
    };

    RuntimeOptionsHelper.processWaterfallProperty = function(savedOptions, inputOptions){
        var plotArea = inputOptions.plotArea;
        if (plotArea){
            if (plotArea.dataLabel && plotArea.dataLabel.hasOwnProperty('showRecap')) {
                jQuery.extend(true, savedOptions.plotArea, {
                    dataLabel: {
                        showRecap: plotArea.dataLabel.showRecap
                    }
                });
            } else {
                if (savedOptions.plotArea.dataLabel && 
                    savedOptions.plotArea.dataLabel.hasOwnProperty('showRecap')) {
                    delete savedOptions.plotArea.dataLabel.showRecap;
                }
            }

            if (plotArea.dataPoint && plotArea.dataPoint.color &&
                plotArea.dataPoint.color.hasOwnProperty('isSemanticColoring')) {
                jQuery.extend(true, savedOptions.plotArea, {
                    dataPoint: {
                        color: {
                            isSemanticColoring: plotArea.dataPoint.color.isSemanticColoring
                        }
                    }
                });
            } else {
                if (savedOptions.plotArea.dataPoint && savedOptions.plotArea.dataPoint.color &&
                    savedOptions.plotArea.dataPoint.color.hasOwnProperty('isSemanticColoring')) {
                    delete savedOptions.plotArea.dataPoint.color.isSemanticColoring;
                }
            }
        }
    };
    
    RuntimeOptionsHelper.decorateBullet = function(options, feeds) {
        if (!feeds || feeds.length === 0) {
            return;
        }

        jQuery.extend(true, options.properties, {plotArea:{}});
        var plotArea = options.properties.plotArea;
    
        if (plotArea.colorPalette ){
            if (!plotArea.actualColor || plotArea.actualColor.length === 0){
                plotArea.actualColor = [plotArea.colorPalette[0]];
            }

            if (!plotArea.additionalColor || plotArea.additionalColor.length === 0){
                plotArea.additionalColor = [plotArea.colorPalette[1]];
            }
        }
    
        var num = feeds.length;
      
        var bOldStyle = false;
        var primaryNum = 0;
        var otherNum = 0;
        var bHasColor = 0;
        for (var i = 0; !bOldStyle && i < num; ++i){
             var id = feeds[i].getUid();
             var values = feeds[i].getValues();
            
             if (values && values.length){
                 switch (id){
                    case 'color':
                        bHasColor = true;
                        break;
                    case 'primaryValues':
                        bOldStyle = true;
                        break;
                    case 'actualValues':
                        primaryNum += values.length;
                        break;
                    case 'additionalValues':  
                    case 'forecastValues':
                        otherNum += values.length;
                        break;
                    default:
                        break;           
                 }
             }                
        }
        
        if (bOldStyle || (!bHasColor && primaryNum < 2) || otherNum === 0){
            if (!plotArea.additionalColor){
                 plotArea.additionalColor = ["sapUiChartPaletteSequentialHue2Light1"];
            }

            if (!plotArea.forecastColor){
                 plotArea.forecastColor = ["sapUiChartPaletteSequentialNeutralLight3"];
            }

            if (!plotArea.actualColor){
                 plotArea.actualColor = ["sapUiChartPaletteSequentialHue1Light1",
                                    "sapUiChartPaletteQualitativeHue2",
                                   "sapUiChartPaletteQualitativeHue3",
                                   "sapUiChartPaletteQualitativeHue4",
                                    "sapUiChartPaletteQualitativeHue5",
                                     "sapUiChartPaletteQualitativeHue6",
                                    "sapUiChartPaletteQualitativeHue7",
                                    "sapUiChartPaletteQualitativeHue8",
                                   "sapUiChartPaletteQualitativeHue9",
                                    "sapUiChartPaletteQualitativeHue10",
                                    "sapUiChartPaletteQualitativeHue11"];
            }
    
        }else {
            if (!plotArea.additionalColor){
                 plotArea.additionalColor = ["sapUiChartPaletteSequentialHue1Light2",
                                        "sapUiChartPaletteSequentialHue2Light2",
                                        "sapUiChartPaletteSequentialHue3Light2",
                                        "sapUiChartPaletteSequentialNeutralLight2"];
            }

            if (!plotArea.forecastColor){
                 plotArea.forecastColor = ["sapUiChartPaletteSequentialHue1Light2",
                                     "sapUiChartPaletteSequentialHue2Light2",
                                     "sapUiChartPaletteSequentialHue3Light2",
                                     "sapUiChartPaletteSequentialNeutralLight2"];
            }
            if (!plotArea.actualColor){
                 plotArea.actualColor = ["sapUiChartPaletteSequentialHue1",
                                    "sapUiChartPaletteSequentialHue2",
                                    "sapUiChartPaletteSequentialHue3",
                                    "sapUiChartPaletteSequentialNeutral"];
            }
        }

        return options;
    };

    /**
     *fix BITSDC2-4455, when change chart type from bullet to timebullet, 
     *properties 'actualColor/additionalColor' will be cached for timebullet.
     *so apply template color for timebullet chart
     *limitation: if customer has already set actualColor/additionalColor for bulllet, customer settings will be overwrite
    */
    RuntimeOptionsHelper.decorateTimeBullet = function(options) {
        jQuery.extend(true, options.properties, {plotArea:{}});
        var plotArea = options.properties.plotArea;
        if (!plotArea.actualColor) {
            plotArea.actualColor = ["#27a3dd", "#9dc62d", "#f8ac29", "#848f94"];
        }

        if (!plotArea.additionalColor) {
           plotArea.additionalColor = ["#84caec", "#c6e17d", "#fbd491", "#bac1c4"]; 
        }
    };
    
    RuntimeOptionsHelper.decorateWaterfall = function(options, feeds) {
        if (!feeds || feeds.length === 0) {
            return;
        }
        var bMultiSeries = false;
        for (var i = 0; i < feeds.length; i++) {
             var id = feeds[i].getUid();
             var values = feeds[i].getValues();
             if (id === 'valueAxis' && values.length > 1) {
                bMultiSeries = true;
             } else if (id === 'color' && values.length > 0) {
                bMultiSeries = true;
             }
        }

        jQuery.extend(true, options.properties, {
            plotArea:{
                dataLabel: {
                    showRecap: bMultiSeries
                },
                dataPoint: {
                    color: {
                        isSemanticColoring: !bMultiSeries
                    }
                }
            }
        });
    };
    
    RuntimeOptionsHelper._processCategoryTicker = function(options, feeds, vizProp){
        if (!feeds || feeds.length === 0) {
            return;
        }
    
        // Fix BITSDC2-4741, when in analytical chart 
        // switch chart type from timeseries_stacked_column (invalid data) to stacked_bar
        // the categoryAxis.axisTick.visible should be false.
        var oVizProperties = {};
        jQuery.extend(true, oVizProperties, options.properties, {categoryAxis:{axisTick:{}}});
        var axis2TickProp;
        var type = options.type;
        if (type === "info/heatmap"){
            jQuery.extend(true, oVizProperties, {categoryAxis2:{axisTick:{}}});
            axis2TickProp =  oVizProperties.categoryAxis2.axisTick;
        }
        var axisTickProp = oVizProperties.categoryAxis.axisTick;
    
          
        var len = feeds.length;
        var tickVisible = true;
        var shortTickVisible = null;//null means follow tickVisible
        var i, id, values;
    
        var measureNum = 0,  //primaryValues or valueAxis
            colorNum = 0, //the num of color feeding
            axisNum = 0,  //the num of feeding on axisLabels or categoryAxis
            actualNum = 0,
            axis2Num = 0,
            hasMNDColor = false, 
            hasMNDCategory = false, 
            valueAxis2Num = 0;

        for ( i = 0; i < len; ++i){
             id = feeds[i].getUid();
             values = feeds[i].getValues();
             if (!values){
                continue;
             }

             if (id === "primaryValues" || id === "valueAxis"){
                measureNum = values.length;
             } else if (id === "color"){
                colorNum = values.length;
                hasMNDColor = values.indexOf("MeasureNamesDimension") >= 0;
             } else if (id === "axisLabels" || id === "categoryAxis"){
                axisNum = values.length;
                hasMNDCategory = values.indexOf("MeasureNamesDimension") >= 0;
             } else if (id === "actualValues"){
                actualNum = values.length;
             }else if (id === "valueAxis2"){
                valueAxis2Num = values.length;
             } else if (id === "categoryAxis2"){
                axis2Num = values.length;
             }
        }

        var barShapeNum, valueAxis2BarShapeNum;

        if (["info/dual_horizontal_stacked_combination" , "info/dual_stacked_combination"].indexOf(type) >= 0){
            barShapeNum = 1;
            valueAxis2BarShapeNum = 1;
        }else {
            barShapeNum = 1; 
            valueAxis2BarShapeNum = 0;
        }

        var shapeArr, num;
        var plotAreaProp = {};
        jQuery.extend(true, plotAreaProp, (vizProp && vizProp.plotArea) || {}, options.properties.plotArea);

        if (plotAreaProp && plotAreaProp.dataShape &&
                plotAreaProp.dataShape.primaryAxis){
            shapeArr = plotAreaProp.dataShape.primaryAxis;
            num = Math.min(shapeArr.length, measureNum);
            barShapeNum = 0;
            for (i = 0; i < num; ++i){
                 if (shapeArr[i] === "bar"){
                    barShapeNum++;
                 }
            }
        }
        
        if (plotAreaProp && plotAreaProp.dataShape &&
                plotAreaProp.dataShape.secondaryAxis){
            shapeArr = plotAreaProp.dataShape.secondaryAxis;
            num = Math.min(shapeArr.length, valueAxis2Num);
            valueAxis2BarShapeNum = 0;
            for (i = 0; i < num; ++i){
                if (shapeArr[i] === "bar"){
                    valueAxis2BarShapeNum++;
                }
            }
        }
        //we will check whether we need to show short ticks or not.
        //please note we just set "shortTickVisible" to false, or do not set the property,
        //because setting "shortTickVisible" to true may force short ticks visible, even if tickVisible is false.
        var onlyOneBar = barShapeNum + valueAxis2BarShapeNum === 1;
    
        if (type === "info/column" || type === "info/bar"){                   
            if (!(colorNum > 1 || (colorNum === 1 && !hasMNDColor) || 
                    (colorNum === 1 && hasMNDColor && measureNum > 1) || 
                    (!hasMNDCategory && !hasMNDColor && measureNum > 1 ))){
                if (axisNum > 1) {
                    shortTickVisible = false;
                }else {
                    tickVisible = false;
                }
            }
        }else if ( ["info/stacked_bar", "info/stacked_column",
                   "info/100_stacked_bar", "info/100_stacked_column",
                   "info/waterfall", "info/horizontal_waterfall"].indexOf(type) >= 0 ){
            if (axisNum > 1) {
                shortTickVisible = false;
            } else {
                tickVisible = false;
            }
        }else if ( ["info/stacked_combination" ,   "info/horizontal_stacked_combination" ,
                   "info/dual_horizontal_stacked_combination" , "info/dual_stacked_combination"].indexOf(type) >= 0){
            if (onlyOneBar){
                if (axisNum > 1) {
                    shortTickVisible = false;
                } else {
                    tickVisible = false;
                }
            }
         }else if (["info/combination", "info/dual_horizontal_combination" , "info/dual_combination"].indexOf(type) >= 0){
             if ( onlyOneBar && (colorNum === 0 || (colorNum === 1 && hasMNDColor ))){
                if (axisNum > 1) {
                    shortTickVisible = false;
                } else {
                    tickVisible = false;
                }
             }
          }else if (type ===  "info/bullet" || type === "info/vertical_bullet"){
            if (colorNum === 0 && actualNum <= 1){
                if (axisNum > 1) {
                    shortTickVisible = false;
                }else {
                    tickVisible = false;
                }
            }
         }
        
         if (type === "info/heatmap"){
             if (!(axisTickProp.visible === true || axisTickProp.visible === false)){
                 axisTickProp.visible = (axisNum > 1);
             }

             if ( !(axis2TickProp.visible === true || axis2TickProp.visible === false)){
                 axis2TickProp.visible = (axis2Num > 1);
             }   
             
             //for heatmap we do not check colorNum, but always disable short ticks if (axisNum > 1)
             if (axisTickProp.shortTickVisible == null && axisNum > 1) {
                 axisTickProp.shortTickVisible = false;
             }

             if (axis2TickProp.shortTickVisible == null && axis2Num > 1) {
                 axis2TickProp.shortTickVisible = false;
             }   

         }else {
             if (!(axisTickProp.visible === true || axisTickProp.visible === false)) {
                 axisTickProp.visible = tickVisible;
             }
             if (axisTickProp.shortTickVisible == null) {
                 axisTickProp.shortTickVisible = shortTickVisible;
             }  
         }
         return oVizProperties;
    };

    return RuntimeOptionsHelper;
});

}; // end of sap/viz/ui5/controls/common/helpers/RuntimeOptionsHelper.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.controls.common.utils.Constants') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

jQuery.sap.declare('sap.viz.ui5.controls.common.utils.Constants'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/controls/common/utils/Constants",function() {
    "use strict";

    /**
     * Enumeration for the constants used in vizFrame
     */
     var vizFrameConstants = {
        ERROR_TYPE: {
            NODATA: 'NO_DATA',
            MULTIPLEUNITS: 'MULTIPLE_UNITS',
            INVALIDDATA: 'INVALID_DATA',
            OTHERS: 'OTHERS'
        },
        ERROR_MESSAGE: {
            MULTIPLEUNITS: 'Multiple Units',
            NODATA: "No Data"
        },
        CSS_PREFIX: 'ui5-viz-controls',
        TEMPLATE_POSTFIX: '_merged_with_cvom_by_vizframe',
        CORE_CHART_TYPES: [
            "info/column",
            "info/bar",
            "info/stacked_bar",
            "info/stacked_column",
            "info/line",
            "info/combination",
            "info/dual_combination",
            "info/dual_horizontal_combination",
            "info/bullet",
            "info/timeseries_bullet",
            "info/bubble",
            "info/time_bubble",
            "info/pie",
            "info/donut",
            "info/scatter",
            "info/vertical_bullet",
            "info/dual_stacked_bar",
            "info/100_stacked_bar",
            "info/100_dual_stacked_bar",
            "info/dual_stacked_column",
            "info/100_stacked_column",
            "info/100_dual_stacked_column",
            "info/stacked_combination",
            "info/horizontal_stacked_combination",
            "info/dual_stacked_combination",
            "info/dual_horizontal_stacked_combination",
            "info/dual_bar",
            "info/dual_column",
            "info/dual_line",
            "info/timeseries_column",
            "info/timeseries_line",
            "info/timeseries_scatter",
            "info/timeseries_bubble",
            "info/heatmap",
            "info/waterfall",
            "info/horizontal_waterfall",
            "info/timeseries_combination",
            "info/dual_timeseries_combination",
            "info/timeseries_stacked_column",
            "info/timeseries_100_stacked_column",
            "info/timeseries_waterfall"
        ],
        DATASET_TYPES : {
          FLATTABLEDATASET  : "FLATTABLEDATASET",
          CROSSTABLEDATASET : "CROSSTABLEDATASET",
          LEGACYCROSSTABLEDATASET : "LEGACYCROSSTABLEDATASET"
        }
     };
    return vizFrameConstants;

}, /* bExport= */ false);

}; // end of sap/viz/ui5/controls/common/utils/Constants.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.controls.common.utils.FormatDataUtil') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

jQuery.sap.declare('sap.viz.ui5.controls.common.utils.FormatDataUtil'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/controls/common/utils/FormatDataUtil",function() {
    "use strict";

    var FormatDataUtil = {};

    /**
     * Create a new copy of data with all values formatted using "formatString" property
     * 
     * @param data original data to format
     * @return a copy of the original data with all values formatted
     */
    FormatDataUtil.formatData = function (options, config) {
        if (!(options.data && options.data.val && options.data.val.length > 0)) {
            return options.data;
        }
        var data = options.data,
            formatFn = sap.viz.api.env.Format.format,
            formatted = jQuery.extend(true, {}, data),
            timeMeasureIdx = formatted.val.hasOwnProperty("timeMeasure") ? formatted.val.timeMeasure : -1,
            timeDimensions = formatted.val.hasOwnProperty("timeDimensions") ? formatted.val.timeDimensions : [],
            formatString = config.formatString,
            catchAll = null,
            byMeasure = {},
            pattern;
        
        if (typeof formatString === "string") {
            catchAll = formatString;
        } else if (formatString instanceof Object) {
            if (formatString.formatPattern || formatString.dataUnit) {
                catchAll = formatString;
            } else {
                byMeasure = formatString;
            }
        }

        // convert value of time measure from milliseconds int to javascript Date object
        //Handle measure is Time.
        if (timeMeasureIdx !== -1) {
            var timeValue = formatted.val.filter(function(i) {
                return (i.type) && (i.type.toLowerCase() === "measure");
            })[timeMeasureIdx];
            timeValue.value = new Date(timeValue.value);
        }
        
        if (options.timeTooltipData && config.chartType.indexOf('time') > -1) {
            //Time series chart and have time tooltip.
            var hasTimeFormatString = false;
            if (formatString) {
                timeDimensions.forEach(function(index){
                    if (formatted.val[index] && formatted.val[index].id) {
                        var formatObject = byMeasure[formatted.val[index].id];
                        if (formatObject && 
                            (typeof formatObject === "string" || formatObject.formatPattern)) {
                            hasTimeFormatString = true;
                        } 
                    } 
                });
            }
            if (hasTimeFormatString) {
                //Use Customer format string
                formatted.val.forEach(function(i, index){
                    if (timeDimensions.indexOf(index) > -1) {
                        //popover didnot accept time as dimension, so change it to measure.
                        i.type = "measure";
                        i.value = new Date(i.value);
                    }
                });
            } else {
                //Follow chart's format rules
                var tooltipData = jQuery.extend(true, [], options.timeTooltipData);
                tooltipData.forEach(function(i, index) {
                    if (formatted.val[index].dataName) {
                        tooltipData[index].dataName = formatted.val[index].dataName;
                    }
                });
                formatted.val = tooltipData;
                formatted.isTimeSeries = true;
            }
        }

        formatted.val.forEach(function(val, i) {
            if (val.type && val.type.toLowerCase() === "measure") {
                pattern = byMeasure[val.id] || catchAll || val.formatString;
                if (pattern) {
                    if ((pattern.formatPattern || pattern.dataUnit)) {
                        //tooltip will render value and unit separately
                        val.value = formatFn(val.value, pattern.formatPattern);
                        var isTimeDim = formatted.val.timeDimensions && formatted.val.timeDimensions.indexOf(i) > -1;
                        if (!isTimeDim) {
                            val.unit = pattern.dataUnit || val.unit;
                        }
                        //get unit from format string or unit binding
                    } else {
                        val.value = formatFn(val.value, pattern);
                    }
                } else {
                    val.value = formatFn(val.value);
                }
            }
        });
        return formatted;
    };

    return FormatDataUtil;
});

}; // end of sap/viz/ui5/controls/common/utils/FormatDataUtil.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.controls.common.utils.SelectionDetailUtil') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */
jQuery.sap.declare('sap.viz.ui5.controls.common.utils.SelectionDetailUtil'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
jQuery.sap.require('sap.ui.core.theming.Parameters'); // unlisted dependency retained
sap.ui.define("sap/viz/ui5/controls/common/utils/SelectionDetailUtil",[
    'sap/ui/core/theming/Parameters'
],function (Parameters) {
    "use strict";

    var SelectionDetailUtil = {};

    SelectionDetailUtil.appendShapeStrings = function (data) {
		data.forEach(function(item){
			if (item.graphicInfo) {
				item.shapeString = getShapeString(item.graphicInfo);
				delete item.graphicInfo;
			}
        });
    };

    // var isPeriodicWaterfall = function(data){
	// 	var measureCount = 0;
	// 	for (var i = 0; i < data.length; i++) {
	// 		if (data[i].type === 'Measure') {
	// 			measureCount++;
	// 		}
	// 	}
	// 	return measureCount > 1 ? true : false;
	// };
    
    var getShapeString = function(option){
        var sShape = '';
        if (option.color && (typeof option.color === 'string')) {
            var markerSize = 10,
                posX = markerSize / 2,
                posY = posX,
                width = markerSize,
                height = markerSize,
                isShowLine = option.type === 'line';
            if (option.type && isShowLine) {
                posX = markerSize;
                width = markerSize * 2;
                markerSize = 6;
            }
            var props = {
                rx: markerSize / 2,
                ry: markerSize / 2,
                type: option.shape,
                borderWidth: 0
            };
            sShape = sShape + '<svg width=' + width + 'px height=' + height + 'px ' + 'focusable = false>';
            if (isShowLine) {
                var lineInfo = option.lineInfo;
                var lineColor = Parameters.get(lineInfo.lineColor) || lineInfo.lineColor || option.color;
                if (lineInfo.lineType === 'dotted' || lineInfo.lineType === 'dash') {
                    sShape = sShape + "<line x1 = '0' y1='" + posY + "' x2 = '" + width + "' y2 = '" + posY + "' stroke-width = '2' stroke-dasharray = '5, 3' ";
                } else if (lineInfo.lineType === 'dot') {
                    var pointCount = Math.floor(width / 2);
                    pointCount = pointCount & 1 ? pointCount : pointCount - 1;
                    if (pointCount < 3) {
                        pointCount = 3;
                    }
                    var lineWidth = width / pointCount;
                    sShape = sShape + "<line x1 ='" + (lineWidth / 2) + "'y1='" + posY + "' x2 = '" + width + "' y2 = '" + posY + "' stroke-dasharray = ' 0," + lineWidth * 2 + "' ";
                    sShape = sShape + "stroke-width = '" + lineWidth + "' stroke-linecap = 'round'";
                } else {
                    sShape = sShape + "<line x1 = '0' y1='" + posY + "' x2 = '" + width + "' y2 = '" + posY + "' stroke-width = '2' ";
                }
                sShape = sShape + " stroke = '" + lineColor + "'> </line>";
            }
            //if (option.type) {
            sShape = sShape + "<path d = '" + SelectionDetailUtil.generateShapePath(props) + "'";

            if (!option.pattern) {
                sShape = sShape + " fill = '" + option.color + "'";
            } else if (option.pattern === 'noFill') {
                var fColor = Parameters.get('sapUiChartBackgroundColor');
                if (fColor === 'transparent') {
                    fColor = "white";
                }
                sShape = sShape + " fill = '" + fColor + "'";
                sShape = sShape + " stroke = '" + option.color + "' stroke-width= '1px'";
            } else {
                sShape = sShape + " fill = '" + option.pattern + "'";
            }


            sShape = sShape + " transform = 'translate(" + posX + "," + posY + ")'></path>";
            //}
            sShape = sShape + '</svg>';
        }
        return sShape;
    };

    SelectionDetailUtil.generateShapePath = function (props) {
        var result;
        var temp = props.borderWidth / 2;
        switch (props.type) {
            case "circle":
                result = "M" + (-props.rx - temp) + ",0 A" + (props.rx + temp) + "," + (props.ry + temp) + " 0 1,0 " + (props.rx + temp) + ",0 A";
                result += (props.rx + temp) + "," + (props.ry + temp) + " 0 1,0 " + (-props.rx - temp) + ",0z";
                break;
            case "cross":
                result = "M" + (-props.rx - temp) + "," + (-props.ry / 3 - temp) + "H" + (-props.rx / 3 - temp) + "V" + (-props.ry - temp) + "H" + (props.rx / 3 + temp);
                result += "V" + (-props.ry / 3 - temp) + "H" + (props.rx + temp) + "V" + (props.ry / 3 + temp) + "H" + (props.rx / 3 + temp);
                result += "V" + (props.ry + temp) + "H" + (-props.rx / 3 - temp) + "V" + (props.ry / 3 + temp) + "H" + (-props.rx - temp) + "Z";
                break;
            case "diamond":
                result = "M0," + (-props.ry - temp) + "L" + (props.rx + temp) + ",0" + " 0," + (props.ry + temp) + " " + (-props.rx - temp) + ",0" + "Z";
                break;
            case "triangle-down":
            case "triangleDown":
                result = "M0," + (props.ry + temp) + "L" + (props.rx + temp) + "," + -(props.ry + temp) + " " + -(props.rx + temp) + "," + -(props.ry + temp) + "Z";
                break;
            case "triangle-up":
            case "triangleUp":
                result = "M0," + -(props.ry + temp) + "L" + (props.rx + temp) + "," + (props.ry + temp) + " " + -(props.rx + temp) + "," + (props.ry + temp) + "Z";
                break;
            case "triangle-left":
            case "triangleLeft":
                result = "M" + -(props.rx + temp) + ",0L" + (props.rx + temp) + "," + (props.ry + temp) + " " + (props.rx + temp) + "," + -(props.ry + temp) + "Z";
                break;
            case "triangle-right":
            case "triangleRight":
                result = "M" + (props.rx + temp) + ",0L" + -(props.rx + temp) + "," + (props.ry + temp) + " " + -(props.rx + temp) + "," + -(props.ry + temp) + "Z";
                break;
            case "intersection":
                result = "M" + (props.rx + temp) + "," + (props.ry + temp) + "L" + (props.rx / 3 + temp) + ",0L" + (props.rx + temp) + "," + -(props.ry + temp) + "L";
                result += (props.rx / 2 - temp) + "," + -(props.ry + temp) + "L0," + (-props.ry / 3 - temp) + "L" + (-props.rx / 2 + temp) + "," + -(props.ry + temp) + "L";
                result += -(props.rx + temp) + "," + -(props.ry + temp) + "L" + -(props.rx / 3 + temp) + ",0L" + -(props.rx + temp) + "," + (props.ry + temp) + "L";
                result += (-props.rx / 2 + temp) + "," + (props.ry + temp) + "L0," + (props.ry / 3 + temp) + "L" + (props.rx / 2 - temp) + "," + (props.ry + temp) + "Z";
                break;
            case 'squareWithRadius':
                var r = props.rx;
                var radius = r - 3;
                result = "M0," + -r + "L" + -radius + "," + -r + "Q" + -r + "," + -r + " " + -r + "," + -radius + "L" + -r + "," + radius + "Q" + -r + "," + r + " " + -radius + "," + r;
                result += "L" + radius + "," + r + "Q" + r + "," + r + " " + r + "," + radius + "L" + r + "," + -radius + "Q" + r + "," + -r + " " + radius + "," + -r + "Z";
                break;
            case "square":
            case "sector":
            default:
                result = "M" + (-props.rx - temp) + "," + (-props.ry - temp) + "L" + (props.rx + temp) + ",";
                result += (-props.ry - temp) + "L" + (props.rx + temp) + "," + (props.ry + temp) + "L" + (-props.rx - temp) + "," + (props.ry + temp) + "Z";
                break;
        }
        //symbolMap[props] = result;
        return result;
    };

    return SelectionDetailUtil;
});

}; // end of sap/viz/ui5/controls/common/utils/SelectionDetailUtil.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.core.BaseChartMetadata') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides class sap.ui.core.BaseChartMetadata
jQuery.sap.declare('sap.viz.ui5.core.BaseChartMetadata'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
jQuery.sap.require('jquery.sap.global'); // unlisted dependency retained
jQuery.sap.require('sap.ui.core.ElementMetadata'); // unlisted dependency retained
sap.ui.define("sap/viz/ui5/core/BaseChartMetadata",['jquery.sap.global', 'sap/ui/core/ElementMetadata'],
	function(jQuery, ElementMetadata) {
	"use strict";


	/**
	 * Creates a new metadata object for a UIElement subclass.
	 *
	 * @param {string} sClassName fully qualified name of the class that is described by this metadata object
	 * @param {object} oStaticInfo static info to construct the metadata from
	 *
	 * @class
	 * @author SAP SE
	 * @version 1.50.6
	 * @since 1.30.0
	 * @alias sap.viz.ui5.core.BaseChartMetadata
	 */
	var BaseChartMetadata = function(sClassName, oClassInfo) {
		oClassInfo = oClassInfo || {};
		oClassInfo.renderer = oClassInfo.renderer || 'sap.viz.ui5.core.BaseChartRenderer';
		this.sVizChartType = (oClassInfo.metadata && oClassInfo.metadata.vizChartType) || undefined;
		// call super constructor
		ElementMetadata.call(this, sClassName, oClassInfo);
	};

	//chain the prototypes
	BaseChartMetadata.prototype = jQuery.sap.newObject(ElementMetadata.prototype);

	BaseChartMetadata.prototype.getVIZChartType = function() {
		return this.sVizChartType;
	};

	// ----

	var BaseAggregation = ElementMetadata.prototype.metaFactoryAggregation;

	function VizAggregation(oClass, name, info) {
		BaseAggregation.call(this, oClass, name, info);
	}

	VizAggregation.prototype = jQuery.sap.newObject(BaseAggregation.prototype);

	VizAggregation.prototype.generate = function(add) {
		var n = this.name;
		add(this._sGetter, function() {
			return this._getOrCreate(n);
		});
		BaseAggregation.prototype.generate.call(this, add);
	};
	
	BaseChartMetadata.prototype.metaFactoryAggregation = VizAggregation;

	// ----

	var BaseEvent = ElementMetadata.prototype.metaFactoryEvent;

	function VizEvent(oClass, name, info) {
		BaseEvent.call(this, oClass, name, info);
	}

	VizEvent.prototype = jQuery.sap.newObject(BaseEvent.prototype);

	VizEvent.prototype.generate = function(add) {
		var n = this.name;
		add(this._sMutator, function(d,f,l) {
			return this._attachVIZEvent(n, d,f,l);
		});
		add(this._sDetachMutator, function(d,f,l) {
			return this._detachVIZEvent(n, f,l);
		});
		BaseEvent.prototype.generate.call(this, add);
	};

	BaseChartMetadata.prototype.metaFactoryEvent = VizEvent; 

	return BaseChartMetadata;
});


}; // end of sap/viz/ui5/core/BaseChartMetadata.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.core.BaseChartRenderer') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

jQuery.sap.declare('sap.viz.ui5.core.BaseChartRenderer'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/core/BaseChartRenderer",function() {
	"use strict";

	/**
	 * @class BaseChart renderer.
	 * @static
	 */
	var BaseChartRenderer = {
	};


	/**
	 * Renders the HTML for the given control, using the provided {@link sap.ui.core.RenderManager}.
	 *
	 * @param {sap.ui.core.RenderManager} oRm the RenderManager that can be used for writing to the render output buffer
	 * @param {sap.ui.core.Control} oControl an object representation of the control that should be rendered
	 */
	BaseChartRenderer.render = function(oRm, oControl){
	
		var bIsEmpty = 	!oControl.getDataset() || !oControl.getDataset().getVIZDataset(),
			oBundle = sap.ui.getCore().getLibraryResourceBundle("sap.viz.ui5.messages"); // TODO relies on undocumented behavior?
	
		// write the HTML into the render manager
		oRm.write("<DIV");
		oRm.writeControlData(oControl);
		if (oControl.getTooltip_AsString()) {
			oRm.writeAttributeEscaped("title", oControl.getTooltip_AsString());
		}
		oRm.addClass("sapVizChart");
		if ( bIsEmpty ) {
			oRm.addClass("sapVizNoData");
		}
		oRm.writeClasses();
		oRm.addStyle("width", oControl.getWidth());
		oRm.addStyle("height", oControl.getHeight());
		oRm.writeStyles();
		oRm.write(">");
		if ( !sap.viz.__svg_support ) {
			oRm.write('<DIV class="sapVizNoDataDefault">');
			oRm.writeEscaped(oBundle.getText("NO_SVG_SUPPORT"));
			oRm.write('</DIV>');
		} else if ( bIsEmpty ) {
			var oNoData = oControl.getNoData();
			if ( oNoData ) {
				oRm.renderControl(oNoData);
			} else {
				oRm.write('<DIV class="sapVizNoDataDefault">');
				oRm.writeEscaped(oBundle.getText("NO_DATA")); 
				oRm.write('</DIV>');
			}
		}
		oRm.write("</DIV>");
	};


	return BaseChartRenderer;

}, /* bExport= */ true);

}; // end of sap/viz/ui5/core/BaseChartRenderer.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.data.CVOMDatasetAdaptor') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

jQuery.sap.declare('sap.viz.ui5.data.CVOMDatasetAdaptor'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/data/CVOMDatasetAdaptor",['sap/viz/ui5/controls/common/utils/Constants'], function(Constants) {
	"use strict";

    function isArray(it) {
        return Object.prototype.toString.call(it) === '[object Array]';
    }

    function createCrosstableDataset(dimensions, measures, dataContexts, additionalInfo, bForLegecyVizChart){

        var result = { dataset: null, context: null};
	    // if there is no data, then there must be no crosstab. Charts will render "no data" then.
	    if (!dataContexts || dataContexts.length === 0) {
	        return result;
	    }

	    var aAxis1 = [], aAxis2 = [], aMeasures = [], data = [], aContextLookup = [];

	    // transform dimension definitions into a structure more suitable for our
	    // transformation
	    jQuery.each(dimensions, function(i, oColumn) {
	        if (oColumn.getAxis() === 1) {
	            aAxis1.push({
	                def : oColumn,
	                adapter : oColumn._getAdapter()
	            });
	        } else if (oColumn.getAxis() === 2) {
	            aAxis2.push({
	                def : oColumn,
	                adapter : oColumn._getAdapter()
	            });
	        } else {
	            throw new Error("currently, only axis 1 and 2 are supported");
	        }
	    });

	    // create empty data array for each measure
	    jQuery.each(measures, function(i, oColumn) {
	        aMeasures.push({
	            def : oColumn,
	            adapter : oColumn._getAdapter()
	        });
	        data.push([]);
	    });

	    // reads all values for a dimension definition from the model,
	    // combines them into a tuple and searches that tuple in the list of known
	    // values for that dimension. If it is found, the corresponding index
	    // is returned. If not, the tuple is added at the end and the new index is
	    // returned.
	    function getAxisIndex(aAxisDef, aAxisValues, oContext) {
	        var l = aAxisDef.length, aValues, i;

	        if (l === 0) {
	            return 0;
	        }

	        // extracts the key value for one dimension based on the given set of
	        // dimension components
	        aValues = [];
	        for ( i = 0; i < l; i++) {
	            aValues.push(aAxisDef[i].adapter(oContext));
	        }

	        // search the key value in the list of already known values
	        // TODO PERFOPT: search is only needed when more than one axis is
	        // defined and only because it is
	        // not clear in what order the combinations of axis values are
	        // enumerated in the model.
	        // It could be x1y1,x2y1,..xNy1,x1y2,... or x1y1,x1y2,...x1yM,x2y1,...
	        // or totally unsorted.
	        for ( i = 0, l = aAxisValues.length; i < l; i++) {
	            if (jQuery.sap.equal(aAxisValues[i], aValues)) {
	                return i;
	            }
	        }
	        // if not found, add it
	        aAxisValues.push(aValues);
	        return aAxisValues.length - 1;
	    }

	    var aAxis1DataSet = [];
	    var aAxis2DataSet = [];

	    // analyze data
	    jQuery.each(dataContexts, function(iIndex, oContext) {
	        // TODO Distinguish 3 cases for better performance:
	        // 1. both axes are defined, use code below
	        // 2. only one axis is defined, use the getAxisIndex
	        // without search + a fixed 0 for the second axis
	        // 3. if no axes are defined, use an incrementing index
	        // for the first axis and 0 for the second
	        // The decision between the three cases can be taken
	        // outside the loop.
	        var iAxis1Index = getAxisIndex(aAxis1, aAxis1DataSet, oContext);
	        var iAxis2Index = getAxisIndex(aAxis2, aAxis2DataSet, oContext);
	        for (var i = 0; i < aMeasures.length; i++) {
	            var value = aMeasures[i].adapter(oContext);
	            // If both aa1 and aa2 is empty, viz dataset should
	            // be created correctly and only with measure
	            // values.
	            if (aAxis1.length === 0 && aAxis2.length === 0) {
	                if (data[i][0] === undefined) {
	                    data[i][0] = [];
	                }
	                data[i][0].push(value);
	            } else {
	                (data[i][iAxis2Index] = (data[i][iAxis2Index] || []))[iAxis1Index] = value;
	            }
	        }
	        if (aAxis1.length === 0 && aAxis2.length === 0) {
	            iAxis1Index = iIndex;
	        }
	        // remember the oContext for the current coordinates
	        (aContextLookup[iAxis2Index] || (aContextLookup[iAxis2Index] = []))[iAxis1Index] = oContext;
	    });

	    // fill any gaps
	    var iLengthAxis1 = aAxis1DataSet.length;
	    var iLengthAxis2 = Math.max(aAxis2DataSet.length, 1);
	    for (var j = 0; j < iLengthAxis2; j++) {
	        for (var i = 0; i < aMeasures.length; i++) {
	            // first ensure that a data array exists for each value of axis2
	            var d = data[i][j];
	            if (!d) {
	                d = data[i][j] = [];
	            }
	            // then ensure that each array has the length of axis1
	            if (d.length < iLengthAxis1) {
	                d[iLengthAxis1 - 1] = undefined;
	            }
	        }
	        // also ensure that a lookup array exists for each value of axis2
	        if (!aContextLookup[j]) {
	            aContextLookup[j] = [];
	        }
	        // ensure that the lookup array has the length of axis1
	        if (!aContextLookup[j].length < iLengthAxis1) {
	            aContextLookup[j][iLengthAxis1] = undefined;
	        }
	    }

	    // start creating the dataset
	    // If no dimension or no measure definition, viz dataset should also no
	    // 'analysisAxis' or 'measureValuesGroup'.
	    var dataset = {};

	    // convert data for axis1
	    if (aAxis1.length > 0) {
	        if (dataset.analysisAxis === undefined) {
	            dataset.analysisAxis = [];
	        }
	        var axis = {
	            index : 1,
	            data : []
	        };
	        // process component by component for the axis1 dimension
	        for (var i = 0; i < aAxis1.length; i++) {
	            // collect values for the dimension component 'i'
	            var values = [];
	            for (var j = 0; j < aAxis1DataSet.length; j++) {
	                values[j] = aAxis1DataSet[j][i];
	            }
	            // create an axis component from the collected data and the
	            // specified label
	            axis.data.push({
	                name : aAxis1[i].def.getName(),
	                values : values
	            });
	        }
	        // add axis to dataset
	        dataset.analysisAxis.push(axis);
	    }

	    // do the same for axis2
	    // TODO generalize to N axes, will reduce code as well. But maybe throw
	    // error above for more than two axes (limit of crosstab?)
	    if (aAxis2.length > 0) {
	        if (dataset.analysisAxis === undefined) {
	            dataset.analysisAxis = [];
	        }
	        var axis = {
	            index : 2,
	            data : []
	        };
	        for (var i = 0; i < aAxis2.length; i++) {
	            var values = [];
	            for (var j = 0; j < aAxis2DataSet.length; j++) {
	                values[j] = aAxis2DataSet[j][i];
	            }
	            axis.data.push({
	                name : aAxis2[i].def.getName(),
	                values : values
	            });
	        }
	        dataset.analysisAxis.push(axis);
	    }

	    // now that the dimension lengths are known, transform measures to
	    // crosstable
	    if (aMeasures.length > 0) {
	        dataset.measureValuesGroup = [];

	        for (var i = 0; i < aMeasures.length; i++) {
	            if (!dataset.measureValuesGroup[aMeasures[i].def.getGroup() - 1]) {
	                dataset.measureValuesGroup[aMeasures[i].def.getGroup() - 1] = {
	                    index : aMeasures[i].def.getGroup(),
	                    data : []
	                };
	            }
	            dataset.measureValuesGroup[aMeasures[i].def.getGroup() - 1].data.push({
	                name : aMeasures[i].def.getName(),
	                values : data[i]
	            });
	        }

	        // Viz don't handle mg array with undefined.
	        for (var i = 0, len = dataset.measureValuesGroup.length; i < len; i++) {
	            if (dataset.measureValuesGroup[i] === undefined) {
	                throw new Error("Measure Group " + (i + 1) + " is missing.");
	            }
	        }
	    }

	    // finally create the VIZ crosstab from the transformed data
	    // cvom has two version of crosstable implmentation, viz chart only regonize the viz chart version crosstable
		result.dataset = bForLegecyVizChart ? new sap.viz.data.CrosstableDataset() : new sap.viz.api.data.CrosstableDataset();
	    result.dataset.data(dataset);
	    if (additionalInfo) {
	        result.dataset.info(additionalInfo);
	    }

	    result.context = aContextLookup;

	    return result;
    }

    function createFlatTableDateset(dimensions, measures, contexts, dataContexts, pagingOption, pagingUnit){

        var result = {dataset: null, context: null};

        //By default, we will show all context dimension in tooltip
        var context = ['_context_row_number'];
        if (contexts) {
            if (!isArray(contexts)) {
                contexts = [contexts];
            }
            for (var i = 0; i < contexts.length; ++i) {
                var name = contexts[i];
                var bShowInTooltip =  !(name.showInTooltip === false);
                if (name.id) {
                    name = name.id;
                }
                context.push({id : name, showInTooltip : bShowInTooltip});
                
            }
        }
        var aAxis = [], aMeasures = [], aMeasuresUnit = [], flatTableDS = {
            'metadata' : {
                'fields' : []
            },
            'context' : context,
            'data' : []
        }, aContextLookup = [];

	    jQuery.each(dimensions, function(i, oColumn) {
	        aAxis.push({
	            def : oColumn,
	            vAdapter : oColumn._getAdapter(),
	            dAdapter : oColumn._getDisplayValueAdapter()
	        });
	        var dataType = oColumn.getDataType();
	        flatTableDS.metadata.fields.push({
	            'id' : oColumn.getIdentity() || oColumn.getName(),
	            'name' : oColumn.getName() || oColumn.getIdentity(),
	            'semanticType' : 'Dimension',
	            'dataType': dataType,
	            'inResult': oColumn._getInResult(),
	            'timeUnitType': oColumn._getTimeUnit()
	        });
	    });

		jQuery.each(measures, function(i, oColumn) {
			aMeasures.push({
				def : oColumn,
				adapter : oColumn._getAdapter()
			});
			var cfg = {
				'id' : oColumn.getIdentity() || oColumn.getName(),
				'name' : oColumn.getName() || oColumn.getIdentity(),
				'semanticType' : 'Measure'
			};
			cfg.formatString = oColumn.getFormat();
			/*If customer set unit as undefined/null/'', getUnit function will always retrun '', 
			so we don't handle such case in ui5*/
			if (oColumn.getUnit()) {
				cfg.unit = oColumn.getUnit();
			}
			cfg.unitBinding = oColumn._getUnitBinding();

			var aRange = oColumn.getRange();
			if (aRange && aRange.length) {
				cfg.min = aRange[0];
				cfg.max = aRange[1];
			}
			flatTableDS.metadata.fields.push(cfg);
		});

		if (pagingOption) {
			if (pagingOption.bEnabled) {
				 flatTableDS.metadata.options = {
					pagination: {
						mode: pagingOption.sMode,
						ratio: pagingOption.thumbRatio
					}	
				};
			}
		} 

		// handle no data
        if (!dataContexts || dataContexts.length === 0) {
            result.dataset = new sap.viz.api.data.FlatTableDataset(flatTableDS);
            return result;
        }

        if (pagingOption && (!pagingUnit || pagingOption.sMode === "reset")) {
            pagingUnit = [];
        }

	    // analyze data
	    jQuery.each(dataContexts, function(iIndex, oContext) {
	        if (!flatTableDS.data[iIndex]) {
	            flatTableDS.data[iIndex] = [];
	        }
	        for (var i = 0; i < aAxis.length; i++) {
	            var value = aAxis[i].vAdapter(oContext);
	            if (value instanceof Date) {
					value = value.getTime();
				}
	            var dValueObj = aAxis[i].dAdapter(oContext);
	            flatTableDS.data[iIndex].push(
	                dValueObj.enableDisplayValue ? 
	                {v: value, d: dValueObj.value} : value
	            );
	        }
	        for (var j = 0; j < aMeasures.length; j++) {
	            var value = aMeasures[j].adapter(oContext);
	            flatTableDS.data[iIndex].push(value);
	             //Check for analytical chart. "*" is for annotation usage.
                var sUnitBinding = aMeasures[j].def._getUnitBinding();
                var sUnitValue = oContext.getProperty(sUnitBinding);
                if (sUnitBinding) {
                    if (aMeasuresUnit[j]) {
                        if (aMeasuresUnit[j] === "*" || aMeasuresUnit[j] !== sUnitValue || (pagingOption && pagingUnit[j] !== sUnitValue)) {
                            throw Constants.ERROR_MESSAGE.MULTIPLEUNITS;
                        }
                    } else {
                        aMeasuresUnit[j] = sUnitValue;
                        if (pagingOption && !pagingUnit[j]) {
                            pagingUnit[j] = sUnitValue;
                        }
                    }
                }
	        }
	        aContextLookup[iIndex] = oContext;
	    });

	    result.context = aContextLookup;

		//Set unit for analytical chart.
        flatTableDS.metadata.fields.filter(function(field) {
            return (field.semanticType === "Measure");
        }).forEach(function(fieldMeasure, index){
            if (fieldMeasure.unitBinding && aMeasuresUnit[index]) {
                fieldMeasure.unit = aMeasuresUnit[index];
                delete fieldMeasure.unitBinding;    
            }
        });
	    // finally create the VIZ flat table from the transformed data
	    result.dataset = new sap.viz.api.data.FlatTableDataset(flatTableDS);

	    return result;
    }

	var CVOMDatasetAdaptor = function() {
		this._oCVOMDataset = null;
	    this._aContext = null;
	    this._sDatasetType = null;
	    this._pagingUnit = null;
	};

	/**
      
       return CVOM Dataset instance;
	**/
	CVOMDatasetAdaptor.prototype.getDataset = function(options){
        if (this._sDatasetType === options.type && this._oCVOMDataset){
            return this._oCVOMDataset;
        }

        this.invalidate();
        this._sDatasetType = options.type;

        var oResult = null;
        if (this._sDatasetType === Constants.DATASET_TYPES.FLATTABLEDATASET){
            oResult = createFlatTableDateset(options.dimensions, options.measures, options.contexts, options.dataContexts, options.pagingOption, this._pagingUnit);
        } else {
            oResult = createCrosstableDataset(options.dimensions, options.measures, options.dataContexts, options.additionalInfo, 
                       this._sDatasetType == Constants.DATASET_TYPES.CROSSTABLEDATASET ? false : true);
        }
        

        this._oCVOMDataset = oResult.dataset;
        this._aContext = oResult.context;

        return this._oCVOMDataset;
	};

	CVOMDatasetAdaptor.prototype.findContext = function(oCriteria){
        if (this._sDatasetType === Constants.DATASET_TYPES.FLATTABLEDATASET){
		  if (this._aContext && typeof oCriteria === 'object' && oCriteria._context_row_number !== undefined) {
			  return this._aContext[oCriteria._context_row_number];
		  }
        }else {
          if (this._aContext && typeof oCriteria === 'object') {
	          return this._aContext[oCriteria.dii_a2] && this._aContext[oCriteria.dii_a2][oCriteria.dii_a1];
	      }
        }

        return null;
	};

	CVOMDatasetAdaptor.prototype.invalidate = function() {
		this._oCVOMDataset = null;
		this._aContext = null;
	};


	return CVOMDatasetAdaptor;

}, /* bExport= */ true);

}; // end of sap/viz/ui5/data/CVOMDatasetAdaptor.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.format.ChartFormatter') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */


jQuery.sap.declare('sap.viz.ui5.format.ChartFormatter'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
jQuery.sap.require('sap.ui.core.format.NumberFormat'); // unlisted dependency retained
jQuery.sap.require('sap.ui.core.format.DateFormat'); // unlisted dependency retained
jQuery.sap.require('sap.ui.core.format.FileSizeFormat'); // unlisted dependency retained
sap.ui.define("sap/viz/ui5/format/ChartFormatter",['sap/ui/core/format/NumberFormat',
    'sap/ui/core/format/DateFormat',
    'sap/ui/core/format/FileSizeFormat'],
    function(NumberFormat, DateFormat, FileSizeFormat) {
    "use strict";

    var semicolon = ":";
    /**
     * @class Provides methods set chart formatter for VizFrame. 
     *
     * @public
     * @static
     * @alias sap.viz.ui5.format.ChartFormatter
     */
    var ChartFormatter = function () {
        if (this.caller != this.getInstance) {
            throw new Error("This object cannot be instantiated");
        }
        this.formatFunctions = [];
        this._updatePatternTable();
        this._locale = sap.ui.getCore().getConfiguration().getLanguage();

        // The following function is for CVOM info time Axis label level format
        // for internal use. These does not expose to end user.
        // So function name is hard code.
        this.formatFunctions["hh:00"] = this._getCVOMHourZeroFormatter.bind(this);
        this.formatFunctions["ss''"] = this._getCVOMSecondFormatter.bind(this);
        this.formatFunctions["MMM"] = this._getCVOMMonthFormatter.bind(this);
        this.formatFunctions["d"] = this._getCVOMDayFormater.bind(this);
    };

    // Default formatting functions
    /**
     * List (Enum) type sap.viz.ui5.format.ChartFormatter.DefaultPattern
     * 
     * @enum {string}
     * @public
     * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
     */
    ChartFormatter.DefaultPattern = {
        /**
         *
         * type: Integer
         *
         * style: "short"
         *
         * e.g. 234M
         * @public
         */
        SHORTINTEGER: "ShortInteger", 
        /**
         *
         * type: Integer
         *
         * style: "standard"
         *
         * e.g. 234234234
         * @public
         */
        STANDARDINTEGER: "StandardInteger",
        /**
         *
         * type: Float
         *
         * style: "short"
         *
         * e.g. 2.3M
         * @public
         */
        SHORTFLOAT: "ShortFloat",
        /**
         * type: Float
         *
         * style: "short"
         *
         * maxFractionDigits: 2
         *
         * e.g. 2.34234234 is formatted as 2.34
         * @public
         */
        SHORTFLOAT_MFD2: "ShortFloat_MFD2",
        /**
         *
         * type: Float
         *
         * style: "standard"
         *
         * e.g. 234,234.234
         * @public
         */
        STANDARDFLOAT: "StandardFloat",
        /**
         * type: Float
         *
         * style: "long"
         *
         * e.g. 2.3 million
         * @public
         */
        LONGFLOAT: "LongFloat",
        /**
         * type: Percentage
         *
         * style: "standard"
         *
         * e.g. 0.0234234 is formatted as 2.34234%
         * @public
         */
        STANDARDPERCENT: "StandardPercent",
        /**
         * type: Percentage
         *
         * style: "standard"
         *
         * maxFractionDigits: 2
         *
         * e.g. 0.0234234 is formatted as 2.34%
         * @public
         */
        STANDARDPERCENT_MFD2: "StandardPercent_MFD2",
        /**
         * type: Percentage
         *
         * style: "standard"
         *
         * e.g. 0.0234 is formatted as 2.34%
         * @public
         * @deprecated Since version 1.48.0.
         */
        PERCENT: "Percent",
        /**
         * type: Currency
         *
         * style: "standard"
         *
         * e.g. 234234.234 is formatted as 234,234.23
         * @public
         */
        STANDARDCURRENCY: "StandardCurrency",
        /**
         * type: Currency
         *
         * style: "standard"
         *
         * e.g. 234234.234 is formatted as 234,234.23
         * @public
         * @deprecated Since version 1.48.0.
         */
        CURRENCY: "Currency",
        // In first version only support below date format
        /**
         * Medium year
         *
         * e.g. 2015
         * @public
         */
        MEDIUMYEAR: "MediumYear",
        /**
         * Medium quarter
         *
         * e.g. Q3
         * @public
         */
        MEDIUMQUARTER: "MediumQuarter",
        /**
         * Quarter
         *
         * e.g. Q3
         * @public
         * @deprecated Since version 1.48.0.
         */
        QUARTER: "Quarter", 
        /**
         * Medium month
         *
         * e.g. Aug
         * @public
         */
        MEDIUMMONTH: "MediumMonth",
        /**
         * Medium week
         * 
         * e.g. CW35
         * @public
         */
        MEDIUMWEEK: "MediumWeek",
        /**
         * Week
         *
         * e.g. CW35
         * @public
         * @deprecated Since version 1.48.0.
         */
        WEEK: "Week",
        /**
         * Medium day
         *
         * e.g. 01
         * @public
         */
        MEDIUMDAY: "MediumDay",
        /**
         * Medium hour
         *
         * e.g. 18
         * @public
         */
        MEDIUMHOUR: "MediumHour", 
        /**
         * Medium minute
         *
         * e.g. 18
         * @public
         */
        MEDIUMMINUTE: "MediumMinute", 
        /**
         * Medium second
         *
         * e.g. 59
         * @public
         */
        MEDIUMSECOND: "MediumSecond",
        /**
         * Medium format pattern for combination of year, month, and day
         *
         * e.g. Aug 28, 2015
         * @public
         */
        MEDIUMYEARMONTHDAY: "MediumYearMonthDay", 
        /**
         * Format pattern for combination of year, month, and day
         *
         * e.g. Aug 28, 2015
         * @public
         * @deprecated Since version 1.48.0.
         */
        YEARMONTHDAY: "YearMonthDay",
        /**
         * Binary file size
         *
         * e.g. 1 Kibibyte = 1024 Byte
         * @public
         */
        BINARYFILESIZE: "BinaryFileSize",
        /**
         * Decimal file size
         *
         * e.g. 1 Kilobyte = 1000 Byte
         * @public
         */
        DECIMALFILESIZE: "DecimalFileSize"
    };

    ChartFormatter.prototype._updatePatternTable = function () {
        this.formatFunctions["ShortInteger"] = this._getShortIntegerFormatter();
        this.formatFunctions["StandardInteger"] = this._getStandardIntegerFormatter();
        this.formatFunctions["ShortFloat"] = this._getShortFloatFormatter();
        this.formatFunctions["ShortFloat_MFD2"] = this._getShortFloatMFD2Formatter();
        this.formatFunctions["StandardFloat"] = this._getStandardFloatFormatter();
        this.formatFunctions["LongFloat"] = this._getLongFloatFormatter();
        this.formatFunctions["StandardPercent"] = this._getStandardPercentFormatter();
        this.formatFunctions["StandardPercent_MFD2"] = this._getStandardPercentMFD2Formatter();
        this.formatFunctions["Percent"] = this._getPercentFormatter();
        this.formatFunctions["StandardCurrency"] = this._getStandardCurrencyFormatter();
        this.formatFunctions["Currency"] = this._getCurrencyFormatter();
        this.formatFunctions["MediumYear"] = this._getMediumYearFormatter();
        this.formatFunctions["MediumMonth"] = this._getMediumMonthFormatter();
        this.formatFunctions["MediumDay"] = this._getMediumDayFormatter();
        this.formatFunctions["MediumHour"] = this._getMediumHourFormatter();
        this.formatFunctions["MediumMinute"] = this._getMediumMinuteFormatter();
        this.formatFunctions["MediumSecond"] = this._getMediumSecondFormatter();
        this.formatFunctions["YearMonthDay"] = this._getYearMonthDayFormatter();
        this.formatFunctions["BinaryFileSize"] = this._getBinaryFileSizeFormatter();
        this.formatFunctions["DecimalFileSize"] = this._getDecimalFileSizeFormatter();
        this.formatFunctions["Quarter"] = this._getQuarterFormatter();
        this.formatFunctions["Week"] = this._getWeekFormatter();
        this.formatFunctions["hh:mm"] = this._getHourMinuteFormatter();
        this.formatFunctions["hh:mm:ss"] = this._getHourMinuteSecondFormatter();
        this.formatFunctions["MMM d"] = this._getMonthDayFormatter();
        this.formatFunctions["YearQuarter"] = this._getYearQuarterFormatter();
        this.formatFunctions["YearMonth"] = this._getYearMonthFormatter();
    };

    /**
     * Get an instance of ChartFormatter
     * @public
     */
    ChartFormatter.getInstance = function () {
        if (!this.instance) {
            this.instance = new ChartFormatter();
        }
        return this.instance;
    };

    /**
     * Format the value according to the custom format function
     * @public
     */
    ChartFormatter.prototype.format = function (value, pattern) {
        if (pattern) {
            var currentLocale = sap.ui.getCore().getConfiguration().getLanguage();
            if (this._locale !== currentLocale) {
                this._locale = currentLocale;
                this._updatePatternTable();
            }
            if (!jQuery.isArray(value) && isNaN(value)) {
                return value;
            }
            
            if (this.formatFunctions[pattern]) {
                return this.formatFunctions[pattern](value);
            }else {
                return "use_default_formatter";
            }
        }
        return value;
    };

    // ----
    ChartFormatter.prototype._getShortIntegerFormatter = function () {
        var numberFormatter = NumberFormat.getIntegerInstance({style: 'short'});
        return numberFormatter.format.bind(numberFormatter);
    };

    ChartFormatter.prototype._getStandardIntegerFormatter = function () {
        var numberFormatter = NumberFormat.getIntegerInstance({style: 'standard'});
        return numberFormatter.format.bind(numberFormatter);
    };

    ChartFormatter.prototype._getShortFloatFormatter = function () {
        var numberFormatter = NumberFormat.getFloatInstance({style: 'short'});
        return numberFormatter.format.bind(numberFormatter);
    };

    ChartFormatter.prototype._getShortFloatMFD2Formatter = function () {
        var numberFormatter = NumberFormat.getFloatInstance({style: 'short', maxFractionDigits: 2});
        return numberFormatter.format.bind(numberFormatter);
    };

    ChartFormatter.prototype._getStandardFloatFormatter = function () {
        var numberFormatter = NumberFormat.getFloatInstance({style: 'standard'});
        return numberFormatter.format.bind(numberFormatter);
    };

    ChartFormatter.prototype._getLongFloatFormatter = function () {
        var numberFormatter = NumberFormat.getFloatInstance({style: 'long'});
        return numberFormatter.format.bind(numberFormatter);
    };

    ChartFormatter.prototype._getPercentFormatter = function () {
        var numberFormatter = NumberFormat.getPercentInstance({style: 'standard'});
        return numberFormatter.format.bind(numberFormatter);
    };

    ChartFormatter.prototype._getStandardPercentFormatter = function () {
        var numberFormatter = NumberFormat.getPercentInstance({style: 'standard'});
        return numberFormatter.format.bind(numberFormatter);
    };

    ChartFormatter.prototype._getStandardPercentMFD2Formatter = function () {
        var numberFormatter = NumberFormat.getPercentInstance({style: 'standard', maxFractionDigits:2});
        return numberFormatter.format.bind(numberFormatter);
    };

    ChartFormatter.prototype._getCurrencyFormatter = function () {
        var numberFormatter = NumberFormat.getCurrencyInstance({style: 'standard'});
        return numberFormatter.format.bind(numberFormatter);
    };

    ChartFormatter.prototype._getStandardCurrencyFormatter = function () {
        var numberFormatter = NumberFormat.getCurrencyInstance({style: 'standard'});
        return numberFormatter.format.bind(numberFormatter);
    };

    ChartFormatter.prototype._getMediumYearFormatter = function () {
        var dateFormatter = DateFormat.getDateTimeInstance({pattern: 'yyyy'});
        return dateFormatter.format.bind(dateFormatter);
    };

    ChartFormatter.prototype._getMediumMonthFormatter = function () {
        var dateFormatter = DateFormat.getDateTimeInstance({pattern: 'MMM'});
        return dateFormatter.format.bind(dateFormatter);
    };

    ChartFormatter.prototype._getMediumDayFormatter = function () {
        var dateFormatter = DateFormat.getDateTimeInstance({pattern: 'dd'});
        return dateFormatter.format.bind(dateFormatter);
    };

    ChartFormatter.prototype._getMediumHourFormatter = function () {
        var dateFormatter = DateFormat.getDateTimeInstance({pattern: 'HH'});
        return dateFormatter.format.bind(dateFormatter);
    };

    ChartFormatter.prototype._getMediumMinuteFormatter = function () {
        var dateFormatter = DateFormat.getDateTimeInstance({pattern: 'mm'});
        return dateFormatter.format.bind(dateFormatter);
    };

    ChartFormatter.prototype._getQuarterFormatter = function () {
        var dateFormatter = DateFormat.getDateInstance({pattern: "qqq"});
        return dateFormatter.format.bind(dateFormatter);
    };

    ChartFormatter.prototype._getWeekFormatter = function () {
        var dateFormatter = DateFormat.getDateInstance({pattern: "www"});
        return dateFormatter.format.bind(dateFormatter);
    };

    ChartFormatter.prototype._getHourMinuteFormatter = function () {
        var dateFormatter = DateFormat.getDateTimeInstance({format: "HHmm"});
        return dateFormatter.format.bind(dateFormatter);
    };

    ChartFormatter.prototype._getCVOMHourZeroFormatter = function (value) {
        return this.formatFunctions["MediumHour"](value) + semicolon + "00";
    };

    ChartFormatter.prototype._getHourMinuteSecondFormatter = function () {
        var dateFormatter = DateFormat.getDateTimeInstance({format: "HHmmss"});
        return dateFormatter.format.bind(dateFormatter);
    };

    ChartFormatter.prototype._getYearQuarterFormatter = function () {
        var dateFormatter = DateFormat.getDateTimeInstance({format: "yQ"});
        return dateFormatter.format.bind(dateFormatter);
    };

    ChartFormatter.prototype._getYearMonthFormatter = function () {
        var dateFormatter = DateFormat.getDateTimeInstance({format: "yMMM"});
        return dateFormatter.format.bind(dateFormatter);
    };

    ChartFormatter.prototype._getCVOMSecondFormatter = function (value) {
        return this.formatFunctions["MediumSecond"](value) + "''";
    };

    ChartFormatter.prototype._getCVOMMonthFormatter = function (value) {
        return this.formatFunctions["MediumMonth"](value);
    };

    ChartFormatter.prototype._getCVOMDayFormater = function (value) {
        return this.formatFunctions["MediumDay"](value);
    };

    ChartFormatter.prototype._getMonthDayFormatter = function () {
        var dateFormatter = DateFormat.getDateTimeInstance({format: "MMMdd"});
        return dateFormatter.format.bind(dateFormatter);
    };

    ChartFormatter.prototype._getMediumSecondFormatter = function () {
        var dateFormatter = DateFormat.getDateTimeInstance({pattern: 'ss'});
        return dateFormatter.format.bind(dateFormatter);
    };

    ChartFormatter.prototype._getYearMonthDayFormatter = function () {
        var dateFormatter = DateFormat.getDateTimeInstance({format: "yMMMdd"});
        return dateFormatter.format.bind(dateFormatter);
    }; 

    ChartFormatter.prototype._getBinaryFileSizeFormatter = function () {
        var fileSizeFormatter = FileSizeFormat.getInstance({binaryFilesize: true});
        return fileSizeFormatter.format.bind(fileSizeFormatter);
    };

    ChartFormatter.prototype._getDecimalFileSizeFormatter = function () {
        var fileSizeFormatter = FileSizeFormat.getInstance({binaryFilesize: false});
        return fileSizeFormatter.format.bind(fileSizeFormatter);
    };

    ChartFormatter.prototype.registerCustomFormatter = function (pattern, formatter) {
        this.formatFunctions[pattern] = formatter;
    };

    return ChartFormatter;
}, true);


}; // end of sap/viz/ui5/format/ChartFormatter.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.theming.Util') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

jQuery.sap.declare('sap.viz.ui5.theming.Util'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/theming/Util",function() {
	"use strict";

	var Util = {};

	/**
	 * CSS Parameters to Properties mapping object
	 */
	Util._mapping = {
	  "sapUiChartLabelHoverColor":                        [
	                                                        "categoryAxis.hoverShadow.color",
	                                                        "categoryAxis2.hoverShadow.color",
	                                                        "legend.hoverShadow.color",
	                                                        "rowAxis.hoverShadow.color",
	                                                        "columnAxis.hoverShadow.color",
	                                                        "timeAxis.hoverShadow.color"
	                                                      ],
	  "sapUiChartLabelPressedColor":                      [
	                                                        "categoryAxis.mouseDownShadow.color",
	                                                        "categoryAxis2.mouseDownShadow.color",
	                                                        "legend.mouseDownShadow.color",
	                                                        "rowAxis.mouseDownShadow.color",
	                                                        "columnAxis.mouseDownShadow.color",
	                                                        "timeAxis.mouseDownShadow.color"
	                                                      ],
	  "sapUiChartCategoryAxisLabelFontColor":             [
	                                                        "categoryAxis.label.style.color",
	                                                        "categoryAxis2.label.style.color",
	                                                        "categoryAxis.label.parentStyle.color",
	                                                        "categoryAxis2.label.parentStyle.color",
	                                                        "columnAxis.label.style.color",
	                                                        "rowAxis.label.style.color",
	                                                        "timeAxis.label.style.color",
	                                                        "plotArea.callout.label.style.color"
	                                                      ],
	  "sapUiChartValueAxisLabelFontColor":                [
	                                                        "valueAxis.label.style.color",
	                                                        "valueAxis2.label.style.color"
	                                                      ],
	  "sapUiChartCategoryAxisLabelFontSize":              [
	                                                        "categoryAxis.label.style.fontSize",
	                                                        "categoryAxis2.label.style.fontSize",
	                                                        "categoryAxis.label.parentStyle.fontSize",
	                                                        "categoryAxis2.label.parentStyle.fontSize",
	                                                        "rowAxis.label.style.fontSize",
	                                                        "columnAxis.label.style.fontSize",
	                                                        "timeAxis.label.style.fontSize"
	                                                      ],
	  "sapUiChartValueAxisLabelFontSize":                 [
	                                                        "valueAxis.label.style.fontSize",
	                                                        "valueAxis2.label.style.fontSize"
	                                                      ],
	  "sapUiChartCategoryAxisLineColor":                  [
	                                                        "categoryAxis.color",
	                                                        "categoryAxis2.color",
	                                                        "timeAxis.color"
	                                                      ],
	  "sapUiChartValueAxisLineColor":                     [
	                                                        "valueAxis.color",
	                                                        "valueAxis2.color"
	                                                      ],
	  "sapUiChartBackgroundColor":                        [
	                                                        "general.background.color",
	                                                        "plotArea.background.color",
	                                                        "plotArea.referenceLine.defaultStyle.label.background"
	                                                      ],
	  "sapUiFontFamily":                                  [
	                                                        "plotArea.dataLabel.style.fontFamily",
	                                                        "plotArea.dimensionLabel.style.fontFamily",
	                                                        "plotArea.referenceLine.defaultStyle.label.fontFamily",
	                                                        "plotArea.highlight.centerName.style.fontFamily",
	                                                        "plotArea.highlight.centerValue.style.fontFamily",
	                                                        "categoryAxis.title.style.fontFamily",
	                                                        "categoryAxis2.title.style.fontFamily",
	                                                        "categoryAxis.label.style.fontFamily",
	                                                        "categoryAxis2.label.style.fontFamily",
	                                                        "timeAxis.title.style.fontFamily",
	                                                        "timeAxis.label.style.fontFamily",
	                                                        "valueAxis.title.style.fontFamily",
	                                                        "valueAxis.label.style.fontFamily",
	                                                        "valueAxis2.label.style.fontFamily",
	                                                        "valueAxis2.title.style.fontFamily",
	                                                        "columnAxis.title.style.fontFamily",
	                                                        "columnAxis.label.style.fontFamily",
	                                                        "rowAxis.title.style.fontFamily",
	                                                        "rowAxis.label.style.fontFamily",
	                                                        "legend.title.style.fontFamily",
	                                                        "legend.label.style.fontFamily",
	                                                        "sizeLegend.title.style.fontFamily",
	                                                        "sizeLegend.label.style.fontFamily",
	                                                        "title.style.fontFamily",
	                                                        "plotArea.callout.label.style.fontFamily"
	                                                      ],
	  "sapUiChartLabelFontWeight":                        [
	                                                        "plotArea.dataLabel.style.fontWeight",
	                                                        "plotArea.dimensionLabel.style.fontWeight",
	                                                        "plotArea.referenceLine.defaultStyle.label.fontWeight",
	                                                        "plotArea.highlight.centerName.style.fontWeight",
	                                                        "plotArea.highlight.centerValue.style.fontWeight",
	                                                        "categoryAxis.label.style.fontWeight",
	                                                        "categoryAxis2.label.style.fontWeight",
	                                                        "timeAxis.label.style.fontWeight",
	                                                        "valueAxis.label.style.fontWeight",
	                                                        "valueAxis2.label.style.fontWeight",
	                                                        "columnAxis.label.style.fontWeight",
	                                                        "rowAxis.label.style.fontWeight",
	                                                        "legend.label.style.fontWeight",
	                                                        "sizeLegend.label.style.fontWeight"
	                                                      ],
	  "sapUiChartLegendLabelFontColor":                   [
	                                                        "legend.label.style.color",
	                                                        "sizeLegend.label.style.color"
	                                                      ],
	  "sapUiChartLegendTitleFontColor":                   [
	                                                        "legend.title.style.color",
	                                                        "sizeLegend.title.style.color"
	                                                      ],
	  "sapUiChartLegendTitleFontSize":                    [
	                                                        "legend.title.style.fontSize",
	                                                        "sizeLegend.title.style.fontSize"
	                                                      ],
	  "sapUiChartLegendLabelFontSize":                    [
	                                                        "legend.label.style.fontSize",
	                                                        "sizeLegend.label.style.fontSize"
	                                                      ],
	  "sapUiChartPaletteUndefinedColor":                  "plotArea.defaultOthersStyle.color",
	  "sapUiChartPaletteSemanticBadLight1":               "general.defaultTimePeriodColor",
	  "sapUiChartGridlineColor":                          [
	                                                        "plotArea.gridline.color",
	                                                        "plotArea.grid.line.color",
	                                                        "plotArea.dataLabel.line.color"
	                                                      ],
	  "sapUiChartReferenceLineColor":                     ["plotArea.referenceLine.defaultStyle.color",
	                                                        "plotArea.callout.line.color"
	                                                      ],
	  "sapUiChartReferenceLineLabelColor":                "plotArea.referenceLine.defaultStyle.label.color",
	  "sapUiChartDataLabelFontSize":                      [
	                                                        "plotArea.dataLabel.style.fontSize",
	                                                        "plotArea.dimensionLabel.style.fontSize",
	                                                        "plotArea.referenceLine.defaultStyle.label.fontSize",
	                                                        "plotArea.callout.label.style.fontSize"
	                                                      ],
	  "sapUiChartScrollBarThumbColor":                    [
	                                                        "plotArea.scrollbar.thumb.fill",
	                                                        "legend.scrollbar.thumb.fill"
	                                                      ],
	  "sapUiChartScrollBarTrackColor":                    [
	                                                        "plotArea.scrollbar.track.fill",
	                                                        "legend.scrollbar.track.fill"
	                                                      ],
	  "sapUiChartScrollBarThumbHoverColor":               [
	                                                        "plotArea.scrollbar.thumb.hoverFill",
	                                                        "legend.scrollbar.thumb.hoverFill"
	                                                      ],
	  "sapUiChartScrollbarThumbPadding":                  [
	                                                        "plotArea.scrollbar.spacing",
	                                                        "legend.scrollbar.spacing"
	                                                      ],
	  "sapUiChartScrollbarBorderColor":                   [
	                                                        "plotArea.scrollbar.border.color",
	                                                        "legend.scrollbar.border.color"
	                                                      ],
	  "sapUiChartScrollbarBorderSize":                    [
	                                                        "plotArea.scrollbar.border.width",
	                                                        "legend.scrollbar.border.width"
	                                                      ],
	  "sapUiChartMainTitleFontColor":                       "title.style.color",
	  "sapUiChartAxisTitleFontColor":                       [
	                                                        "categoryAxis.title.style.color",
	                                                        "categoryAxis2.title.style.color",
	                                                        "valueAxis.title.style.color",
	                                                        "valueAxis2.title.style.color",
	                                                        "columnAxis.title.style.color",
	                                                        "rowAxis.title.style.color",
	                                                        "timeAxis.title.style.color"
	                                                      ],
	  "sapUiChartMainTitleFontSize":                      "title.style.fontSize",
	  "sapUiChartAxisTitleFontSize":                      [
	                                                        "categoryAxis.title.style.fontSize",
	                                                        "categoryAxis2.title.style.fontSize",
	                                                        "valueAxis.title.style.fontSize",
	                                                        "valueAxis2.title.style.fontSize",
	                                                        "columnAxis.title.style.fontSize",
	                                                        "rowAxis.title.style.fontSize",
	                                                        "timeAxis.title.style.fontSize"
	                                                      ],
	  "sapUiChartTitleFontWeight":                        [
	                                                        "title.style.fontWeight",
	                                                        "legend.title.style.fontWeight",
	                                                        "categoryAxis.title.style.fontWeight",
	                                                        "categoryAxis2.title.style.fontWeight",
	                                                        "categoryAxis.label.parentStyle.fontWeight",
	                                                        "categoryAxis2.label.parentStyle.fontWeight",
	                                                        "valueAxis.title.style.fontWeight",
	                                                        "valueAxis2.title.style.fontWeight",
	                                                        "columnAxis.title.style.fontWeight",
	                                                        "rowAxis.title.style.fontWeight",
	                                                        "timeAxis.title.style.fontWeight",
	                                                        "plotArea.callout.label.style.fontWeight"
	                                                      ],
	  "sapUiChartDataPointBorderColor":                   [
	                                                        "plotArea.dataPoint.stroke.color",
	                                                        "interaction.deselected.stroke.color"
	                                                      ],
	  "sapUiChartDataPointBorderHoverSelectedColor":      [
	                                                        "interaction.hover.stroke.color",
	                                                        "interaction.selected.stroke.color"
	                                                      ],
	  "sapUiChartDataPointNotSelectedBackgroundOpacity":  "interaction.deselected.opacity",
	  "sapUiChartTargetColor":                            ["plotArea.target.valueColor",
	  													   "plotArea.linkline.color"],
	  "sapUiChartTargetShadowColor":                      "plotArea.target.shadowColor",
	  "sapUiChartBubbleBGOpacity":                        "plotArea.dataPoint.opacity",
	  "sapUiGroupContentBackground":                      "tooltip.background.color",
	  "sapVizChartTooltipBorderStroke":                   [
	                                                        "tooltip.background.borderColor",
	                                                        "tooltip.separationLine.color"
	                                                      ],
	  "sapUiChartPopoverDataItemFontColor":               [
	                                                        "tooltip.bodyDimensionLabel.color",
	                                                        "tooltip.bodyDimensionValue.color",
	                                                        "tooltip.bodyMeasureLabel.color",
	                                                        "tooltip.bodyMeasureValue.color",
	                                                        "tooltip.footerLabel.color"
	                                                      ],
	  "sapUiChartPaletteSemanticNeutral":                 ["plotArea.dataPoint.color.total"],
	  "sapUiChartPaletteQualitativeHue1":                 ["plotArea.dataPoint.color.positive"],
	  "sapUiChartPaletteQualitativeHue2":                 ["plotArea.dataPoint.color.negative"],
	  "sapUiChartLightText":                              ["timeAxis.label.style.parentColor"],
	  "sapUiChartZeroAxisColor":                          ["plotArea.gridline.zeroLine.color"],
      "sapUiChartDataLabelFontColor":                     ["plotArea.dataLabel.style.color"],
      "sapUiChartFocusWidth": 							  ["interaction.keyboard.width"],
      "sapUiContentFocusColor": 					  ["interaction.keyboard.color"]
	};

	(function () {
		var isMobile = (sap.ui.Device.system.tablet || sap.ui.Device.system.phone);
		if(isMobile){
	        Util._mapping["sapUiChartBackgroundColor"] = ["general.background.color",
	                                                 "plotArea.background.color",
	                                                  "plotArea.referenceLine.defaultStyle.label.background",
	                                                  "plotArea.scrollbar.track.fill",
	                                                  "legend.scrollbar.track.fill"]; 
	        Util._mapping["sapUiChartScrollBarThumbColor"] = [];
	        Util._mapping["sapUiChartScrollBarTrackColor"] = [];
	        Util._mapping["sapUiChartScrollBarThumbHoverColor"] = ["plotArea.scrollbar.thumb.hoverFill",
	                                                          "legend.scrollbar.thumb.hoverFill",
	                                                          "plotArea.scrollbar.thumb.fill",
	                                                          "legend.scrollbar.thumb.fill"];  
	    }else{
	        Util._mapping["sapUiChartBackgroundColor"] = ["general.background.color",
	                                                "plotArea.background.color",
	                                                "plotArea.referenceLine.defaultStyle.label.background"]; 
	        Util._mapping["sapUiChartScrollBarThumbColor"] = ["plotArea.scrollbar.thumb.fill",
	                                                     "legend.scrollbar.thumb.fill"];
	        Util._mapping["sapUiChartScrollBarTrackColor"] = ["plotArea.scrollbar.track.fill",
	                                                     "legend.scrollbar.track.fill"];
	        Util._mapping["sapUiChartScrollBarThumbHoverColor"] = ["plotArea.scrollbar.thumb.hoverFill",
	                                                          "legend.scrollbar.thumb.hoverFill"];
	    }   
	})();

	Util._exclude = {
	  "valueAxis.color": ["*dual*"],
	  "valueAxis.title.style.color": ["*dual*"],
	  "valueAxis2.color": ["*dual*"],
	  "valueAxis2.title.style.color": ["*dual*"]
	};

	/**
	 * Read CSS parameters and convert them to CVOM properties
	 *
	 * @return {object}
	 * @example {"plot.dataLabel.style.color": "0xff00ff", "title.style.color":
	 *          "0x00ff00", ...}
	 */
	Util.readCSSParameters = function(chartType, oControl) {
	  var property = {};
	  var mapping = Util._mapping;
	  var exclude = Util._exclude;
	  for (var key in mapping) {
	    if (mapping.hasOwnProperty(key)) {
	      var value = sap.ui.core.theming.Parameters.get(key, oControl);
	      if (value) {
	        var index = value.indexOf('rem');
	        if (index > -1) {
	          var temp = value.substring(0, index);
	          value = temp *
	            parseFloat(window.getComputedStyle(document.documentElement).fontSize) + 'px';
	        }
	        var path = mapping[key];
	        if (Object.prototype.toString.call(path) === '[object Array]') {
	          for (var i = 0; i < path.length; i++) {
	            if (!isExcluded(exclude, path[i], chartType)) {
	              addProperty(property, path[i], value);
	            }
	          }
	        } else {
	          if (!isExcluded(exclude, path, chartType)) {
	            addProperty(property, path, value);
	          }
	        }
	      }
	    }
	  }
	  return property;

	  function addProperty(property, path, value) {
	    var keys = path.split('.');
	    var prop = property;
	    for (var i = 0; i < keys.length - 1; i++) {
	      var key = keys[i];
	      if (undefined == prop[key] || null == prop[key]) {
	        prop[key] = {}
	      }
	      prop = prop[key];
	    }
	    key = keys[i];
	    prop[key] = value;
	  }

	  function isExcluded(exclude, path, chartType) {
	    var result = false;
	    if (exclude.hasOwnProperty(path)) {
	      var types = exclude[path];
	      for (var i = 0; i < types.length; i++) {
	        var pattern = types[i].replace(/\*/g, '.*').replace(/\?/g, '.').replace(/\|/g, '$|^');
	        var reg = RegExp('^' + pattern + '$')
	        if (reg.test(chartType)) {
	          result = true;
	          break;
	        }
	      }
	    }
	    return result;
	  }
	};


	return Util;

}, /* bExport= */ true);

}; // end of sap/viz/ui5/theming/Util.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.utils.CommonUtil') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */
jQuery.sap.declare('sap.viz.ui5.utils.CommonUtil'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/utils/CommonUtil",function() {
    "use strict";

    var CommonUtil = {};

    CommonUtil.extendScales = function() {
        var o = {}, target = arguments[0] || [], i = 0, len = target.length, result = [];
        for (; i < len; i++) {
            o[target[i].feed] = target[i];
        }
        for (i = 1, len = arguments.length; i < len; i++) {
            var source = arguments[i];
            for (var j = 0, length = source.length; j < length; j++ ) {
                //If !o[source[j].feed], assign source[j] to it. Otherwise, replace it. 
                o[source[j].feed] = source[j];
            }
        }
        for (i in o) {
            result.push(o[i]);
         }
        return result;
    };

    return CommonUtil;
});

}; // end of sap/viz/ui5/utils/CommonUtil.js
if ( !jQuery.sap.isDeclared('sap.viz.library') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

/**
 * Initialization Code and shared classes of library sap.viz.
 */
jQuery.sap.declare('sap.viz.library'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
jQuery.sap.require('sap.ui.core.Core'); // unlisted dependency retained
jQuery.sap.require('sap.ui.core.library'); // unlisted dependency retained
sap.ui.define("sap/viz/library",['sap/ui/core/Core',
	'sap/ui/core/library',
	'sap/viz/ui5/format/ChartFormatter',
	'sap/viz/ui5/api/env/Format'
	],
	function(Core, library1) {
	"use strict";

	/**
	 * Chart controls based on the SAP BI CVOM charting library
	 *
	 * @namespace
	 * @name sap.viz
	 * @public
	 */

	// delegate further initialization of this library to the Core
	sap.ui.getCore().initLibrary({
		name : "sap.viz",
		dependencies : ["sap.ui.core"],
		types: [
			//@@begin generated-types-list
			"sap.viz.ui5.types.Area_drawingEffect",
			"sap.viz.ui5.types.Area_marker_shape",
			"sap.viz.ui5.types.Area_mode",
			"sap.viz.ui5.types.Area_orientation",
			"sap.viz.ui5.types.Axis_gridline_type",
			"sap.viz.ui5.types.Axis_label_unitFormatType",
			"sap.viz.ui5.types.Axis_position",
			"sap.viz.ui5.types.Axis_type",
			"sap.viz.ui5.types.Background_direction",
			"sap.viz.ui5.types.Background_drawingEffect",
			"sap.viz.ui5.types.Bar_drawingEffect",
			"sap.viz.ui5.types.Bar_orientation",
			"sap.viz.ui5.types.Bubble_drawingEffect",
			"sap.viz.ui5.types.Bullet_drawingEffect",
			"sap.viz.ui5.types.Bullet_orientation",
			"sap.viz.ui5.types.Combination_drawingEffect",
			"sap.viz.ui5.types.Combination_orientation",
			"sap.viz.ui5.types.Datalabel_orientation",
			"sap.viz.ui5.types.Datalabel_outsidePosition",
			"sap.viz.ui5.types.Datalabel_paintingMode",
			"sap.viz.ui5.types.Datalabel_position",
			"sap.viz.ui5.types.Legend_layout_position",
			"sap.viz.ui5.types.Line_drawingEffect",
			"sap.viz.ui5.types.Line_marker_shape",
			"sap.viz.ui5.types.Line_orientation",
			"sap.viz.ui5.types.Pie_drawingEffect",
			"sap.viz.ui5.types.Pie_valign",
			"sap.viz.ui5.types.Scatter_drawingEffect",
			"sap.viz.ui5.types.StackedVerticalBar_drawingEffect",
			"sap.viz.ui5.types.StackedVerticalBar_mode",
			"sap.viz.ui5.types.StackedVerticalBar_orientation",
			"sap.viz.ui5.types.Title_alignment",
			"sap.viz.ui5.types.Tooltip_drawingEffect",
			"sap.viz.ui5.types.VerticalBar_drawingEffect",
			"sap.viz.ui5.types.VerticalBar_orientation",
			"sap.viz.ui5.types.controller.Interaction_pan_orientation",
			"sap.viz.ui5.types.controller.Interaction_selectability_mode",
			"sap.viz.ui5.types.legend.Common_alignment",
			"sap.viz.ui5.types.legend.Common_drawingEffect",
			"sap.viz.ui5.types.legend.Common_position",
			"sap.viz.ui5.types.legend.Common_type"




			//@@end generated-types-list
		],
		interfaces: [],
		controls: [
			"sap.viz.ui5.VizContainer",
			"sap.viz.ui5.controls.Popover",
			"sap.viz.ui5.controls.VizTooltip",
			"sap.viz.ui5.controls.VizFrame",
			"sap.viz.ui5.controls.common.BaseControl",
			"sap.viz.ui5.core.BaseChart",
			//@@begin generated-controls-list
			"sap.viz.ui5.Area",
			"sap.viz.ui5.Area100",
			"sap.viz.ui5.Bar",
			"sap.viz.ui5.Bubble",
			"sap.viz.ui5.Bullet",
			"sap.viz.ui5.Column",
			"sap.viz.ui5.Combination",
			"sap.viz.ui5.Donut",
			"sap.viz.ui5.DualBar",
			"sap.viz.ui5.DualColumn",
			"sap.viz.ui5.DualCombination",
			"sap.viz.ui5.DualLine",
			"sap.viz.ui5.DualStackedColumn",
			"sap.viz.ui5.DualStackedColumn100",
			"sap.viz.ui5.Heatmap",
			"sap.viz.ui5.HorizontalArea",
			"sap.viz.ui5.HorizontalArea100",
			"sap.viz.ui5.Line",
			"sap.viz.ui5.Pie",
			"sap.viz.ui5.Scatter",
			"sap.viz.ui5.StackedColumn",
			"sap.viz.ui5.StackedColumn100",
			"sap.viz.ui5.TimeBubble",
			"sap.viz.ui5.Treemap"



			//@@end generated-controls-list
		],
		elements: [
			"sap.viz.ui5.controls.common.feeds.AnalysisObject",
			"sap.viz.ui5.controls.common.feeds.FeedItem",
			"sap.viz.ui5.core.BaseStructuredType",
			"sap.viz.ui5.data.Dataset",
			"sap.viz.ui5.data.CustomDataset",
			"sap.viz.ui5.data.DimensionDefinition",
			"sap.viz.ui5.data.FlattenedDataset",
			"sap.viz.ui5.data.MeasureDefinition",
			//@@begin generated-elements-list
			"sap.viz.ui5.types.Area",
			"sap.viz.ui5.types.Area_animation",
			"sap.viz.ui5.types.Area_hoverline",
			"sap.viz.ui5.types.Area_marker",
			"sap.viz.ui5.types.Area_tooltip",
			"sap.viz.ui5.types.Axis",
			"sap.viz.ui5.types.Axis_axisTick",
			"sap.viz.ui5.types.Axis_axisline",
			"sap.viz.ui5.types.Axis_gridline",
			"sap.viz.ui5.types.Axis_indicator",
			"sap.viz.ui5.types.Axis_label",
			"sap.viz.ui5.types.Axis_layoutInfo",
			"sap.viz.ui5.types.Axis_scale",
			"sap.viz.ui5.types.Axis_title",
			"sap.viz.ui5.types.Background",
			"sap.viz.ui5.types.Background_border",
			"sap.viz.ui5.types.Background_border_bottom",
			"sap.viz.ui5.types.Background_border_left",
			"sap.viz.ui5.types.Background_border_right",
			"sap.viz.ui5.types.Background_border_top",
			"sap.viz.ui5.types.Bar",
			"sap.viz.ui5.types.Bar_animation",
			"sap.viz.ui5.types.Bar_tooltip",
			"sap.viz.ui5.types.Bubble",
			"sap.viz.ui5.types.Bubble_animation",
			"sap.viz.ui5.types.Bubble_axisTooltip",
			"sap.viz.ui5.types.Bubble_hoverline",
			"sap.viz.ui5.types.Bullet",
			"sap.viz.ui5.types.Bullet_tooltip",
			"sap.viz.ui5.types.Combination",
			"sap.viz.ui5.types.Combination_animation",
			"sap.viz.ui5.types.Combination_bar",
			"sap.viz.ui5.types.Combination_dataShape",
			"sap.viz.ui5.types.Combination_line",
			"sap.viz.ui5.types.Combination_line_marker",
			"sap.viz.ui5.types.Combination_tooltip",
			"sap.viz.ui5.types.Datalabel",
			"sap.viz.ui5.types.Datatransform",
			"sap.viz.ui5.types.Datatransform_autoBinning",
			"sap.viz.ui5.types.Datatransform_dataSampling",
			"sap.viz.ui5.types.Datatransform_dataSampling_grid",
			"sap.viz.ui5.types.Heatmap",
			"sap.viz.ui5.types.Heatmap_animation",
			"sap.viz.ui5.types.Heatmap_border",
			"sap.viz.ui5.types.Heatmap_tooltip",
			"sap.viz.ui5.types.Legend",
			"sap.viz.ui5.types.Legend_layout",
			"sap.viz.ui5.types.Line",
			"sap.viz.ui5.types.Line_animation",
			"sap.viz.ui5.types.Line_hoverline",
			"sap.viz.ui5.types.Line_marker",
			"sap.viz.ui5.types.Line_tooltip",
			"sap.viz.ui5.types.Pie",
			"sap.viz.ui5.types.Pie_animation",
			"sap.viz.ui5.types.Pie_tooltip",
			"sap.viz.ui5.types.RootContainer",
			"sap.viz.ui5.types.RootContainer_layout",
			"sap.viz.ui5.types.Scatter",
			"sap.viz.ui5.types.Scatter_animation",
			"sap.viz.ui5.types.Scatter_axisTooltip",
			"sap.viz.ui5.types.Scatter_hoverline",
			"sap.viz.ui5.types.StackedVerticalBar",
			"sap.viz.ui5.types.StackedVerticalBar_animation",
			"sap.viz.ui5.types.StackedVerticalBar_tooltip",
			"sap.viz.ui5.types.Title",
			"sap.viz.ui5.types.Title_layout",
			"sap.viz.ui5.types.Tooltip",
			"sap.viz.ui5.types.Tooltip_background",
			"sap.viz.ui5.types.Tooltip_bodyDimensionLabel",
			"sap.viz.ui5.types.Tooltip_bodyDimensionValue",
			"sap.viz.ui5.types.Tooltip_bodyMeasureLabel",
			"sap.viz.ui5.types.Tooltip_bodyMeasureValue",
			"sap.viz.ui5.types.Tooltip_closeButton",
			"sap.viz.ui5.types.Tooltip_footerLabel",
			"sap.viz.ui5.types.Tooltip_separationLine",
			"sap.viz.ui5.types.Treemap",
			"sap.viz.ui5.types.Treemap_animation",
			"sap.viz.ui5.types.Treemap_border",
			"sap.viz.ui5.types.Treemap_tooltip",
			"sap.viz.ui5.types.VerticalBar",
			"sap.viz.ui5.types.VerticalBar_animation",
			"sap.viz.ui5.types.VerticalBar_tooltip",
			"sap.viz.ui5.types.XYContainer",
			"sap.viz.ui5.types.controller.Interaction",
			"sap.viz.ui5.types.controller.Interaction_pan",
			"sap.viz.ui5.types.controller.Interaction_selectability",
			"sap.viz.ui5.types.layout.Dock",
			"sap.viz.ui5.types.layout.Stack",
			"sap.viz.ui5.types.legend.Common",
			"sap.viz.ui5.types.legend.Common_title"




			//@@end generated-elements-list
		],
		version: "1.50.6"
	});

	//@@begin generated-enums
	/**
	 * List (Enum) type sap.viz.ui5.types.Area_drawingEffect
	 * 
	 * @enum {string}
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
	 */
	sap.viz.ui5.types.Area_drawingEffect = {

		/**
		 * Value normal
		 * @public
		 */
		normal : "normal",

		/**
		 * Value glossy
		 * @public
		 */
		glossy : "glossy"
	};
	/**
	 * List (Enum) type sap.viz.ui5.types.Area_marker_shape
	 * 
	 * @enum {string}
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
	 */
	sap.viz.ui5.types.Area_marker_shape = {

		/**
		 * Value circle
		 * @public
		 */
		circle : "circle",

		/**
		 * Value diamond
		 * @public
		 */
		diamond : "diamond",

		/**
		 * Value triangleUp
		 * @public
		 */
		triangleUp : "triangleUp",

		/**
		 * Value triangleDown
		 * @public
		 */
		triangleDown : "triangleDown",

		/**
		 * Value triangleLeft
		 * @public
		 */
		triangleLeft : "triangleLeft",

		/**
		 * Value triangleRight
		 * @public
		 */
		triangleRight : "triangleRight",

		/**
		 * Value cross
		 * @public
		 */
		cross : "cross",

		/**
		 * Value intersection
		 * @public
		 */
		intersection : "intersection"
	};
	/**
	 * List (Enum) type sap.viz.ui5.types.Area_mode
	 * 
	 * @enum {string}
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
	 */
	sap.viz.ui5.types.Area_mode = {

		/**
		 * Value comparison
		 * @public
		 */
		comparison : "comparison",

		/**
		 * Value percentage
		 * @public
		 */
		percentage : "percentage"
	};
	/**
	 * List (Enum) type sap.viz.ui5.types.Area_orientation
	 * 
	 * @enum {string}
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
	 */
	sap.viz.ui5.types.Area_orientation = {

		/**
		 * Value vertical
		 * @public
		 */
		vertical : "vertical",

		/**
		 * Value horizontal
		 * @public
		 */
		horizontal : "horizontal"
	};
	/**
	 * List (Enum) type sap.viz.ui5.types.Axis_gridline_type
	 * 
	 * @enum {string}
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
	 */
	sap.viz.ui5.types.Axis_gridline_type = {

		/**
		 * Value line
		 * @public
		 */
		line : "line",

		/**
		 * Value dotted
		 * @public
		 */
		dotted : "dotted",

		/**
		 * Value incised
		 * @public
		 */
		incised : "incised"
	};
	/**
	 * List (Enum) type sap.viz.ui5.types.Axis_label_unitFormatType
	 * 
	 * @enum {string}
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
	 */
	sap.viz.ui5.types.Axis_label_unitFormatType = {

		/**
		 * Value MetricUnits
		 * @public
		 */
		MetricUnits : "MetricUnits",

		/**
		 * Value FinancialUnits
		 * @public
		 */
		FinancialUnits : "FinancialUnits"
	};
	/**
	 * List (Enum) type sap.viz.ui5.types.Axis_position
	 * 
	 * @enum {string}
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
	 */
	sap.viz.ui5.types.Axis_position = {

		/**
		 * Value left
		 * @public
		 */
		left : "left",

		/**
		 * Value right
		 * @public
		 */
		right : "right",

		/**
		 * Value top
		 * @public
		 */
		top : "top",

		/**
		 * Value bottom
		 * @public
		 */
		bottom : "bottom"
	};
	/**
	 * List (Enum) type sap.viz.ui5.types.Axis_type
	 * 
	 * @enum {string}
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
	 */
	sap.viz.ui5.types.Axis_type = {

		/**
		 * Value value
		 * @public
		 */
		value : "value",

		/**
		 * Value category
		 * @public
		 */
		category : "category",

		/**
		 * Value timeValue
		 * @public
		 */
		timeValue : "timeValue"
	};
	/**
	 * List (Enum) type sap.viz.ui5.types.Background_direction
	 * 
	 * @enum {string}
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
	 */
	sap.viz.ui5.types.Background_direction = {

		/**
		 * Value horizontal
		 * @public
		 */
		horizontal : "horizontal",

		/**
		 * Value vertical
		 * @public
		 */
		vertical : "vertical"
	};
	/**
	 * List (Enum) type sap.viz.ui5.types.Background_drawingEffect
	 * 
	 * @enum {string}
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
	 */
	sap.viz.ui5.types.Background_drawingEffect = {

		/**
		 * Value normal
		 * @public
		 */
		normal : "normal",

		/**
		 * Value glossy
		 * @public
		 */
		glossy : "glossy"
	};
	/**
	 * List (Enum) type sap.viz.ui5.types.Bar_drawingEffect
	 * 
	 * @enum {string}
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
	 */
	sap.viz.ui5.types.Bar_drawingEffect = {

		/**
		 * Value normal
		 * @public
		 */
		normal : "normal",

		/**
		 * Value glossy
		 * @public
		 */
		glossy : "glossy"
	};
	/**
	 * List (Enum) type sap.viz.ui5.types.Bar_orientation
	 * 
	 * @enum {string}
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
	 */
	sap.viz.ui5.types.Bar_orientation = {

		/**
		 * Value horizontal
		 * @public
		 */
		horizontal : "horizontal",

		/**
		 * Value vertical
		 * @public
		 */
		vertical : "vertical"
	};
	/**
	 * List (Enum) type sap.viz.ui5.types.Bubble_drawingEffect
	 * 
	 * @enum {string}
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
	 */
	sap.viz.ui5.types.Bubble_drawingEffect = {

		/**
		 * Value normal
		 * @public
		 */
		normal : "normal",

		/**
		 * Value glossy
		 * @public
		 */
		glossy : "glossy"
	};
	/**
	 * List (Enum) type sap.viz.ui5.types.Bullet_drawingEffect
	 * 
	 * @enum {string}
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
	 */
	sap.viz.ui5.types.Bullet_drawingEffect = {

		/**
		 * Value normal
		 * @public
		 */
		normal : "normal",

		/**
		 * Value glossy
		 * @public
		 */
		glossy : "glossy"
	};
	/**
	 * List (Enum) type sap.viz.ui5.types.Bullet_orientation
	 * 
	 * @enum {string}
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
	 */
	sap.viz.ui5.types.Bullet_orientation = {

		/**
		 * Value horizontal
		 * @public
		 */
		horizontal : "horizontal",

		/**
		 * Value vertical
		 * @public
		 */
		vertical : "vertical"
	};
	/**
	 * List (Enum) type sap.viz.ui5.types.Combination_drawingEffect
	 * 
	 * @enum {string}
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
	 */
	sap.viz.ui5.types.Combination_drawingEffect = {

		/**
		 * Value normal
		 * @public
		 */
		normal : "normal",

		/**
		 * Value glossy
		 * @public
		 */
		glossy : "glossy"
	};
	/**
	 * List (Enum) type sap.viz.ui5.types.Combination_orientation
	 * 
	 * @enum {string}
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
	 */
	sap.viz.ui5.types.Combination_orientation = {

		/**
		 * Value horizontal
		 * @public
		 */
		horizontal : "horizontal",

		/**
		 * Value vertical
		 * @public
		 */
		vertical : "vertical"
	};
	/**
	 * List (Enum) type sap.viz.ui5.types.Datalabel_orientation
	 * 
	 * @enum {string}
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
	 */
	sap.viz.ui5.types.Datalabel_orientation = {

		/**
		 * Value horizontal
		 * @public
		 */
		horizontal : "horizontal",

		/**
		 * Value vertical
		 * @public
		 */
		vertical : "vertical"
	};
	/**
	 * List (Enum) type sap.viz.ui5.types.Datalabel_outsidePosition
	 * 
	 * @enum {string}
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
	 */
	sap.viz.ui5.types.Datalabel_outsidePosition = {

		/**
		 * Value up
		 * @public
		 */
		up : "up",

		/**
		 * Value down
		 * @public
		 */
		down : "down",

		/**
		 * Value left
		 * @public
		 */
		left : "left",

		/**
		 * Value right
		 * @public
		 */
		right : "right"
	};
	/**
	 * List (Enum) type sap.viz.ui5.types.Datalabel_paintingMode
	 * 
	 * @enum {string}
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
	 */
	sap.viz.ui5.types.Datalabel_paintingMode = {

		/**
		 * Value rectCoordinate
		 * @public
		 */
		rectCoordinate : "rectCoordinate",

		/**
		 * Value polarCoordinate
		 * @public
		 */
		polarCoordinate : "polarCoordinate"
	};
	/**
	 * List (Enum) type sap.viz.ui5.types.Datalabel_position
	 * 
	 * @enum {string}
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
	 */
	sap.viz.ui5.types.Datalabel_position = {

		/**
		 * Value inside
		 * @public
		 */
		inside : "inside",

		/**
		 * Value outside
		 * @public
		 */
		outside : "outside"
	};
	/**
	 * List (Enum) type sap.viz.ui5.types.Legend_layout_position
	 * 
	 * @enum {string}
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
	 */
	sap.viz.ui5.types.Legend_layout_position = {

		/**
		 * Value top
		 * @public
		 */
		top : "top",

		/**
		 * Value bottom
		 * @public
		 */
		bottom : "bottom",

		/**
		 * Value right
		 * @public
		 */
		right : "right",

		/**
		 * Value left
		 * @public
		 */
		left : "left"
	};
	/**
	 * List (Enum) type sap.viz.ui5.types.Line_drawingEffect
	 * 
	 * @enum {string}
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
	 */
	sap.viz.ui5.types.Line_drawingEffect = {

		/**
		 * Value normal
		 * @public
		 */
		normal : "normal",

		/**
		 * Value glossy
		 * @public
		 */
		glossy : "glossy"
	};
	/**
	 * List (Enum) type sap.viz.ui5.types.Line_marker_shape
	 * 
	 * @enum {string}
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
	 */
	sap.viz.ui5.types.Line_marker_shape = {

		/**
		 * Value circle
		 * @public
		 */
		circle : "circle",

		/**
		 * Value diamond
		 * @public
		 */
		diamond : "diamond",

		/**
		 * Value triangleUp
		 * @public
		 */
		triangleUp : "triangleUp",

		/**
		 * Value triangleDown
		 * @public
		 */
		triangleDown : "triangleDown",

		/**
		 * Value triangleLeft
		 * @public
		 */
		triangleLeft : "triangleLeft",

		/**
		 * Value triangleRight
		 * @public
		 */
		triangleRight : "triangleRight",

		/**
		 * Value cross
		 * @public
		 */
		cross : "cross",

		/**
		 * Value intersection
		 * @public
		 */
		intersection : "intersection"
	};
	/**
	 * List (Enum) type sap.viz.ui5.types.Line_orientation
	 * 
	 * @enum {string}
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
	 */
	sap.viz.ui5.types.Line_orientation = {

		/**
		 * Value horizontal
		 * @public
		 */
		horizontal : "horizontal",

		/**
		 * Value vertical
		 * @public
		 */
		vertical : "vertical"
	};
	/**
	 * List (Enum) type sap.viz.ui5.types.Pie_drawingEffect
	 * 
	 * @enum {string}
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
	 */
	sap.viz.ui5.types.Pie_drawingEffect = {

		/**
		 * Value normal
		 * @public
		 */
		normal : "normal",

		/**
		 * Value glossy
		 * @public
		 */
		glossy : "glossy"
	};
	/**
	 * List (Enum) type sap.viz.ui5.types.Pie_valign
	 * 
	 * @enum {string}
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
	 */
	sap.viz.ui5.types.Pie_valign = {

		/**
		 * Value top
		 * @public
		 */
		top : "top",

		/**
		 * Value center
		 * @public
		 */
		center : "center"
	};
	/**
	 * List (Enum) type sap.viz.ui5.types.Scatter_drawingEffect
	 * 
	 * @enum {string}
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
	 */
	sap.viz.ui5.types.Scatter_drawingEffect = {

		/**
		 * Value normal
		 * @public
		 */
		normal : "normal",

		/**
		 * Value glossy
		 * @public
		 */
		glossy : "glossy"
	};
	/**
	 * List (Enum) type sap.viz.ui5.types.StackedVerticalBar_drawingEffect
	 * 
	 * @enum {string}
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
	 */
	sap.viz.ui5.types.StackedVerticalBar_drawingEffect = {

		/**
		 * Value normal
		 * @public
		 */
		normal : "normal",

		/**
		 * Value glossy
		 * @public
		 */
		glossy : "glossy"
	};
	/**
	 * List (Enum) type sap.viz.ui5.types.StackedVerticalBar_mode
	 * 
	 * @enum {string}
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
	 */
	sap.viz.ui5.types.StackedVerticalBar_mode = {

		/**
		 * Value comparison
		 * @public
		 */
		comparison : "comparison",

		/**
		 * Value percentage
		 * @public
		 */
		percentage : "percentage"
	};
	/**
	 * List (Enum) type sap.viz.ui5.types.StackedVerticalBar_orientation
	 * 
	 * @enum {string}
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
	 */
	sap.viz.ui5.types.StackedVerticalBar_orientation = {

		/**
		 * Value horizontal
		 * @public
		 */
		horizontal : "horizontal",

		/**
		 * Value vertical
		 * @public
		 */
		vertical : "vertical"
	};
	/**
	 * List (Enum) type sap.viz.ui5.types.Title_alignment
	 * 
	 * @enum {string}
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
	 */
	sap.viz.ui5.types.Title_alignment = {

		/**
		 * Value left
		 * @public
		 */
		left : "left",

		/**
		 * Value center
		 * @public
		 */
		center : "center",

		/**
		 * Value right
		 * @public
		 */
		right : "right"
	};
	/**
	 * List (Enum) type sap.viz.ui5.types.Tooltip_drawingEffect
	 * 
	 * @enum {string}
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
	 */
	sap.viz.ui5.types.Tooltip_drawingEffect = {

		/**
		 * Value normal
		 * @public
		 */
		normal : "normal",

		/**
		 * Value glossy
		 * @public
		 */
		glossy : "glossy"
	};
	/**
	 * List (Enum) type sap.viz.ui5.types.VerticalBar_drawingEffect
	 * 
	 * @enum {string}
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
	 */
	sap.viz.ui5.types.VerticalBar_drawingEffect = {

		/**
		 * Value normal
		 * @public
		 */
		normal : "normal",

		/**
		 * Value glossy
		 * @public
		 */
		glossy : "glossy"
	};
	/**
	 * List (Enum) type sap.viz.ui5.types.VerticalBar_orientation
	 * 
	 * @enum {string}
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
	 */
	sap.viz.ui5.types.VerticalBar_orientation = {

		/**
		 * Value horizontal
		 * @public
		 */
		horizontal : "horizontal",

		/**
		 * Value vertical
		 * @public
		 */
		vertical : "vertical"
	};
	/**
	 * List (Enum) type sap.viz.ui5.types.controller.Interaction_pan_orientation
	 * 
	 * @enum {string}
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
	 */
	sap.viz.ui5.types.controller.Interaction_pan_orientation = {

		/**
		 * Value horizontal
		 * @public
		 */
		horizontal : "horizontal",

		/**
		 * Value vertical
		 * @public
		 */
		vertical : "vertical",

		/**
		 * Value both
		 * @public
		 */
		both : "both"
	};
	/**
	 * List (Enum) type sap.viz.ui5.types.controller.Interaction_selectability_mode
	 * 
	 * @enum {string}
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
	 */
	sap.viz.ui5.types.controller.Interaction_selectability_mode = {

		/**
		 * Value exclusive
		 * @public
		 */
		exclusive : "exclusive",

		/**
		 * Value inclusive
		 * @public
		 */
		inclusive : "inclusive",

		/**
		 * Value single
		 * @public
		 */
		single : "single",

		/**
		 * Value multiple
		 * @public
		 */
		multiple : "multiple",

		/**
		 * Value none
		 * @public
		 */
		none : "none"
	};
	/**
	 * List (Enum) type sap.viz.ui5.types.legend.Common_alignment
	 * 
	 * @enum {string}
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
	 */
	sap.viz.ui5.types.legend.Common_alignment = {

		/**
		 * Value start
		 * @public
		 */
		start : "start",

		/**
		 * Value middle
		 * @public
		 */
		middle : "middle",

		/**
		 * Value end
		 * @public
		 */
		end : "end"
	};
	/**
	 * List (Enum) type sap.viz.ui5.types.legend.Common_drawingEffect
	 * 
	 * @enum {string}
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
	 */
	sap.viz.ui5.types.legend.Common_drawingEffect = {

		/**
		 * Value normal
		 * @public
		 */
		normal : "normal",

		/**
		 * Value glossy
		 * @public
		 */
		glossy : "glossy"
	};
	/**
	 * List (Enum) type sap.viz.ui5.types.legend.Common_position
	 * 
	 * @enum {string}
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
	 */
	sap.viz.ui5.types.legend.Common_position = {

		/**
		 * Value top
		 * @public
		 */
		top : "top",

		/**
		 * Value bottom
		 * @public
		 */
		bottom : "bottom",

		/**
		 * Value right
		 * @public
		 */
		right : "right",

		/**
		 * Value left
		 * @public
		 */
		left : "left"
	};
	/**
	 * List (Enum) type sap.viz.ui5.types.legend.Common_type
	 * 
	 * @enum {string}
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @ui5-metamodel This enumeration also will be described in the UI5 (legacy) designtime metamodel
	 */
	sap.viz.ui5.types.legend.Common_type = {

		/**
		 * Value ColorLegend
		 * @public
		 */
		ColorLegend : "ColorLegend",

		/**
		 * Value BubbleColorLegend
		 * @public
		 */
		BubbleColorLegend : "BubbleColorLegend",

		/**
		 * Value SizeLegend
		 * @public
		 */
		SizeLegend : "SizeLegend",

		/**
		 * Value MeasureBasedColoringLegend
		 * @public
		 */
		MeasureBasedColoringLegend : "MeasureBasedColoringLegend"
	};























	//@@end generated-enums

	// check whether browser supports svg
	sap.viz.__svg_support = !!document.createElementNS && !!document.createElementNS("http://www.w3.org/2000/svg", "svg").createSVGRect;

	if (sap.viz.__svg_support) {
		//enforce early loading of D3 and Charting lib to load sap.viz.core early
		jQuery.sap.require("sap.ui.thirdparty.d3");
		jQuery.sap.require("sap.ui.thirdparty.require");
		jQuery.sap.require("sap.ui.thirdparty.jqueryui.jquery-ui-core");
		jQuery.sap.require("sap.ui.thirdparty.jqueryui.jquery-ui-widget");
		jQuery.sap.require("sap.ui.thirdparty.jqueryui.jquery-ui-mouse");
		jQuery.sap.require("sap.ui.thirdparty.jqueryui.jquery-ui-draggable");
		jQuery.sap.require("sap.ui.thirdparty.jqueryui.jquery-ui-droppable");
		jQuery.sap.require("sap.viz.libs.canvg");
		jQuery.sap.require("sap.viz.libs.rgbcolor");
		jQuery.sap.require("sap.viz.libs.sap-viz-info-framework");
		jQuery.sap.require("sap.viz.libs.sap-viz-info-charts");
		jQuery.sap.require("sap.viz.resources.chart.templates.standard_fiori.template");
		jQuery.sap.require("sap.viz.ui5.controls.libs.sap-viz-vizframe.sap-viz-vizframe");
		jQuery.sap.require("sap.viz.ui5.controls.libs.sap-viz-vizservices.sap-viz-vizservices");

		// include app/css
		jQuery.sap.includeStyleSheet(jQuery.sap.getModulePath("sap.viz.ui5.controls.css", "/controls.css"));
	}
	
	function initLegacySupport() {
		var LEGACY_NAMES = {
			"sap.viz.core.BaseChart" : "sap.viz.ui5.core.BaseChart",
			"sap.viz.core.BaseStructuredType" : "sap.viz.ui5.core.BaseStructuredType",
			"sap.viz.core.Dataset" : "sap.viz.ui5.data.Dataset",
			"sap.viz.core.DimensionDefinition" : "sap.viz.ui5.data.DimensionDefinition",
			"sap.viz.core.FlattenedDataset" : "sap.viz.ui5.data.FlattenedDataset",
			"sap.viz.core.MeasureDefinition" : "sap.viz.ui5.data.MeasureDefinition",
			"sap.viz.Bar" : "sap.viz.ui5.Bar",
			"sap.viz.Bubble" : "sap.viz.ui5.Bubble",
			"sap.viz.VerticalBar" : "sap.viz.ui5.Column",
			"sap.viz.Combination" : "sap.viz.ui5.Combination",
			"sap.viz.Donut" : "sap.viz.ui5.Donut",
			"sap.viz.Line" : "sap.viz.ui5.Line",
			"sap.viz.Pie" : "sap.viz.ui5.Pie",
			"sap.viz.Scatter" : "sap.viz.ui5.Scatter",
			"sap.viz.StackedVerticalBar" : "sap.viz.ui5.StackedColumn",
			"sap.viz.PercentageStackedVerticalBar" : "sap.viz.ui5.StackedColumn100"
		};

		// create stubs for the most important legacy class names
		jQuery.each(LEGACY_NAMES, function(sOld, sNew) {
			// delegate constructor
			jQuery.sap.setObject(sOld, function() {
				jQuery.sap.log.warning("[Deprecated] chart '" + sOld + "' has been deprecated for several releases and will be removed soon. Use '" + sNew + "' instead.");
				var oNewClass = jQuery.sap.getObject(sNew);
				var oInstance = jQuery.sap.newObject(oNewClass.prototype);
				return oNewClass.apply(oInstance, arguments) || oInstance;
			});
			// delegate extend
			jQuery.sap.setObject(sOld + ".extend", function() {
				jQuery.sap.log.warning("[Deprecated] chart '" + sOld + "' has been deprecated for several releases and will be removed soon. Use '" + sNew + "' instead.");
				return jQuery.sap.getObject(sNew).extend.apply(this, arguments);
			});

			// delegate getMetadata
			jQuery.sap.setObject(sOld + ".getMetadata", function() {
				jQuery.sap.log.warning("[Deprecated] chart '" + sOld + "' has been deprecated for several releases and will be removed soon. Use '" + sNew + "' instead.");
				return jQuery.sap.getObject(sNew).getMetadata.apply(this, arguments);
			});
		});

		// create stubs for the enum types (static classes)
		var oLibrary = sap.ui.getCore().getLoadedLibraries()["sap.viz"];
		if (oLibrary && oLibrary.types) {
			jQuery.each(oLibrary.types, function(idx, sName) {
				if (sName.indexOf("sap.viz.ui5.types.") === 0) {
					jQuery.sap.setObject("sap.viz.types." + sName.slice("sap.viz.ui5.types.".length), jQuery.sap.getObject(sName));
				}
			});
		}
	}

	initLegacySupport();

	var bChartResourceRequested = false;
	var vizContainerInfo = {
		// unloaded, loading, loaded
		'status' : 'unloaded'
	};

	/*
	 * For Viz Chart, it only needs to load chart resources.
	 */
	sap.viz._initializeVIZ = function() {
		if (!sap.viz.__svg_support) {
			return;
		}
		if (bChartResourceRequested) {
			return;
		}
		// Load chart resources only
		sap.viz._initializeENV(true);
		bChartResourceRequested = true;
	};

	/*
	 * For VizContainer, both chart and vizContainer resource should be loaded.
	 */
	sap.viz._initializeVIZControls = function(isVizContainer, callback) {
		if (!sap.viz.__svg_support) {
			callback(false);
		}
		if (vizContainerInfo.status === 'unloaded') {
			vizContainerInfo.callbacks = [callback];
			vizContainerInfo.status = 'loading';
			// Load
			sap.viz._initializeENV(!bChartResourceRequested, isVizContainer ? 'container' : 'controls', function() {
				vizContainerInfo.status = 'loaded';
				if (vizContainerInfo && vizContainerInfo.callbacks) {
					for (var i = 0; i < vizContainerInfo.callbacks.length; i++) {
						vizContainerInfo.callbacks[i](true);
					}
					delete vizContainerInfo.callbacks;
				}
			});
			// Update status
			bChartResourceRequested = true;
		} else if (vizContainerInfo.status === 'loading') {
			vizContainerInfo.callbacks.push(callback);
		} else if (vizContainerInfo.status === 'loaded') {
			callback(true);
		}
	};

	/*
	 * Initialize the environment settings.
	 */
	sap.viz._initializeENV = function(bLoadChartResouce, pathVizControls, callback) {
		// Initialize the path
		var sPaths = sap.viz.api.env.Resource.path("sap.viz.api.env.Language.loadPaths") || [];
		if (bLoadChartResouce) {
			// Override the build in path for chart
			sPaths = [];
			sPaths.push(jQuery.sap.getModulePath("sap.viz.resources.chart.langs", "/"));
			sPaths.push(jQuery.sap.getModulePath("sap.viz.resources.framework.langs", "/"));
		}
		if (pathVizControls === 'container') {
			sPaths.push(jQuery.sap.getModulePath("sap.viz.ui5.container.libs.locale", "/"));
		} else if (pathVizControls === 'controls') {
			sPaths.push(jQuery.sap.getModulePath("sap.viz.ui5.controls.libs.sap-viz-vizframe.resources.locale", "/"));
		}
		var treatAsMobile = "auto";
		if (sap.ui && sap.ui.Device && sap.ui.Device.system) {
			if (sap.ui.Device.system.desktop === true) {
				treatAsMobile = "off";
			}
			else if (sap.ui.Device.system.desktop === false) {
				treatAsMobile = "on";
			}
		}
		sap.viz.api.env.globalSettings({"treatAsMobile": treatAsMobile});
		// Load
		if (sPaths.length > 0) {
			if (pathVizControls) {
				// Format
				sap.viz.api.env.Format.useDefaultFormatter(true);
				sap.viz.api.env.globalSettings({"useLatestFormatPrefix":true});
			}
			// Resource path
			sap.viz.api.env.Resource.path("sap.viz.api.env.Language.loadPaths", sPaths);
			jQuery.sap.log.info("VIZ: load path for lang manager set to " + sPaths);
			// Default assets root
			if (pathVizControls) {
				if (pathVizControls === 'container') {
					var GlobalConfig = sap.viz.controls.common.config.GlobalConfig;
					GlobalConfig.defaultAssetsRoot(jQuery.sap.getModulePath('sap.viz.ui5.container.libs', '/'));
				}
			}
			// Theme
			if (pathVizControls) {
				sap.viz.api.env.Resource.path("sap.viz.api.env.Template.loadPaths", [jQuery.sap.getModulePath("sap.viz.resources.chart.templates", "/")]);
				sap.ui.getCore().attachThemeChanged(function(evt) {
					sap.viz._applyTheme();
				});
				sap.viz._applyTheme();
			}
			sap.viz._applyLocale(callback);
		}
	};

	sap.viz._applyTheme = function() {
		// Set template to viz
		sap.viz._changeTemplate('standard_fiori');
		// Reset color mapping
		jQuery.sap.require("sap.ui.core.theming.Parameters");
		var mapping = {};
		var write = function(key) {
			var color = sap.ui.core.theming.Parameters.get(key);
			if (color) {
				mapping[key] = color;
			}
		};
		// Qualitative color
		write('sapUiChartPaletteQualitativeHue1');
		write('sapUiChartPaletteQualitativeHue2');
		write('sapUiChartPaletteQualitativeHue3');
		write('sapUiChartPaletteQualitativeHue4');
		write('sapUiChartPaletteQualitativeHue5');
		write('sapUiChartPaletteQualitativeHue6');
		write('sapUiChartPaletteQualitativeHue7');
		write('sapUiChartPaletteQualitativeHue8');
		write('sapUiChartPaletteQualitativeHue9');
		write('sapUiChartPaletteQualitativeHue10');
		write('sapUiChartPaletteQualitativeHue11');
		// Semantic color
		write('sapUiChartPaletteSemanticBadLight3');
		write('sapUiChartPaletteSemanticBadLight2');
		write('sapUiChartPaletteSemanticBadLight1');
		write('sapUiChartPaletteSemanticBad');
		write('sapUiChartPaletteSemanticBadDark1');
		write('sapUiChartPaletteSemanticBadDark2');
		write('sapUiChartPaletteSemanticCriticalLight3');
		write('sapUiChartPaletteSemanticCriticalLight2');
		write('sapUiChartPaletteSemanticCriticalLight1');
		write('sapUiChartPaletteSemanticCritical');
		write('sapUiChartPaletteSemanticCriticalDark1');
		write('sapUiChartPaletteSemanticCriticalDark2');
		write('sapUiChartPaletteSemanticGoodLight3');
		write('sapUiChartPaletteSemanticGoodLight2');
		write('sapUiChartPaletteSemanticGoodLight1');
		write('sapUiChartPaletteSemanticGood');
		write('sapUiChartPaletteSemanticGoodDark1');
		write('sapUiChartPaletteSemanticGoodDark2');
		write('sapUiChartPaletteSemanticNeutralLight3');
		write('sapUiChartPaletteSemanticNeutralLight2');
		write('sapUiChartPaletteSemanticNeutralLight1');
		write('sapUiChartPaletteSemanticNeutral');
		write('sapUiChartPaletteSemanticNeutralDark1');
		write('sapUiChartPaletteSemanticNeutralDark2');
		// Sequential color
		write('sapUiChartPaletteSequentialHue1Light3');
		write('sapUiChartPaletteSequentialHue1Light2');
		write('sapUiChartPaletteSequentialHue1Light1');
		write('sapUiChartPaletteSequentialHue1');
		write('sapUiChartPaletteSequentialHue1Dark1');
		write('sapUiChartPaletteSequentialHue1Dark2');
		write('sapUiChartPaletteSequentialHue2Light3');
		write('sapUiChartPaletteSequentialHue2Light2');
		write('sapUiChartPaletteSequentialHue2Light1');
		write('sapUiChartPaletteSequentialHue2');
		write('sapUiChartPaletteSequentialHue2Dark1');
		write('sapUiChartPaletteSequentialHue2Dark2');
		write('sapUiChartPaletteSequentialHue3Light3');
		write('sapUiChartPaletteSequentialHue3Light2');
		write('sapUiChartPaletteSequentialHue3Light1');
		write('sapUiChartPaletteSequentialHue3');
		write('sapUiChartPaletteSequentialHue3Dark1');
		write('sapUiChartPaletteSequentialHue3Dark2');
		write('sapUiChartPaletteSequentialNeutralLight3');
		write('sapUiChartPaletteSequentialNeutralLight2');
		write('sapUiChartPaletteSequentialNeutralLight1');
		write('sapUiChartPaletteSequentialNeutral');
		write('sapUiChartPaletteSequentialNeutralDark1');
		write('sapUiChartPaletteSequentialNeutralDark2');
		write('sapUiChoroplethRegionBG');
		write('sapUiChartZeroAxisColor');
		sap.viz.api.env.globalSettings({
			'colorMapping': mapping
		})
	};

	sap.viz._changeTemplate = function(template) {
		if (sap.viz.api.env.Template.get() !== template) {
			sap.viz.api.env.Template.set(template);
		}
	};

	sap.viz._applyLocale = function(callback) {
		// Get locale from ui5
		var oLocale = sap.ui.getCore().getConfiguration().getLocale();
		var sVIZLanguageId = oLocale.getLanguage();
		if (sVIZLanguageId === 'zh') {
			sVIZLanguageId = oLocale.getLanguage() + (oLocale.getRegion() ? "_" + oLocale.getRegion() : "");
		}
		// Set locale to viz
		sap.viz.api.env.Locale.set(sVIZLanguageId, function() {
			if (callback) {
				callback();
			}
		});
		jQuery.sap.log.info("VIZ: env initialized (locale=" + sap.ui.getCore().getConfiguration().getLanguage() + ")");
	};

	return sap.viz;

});

}; // end of sap/viz/library.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.controls.chartpopover.ShapeMarker') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */
jQuery.sap.declare('sap.viz.ui5.controls.chartpopover.ShapeMarker'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
jQuery.sap.require('jquery.sap.global'); // unlisted dependency retained
jQuery.sap.require('sap.ui.core.Control'); // unlisted dependency retained
jQuery.sap.require('sap.ui.core.theming.Parameters'); // unlisted dependency retained
sap.ui.define("sap/viz/ui5/controls/chartpopover/ShapeMarker",[
        'jquery.sap.global',
        'sap/ui/core/Control',
        'sap/ui/core/theming/Parameters',
        '../common/utils/SelectionDetailUtil'
    ],
    function(jQuery, Control, Parameters, SelectionDetailUtil) {
        "use strict";

        var ShapeMarker = Control.extend('sap.viz.ui5.controls.chartpopover.ShapeMarker', {
            metadata: {
                properties: {
                    'type': 'string',
                    'color': 'string',
                    'markerSize': 'int',
                    'showWithLine': 'string',
                    'lineInfo': 'object',
                    'stroke': 'object',
                    'pattern': 'string'
                }
            },

            renderer: {
                render: function(oRm, oControl) {
                    var markerSize = oControl.getMarkerSize() ? oControl.getMarkerSize() : 10;
                    var posX = markerSize / 2,
                        posY = posX,
                        width = markerSize,
                        height = markerSize;
                    if (oControl._isShowWithLine()) {
                        posX = markerSize;
                        width = markerSize * 2;

                        markerSize = 6;
                    }
                    var props = {
                        rx: markerSize / 2,
                        ry: markerSize / 2,
                        type: oControl.getType(),
                        borderWidth: 0
                    };
                    oRm.write('<div');
                    oRm.writeClasses();
                    oRm.write('>');
                    oRm.write('<svg width=' + width + 'px height=' + height + 'px ' + 'focusable = false');
                    oRm.write('>');
                    if (oControl._isShowWithLine()) {
                        var lineInfo = oControl.getLineInfo(),
                            lineColor = Parameters.get(lineInfo.lineColor);
                        if (!lineColor) {
                            lineColor = lineInfo.lineColor ? lineInfo.lineColor : oControl.getColor();
                        }

                        if (lineInfo.lineType === 'dotted' || lineInfo.lineType === 'dash') {
                            oRm.write("<line x1 = '0' y1='" + posY + "' x2 = '" + width + "' y2 = '" + posY + "' ");
                            oRm.write("stroke-width = '2' ");
                            oRm.write(" stroke-dasharray = '5, 3' ");
                        } else if (lineInfo.lineType === 'dot') {
                            var pointCount = Math.floor(width / 2);
                            pointCount = pointCount & 1 ? pointCount : pointCount - 1;
                            if (pointCount < 3) {
                                pointCount = 3;
                            }
                            var lineWidth = width / pointCount;
                            oRm.write("<line x1 ='" + (lineWidth / 2) + "'y1='" + posY + "' x2 = '" + width + "' y2 = '" + posY + "' ");
                            oRm.write(" stroke-dasharray = ' 0," + lineWidth * 2 + "'");
                            oRm.write("stroke-width = '" + lineWidth + "'");
                            oRm.write("stroke-linecap = 'round'");
                        } else {
                            oRm.write("<line x1 = '0' y1='" + posY + "' x2 = '" + width + "' y2 = '" + posY + "' ");
                            oRm.write("stroke-width = '2' ");
                        }
                        oRm.write(" stroke = '" + lineColor + "'");
                        oRm.write("> </line>");
                    }
                    if (props.type) {
                        oRm.write("<path d = '" + SelectionDetailUtil.generateShapePath(props) + "'");
                        var pattern = oControl.getPattern();
                        if (!pattern) {
                            oRm.write(" fill = '" + oControl.getColor() + "'");
                        } else if (pattern === 'noFill') {
                            var fColor = Parameters.get('sapUiChartBackgroundColor');
                            if (fColor === 'transparent') {
                                fColor = "white";
                            }
                            oRm.write(" fill = '" + fColor + "'");
                            oRm.write(" stroke = '" + oControl.getColor() + "' stroke-width= '1px'");
                        } else {
                            oRm.write(" fill = '" + pattern + "'");
                        }


                        oRm.write(" transform = 'translate(" + posX + "," + posY + ")'");
                        oRm.write('></path>');
                    }
                    oRm.write('</svg>');
                    oRm.write('</div>');
                    oRm.writeStyles();
                }
            }
        });

        ShapeMarker.prototype._isShowWithLine = function() {
            return (this.getShowWithLine() === 'line') && this.getLineInfo();
        };



        return ShapeMarker;
    });

}; // end of sap/viz/ui5/controls/chartpopover/ShapeMarker.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.controls.common.BaseControl') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides control sap.viz.ui5.controls.common.BaseControl.
jQuery.sap.declare('sap.viz.ui5.controls.common.BaseControl'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
jQuery.sap.require('sap.ui.core.Control'); // unlisted dependency retained
sap.ui.define("sap/viz/ui5/controls/common/BaseControl",['sap/ui/core/Control','sap/viz/library'],
	function(Control, library) {
	"use strict";

	/**
	 * Constructor for a new ui5/controls/common/BaseControl.
	 *
	 * @param {string} [sId] id for the new control, generated automatically if no id is given 
	 * @param {object} [mSettings] initial settings for the new control
	 *
	 * @class
	 * An abstract base class for all VIZ controls
	 * @extends sap.ui.core.Control
	 *
	 * @constructor
	 * @public
	 * @since 1.22.0
	 * @name sap.viz.ui5.controls.common.BaseControl
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var BaseControl = Control.extend("sap.viz.ui5.controls.common.BaseControl", /** @lends sap.viz.ui5.controls.common.BaseControl.prototype */ { metadata : {

		library : "sap.viz",
		properties : {

			/**
			 * Configuration for initialization to VizControl. This property could only set via settings parameter in Constructor.
			 */
			uiConfig : {type : "object", group : "Misc", defaultValue : null},

			/**
			 * Width of the VizControl as a CSS size.
			 */
			width : {type : "sap.ui.core.CSSSize", group : "Misc", defaultValue : '640px'},

			/**
			 * Height of the VizControl as a CSS size.
			 */
			height : {type : "sap.ui.core.CSSSize", group : "Misc", defaultValue : '480px'}
		}
	}});


	BaseControl.prototype.init = function() {
		this._app$ = null;
		this._controls = {};

		this._handlers = {
			'resize' : null
		};

		this._locale = null;

		this._pendingRerendering = false;
		// Load resources.
		this._resourceLoaded = false;
		sap.viz._initializeVIZControls(this instanceof sap.viz.ui5.VizContainer,jQuery.proxy(function(success) {
			this._resourceLoaded = success;

			this.invalidate();
			// Set timeout to assure applySetting done
			setTimeout(function() {
				if (!this.getUIArea()) {
					this._render();
				}
			}.bind(this), 0);
		}, this));
	};

	BaseControl.prototype.exit = function() {
		this._app$ = null;

		this._deregister();

		for ( var keyword in this._controls) {
			this._controls[keyword].destroy();
		}
	};

	BaseControl.prototype.onBeforeRendering = function() {
		this._deregister();
	};

	BaseControl.prototype.onAfterRendering = function() {
		this._render();
	};

	BaseControl.prototype.onThemeChanged = function() {
	    if (this.getDomRef()) {
		    this.invalidate();
	        if (!this._pendingRerendering) {
	            this._render();
	        }
		}
	};

	BaseControl.prototype.onLocalizationChanged = function() {
		if (this._locale !== sap.ui.getCore().getConfiguration().getLocale()) {
			this._render();
		}
	};

	BaseControl.prototype._render = function() {
		if (this._resourceLoaded && this.getDomRef()) {
			this._pendingRerendering = false;

			this._locale = sap.ui.getCore().getConfiguration().getLocale();

			if (!this._app$) {
				this._app$ = jQuery(document.createElement('div')).appendTo(
						this.getDomRef()).addClass('ui5-viz-controls-app');
				jQuery(this._app$).attr("data-sap-ui-preserve", true);

				this._validateSize();
				this._createChildren();
			} else {
				this._app$.appendTo(this.getDomRef());
				this._validateSize();
				this._updateChildren();
			}
			this._register();
		}
	};

	BaseControl.prototype._createChildren = function() {
		// Should override by implementation
	};
	BaseControl.prototype._updateChildren = function() {
		// Should override by implementation
	};

	BaseControl.prototype._deregister = function() {
		if (this._handlers.resize) {
			sap.ui.core.ResizeHandler.deregister(this._handlers.resize);
		}
		this._handlers.resize = null;
	};

	BaseControl.prototype._register = function() {
		this._deregister();
		this._handlers.resize = sap.ui.core.ResizeHandler.register(
				this.getDomRef(), jQuery.proxy(this._validateSize, this));
	};

	BaseControl.prototype._validateSize = function() {
		// Should override by implementation
	};

	BaseControl.prototype.invalidate = function() {
		Control.prototype.invalidate.apply(this, arguments);

		if (this.getUIArea()) {
			this._pendingRerendering = true;
		}
	};


	return BaseControl;

});

}; // end of sap/viz/ui5/controls/common/BaseControl.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.controls.common.feeds.AnalysisObject') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides control sap.viz.ui5.controls.common.feeds.AnalysisObject.
jQuery.sap.declare('sap.viz.ui5.controls.common.feeds.AnalysisObject'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
jQuery.sap.require('sap.ui.core.Element'); // unlisted dependency retained
sap.ui.define("sap/viz/ui5/controls/common/feeds/AnalysisObject",['sap/ui/core/Element','sap/viz/library'],
	function(Element, library) {
	"use strict";

	/**
	 * Constructor for a new ui5/controls/common/feeds/AnalysisObject.
	 *
	 * @param {string} [sId] id for the new control, generated automatically if no id is given 
	 * @param {object} [mSettings] initial settings for the new control
	 *
	 * @class
	 * AnalysisObject Class
	 * @extends sap.ui.core.Element
	 *
	 * @constructor
	 * @public
	 * @since 1.21.0
	 * @name sap.viz.ui5.controls.common.feeds.AnalysisObject
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var AnalysisObject = Element.extend("sap.viz.ui5.controls.common.feeds.AnalysisObject", /** @lends sap.viz.ui5.controls.common.feeds.AnalysisObject.prototype */ { metadata : {

		library : "sap.viz",
		properties : {

			/**
			 * Uid of analysis object
			 */
			uid : {type : "string", group : "Misc", defaultValue : null},

			/**
			 * Name of an analysis object.
			 */
			name : {type : "string", group : "Misc", defaultValue : null},

			/**
			 * Type of an analysis object. Enumeration: Measure, Dimension
			 */
			type : {type : "string", group : "Misc", defaultValue : null},

			/**
			 * Data type of an analysis object. Enumeration: string, number, date
			 */
			dataType : {type : "string", group : "Misc", defaultValue : null}
		}
	}});

	///**
	// * This file defines behavior for the control,
	// */
	AnalysisObject.prototype._toInnerFmt = function(generator) {
		var uid = this.getProperty('uid');
		var type = this.getProperty('type');
		if (uid && type) {
			return new generator(uid, this.getProperty('name'), type, this.getProperty('dataType'), this._inResult());
		}
	};

	/**
	 * to set the analysis object is inresult or not to let BVR services to handle adding mnd automaully,
	 * for now, the inresult is not intended to be exposed
	**/
	AnalysisObject.prototype._inResult = function(bInResult){
		if (!arguments.length){
			return !!this._bInResult;
		}else {
			this._bInResult = bInResult;
			return this;
		}
            
	};

	AnalysisObject.toVizControlsFmt = function(analysisObjects) {
		return Array.prototype.map.call(analysisObjects, function(analysisObject) {
			return analysisObject._toInnerFmt(function(id, name, type, dataType) {
				type = type ? type.toLowerCase() : type;
				dataType = dataType ? dataType.toLowerCase() : dataType;
				return new sap.viz.controls.common.feeds.AnalysisObject(id, name, type, dataType);
			});
		});
	};

	AnalysisObject.fromVizControlsFmt = function(instances) {
		return Array.prototype.map.call(instances, function(instance) {
			return new AnalysisObject({
				'uid': instance.id(),
				'name': instance.name(),
				'type': instance.type(),
				'dataType' : instance.dataType()
			});
		});
	};

	AnalysisObject.toLightWeightFmt = function(analysisObjects) {
		return Array.prototype.map.call(analysisObjects, function(analysisObject) {
			return analysisObject._toInnerFmt(function(id, name, type, dataType, inResult) {
				dataType = _lwDataTypeMapping[dataType] || dataType;
				type = _lwTypeMapping[type] || type;
				if (dataType || dataType.length) {
					return {
						'id' : id,
						'type' : type,
						'inResult': inResult,
						'dataType' : dataType
					};
				} else {
					return {
						'id' : id,
						'type' : type,
						'inResult': inResult
					};
				}
			});
		});
	};

	AnalysisObject.fromLightWeightFmt = function(analysisObjectsLightWeightFmt) {
		return Array.prototype.map.call(analysisObjectsLightWeightFmt, function(instance) {
			return (new AnalysisObject({
				'uid': instance.id,
				'name': instance.id,
				'type': instance.type,
				'dataType' : _invertLwDataTypeMapping[instance.dataType] || instance.dataType
			}))._inResult(instance.inResult);
		});
	};
	var _invert = function(object) {
		var result = {};
		for (var key in object) {
			var value = object[key];
			result[value] = key;
		}
		return result;
	}; 

	var _lwDataTypeMapping = {
		'string' : 'String',
		'number' : 'Number',
		'date' : 'Date'
	};
	var _lwTypeMapping = {
		'measure' : 'Measure',
		'dimension' : 'Dimension'
	};
	var _invertLwDataTypeMapping = _invert(_lwDataTypeMapping);


	return AnalysisObject;

});

}; // end of sap/viz/ui5/controls/common/feeds/AnalysisObject.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.controls.common.feeds.FeedItem') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides control sap.viz.ui5.controls.common.feeds.FeedItem.
jQuery.sap.declare('sap.viz.ui5.controls.common.feeds.FeedItem'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
jQuery.sap.require('sap.ui.core.Element'); // unlisted dependency retained
sap.ui.define("sap/viz/ui5/controls/common/feeds/FeedItem",['sap/ui/core/Element','sap/viz/library','./AnalysisObject'],
	function(Element, library, AnalysisObject) {
	"use strict";

	/**
	 * Constructor for a new ui5/controls/common/feeds/FeedItem.
	 *
	 * @param {string} [sId] id for the new control, generated automatically if no id is given 
	 * @param {object} [mSettings] initial settings for the new control
	 *
	 * @class
	 * FeedItem Class
	 * @extends sap.ui.core.Element
	 *
	 * @constructor
	 * @public
	 * @since 1.21.0
	 * @name sap.viz.ui5.controls.common.feeds.FeedItem
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var FeedItem = Element.extend("sap.viz.ui5.controls.common.feeds.FeedItem", /** @lends sap.viz.ui5.controls.common.feeds.FeedItem.prototype */ { metadata : {

		library : "sap.viz",
		properties : {

			/**
			 * Uid of a feed item.
			 * Please reference to bindings section in VIZDOCS to get the exact sUid string for each chart type.
			 * 
			 * For example:
			 * 	Bar chart > bindings > categoryAxis ; color ; valueAxis.
			 * 	The 'categoryAxis' should be the sUid for x axis feeding for bar chart.
			 */
			uid : {type : "string", group : "Misc", defaultValue : null},

			/**
			 * Type of a feed item. Enumeration: Measure, Dimension
			 */
			type : {type : "string", group : "Misc", defaultValue : null},

			/**
			 * Value of a feed item.
			 */
			values : {type : "any[]", group : "Misc", defaultValue : null}
		}
	}});

	// /**
	// * This file defines behavior for the control,
	// */
	FeedItem.prototype._toInnerFmt = function(generator) {
		var uid = this.getProperty('uid');
		var type = this.getProperty('type');
		var values = this.getProperty('values');
	
		if (uid && type) {
			this._analysisObjects = [];
			if (values) {
				var isTimeBased = uid === "timeAxis";
				values.forEach( function(value, index, values) {
					if (typeof value === 'string') {
						this._analysisObjects[index] = new AnalysisObject({
							'uid' : value,
							'name' : value,
							'type' : value === 'MND' ? 'MND' : type
						});
					} else if (value instanceof AnalysisObject){
						this._analysisObjects[index] = value;
					} else {
						return;
					}
					if (isTimeBased){
						//Hard coded here to define a time-based analysis object. It's required by CVOM Viz Frame.
						this._analysisObjects[index].setDataType("date");
					}
				}.bind(this));

			}
			return generator(uid, type, this._analysisObjects);
		}
	};

	FeedItem.toVizControlsFmt = function(feeds) {
		return Array.prototype.map.call(feeds, function(feed) {
			return feed._toInnerFmt(function(id, type, values) {
				return new sap.viz.controls.common.feeds.FeedItem(id, type, 
					sap.viz.ui5.controls.common.feeds.AnalysisObject.toVizControlsFmt(values));
			});
		});
	};

	FeedItem.fromVizControlsFmt = function(feedsVizControlsFmt) {
		return Array.prototype.map.call(feedsVizControlsFmt, function(instance) {
			return new FeedItem({
				'uid' : instance.id(),
				'type' : instance.type(),
				'values' : sap.viz.ui5.controls.common.feeds.AnalysisObject.fromVizControlsFmt(instance.values())
			});
		});
	};

	FeedItem.toLightWeightFmt = function(feeds) {
		return Array.prototype.map.call(feeds, function(feed) {
			return feed._toInnerFmt(function(id, type, values) {
				return {
					'id' : id,
					'type' : type,
					'values' : sap.viz.ui5.controls.common.feeds.AnalysisObject.toLightWeightFmt(values)
				}
			});
		});
	};

	FeedItem.fromLightWeightFmt = function(feedsLightWeightFmt) {
		return Array.prototype.map.call(feedsLightWeightFmt, function(instance) {
			return new FeedItem({
				'uid' : instance.id,
				'type' : instance.type,
				'values' : sap.viz.ui5.controls.common.feeds.AnalysisObject.fromLightWeightFmt(instance.values)
			});
		});
	};

	return FeedItem;

});

}; // end of sap/viz/ui5/controls/common/feeds/FeedItem.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.controls.common.helpers.DefaultPropertiesHelper') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

jQuery.sap.declare('sap.viz.ui5.controls.common.helpers.DefaultPropertiesHelper'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
jQuery.sap.require('sap.ui.Device'); // unlisted dependency retained
sap.ui.define("sap/viz/ui5/controls/common/helpers/DefaultPropertiesHelper",[
        'sap/viz/ui5/format/ChartFormatter',
        'sap/ui/Device'
    ],
    function(ChartFormatter, Device) {
        "use strict";

        var DefaultPropertiesHelper = {};

        var FIORI_MOBILE_PROP = {
            plotArea: {
                scrollbar: {
                    spacing: 2
                }
            },
            legend: {
                scrollbar: {
                    spacing: 2
                }
            }
        };

        var isMobile = sap.ui.Device.system.tablet || sap.ui.Device.system.phone;
        var DEFAULT_FIORI_PROPS = {
            'tooltip': {
                'visible': false
            },
            'general': {
                'groupData': true
            },
            'plotArea': {
                'window': {
                    'start': 'firstDataPoint'
                },
                'dataLabel': {
                    'hideWhenOverlap': true,
                    'respectShapeWidth': true,
                    'style': {
                        'color': null
                    }
                },
                'dataPointSize': {
                    'min': (isMobile) ? 40 : 24,
                    'max': 96
                }
            },
            'interaction': {
                'behaviorType': 'noHoverBehavior',
                'selectability': {
                    'mode': 'multiple'
                },
                'zoom': {
                    'enablement': 'enabled',
                    'direction': 'categoryAxis'
                },
                'enableKeyboard': true,
                'enableInternalEvents': true
            },
        'timeAxis' : {
            'label' : {
                'forceToShowFirstLastData': true
            }
        },
            'categoryAxis': {
                'label': {
                    'angle': 45,
                    'rotation': 'auto'
                }
            },
            'legendGroup': {
                'layout': {
                    'position': 'auto',
                    'respectPlotPosition': false
                },
                'forceToShow': true
            },
            'legend': {
                'isScrollable': true
            }
        };

        var FIORI_DUAL_PROPS = {
            'plotArea': {
                'primaryValuesColorPalette': ['sapUiChartPaletteSequentialHue1',
                    'sapUiChartPaletteSequentialHue1Light2',
                    'sapUiChartPaletteSequentialHue1Dark1'
                ],
                'secondaryValuesColorPalette': ['sapUiChartPaletteSequentialHue2',
                    'sapUiChartPaletteSequentialHue2Light2',
                    'sapUiChartPaletteSequentialHue2Dark1'
                ]
            },
            "valueAxis": {
                "title": {
                    "style": {
                        "color": "sapUiChartPaletteSequentialHue1Dark1"
                    }
                },
                "axisLine": {
                    "visible": false
                },
                "color": "sapUiChartPaletteSequentialHue1Dark1"
            },
            "valueAxis2": {
                "title": {
                    "style": {
                        "color": "sapUiChartPaletteSequentialHue2Dark1"
                    }
                },
                "axisLine": {
                    "visible": false
                },
                "color": "sapUiChartPaletteSequentialHue2Dark1"
            }
        };

        DefaultPropertiesHelper.getExtraProp = function(applicationSet) {
            if (applicationSet === "fiori" && isMobile) {
                return jQuery.extend(true, {}, FIORI_MOBILE_PROP);
            } else {
                return {};
            }
        };

        DefaultPropertiesHelper._getFiori = function(PropertyService, type) {
            var result = PropertyService.mergeProperties(type, {},
                DefaultPropertiesHelper._general,
                DefaultPropertiesHelper._specified[type.replace('info/', '')] || {}
            );

            var defFiori = jQuery.extend(true, {}, DEFAULT_FIORI_PROPS);
            result = PropertyService.mergeProperties(type, defFiori, result);

            if (/dual/.test(type)) {
                result = PropertyService.mergeProperties(type, result, FIORI_DUAL_PROPS);
            }

            return result;
        };

        DefaultPropertiesHelper.get = function(PropertyService, type, applicationSet) {
            if (applicationSet === "fiori") {
                return DefaultPropertiesHelper._getFiori(PropertyService, type);
            } else {
                return PropertyService.mergeProperties(type, {},
                    DefaultPropertiesHelper._general,
                    DefaultPropertiesHelper._specified[type.replace('info/', '')] || {},
                    applyDefaultFormatString({}, type)
                );
            }
        };

        function getPropertiesDefination(propDef, path) {
            if (propDef == null || path.legnth === 0) {
                return propDef;
            }
            var e = propDef[path[0]];
            if (e && e.children) {
                return getPropertiesDefination(e.children, path.slice(1));
            }
            return e;
        }

        function setPropertiesValue(properties, path, value) {
            if (path.length === 0) {
                return value;
            }
            properties = properties || {};
            var p = properties[path[0]];
            properties[path[0]] = setPropertiesValue(p, path.slice(1), value);
            return properties;
        }

        var DEFAULT_LABEL_FORMAT = "u";
        var formatStringPaths = [
            ["valueAxis", "label", "formatString"],
            ["valueAxis2", "label", "formatString"]
        ];

        function applyDefaultFormatString(properties, chartType) {
            var metadata = sap.viz.api.metadata.Viz.get(chartType);
            if (metadata) {
                var propDef = metadata.properties;
                formatStringPaths.forEach(function(path) {
                    var p = getPropertiesDefination(propDef, path);
                    if (p && p.hasOwnProperty("defaultValue")) {
                        setPropertiesValue(properties, path, DEFAULT_LABEL_FORMAT);
                    }
                });
            }
            return properties;
        }

        DefaultPropertiesHelper._general = {
            "title": {
                "visible": true
            },
            "legend": {
                "visible": true
            },
            "plotArea": {
                //Keep animation which belongs to Viz Chart for extension chart.
                "animation": {
                    "dataLoading": false,
                    "dataUpdating": false,
                    "resizing": false
                },
                'colorPalette': ['sapUiChartPaletteQualitativeHue1',
                    'sapUiChartPaletteQualitativeHue2',
                    'sapUiChartPaletteQualitativeHue3',
                    'sapUiChartPaletteQualitativeHue4',
                    'sapUiChartPaletteQualitativeHue5',
                    'sapUiChartPaletteQualitativeHue6',
                    'sapUiChartPaletteQualitativeHue7',
                    'sapUiChartPaletteQualitativeHue8',
                    'sapUiChartPaletteQualitativeHue9',
                    'sapUiChartPaletteQualitativeHue10',
                    'sapUiChartPaletteQualitativeHue11'
                ],
                'primaryValuesColorPalette': ['sapUiChartPaletteSequentialHue1Light1',
                    'sapUiChartPaletteSequentialHue1',
                    'sapUiChartPaletteSequentialHue1Dark1'
                ],
                'secondaryValuesColorPalette': ['sapUiChartPaletteSequentialHue2Light1',
                    'sapUiChartPaletteSequentialHue2',
                    'sapUiChartPaletteSequentialHue2Dark1'
                ]
            }
        };

        DefaultPropertiesHelper._specified = {
            "heatmap": {
                "plotArea": {
                    "nullColor": "sapUiChoroplethRegionBG",
                    "colorPalette": [
                        "sapUiChartPaletteSequentialHue1Light2",
                        "sapUiChartPaletteSequentialHue1Light1",
                        "sapUiChartPaletteSequentialHue1",
                        "sapUiChartPaletteSequentialHue1Dark1",
                        "sapUiChartPaletteSequentialHue1Dark2"
                    ]
                }
            }
        };


        return DefaultPropertiesHelper;
    });

}; // end of sap/viz/ui5/controls/common/helpers/DefaultPropertiesHelper.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.core.BaseStructuredType') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides control sap.viz.ui5.core.BaseStructuredType.
jQuery.sap.declare('sap.viz.ui5.core.BaseStructuredType'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
jQuery.sap.require('sap.ui.core.Element'); // unlisted dependency retained
sap.ui.define("sap/viz/ui5/core/BaseStructuredType",['sap/ui/core/Element','sap/viz/library','./BaseChartMetadata'],
	function(Element, library, BaseChartMetadata) {
	"use strict";

	/**
	 * Constructor for a new ui5/core/BaseStructuredType.
	 *
	 * @param {string} [sId] id for the new control, generated automatically if no id is given 
	 * @param {object} [mSettings] initial settings for the new control
	 *
	 * @class
	 * Abstract base class for all elements that represent VIZ modules or complex property types
	 * @extends sap.ui.core.Element
	 *
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2.
	 * Charting API is not finished yet and might change completely
	 * @name sap.viz.ui5.core.BaseStructuredType
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var BaseStructuredType = Element.extend("sap.viz.ui5.core.BaseStructuredType", /** @lends sap.viz.ui5.core.BaseStructuredType.prototype */ { metadata : {

		"abstract" : true,
		library : "sap.viz"
	}}, BaseChartMetadata);

	BaseStructuredType.prototype._getOrCreate = function(sName) {
		var o = this.getAggregation(sName);
		if ( !o ) {
			var oMetadata = this.getMetadata(),
				oAggregation = oMetadata.getAggregation(sName);
			
			if ( oAggregation && oAggregation._oParent === oMetadata ) {
				jQuery.sap.require(oAggregation.type);
				var FNClass = jQuery.sap.getObject(oAggregation.type);
				o = new FNClass();
				this.setAggregation(sName, o);
			}
		}
		return o;
	};

	BaseStructuredType.prototype._getOptions = function(bIncludeDefaults) {

		var oMetadata = this.getMetadata(),
				mOptions = {},
				mProps,mDefaults,mAggrs,n,oValue;
	
		// HACK: convert UI5 wrapper names back to VIZ names
		function tovizKey(n) {
		  n = (n === 'toolTip' ? 'tooltip' : n);
			return n;
		}
	
		function tovizValue(n){
		  var result = n;
		  switch(n){
		  case 'triangleUp' : 
		    result = 'triangle-up';
		    break;
		  case 'triangleDown' :
		    result = 'triangle-down';
		    break;
		  case 'triangleLeft' :
		    result = 'triangle-left';
		    break;
		  case 'triangleRight' :
		    result = 'triangle-right';
		    break;
		  }
	    return result;
		}
	
		// enforce enrichment of metadata 
		oMetadata.getJSONKeys();
	
		// collect non-default values for all VIZ properties with a simple type
		var mProps = oMetadata.getAllProperties();
		var mDefaults = oMetadata.getPropertyDefaults();
		for(n in mProps) {
			// assumption: a property is a VIZ property if and only if it has been introduced by this class
			// This check needs to be enhanced as soon as inheritance is reflected in the wrappers
			if ( mProps[n]._oParent === oMetadata ) {   
		    oValue = this.getProperty(n);
		    // use values only for non-default values
		    if(oValue instanceof Array){
		      if(bIncludeDefaults || !mDefaults[n] || oValue.toString() !== mDefaults[n].toString()){
		        mOptions[tovizKey(n)] = tovizValue(oValue);
		      }
		    }else{
	  	    if ( bIncludeDefaults || oValue !== mDefaults[n] ) {
	  	    	mOptions[tovizKey(n)] = tovizValue(oValue);
	  	    }
		    }
			}
		}
	
		// collect non-null values for all VIZ properties with a complex type
		var mAggrs = oMetadata.getAllAggregations();
		for(n in mAggrs) {
			// assumption: an aggregation is a VIZ aggregation if and only if it has been introduced by this class
			// This check needs to be enhanced as soon as inheritance is reflected in the wrappers
			if ( mAggrs[n]._oParent == oMetadata ) {  
		    oValue = this.getAggregation(n, null);
		    if ( oValue !== null ) {
		    	// transitively retrieve options 
		    	mOptions[tovizKey(n)] = oValue._getOptions(bIncludeDefaults);
		    }
			}
		}
	
		return mOptions;
	};

	/**
	 * Helper method to convert a given object into an object of the type expected by the given aggregation.
	 * Used to mediate between old and new Interaction APIs.
	 * 
	 * Although this is a static method, <code>this</code> must be the object that will aggregate the given 
	 * object. <code>this</code> will be used to determine the metadata of the aggregation
	 * 
	 * @return {object} the converted object or - if not applicable - the given object 
	 */
	BaseStructuredType._convertAggregatedObject = function(sAggregationName, oObject, bMultiple) {
		if ( oObject != null ) {
			// get aggregation information
			var oAggregation = this.getMetadata().getAllAggregations()[sAggregationName];
			// get class name of the given object
			var sClassName = oObject.getMetadata && oObject.getMetadata().getName();
			if ( oAggregation && sClassName !== oAggregation.type ) { // TODO inheritance?
				// ensure that the class for the type is loaded
				jQuery.sap.require(oAggregation.type);
				// create a new instance of the desired class with the options of the current one
				var fnClass = jQuery.sap.getObject(oAggregation.type);
				oObject = new fnClass(oObject._getOptions(true)); // also include default values as they might differ between types
				jQuery.sap.log.warning("[Deprecated] Type of aggregation '" + this.getMetadata().getName() + "." + sAggregationName + " has been changed from '" + sClassName + "' to '" + oAggregation.type + "'.");
			}
		}
		return oObject;
	};

	BaseStructuredType.prototype.validateProperty = function(sPropertyName, oValue) {
		if ( /^(lineSize|size)$/.test(sPropertyName) ) {
			var oProperty = this.getMetadata().getAllProperties()[sPropertyName];
			if ( oProperty && oProperty.type === "int" && typeof oValue !== "number" ) {
				oValue = oValue ? parseInt(oValue, 10) : null;
			}
		}
		return Element.prototype.validateProperty.call(this, sPropertyName, oValue);
	};

	BaseStructuredType.prototype.validateAggregation = function(sAggregationName, oObject, bMultiple) {
		if ( sAggregationName === "selectability" ) {
			// can convert types in the following two cases 
			// - if a behaviors.Interaction receives a controller.Interaction_selectability (e.g. chart.GetInteraction().setSelectability(...) in old code)
			// - if a controller.Interaction receives a behaviors.Interaction_selectability
			oObject = BaseStructuredType._convertAggregatedObject.call(this, sAggregationName, oObject, bMultiple);
		}
		return Element.prototype.validateAggregation.call(this, sAggregationName, oObject, bMultiple);
	};



	return BaseStructuredType;

});

}; // end of sap/viz/ui5/core/BaseStructuredType.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.data.Dataset') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides control sap.viz.ui5.data.Dataset.
jQuery.sap.declare('sap.viz.ui5.data.Dataset'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
jQuery.sap.require('sap.ui.core.Element'); // unlisted dependency retained
sap.ui.define("sap/viz/ui5/data/Dataset",['sap/ui/core/Element','sap/viz/library'],
	function(Element, library) {
	"use strict";

	/**
	 * Constructor for a new ui5/data/Dataset.
	 *
	 * @param {string} [sId] id for the new control, generated automatically if no id is given 
	 * @param {object} [mSettings] initial settings for the new control
	 *
	 * @class
	 * Abstract Dataset implementation
	 * @extends sap.ui.core.Element
	 *
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @name sap.viz.ui5.data.Dataset
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Dataset = Element.extend("sap.viz.ui5.data.Dataset", /** @lends sap.viz.ui5.data.Dataset.prototype */ { metadata : {

		"abstract" : true,
		library : "sap.viz"
	}});




	return Dataset;

});

}; // end of sap/viz/ui5/data/Dataset.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.data.DimensionDefinition') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides control sap.viz.ui5.data.DimensionDefinition.
jQuery.sap.declare('sap.viz.ui5.data.DimensionDefinition'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
jQuery.sap.require('sap.ui.core.Element'); // unlisted dependency retained
sap.ui.define("sap/viz/ui5/data/DimensionDefinition",['sap/ui/core/Element','sap/viz/library'],
	function(Element, library) {
	"use strict";

	/**
	 * Constructor for a new ui5/data/DimensionDefinition.
	 *
	 * @param {string} [sId] id for the new control, generated automatically if no id is given 
	 * @param {object} [mSettings] initial settings for the new control
	 *
	 * @class
	 * Definition of a single dimension in a dataset
	 * @extends sap.ui.core.Element
	 *
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @name sap.viz.ui5.data.DimensionDefinition
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var DimensionDefinition = Element.extend("sap.viz.ui5.data.DimensionDefinition", /** @lends sap.viz.ui5.data.DimensionDefinition.prototype */ { metadata : {

		library : "sap.viz",
		properties : {

			/**
			 * Number of axis this dimension belongs to. Currently must be 1 or 2.
			 * Skip this property when use VizFrame.
			 */
			axis : {type : "int", group : "Misc", defaultValue : null},

			/**
			 * Value for the dimension. Usually bound to some model field.
			 */
			value : {type : "any", group : "Data", defaultValue : null},

			/**
			 * Name of the dimension as displayed in the chart
			 */
			name : {type : "string", group : "Misc", defaultValue : null},

			/**
			 * Id of the dimension as displayed in the chart
			 */
			identity : {type : "string", group : "Misc", defaultValue : null},

			/**
			 * Display value for the dimension. Usually bound to some model field.
			 */
			displayValue : {type : "any", group : "Data", defaultValue : null},

			/**
			 * Data type of the dimension as displayed in the chart. Enumeration: string, number, date. Currently only in time series chart, it is required to set data type to 'date' if this column is going to be fed on 'timeAxis'.
			 */
			dataType : {type : "string", group : "Misc", defaultValue : null}
		}
	}});

	DimensionDefinition.prototype._getAdapter = function() {
		var that = this,
		  oBindingInfo = this.getBindingInfo("value"),
		  oValue, sPath, oType, fnFormatter;
	
		// if there is no binding info, then the value is constant
		if ( !oBindingInfo ) {
			oValue = this.getValue();
			return function() { 
				return oValue; 
			};
		}
	
		// otherwise ensure a simple property binding for now
		if ( oBindingInfo.parts.length > 1 ) {
			throw new Error("DimensionDefinition doesn't support calculated bindings yet");
		}
	
		sPath = oBindingInfo.parts[0].path;
		oType = oBindingInfo.parts[0].type;
		fnFormatter = oBindingInfo.formatter;
	
		// for simple binding just resolve the value
		if ( !(oType || fnFormatter) ) {
			return function(oContext) {
				return oContext.getProperty(sPath);
			};
		}

		// else apply type and/or formatter
		return function(oContext) {
			var oValue = oContext.getProperty(sPath);
			if (oType) {
				oValue = oType.formatValue(oValue, "string"); //TODO discuss internal type
			}
			if (fnFormatter) {
				oValue = fnFormatter.call(that, oValue, oContext);
			}
			return oValue;
		};

	};

	DimensionDefinition.prototype._getDisplayValueAdapter = function() {
		var that = this,
		  oBindingInfo = this.getBindingInfo("displayValue"),
		  oValue, sPath, oType, fnFormatter, parts;
	
		// if there is no binding info, then the value is constant
		if ( !oBindingInfo ) {
			oValue = this.getValue();
			return function() { 
				return {"enableDisplayValue": false, "value": oValue}; 
			};
		}
	
		sPath = oBindingInfo.parts[0].path;
		oType = oBindingInfo.parts[0].type;
		parts = oBindingInfo.parts;
		fnFormatter = oBindingInfo.formatter;
	
		// for simple binding just resolve the value
		if ( parts.length == 1 && !(oType || fnFormatter) ) {
			return function(oContext) {
				return {"enableDisplayValue": true, "value": oContext.getProperty(sPath)};
			};
		}

		// else apply type and/or formatter
		return function(oContext) {
			if (parts.length > 0) {
				var args = [];
				for (var i = 0; i < parts.length; i++) {
					args.push(oContext.getProperty(parts[i].path));
				}
				if (fnFormatter) {
					oValue = fnFormatter.apply(that, args);
				}
			}
			return {"enableDisplayValue": true, "value": oValue};
		};

	};

	DimensionDefinition.prototype._setInResult = function(bInResult) {
		this._bInResult = !!bInResult;
	};

	DimensionDefinition.prototype._getInResult = function() {
		return this._bInResult;
	};

	DimensionDefinition.prototype._setTimeUnit = function (_sTimeUnit) {
		this._sTimeUnit = _sTimeUnit;
	};

	DimensionDefinition.prototype._getTimeUnit = function() {
		return this._sTimeUnit;
	};

	return DimensionDefinition;

});

}; // end of sap/viz/ui5/data/DimensionDefinition.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.data.FlattenedDataset') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides control sap.viz.ui5.data.FlattenedDataset.
jQuery.sap.declare('sap.viz.ui5.data.FlattenedDataset'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
jQuery.sap.require('sap.ui.model.ChangeReason'); // unlisted dependency retained
sap.ui.define("sap/viz/ui5/data/FlattenedDataset",['sap/viz/library', "sap/ui/model/ChangeReason", "./Dataset", "./CVOMDatasetAdaptor", "sap/viz/ui5/controls/common/utils/Constants"],
	function(library, ChangeReason, Dataset, CVOMDatasetAdaptor, Constants) {
	"use strict";
    
	/**
	 * Constructor for a new ui5/data/FlattenedDataset.
	 *
	 * @param {string} [sId] id for the new control, generated automatically if no id is given 
	 * @param {object} [mSettings] initial settings for the new control
	 *
	 * @class
	 * A dataset for flattened (redundant) data using a tabular format.
	 * @extends sap.viz.ui5.data.Dataset
	 *
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @name sap.viz.ui5.data.FlattenedDataset
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var FlattenedDataset = Dataset.extend("sap.viz.ui5.data.FlattenedDataset", /** @lends sap.viz.ui5.data.FlattenedDataset.prototype */ { metadata : {

		library : "sap.viz",
        properties:{
            /**
             * Additional data which works with data context in this dataset. The input could be an array. Each item represents a dimension that is added as the additional information based on data context. The input could be a string of dimension id,
             * or object like this {id: "name", showInTooltip: true}. If showInTooltip is false, the dimensions set in this API will not show in 
             * popover or tooltip. However other dimensions in data context will show. In selection event, all dimension information (including the dimension set in this API) will be included.
             * Context will be shown by default in tooltip if only set context with string or string of array.
             */
            context:{type: "any", multiple: false, singularName: "context"}
        },
        
		aggregations : {

			/**
			 * List of definitions of all dimensions in this dataset
			 */
			dimensions : {type : "sap.viz.ui5.data.DimensionDefinition", multiple : true, singularName : "dimension"}, 

			/**
			 * list of definitions of all measures in this dataset
			 */
			measures : {type : "sap.viz.ui5.data.MeasureDefinition", multiple : true, singularName : "measure"}, 

			/**
			 * Data containing dimensions and measures.
			 * 
			 * <b>Note:</b> This aggregation can only be bound against a model, it cannot be managed
			 * programmatically using the aggregation mutator methods like addData.
			 */
			data : {type : "sap.ui.core.Element", multiple : true, singularName : "data", bindable : "bindable"}
		},

		events :{
			/**
			 data change event
             **/
			dataChange:{ 
				
			},
			/**
			 * data refresh event
			 */
			dataRefresh:{
			    
			},
			/**
			 * data error event
			 */
			dataError:{
			    
			}			
		}
	}});

	// enable calling 'bindAggregation("data")' without a factory
	FlattenedDataset.getMetadata().getAllAggregations()["data"]._doesNotRequireFactory = true;

	FlattenedDataset.prototype.init = function() {
	    this._oCVOMDatasetAdaptor = new CVOMDatasetAdaptor();
	    //required specific range 
	    this._iStartIndex = -1;
	    this._iLength = -1;
	    this._bReady = true;
	};

	FlattenedDataset.prototype._bindAggregation = function() {
		Dataset.prototype._bindAggregation.apply(this, arguments);
		var oBinding = this.getBinding("data");
		if (oBinding) {
			oBinding.attachDataReceived(this._dataReceivedListener, this);
		}
	};

	FlattenedDataset.prototype._dataReceivedListener = function(oEvent) {
		// AnalyticalBinding fires dataReceived too early
		if (oEvent && oEvent.getParameter && oEvent.getParameter("__simulateAsyncAnalyticalBinding")) {
			return;
		}
		if (oEvent.getParameter('data') === undefined) {
			this._bDataReceiveError = true;
			this.fireEvent('dataError');
		}
	};

	FlattenedDataset.prototype.refreshData = function(reason) {
		this._bDataReceiveError = false;
	    this._bReady = false;
	    this.fireEvent("dataRefresh", {reason: reason});
	    this._getDataContexts();
	};

	FlattenedDataset.prototype.updateData = function(reason) {
		this._bDataReceiveError = false;
		this._bReady = true;
		this.fireEvent("dataChange", {reason: reason});
		this.invalidate();
	};

	// override standard aggregation methods for 'data' and report an error when they are used
	jQuery.each("add get indexOf insert remove removeAll".split(" "), function(i, sMethod) {
	    var sMessage = "FlattenedDataset manages the 'data' aggregation only via data binding. The method '" + sMethod + "Data' therefore cannot be used programmatically!";
	    FlattenedDataset.prototype[sMethod + "Data"] = function() {
	        jQuery.sap.log.error(sMessage);
	    };
	});

	/**
	 * return info chart flattable dataset which is in sap.viz.chart.js
	 * @returns sap.viz.api.data.FlatTableDataset
	 */
	FlattenedDataset.prototype.getVIZFlatDataset = function() {
	    return this._getCVOMDataset(Constants.DATASET_TYPES.FLATTABLEDATASET);
	};

	/**
	 * return info chart crosstable dataset which is in sap.viz.chart.js
	 * @returns sap.viz.api.data.CrosstableDataset
	 */
	FlattenedDataset.prototype.getVIZCrossDataset = function() {
	    return this._getCVOMDataset(Constants.DATASET_TYPES.CROSSTABLEDATASET);
	};

	/**
	 * return viz chart crosstable dataset which is in sap.viz.js
	 * @returns sap.viz.data.CrosstableDataset
	 */
	FlattenedDataset.prototype.getVIZDataset = function() {
	    return this._getCVOMDataset(Constants.DATASET_TYPES.LEGACYCROSSTABLEDATASET);
	};

	 /**
	 * type: 
     * @returns CVOM Dataset
     */
    FlattenedDataset.prototype._getCVOMDataset = function(type) {
        return this._oCVOMDatasetAdaptor.getDataset({
            type: type,
            dataContexts: this._getDataContexts(),
            dimensions: this.getDimensions(),
            measures: this.getMeasures(),
            additionalInfo:this._info || this._defaultSelectionInfo, 
            contexts:this.getContext(),
            pagingOption:this._oPagingOption
        });
    };


	FlattenedDataset.prototype.invalidate = function(oOther) {
	    if (this._oCVOMDatasetAdaptor) {
	        this._oCVOMDatasetAdaptor.invalidate();
	    }
	    sap.ui.core.Element.prototype.invalidate.apply(this, arguments);
	};

	/**
	 * Set chart's default selection.
	 * This api will do nothing when use VizFrame.
	 *
	 * @param {object[]} Array of default selection info
	 * @deprecated Since 1.19.
	 * Please use selection API {sap.viz.ui5.core.BaseChart.prototype.selection}.
	 * @public
	 */
	FlattenedDataset.prototype.setDefaultSelection = function(selectionInfos) {
	    // Deprecated
	    // Will not apply to crosstable already created
	    this._defaultSelectionInfo = {
	        'type' : 'defaultSelection',
	        'value' : selectionInfos
	    };
	};

	/**
	 * Get/Set additional info for the crosstable dataset By now, only "additionalData" info type is supported.
	 * This api will do nothing when use VizFrame.
	 *
	 * @param {object[]} Array of Objects is for setting info and passes different types of infos objects.
	 */
	FlattenedDataset.prototype.info = function(values) {
	    if ( values instanceof Array) {
	        // Deprecated, not public
	        // Will not apply to crosstable already created
	        this._info = values;
	    } 
	};

	/**
	 * Find the model context for a given 'criteria' into chart data.
	 *
	 * The native sap.viz library provides data objects with the
	 * <code>selectData</code> event. Applications can call this method for each data
	 * in a selectData event to find the corresponding UI5 model context.
	 *
	 * When the dataset has not been converted into a VIZ dataset yet
	 * (e.g. no rendering yet)  or when the coordinates of the path are not within
	 * the range of the current dataset, then undefined will be returned.
	 *
	 * Example when use sap.viz.ui5.*:
	 * <pre>
	 * selectData: function(oEvent) {
	 *   var aSelectData = oEvent.getParameter("data");
	 *   var oContext = this.getDataset().findContext(aSelectData[0].data[0].ctx.path);
	 * }
	 * </pre>
	 * Example when use sap.viz.ui5.controls.VizFrame:
	 * <pre>
	 * selectData: function(oEvent) {
	 *   var aSelectData = oEvent.getParameter("data");
	 *   var oContext = this.getDataset().findContext(aSelectData[0].data);
	 * }
	 * </pre>
	 *
	 * @param {object} oCriteria a structure as provided by the sap.viz library
	 * @return {sap.ui.model.Context} the model context for the given criteria or undefined.
	 * @experimental Since 1.16.6. Might later be integrated into the selectData event.
	 * @public
	 */
	FlattenedDataset.prototype.findContext = function(oCriteria) {
		if (this._oCVOMDatasetAdaptor) {
			return this._oCVOMDatasetAdaptor.findContext(oCriteria);
		}
	};

	/*
	 * Internal interface to set data's range
	 */
	FlattenedDataset.prototype.setPagingOption = function(oPagingOption) {
		this._oPagingOption = oPagingOption;
	};
	
	FlattenedDataset.prototype.getRenderedPageNo = function() {
		if (this._oCVOMDatasetAdaptor) {
			return this._oCVOMDatasetAdaptor.getRenderedPageNo();
		}
	};

	FlattenedDataset.prototype.setRange = function(iStart, iLength){
        this._iStartIndex = iStart;
        this._iLength = iLength;
	};

	FlattenedDataset.prototype.getRange = function(iStart, iLength){
		return {
           iStartIndex : this._iStartIndex,
           iLength : this._iLength
		};
	};

    // check if the data is ready to consume 
	FlattenedDataset.prototype.isReady = function(){
		if (this._bDataReceiveError) {
			// allow vizFrame to continue render as no data if error occurred in backend in OData service
			return true;
		}
        return this._bReady;
	};

	FlattenedDataset.prototype._getDataContexts = function(){
        var start = this._iStartIndex, 
            length = this._iLength,
            binding = this.getBinding("data");
         
        if (!binding){
            return null;
        } 

        var bindingInfo;

        if (start == -1){
            bindingInfo = this.getBindingInfo("data");
            start = (bindingInfo && bindingInfo.startIndex !== undefined) ? bindingInfo.startIndex : 0 ;
        }

        if (length == -1){
            bindingInfo = bindingInfo || this.getBindingInfo("data");
            if (bindingInfo && bindingInfo.length !== undefined){
                length = bindingInfo.length;
            }else {
               //analytic binding should use getTotalSize to return the correct total length
              length = binding.getTotalSize ? binding.getTotalSize() : binding.getLength();
           } 
        }
        if (this._bDataReceiveError) {
        	// if error, treat as empty dataset
        	return [];
        } else {
        	return binding.getContexts(start, length);
        }
    };

	return FlattenedDataset;

});

}; // end of sap/viz/ui5/data/FlattenedDataset.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.data.MeasureDefinition') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides control sap.viz.ui5.data.MeasureDefinition.
jQuery.sap.declare('sap.viz.ui5.data.MeasureDefinition'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
jQuery.sap.require('sap.ui.core.Element'); // unlisted dependency retained
sap.ui.define("sap/viz/ui5/data/MeasureDefinition",['sap/ui/core/Element','sap/viz/library'],
	function(Element, library) {
	"use strict";

	/**
	 * Constructor for a new ui5/data/MeasureDefinition.
	 *
	 * @param {string} [sId] id for the new control, generated automatically if no id is given 
	 * @param {object} [mSettings] initial settings for the new control
	 *
	 * @class
	 * Definition of a single Measure
	 * @extends sap.ui.core.Element
	 *
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @name sap.viz.ui5.data.MeasureDefinition
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var MeasureDefinition = Element.extend("sap.viz.ui5.data.MeasureDefinition", /** @lends sap.viz.ui5.data.MeasureDefinition.prototype */ { metadata : {

		library : "sap.viz",
		properties : {

			/**
			 * Measure group this measure belongs to. Order is significant, number should start from 1.
			 * Skip this property when use VizFrame.
			 */
			group : {type : "int", group : "Misc", defaultValue : 1},

			/**
			 * Value for the measure. Usually bound to some model field.
			 */
			value : {type : "any", group : "Data", defaultValue : null},

			/**
			 * Name of the measure as displayed in the chart
			 */
			name : {type : "string", group : "Misc", defaultValue : null},
			
			/**
			 * Id of the measure as displayed in the chart
			 */
			identity : {type : "string", group : "Misc", defaultValue : null},
			
			/**
			 * Format pattern for values of the measure
			 */
			format: {type: "any", group: "Misc", defaultValue: null},
			/**
			 * Value range
			 */
			range: {type: "any[]", group: "Misc", defaultValue: []},
			/**
			 * Unit of measure
			 */
			unit: {type: "string", group: "Misc", defaultValue: null}
		}
	}});

	MeasureDefinition.prototype._getAdapter = function() {
		var that = this,
		  oBindingInfo = this.getBindingInfo("value"),
		  oValue, sPath, oType, fnFormatter;
	
		// if there is no binding info, then the value is constant
		if ( !oBindingInfo ) {
			oValue = this.getValue();
			return function() { 
				return oValue; 
			};
		}
		
		fnFormatter = oBindingInfo.formatter;
		// otherwise ensure a simple property binding for now
		if ( oBindingInfo.parts.length > 1 ) {
		    if(fnFormatter){
		        return function(oContext) {
		            var oValues = [], oValue;
		            oBindingInfo.parts.forEach(function(oInfo, i){
		                var oValue = oContext.getProperty(oInfo.path);
		                if (oType) {
		                    oValue = oType.formatValue(oValue, "string"); //TODO discuss internal type
		                }
		                oValues.push(oValue);
	                });
		            return fnFormatter.call(that, oValues, oContext);
		        }
		    }else{
		        throw new Error("MeasureDefinition doesn't support calculated bindings yet");
		    }
		}else{
	
    		sPath = oBindingInfo.parts[0].path;
    		oType = oBindingInfo.parts[0].type;
    	
    		// for simple binding just resolve the value
    		if ( !(oType || fnFormatter) ) {
    			return function(oContext) {
    				return oContext.getProperty(sPath);
			};
    		}
    
    		// else apply type and/or formatter
    		return function(oContext) {
    			var oValue = oContext.getProperty(sPath);
    			if (oType) {
    				oValue = oType.formatValue(oValue, "string"); //TODO discuss internal type
    			}
    			if (fnFormatter) {
    				oValue = fnFormatter.call(that, oValue, oContext);
    			}
    			return oValue;
    		};
		}
	};

	MeasureDefinition.prototype._setUnitBinding = function(sVal) {
		this._sUnitBinding = sVal;
	};
	
	MeasureDefinition.prototype._getUnitBinding = function() {
		return this._sUnitBinding;
	};

	return MeasureDefinition;

});

}; // end of sap/viz/ui5/data/MeasureDefinition.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Area') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Area.
jQuery.sap.declare('sap.viz.ui5.types.Area'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Area",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Area
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Module sap.viz.ui5.types.Area
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Area
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Area = BaseStructuredType.extend("sap.viz.ui5.types.Area", /** @lends sap.viz.ui5.types.Area.prototype */ { metadata : {

		library: "sap.viz",



		properties: {

			/**
			 * Set whether the area chart is vertical or horizontal
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			orientation : {type : "sap.viz.ui5.types.Area_orientation", defaultValue : sap.viz.ui5.types.Area_orientation.vertical, deprecated: true},

			/**
			 * Set the color palette for the chart. This is not supported for dual axis charts that have measureNamesDimension bound to the legend.
			 */
			colorPalette : {type : "string[]", defaultValue : ['#748CB2','#9CC677','#EACF5E','#F9AD79','#D16A7C','#8873A2','#3A95B3','#B6D949','#FDD36C','#F47958','#A65084','#0063B1','#0DA841','#FCB71D','#F05620','#B22D6E','#3C368E','#8FB2CF','#95D4AB','#EAE98F','#F9BE92','#EC9A99','#BC98BD','#1EB7B2','#73C03C','#F48323','#EB271B','#D9B5CA','#AED1DA','#DFECB2','#FCDAB0','#F5BCB4']},

			/**
			 * Set the color palette for axis 1 in dual charts.
			 */
			primaryValuesColorPalette : {type : "string[]", defaultValue : ['#8FBADD','#B8D4E9','#7AAED6','#A3C7E3','#3D88C4','#66A1D0','#297CBE','#5295CA','#005BA3','#146FB7','#005395','#0063B1']},

			/**
			 * Set the color palette for axis 2 in dual chart.
			 */
			secondaryValuesColorPalette : {type : "string[]", defaultValue : ['#F6A09B','#F9C3C0','#F58E88','#F8B1AD','#F05B52','#F37D76','#EE4A40','#F16C64','#D92419','#ED382D','#C52117','#EB271B']},

			/**
			 * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy. If this value is set to 'normal', the plot area is matte.
			 */
			drawingEffect : {type : "sap.viz.ui5.types.Area_drawingEffect", defaultValue : sap.viz.ui5.types.Area_drawingEffect.normal},

			/**
			 * Set the display mode of the area chart
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			mode : {type : "sap.viz.ui5.types.Area_mode", defaultValue : sap.viz.ui5.types.Area_mode.comparison, deprecated: true},

			/**
			 * Sample value for formatRules:  [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition: [{Key3:Value3}], color:"#00ffff"}].   Each rule has two properties: the "condition" and the "color".   Value1, Value2 and Value3 are values. <br />  The value of a dimension may be <br />  1, Single value (string), like "China" . <br />  2. Array (enumeration), like ["UK","USA"] . <br />  The value of a measure may be <br />  1, Single value (number), like 20 . <br />  2. Arry (enumeration), like [121,122] . <br />  3. Object (range), like {min:100, max 200} . Min and max are inclusive.   If users want to inlcude 200, but not 100 in the range, they may use {min:100.00001, max:200}.   If users want values larger than 100, they may write {min:100}. <br />   The color is applied if one or more conditions in the condition array is met.   If multiple rules could apply on the same data point, it is the last rule that takes effect.
			 */
			formatRules : {type : "object[]"}
		},

		aggregations: {

			/**
			 * Settings for the tooltip
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			toolTip : {type : "sap.viz.ui5.types.Area_tooltip", multiple : false, deprecated: true},

			/**
			 * Settings for animations in the plot area
			 */
			animation : {type : "sap.viz.ui5.types.Area_animation", multiple : false},

			/**
			 * Settings for marker and data point graphics
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			marker : {type : "sap.viz.ui5.types.Area_marker", multiple : false, deprecated: true},

			/**
			 * Settings for the hoverline.
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			hoverline : {type : "sap.viz.ui5.types.Area_hoverline", multiple : false, deprecated: true}
		}
	}});


	return Area;

});

}; // end of sap/viz/ui5/types/Area.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Area_animation') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Area_animation.
jQuery.sap.declare('sap.viz.ui5.types.Area_animation'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Area_animation",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Area_animation
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for animations in the plot area
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Area_animation
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Area_animation = BaseStructuredType.extend("sap.viz.ui5.types.Area_animation", /** @lends sap.viz.ui5.types.Area_animation.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set whether the data loading animation is enabled
			 */
			dataLoading : {type : "boolean", defaultValue : true},

			/**
			 * Set whether the data updating animation is enabled
			 */
			dataUpdating : {type : "boolean", defaultValue : true},

			/**
			 * Set whether the resizing animation is enabled
			 */
			resizing : {type : "boolean", defaultValue : true}
		}
	}});


	return Area_animation;

});

}; // end of sap/viz/ui5/types/Area_animation.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Area_hoverline') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Area_hoverline.
jQuery.sap.declare('sap.viz.ui5.types.Area_hoverline'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Area_hoverline",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Area_hoverline
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for the hoverline.
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.19. 
	 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
	 * @alias sap.viz.ui5.types.Area_hoverline
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Area_hoverline = BaseStructuredType.extend("sap.viz.ui5.types.Area_hoverline", /** @lends sap.viz.ui5.types.Area_hoverline.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set the visibility of the hoverline.
			 */
			visible : {type : "boolean", defaultValue : true}
		}
	}});


	return Area_hoverline;

});

}; // end of sap/viz/ui5/types/Area_hoverline.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Area_marker') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Area_marker.
jQuery.sap.declare('sap.viz.ui5.types.Area_marker'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Area_marker",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Area_marker
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for marker and data point graphics
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.12. 
	 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
	 * @alias sap.viz.ui5.types.Area_marker
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Area_marker = BaseStructuredType.extend("sap.viz.ui5.types.Area_marker", /** @lends sap.viz.ui5.types.Area_marker.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set the visibility of the markers
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			visible : {type : "boolean", defaultValue : true, deprecated: true},

			/**
			 * Set the shape of the markers
			 */
			shape : {type : "sap.viz.ui5.types.Area_marker_shape", defaultValue : sap.viz.ui5.types.Area_marker_shape.circle},

			/**
			 * Set the marker size for data points, ranging from '4' and '32'. If you enter a value outside that range, the marker size defaults to '4'.
			 */
			size : {type : "int", defaultValue : 8},

			/**
			 * Set the number to enable events for markers when they are invisible. If the total amount of markers is bigger than this value, markers will remain hidden when selected or hovered over. The default value is Number.POSITIVE_INFINITY, which is the largest possible value.
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			number : {type : "int", deprecated: true}
		}
	}});


	return Area_marker;

});

}; // end of sap/viz/ui5/types/Area_marker.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Area_tooltip') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Area_tooltip.
jQuery.sap.declare('sap.viz.ui5.types.Area_tooltip'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Area_tooltip",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Area_tooltip
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for the tooltip
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.12. 
	 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
	 * @alias sap.viz.ui5.types.Area_tooltip
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Area_tooltip = BaseStructuredType.extend("sap.viz.ui5.types.Area_tooltip", /** @lends sap.viz.ui5.types.Area_tooltip.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set whether the tooltip is enabled
			 */
			enabled : {type : "boolean", defaultValue : true}
		}
	}});


	return Area_tooltip;

});

}; // end of sap/viz/ui5/types/Area_tooltip.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Axis') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Axis.
jQuery.sap.declare('sap.viz.ui5.types.Axis'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Axis",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Axis
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Module sap.viz.ui5.types.Axis
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Axis
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Axis = BaseStructuredType.extend("sap.viz.ui5.types.Axis", /** @lends sap.viz.ui5.types.Axis.prototype */ { metadata : {

		library: "sap.viz",



		properties: {

			/**
			 * Set whether the axis works in independent mode. Currently, this property is used only for boxplot charts.
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			isIndependentMode : {type : "boolean", defaultValue : false, deprecated: true},

			/**
			 * Show the label as a percentage. For example '0.1' would show as '10'.
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			isPercentMode : {type : "boolean", defaultValue : false, deprecated: true},

			/**
			 * Try to keep the first label and last label when the space is limited.
			 * @deprecated Since version 1.20. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			isKeepFirstAndLastLabel : {type : "boolean", defaultValue : false, deprecated: true},

			/**
			 * Set the thickness of the axis line
			 */
			lineSize : {type : "int", defaultValue : 1},

			/**
			 * Set the color of the axis line
			 */
			color : {type : "string", defaultValue : '#6c6c6c'},

			/**
			 * Set the axis type
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			type : {type : "sap.viz.ui5.types.Axis_type", defaultValue : sap.viz.ui5.types.Axis_type.value, deprecated: true},

			/**
			 * Set the visibility of the entire axis, including the axis line, gridlines, and labels
			 */
			visible : {type : "boolean", defaultValue : true},

			/**
			 * Set the position of the axis
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			position : {type : "sap.viz.ui5.types.Axis_position", defaultValue : sap.viz.ui5.types.Axis_position.bottom, deprecated: true},

			/**
			 * Set whether truncation logic is available for the category axis
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			isTruncateAvailable : {type : "boolean", defaultValue : true, deprecated: true},

			/**
			 * Set whether the label area is limited to the text area
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			forceLabelArea : {type : "boolean", defaultValue : false, deprecated: true},

			/**
			 * Set whether the label selection effect is enabled. For mobile devices, the default value is 'false'.
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			enableLabelSelection : {type : "boolean", defaultValue : true, deprecated: true},

			/**
			 * Hide axis title firstly if the space is limited.
			 * @deprecated Since version 1.20. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			hideTitleFirst : {type : "boolean", defaultValue : false, deprecated: true},

			/**
			 * The ratio to limit axis' space in its container, which only accepts values between 0 and 1(0 and 1 included). All the invalid values would be replaced by default value.
			 */
			maxSizeRatio : {type : "float", defaultValue : 0.25}
		},

		aggregations: {

			/**
			 * Settings for the axis title
			 */
			title : {type : "sap.viz.ui5.types.Axis_title", multiple : false},

			/**
			 * Settings for the gridlines on the axis
			 */
			gridline : {type : "sap.viz.ui5.types.Axis_gridline", multiple : false},

			/**
			 * Settings for the axis line
			 */
			axisline : {type : "sap.viz.ui5.types.Axis_axisline", multiple : false},

			/**
			 * Settings for the labels on this axis
			 */
			label : {type : "sap.viz.ui5.types.Axis_label", multiple : false},

			/**
			 * Settings for the axis indicator
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			indicator : {type : "sap.viz.ui5.types.Axis_indicator", multiple : false, deprecated: true},

			/**
			 * Set the scale of the value axis. This property only works on value type axes.
			 */
			scale : {type : "sap.viz.ui5.types.Axis_scale", multiple : false},

			/**
			 * Settings for the layout of the category axis. This property only works for category type axes.
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			layoutInfo : {type : "sap.viz.ui5.types.Axis_layoutInfo", multiple : false, deprecated: true},

			/**
			 * Settings for the ticks on the axis
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			axisTick : {type : "sap.viz.ui5.types.Axis_axisTick", multiple : false, deprecated: true}
		}
	}});


	return Axis;

});

}; // end of sap/viz/ui5/types/Axis.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Axis_axisTick') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Axis_axisTick.
jQuery.sap.declare('sap.viz.ui5.types.Axis_axisTick'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Axis_axisTick",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Axis_axisTick
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for the ticks on the axis
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.12. 
	 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
	 * @alias sap.viz.ui5.types.Axis_axisTick
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Axis_axisTick = BaseStructuredType.extend("sap.viz.ui5.types.Axis_axisTick", /** @lends sap.viz.ui5.types.Axis_axisTick.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set visibility of the ticks on the axis. For mobile devices, the default value is 'false'.
			 */
			visible : {type : "boolean", defaultValue : true}
		}
	}});


	return Axis_axisTick;

});

}; // end of sap/viz/ui5/types/Axis_axisTick.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Axis_axisline') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Axis_axisline.
jQuery.sap.declare('sap.viz.ui5.types.Axis_axisline'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Axis_axisline",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Axis_axisline
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for the axis line
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Axis_axisline
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Axis_axisline = BaseStructuredType.extend("sap.viz.ui5.types.Axis_axisline", /** @lends sap.viz.ui5.types.Axis_axisline.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set the visibility of the axis line
			 */
			visible : {type : "boolean", defaultValue : true}
		}
	}});


	return Axis_axisline;

});

}; // end of sap/viz/ui5/types/Axis_axisline.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Axis_gridline') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Axis_gridline.
jQuery.sap.declare('sap.viz.ui5.types.Axis_gridline'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Axis_gridline",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Axis_gridline
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for the gridlines on the axis
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Axis_gridline
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Axis_gridline = BaseStructuredType.extend("sap.viz.ui5.types.Axis_gridline", /** @lends sap.viz.ui5.types.Axis_gridline.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set the visibility of gridlines on the axis
			 */
			visible : {type : "boolean", defaultValue : true},

			/**
			 * Disable gridline or not
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			disable : {type : "boolean", defaultValue : false, deprecated: true},

			/**
			 * Set whether the first gridline on the axis appears
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			showFirstLine : {type : "boolean", defaultValue : false, deprecated: true},

			/**
			 * Set whether the last gridline on the axis appears
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			showLastLine : {type : "boolean", defaultValue : false, deprecated: true},

			/**
			 * Set the line type of gridlines on the axis
			 */
			type : {type : "sap.viz.ui5.types.Axis_gridline_type", defaultValue : sap.viz.ui5.types.Axis_gridline_type.line},

			/**
			 * Set the color of the gridlines on the axis
			 */
			color : {type : "string", defaultValue : '#d8d8d8'},

			/**
			 * Set the line size of gridlines on the axis
			 */
			size : {type : "int", defaultValue : 1}
		}
	}});


	return Axis_gridline;

});

}; // end of sap/viz/ui5/types/Axis_gridline.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Axis_indicator') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Axis_indicator.
jQuery.sap.declare('sap.viz.ui5.types.Axis_indicator'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Axis_indicator",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Axis_indicator
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for the axis indicator
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.19. 
	 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
	 * @alias sap.viz.ui5.types.Axis_indicator
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Axis_indicator = BaseStructuredType.extend("sap.viz.ui5.types.Axis_indicator", /** @lends sap.viz.ui5.types.Axis_indicator.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set the visibility of the axis indicator
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			enable : {type : "boolean", defaultValue : false, deprecated: true}
		}
	}});


	return Axis_indicator;

});

}; // end of sap/viz/ui5/types/Axis_indicator.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Axis_label') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Axis_label.
jQuery.sap.declare('sap.viz.ui5.types.Axis_label'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Axis_label",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Axis_label
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for the labels on this axis
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Axis_label
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Axis_label = BaseStructuredType.extend("sap.viz.ui5.types.Axis_label", /** @lends sap.viz.ui5.types.Axis_label.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set the visibility of the labels on this axis
			 */
			visible : {type : "boolean", defaultValue : true},

			/**
			 * Set the number format for the value axis
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			numberFormat : {type : "string", defaultValue : '', deprecated: true},

			/**
			 * Set the format strings for labels on the value axis. If a single format string is entered, it is applied to all measures. A two-dimensional array of format strings can be entered for scatter matrix charts and multiple charts with measureNamesDimension, to apply different formats to each sub-chart. For all other chart types, the first value of the first dimension of a two-dimensional array is used as a global format string. The following characters are reserved as tokens for format code: MDYHSAmdyhsa#?%0@. The letter "u" is used at the end of a format string to format values in SI units. If the letter "u" is added to a value between 1e12 and 1e-3 before SI units are applied, the value is formatted in exponential style. The remaining syntax matches Excel format strings. The following is a simple example of a two-dimensional array for a chart with two measures: [["#,##0.00 DM;-#,##.00 DM","#,##.00;-#,##.00"]].
			 */
			formatString : {type : "any", defaultValue : null},

			/**
			 * Set the unit format type. If set MetricUnits, unit K,M,G,T will be applied, eg, 5000 will display as 5K, 5000000 will display as 5M, 5000000000 will display as 5G and so on. If set FinancialUnits, unit K,M,B,T will be applied. 5000000000 will display as 5B.
			 */
			unitFormatType : {type : "sap.viz.ui5.types.Axis_label_unitFormatType", defaultValue : sap.viz.ui5.types.Axis_label_unitFormatType.FinancialUnits},

			/**
			 * Set the visibility of the sub levels of labels on this axis
			 */
			hideSubLevels : {type : "boolean", defaultValue : false}
		}
	}});


	return Axis_label;

});

}; // end of sap/viz/ui5/types/Axis_label.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Axis_layoutInfo') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Axis_layoutInfo.
jQuery.sap.declare('sap.viz.ui5.types.Axis_layoutInfo'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Axis_layoutInfo",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Axis_layoutInfo
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for the layout of the category axis. This property only works for category type axes.
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.12. 
	 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
	 * @alias sap.viz.ui5.types.Axis_layoutInfo
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Axis_layoutInfo = BaseStructuredType.extend("sap.viz.ui5.types.Axis_layoutInfo", /** @lends sap.viz.ui5.types.Axis_layoutInfo.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set the width of the xAxis
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			width : {type : "float", defaultValue : 0, deprecated: true},

			/**
			 * Set the height of the xAxis
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			height : {type : "float", defaultValue : 0, deprecated: true}
		}
	}});


	return Axis_layoutInfo;

});

}; // end of sap/viz/ui5/types/Axis_layoutInfo.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Axis_scale') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Axis_scale.
jQuery.sap.declare('sap.viz.ui5.types.Axis_scale'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Axis_scale",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Axis_scale
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Set the scale of the value axis. This property only works on value type axes.
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Axis_scale
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Axis_scale = BaseStructuredType.extend("sap.viz.ui5.types.Axis_scale", /** @lends sap.viz.ui5.types.Axis_scale.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set whether the axis range is limited to the range between the minValue and maxValue
			 */
			fixedRange : {type : "boolean", defaultValue : false},

			/**
			 * Set the minValue of the value axis
			 */
			minValue : {type : "float", defaultValue : 0},

			/**
			 * Set the maxValue of the value axis
			 */
			maxValue : {type : "float", defaultValue : 0},

			/**
			 * Set the specific ticks for value axis. The format should be [{value : "/value/", text : "/text/"}...]. If its length is less than 2, this property will not take effect.
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			fixedTicks : {type : "object[]", deprecated: true}
		}
	}});


	return Axis_scale;

});

}; // end of sap/viz/ui5/types/Axis_scale.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Axis_title') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Axis_title.
jQuery.sap.declare('sap.viz.ui5.types.Axis_title'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Axis_title",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Axis_title
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for the axis title
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Axis_title
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Axis_title = BaseStructuredType.extend("sap.viz.ui5.types.Axis_title", /** @lends sap.viz.ui5.types.Axis_title.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set the visibility of the axis title
			 */
			visible : {type : "boolean", defaultValue : false},

			/**
			 * Set the text of the axis title
			 */
			text : {type : "string", defaultValue : null},

			/**
			 * Set the title color to match the color of the axis line
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			applyAxislineColor : {type : "boolean", defaultValue : false, deprecated: true}
		}
	}});


	return Axis_title;

});

}; // end of sap/viz/ui5/types/Axis_title.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Background') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Background.
jQuery.sap.declare('sap.viz.ui5.types.Background'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Background",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Background
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Module sap.viz.ui5.types.Background
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Background
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Background = BaseStructuredType.extend("sap.viz.ui5.types.Background", /** @lends sap.viz.ui5.types.Background.prototype */ { metadata : {

		library: "sap.viz",



		properties: {

			/**
			 * Set the visibility
			 */
			visible : {type : "boolean", defaultValue : true},

			/**
			 * Set the drawing effect for the background. If this value is set to 'glossy', the background is glossy. If this value is set to 'normal', the background is matte.
			 */
			drawingEffect : {type : "sap.viz.ui5.types.Background_drawingEffect", defaultValue : sap.viz.ui5.types.Background_drawingEffect.normal},

			/**
			 * Set the direction of the color gradient in the background. This only takes effect if the 'drawingEffect' value is set to 'glossy'.
			 */
			direction : {type : "sap.viz.ui5.types.Background_direction", defaultValue : sap.viz.ui5.types.Background_direction.vertical},

			/**
			 * Define the color for the plot background body.
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			color : {type : "string", defaultValue : 'transparent', deprecated: true}
		},

		aggregations: {

			/**
			 * Settings for the border
			 */
			border : {type : "sap.viz.ui5.types.Background_border", multiple : false}
		}
	}});


	return Background;

});

}; // end of sap/viz/ui5/types/Background.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Background_border') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Background_border.
jQuery.sap.declare('sap.viz.ui5.types.Background_border'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Background_border",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Background_border
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for the border
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Background_border
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Background_border = BaseStructuredType.extend("sap.viz.ui5.types.Background_border", /** @lends sap.viz.ui5.types.Background_border.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Settings for the color of the stroke.
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			stroke : {type : "string", defaultValue : '#d8d8d8', deprecated: true},

			/**
			 * Settings for the width of the stroke.
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			strokeWidth : {type : "int", defaultValue : 1, deprecated: true}
		},

		aggregations : {

			/**
			 * Settings for the left border
			 */
			left : {type: "sap.viz.ui5.types.Background_border_left", multiple: false},

			/**
			 * Settings for the right border
			 */
			right : {type: "sap.viz.ui5.types.Background_border_right", multiple: false},

			/**
			 * Settings for the top border
			 */
			top : {type: "sap.viz.ui5.types.Background_border_top", multiple: false},

			/**
			 * Settings for the bottom border
			 */
			bottom : {type: "sap.viz.ui5.types.Background_border_bottom", multiple: false}
		}
	}});


	return Background_border;

});

}; // end of sap/viz/ui5/types/Background_border.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Background_border_bottom') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Background_border_bottom.
jQuery.sap.declare('sap.viz.ui5.types.Background_border_bottom'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Background_border_bottom",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Background_border_bottom
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for the bottom border
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Background_border_bottom
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Background_border_bottom = BaseStructuredType.extend("sap.viz.ui5.types.Background_border_bottom", /** @lends sap.viz.ui5.types.Background_border_bottom.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set the visibility
			 */
			visible : {type : "boolean", defaultValue : true}
		}
	}});


	return Background_border_bottom;

});

}; // end of sap/viz/ui5/types/Background_border_bottom.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Background_border_left') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Background_border_left.
jQuery.sap.declare('sap.viz.ui5.types.Background_border_left'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Background_border_left",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Background_border_left
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for the left border
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Background_border_left
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Background_border_left = BaseStructuredType.extend("sap.viz.ui5.types.Background_border_left", /** @lends sap.viz.ui5.types.Background_border_left.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set the visibility
			 */
			visible : {type : "boolean", defaultValue : true}
		}
	}});


	return Background_border_left;

});

}; // end of sap/viz/ui5/types/Background_border_left.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Background_border_right') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Background_border_right.
jQuery.sap.declare('sap.viz.ui5.types.Background_border_right'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Background_border_right",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Background_border_right
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for the right border
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Background_border_right
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Background_border_right = BaseStructuredType.extend("sap.viz.ui5.types.Background_border_right", /** @lends sap.viz.ui5.types.Background_border_right.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set the visibility
			 */
			visible : {type : "boolean", defaultValue : true}
		}
	}});


	return Background_border_right;

});

}; // end of sap/viz/ui5/types/Background_border_right.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Background_border_top') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Background_border_top.
jQuery.sap.declare('sap.viz.ui5.types.Background_border_top'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Background_border_top",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Background_border_top
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for the top border
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Background_border_top
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Background_border_top = BaseStructuredType.extend("sap.viz.ui5.types.Background_border_top", /** @lends sap.viz.ui5.types.Background_border_top.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set the visibility
			 */
			visible : {type : "boolean", defaultValue : true}
		}
	}});


	return Background_border_top;

});

}; // end of sap/viz/ui5/types/Background_border_top.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Bar') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Bar.
jQuery.sap.declare('sap.viz.ui5.types.Bar'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Bar",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Bar
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Module sap.viz.ui5.types.Bar
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Bar
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Bar = BaseStructuredType.extend("sap.viz.ui5.types.Bar", /** @lends sap.viz.ui5.types.Bar.prototype */ { metadata : {

		library: "sap.viz",



		properties: {

			/**
			 * Set the orientation of the plot area.
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			orientation : {type : "sap.viz.ui5.types.Bar_orientation", defaultValue : sap.viz.ui5.types.Bar_orientation.vertical, deprecated: true},

			/**
			 * Set the color palette for the chart. This is not supported for dual axis charts that have measureNamesDimension bound to the legend.
			 */
			colorPalette : {type : "string[]", defaultValue : ['#748CB2','#9CC677','#EACF5E','#F9AD79','#D16A7C','#8873A2','#3A95B3','#B6D949','#FDD36C','#F47958','#A65084','#0063B1','#0DA841','#FCB71D','#F05620','#B22D6E','#3C368E','#8FB2CF','#95D4AB','#EAE98F','#F9BE92','#EC9A99','#BC98BD','#1EB7B2','#73C03C','#F48323','#EB271B','#D9B5CA','#AED1DA','#DFECB2','#FCDAB0','#F5BCB4']},

			/**
			 * Set the color palette for axis 1 in dual charts.
			 */
			primaryValuesColorPalette : {type : "string[]", defaultValue : ['#8FBADD','#B8D4E9','#7AAED6','#A3C7E3','#3D88C4','#66A1D0','#297CBE','#5295CA','#005BA3','#146FB7','#005395','#0063B1']},

			/**
			 * Set the color palette for axis 2 in dual chart.
			 */
			secondaryValuesColorPalette : {type : "string[]", defaultValue : ['#F6A09B','#F9C3C0','#F58E88','#F8B1AD','#F05B52','#F37D76','#EE4A40','#F16C64','#D92419','#ED382D','#C52117','#EB271B']},

			/**
			 * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy. If this value is set to 'normal', the plot area is matte.
			 */
			drawingEffect : {type : "sap.viz.ui5.types.Bar_drawingEffect", defaultValue : sap.viz.ui5.types.Bar_drawingEffect.normal},

			/**
			 * Set whether bars have rounded corners
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			isRoundCorner : {type : "boolean", defaultValue : false, deprecated: true},

			/**
			 * Set where the image fill is enabled.
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			imageFill : {type : "boolean", defaultValue : false, deprecated: true},

			/**
			 * Set the images that fill the bars.
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			imagePalette : {type : "string[]", defaultValue : ['http://www.sap.com/global/ui/images/global/sap-logo.png'], deprecated: true},

			/**
			 * Sample value for formatRules:  [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition: [{Key3:Value3}], color:"#00ffff"}].   Each rule has two properties: the "condition" and the "color".   Value1, Value2 and Value3 are values. <br />  The value of a dimension may be <br />  1, Single value (string), like "China" . <br />  2. Array (enumeration), like ["UK","USA"] . <br />  The value of a measure may be <br />  1, Single value (number), like 20 . <br />  2. Arry (enumeration), like [121,122] . <br />  3. Object (range), like {min:100, max 200} . Min and max are inclusive.   If users want to inlcude 200, but not 100 in the range, they may use {min:100.00001, max:200}.   If users want values larger than 100, they may write {min:100}. <br />   The color is applied if one or more conditions in the condition array is met.   If multiple rules could apply on the same data point, it is the last rule that takes effect.
			 */
			formatRules : {type : "object[]"}
		},

		aggregations: {

			/**
			 * Settings for tooltip related properties
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			toolTip : {type : "sap.viz.ui5.types.Bar_tooltip", multiple : false, deprecated: true},

			/**
			 * Settings for animations in the plot area
			 */
			animation : {type : "sap.viz.ui5.types.Bar_animation", multiple : false}
		}
	}});


	return Bar;

});

}; // end of sap/viz/ui5/types/Bar.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Bar_animation') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Bar_animation.
jQuery.sap.declare('sap.viz.ui5.types.Bar_animation'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Bar_animation",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Bar_animation
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for animations in the plot area
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Bar_animation
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Bar_animation = BaseStructuredType.extend("sap.viz.ui5.types.Bar_animation", /** @lends sap.viz.ui5.types.Bar_animation.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set whether the data loading animation is enabled
			 */
			dataLoading : {type : "boolean", defaultValue : true},

			/**
			 * Set whether the data updating animation is enabled
			 */
			dataUpdating : {type : "boolean", defaultValue : true},

			/**
			 * Set whether the resizing animation is enabled
			 */
			resizing : {type : "boolean", defaultValue : true}
		}
	}});


	return Bar_animation;

});

}; // end of sap/viz/ui5/types/Bar_animation.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Bar_tooltip') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Bar_tooltip.
jQuery.sap.declare('sap.viz.ui5.types.Bar_tooltip'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Bar_tooltip",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Bar_tooltip
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for tooltip related properties
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.12. 
	 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
	 * @alias sap.viz.ui5.types.Bar_tooltip
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Bar_tooltip = BaseStructuredType.extend("sap.viz.ui5.types.Bar_tooltip", /** @lends sap.viz.ui5.types.Bar_tooltip.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set whether the tooltip is enabled
			 */
			enabled : {type : "boolean", defaultValue : true}
		}
	}});


	return Bar_tooltip;

});

}; // end of sap/viz/ui5/types/Bar_tooltip.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Bubble') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Bubble.
jQuery.sap.declare('sap.viz.ui5.types.Bubble'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Bubble",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Bubble
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Module sap.viz.ui5.types.Bubble
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Bubble
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Bubble = BaseStructuredType.extend("sap.viz.ui5.types.Bubble", /** @lends sap.viz.ui5.types.Bubble.prototype */ { metadata : {

		library: "sap.viz",



		properties: {

			/**
			 * Set the color of the bubbles
			 */
			colorPalette : {type : "string[]", defaultValue : ['#748CB2','#9CC677','#EACF5E','#F9AD79','#D16A7C','#8873A2','#3A95B3','#B6D949','#FDD36C','#F47958','#A65084','#0063B1','#0DA841','#FCB71D','#F05620','#B22D6E','#3C368E','#8FB2CF','#95D4AB','#EAE98F','#F9BE92','#EC9A99','#BC98BD','#1EB7B2','#73C03C','#F48323','#EB271B','#D9B5CA','#AED1DA','#DFECB2','#FCDAB0','#F5BCB4']},

			/**
			 * Set the shape of the bubbles
			 */
			shapePalette : {type : "string[]", defaultValue : ['circle','square','diamond','triangleUp','triangleDown','triangleLeft','triangleRight','cross','intersection']},

			/**
			 * Set the minimum size of the data points
			 */
			minMarkerSize : {type : "int"},

			/**
			 * Set the max value of primary values
			 * @deprecated Since version 1.20. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			maxPriValue : {type : "float", defaultValue : 0, deprecated: true},

			/**
			 * Set the minimum value of primary values
			 * @deprecated Since version 1.20. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			minPriValue : {type : "float", defaultValue : 0, deprecated: true},

			/**
			 * Set the max value of secondary values
			 * @deprecated Since version 1.20. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			maxSecValue : {type : "float", defaultValue : 0, deprecated: true},

			/**
			 * Set the minimum value of secondary values
			 * @deprecated Since version 1.20. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			minSecValue : {type : "float", defaultValue : 0, deprecated: true},

			/**
			 * Set the max value of bubble width values
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			maxBubbleWidth : {type : "float", defaultValue : 0, deprecated: true},

			/**
			 * Set the minimum value of bubble width values
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			minBubbleWidth : {type : "float", defaultValue : 0, deprecated: true},

			/**
			 * Set the max value of bubble height values
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			maxBubbleHeight : {type : "float", defaultValue : 0, deprecated: true},

			/**
			 * Set the minimum value of bubble height values
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			minBubbleHeight : {type : "float", defaultValue : 0, deprecated: true},

			/**
			 * Set whether it is time based scatter/bubble
			 * @deprecated Since version 1.20. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			timeBased : {type : "boolean", defaultValue : false, deprecated: true},

			/**
			 * Set the drawing effect for the bubbles
			 */
			drawingEffect : {type : "sap.viz.ui5.types.Bubble_drawingEffect", defaultValue : sap.viz.ui5.types.Bubble_drawingEffect.normal},

			/**
			 * Sample value for formatRules:  [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition: [{Key3:Value3}], color:"#00ffff"}].   Each rule has two properties: the "condition" and the "color".   Value1, Value2 and Value3 are values. <br />  The value of a dimension may be <br />  1, Single value (string), like "China" . <br />  2. Array (enumeration), like ["UK","USA"] . <br />  The value of a measure may be <br />  1, Single value (number), like 20 . <br />  2. Arry (enumeration), like [121,122] . <br />  3. Object (range), like {min:100, max 200} . Min and max are inclusive.   If users want to inlcude 200, but not 100 in the range, they may use {min:100.00001, max:200}.   If users want values larger than 100, they may write {min:100}. <br />   The color is applied if one or more conditions in the condition array is met.   If multiple rules could apply on the same data point, it is the last rule that takes effect.
			 */
			formatRules : {type : "object[]"},

			/**
			 * Show/hide the data of negetive value.
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			showNegativeValues : {type : "boolean", defaultValue : true, deprecated: true}
		},

		aggregations: {

			/**
			 * Settings for animations in bubble and scatter charts
			 */
			animation : {type : "sap.viz.ui5.types.Bubble_animation", multiple : false},

			/**
			 * Set tooltip related properties.
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			axisTooltip : {type : "sap.viz.ui5.types.Bubble_axisTooltip", multiple : false, deprecated: true},

			/**
			 * Settings for hoverline properties.
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			hoverline : {type : "sap.viz.ui5.types.Bubble_hoverline", multiple : false, deprecated: true}
		}
	}});


	return Bubble;

});

}; // end of sap/viz/ui5/types/Bubble.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Bubble_animation') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Bubble_animation.
jQuery.sap.declare('sap.viz.ui5.types.Bubble_animation'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Bubble_animation",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Bubble_animation
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for animations in bubble and scatter charts
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Bubble_animation
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Bubble_animation = BaseStructuredType.extend("sap.viz.ui5.types.Bubble_animation", /** @lends sap.viz.ui5.types.Bubble_animation.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set whether the data loading animation is enabled
			 */
			dataLoading : {type : "boolean", defaultValue : true},

			/**
			 * Set whether the data updating animation is enabled
			 */
			dataUpdating : {type : "boolean", defaultValue : true},

			/**
			 * Set whether the resizing animation is enabled
			 */
			resizing : {type : "boolean", defaultValue : true}
		}
	}});


	return Bubble_animation;

});

}; // end of sap/viz/ui5/types/Bubble_animation.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Bubble_axisTooltip') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Bubble_axisTooltip.
jQuery.sap.declare('sap.viz.ui5.types.Bubble_axisTooltip'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Bubble_axisTooltip",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Bubble_axisTooltip
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Set tooltip related properties.
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.19. 
	 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
	 * @alias sap.viz.ui5.types.Bubble_axisTooltip
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Bubble_axisTooltip = BaseStructuredType.extend("sap.viz.ui5.types.Bubble_axisTooltip", /** @lends sap.viz.ui5.types.Bubble_axisTooltip.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * enabled/disabled tooltip.
			 */
			visible : {type : "boolean", defaultValue : true},

			/**
			 * Set format string for small tooltip.The first one is applied to xAxis and the second one is applied to yAxis.Any character in "MDYHSAmdyhsa#?%0@" is reserved as a token for format code.
			 */
			formatString : {type : "string[]", defaultValue : null}
		}
	}});


	return Bubble_axisTooltip;

});

}; // end of sap/viz/ui5/types/Bubble_axisTooltip.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Bubble_hoverline') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Bubble_hoverline.
jQuery.sap.declare('sap.viz.ui5.types.Bubble_hoverline'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Bubble_hoverline",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Bubble_hoverline
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for hoverline properties.
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.19. 
	 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
	 * @alias sap.viz.ui5.types.Bubble_hoverline
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Bubble_hoverline = BaseStructuredType.extend("sap.viz.ui5.types.Bubble_hoverline", /** @lends sap.viz.ui5.types.Bubble_hoverline.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set to enabled/disabled hoverline or not.
			 */
			visible : {type : "boolean", defaultValue : true}
		}
	}});


	return Bubble_hoverline;

});

}; // end of sap/viz/ui5/types/Bubble_hoverline.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Bullet') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Bullet.
jQuery.sap.declare('sap.viz.ui5.types.Bullet'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Bullet",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Bullet
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Module sap.viz.ui5.types.Bullet
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Bullet
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Bullet = BaseStructuredType.extend("sap.viz.ui5.types.Bullet", /** @lends sap.viz.ui5.types.Bullet.prototype */ { metadata : {

		library: "sap.viz",



		properties: {

			/**
			 * Set the orientation of the plot area.
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			orientation : {type : "sap.viz.ui5.types.Bullet_orientation", defaultValue : sap.viz.ui5.types.Bullet_orientation.vertical, deprecated: true},

			/**
			 * Set the color palette for the chart.
			 */
			colorPalette : {type : "string[]", defaultValue : ['#2479BC','#d6d6d6','#EACF5E','#F9AD79','#D16A7C','#8873A2','#3A95B3','#B6D949','#FDD36C','#F47958','#A65084','#0063B1','#0DA841','#FCB71D','#F05620','#B22D6E','#3C368E','#8FB2CF','#95D4AB','#EAE98F','#F9BE92','#EC9A99','#BC98BD','#1EB7B2','#73C03C','#F48323','#EB271B','#D9B5CA','#AED1DA','#DFECB2','#FCDAB0','#F5BCB4']},

			/**
			 * Set the color palette for axis 1 in dual charts.
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			primaryValuesColorPalette : {type : "string[]", defaultValue : ['#8FBADD','#B8D4E9','#7AAED6','#A3C7E3','#3D88C4','#66A1D0','#297CBE','#5295CA','#005BA3','#146FB7','#005395','#0063B1'], deprecated: true},

			/**
			 * Set the color palette for axis 2 in dual chart.
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			secondaryValuesColorPalette : {type : "string[]", defaultValue : ['#F6A09B','#F9C3C0','#F58E88','#F8B1AD','#F05B52','#F37D76','#EE4A40','#F16C64','#D92419','#ED382D','#C52117','#EB271B'], deprecated: true},

			/**
			 * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy. If this value is set to 'normal', the plot area is matte.
			 */
			drawingEffect : {type : "sap.viz.ui5.types.Bullet_drawingEffect", defaultValue : sap.viz.ui5.types.Bullet_drawingEffect.normal},

			/**
			 * Set whether bars have rounded corners
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			isRoundCorner : {type : "boolean", defaultValue : false, deprecated: true},

			/**
			 * Set the color palette reference value color in bullet chart.
			 */
			referenceValuesColorPalette : {type : "string[]", defaultValue : ['#FCDCDA','#FEECDA','#DDF3E4']}
		},

		aggregations: {

			/**
			 * Settings for tooltip related properties
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			toolTip : {type : "sap.viz.ui5.types.Bullet_tooltip", multiple : false, deprecated: true}
		}
	}});


	return Bullet;

});

}; // end of sap/viz/ui5/types/Bullet.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Bullet_tooltip') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Bullet_tooltip.
jQuery.sap.declare('sap.viz.ui5.types.Bullet_tooltip'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Bullet_tooltip",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Bullet_tooltip
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for tooltip related properties
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.12. 
	 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
	 * @alias sap.viz.ui5.types.Bullet_tooltip
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Bullet_tooltip = BaseStructuredType.extend("sap.viz.ui5.types.Bullet_tooltip", /** @lends sap.viz.ui5.types.Bullet_tooltip.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set whether the tooltip is enabled
			 */
			enabled : {type : "boolean", defaultValue : true}
		}
	}});


	return Bullet_tooltip;

});

}; // end of sap/viz/ui5/types/Bullet_tooltip.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Combination') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Combination.
jQuery.sap.declare('sap.viz.ui5.types.Combination'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Combination",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Combination
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Module sap.viz.ui5.types.Combination
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Combination
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Combination = BaseStructuredType.extend("sap.viz.ui5.types.Combination", /** @lends sap.viz.ui5.types.Combination.prototype */ { metadata : {

		library: "sap.viz",



		properties: {

			/**
			 * Set the orientation of the plot area.
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			orientation : {type : "sap.viz.ui5.types.Combination_orientation", defaultValue : sap.viz.ui5.types.Combination_orientation.vertical, deprecated: true},

			/**
			 * Set the color palette for the chart. This is not supported for dual axis charts that have measureNamesDimension bound to the legend.
			 */
			colorPalette : {type : "string[]", defaultValue : ['#748CB2','#9CC677','#EACF5E','#F9AD79','#D16A7C','#8873A2','#3A95B3','#B6D949','#FDD36C','#F47958','#A65084','#0063B1','#0DA841','#FCB71D','#F05620','#B22D6E','#3C368E','#8FB2CF','#95D4AB','#EAE98F','#F9BE92','#EC9A99','#BC98BD','#1EB7B2','#73C03C','#F48323','#EB271B','#D9B5CA','#AED1DA','#DFECB2','#FCDAB0','#F5BCB4']},

			/**
			 * Set the color palette for axis 1 in dual charts.
			 */
			primaryValuesColorPalette : {type : "string[]", defaultValue : ['#8FBADD','#B8D4E9','#7AAED6','#A3C7E3','#3D88C4','#66A1D0','#297CBE','#5295CA','#005BA3','#146FB7','#005395','#0063B1']},

			/**
			 * Set the color palette for axis 2 in dual chart.
			 */
			secondaryValuesColorPalette : {type : "string[]", defaultValue : ['#F6A09B','#F9C3C0','#F58E88','#F8B1AD','#F05B52','#F37D76','#EE4A40','#F16C64','#D92419','#ED382D','#C52117','#EB271B']},

			/**
			 * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy. If this value is set to 'normal', the plot area is matte.
			 */
			drawingEffect : {type : "sap.viz.ui5.types.Combination_drawingEffect", defaultValue : sap.viz.ui5.types.Combination_drawingEffect.normal},

			/**
			 * Sample value for formatRules:  [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition: [{Key3:Value3}], color:"#00ffff"}].   Each rule has two properties: the "condition" and the "color".   Value1, Value2 and Value3 are values. <br />  The value of a dimension may be <br />  1, Single value (string), like "China" . <br />  2. Array (enumeration), like ["UK","USA"] . <br />  The value of a measure may be <br />  1, Single value (number), like 20 . <br />  2. Arry (enumeration), like [121,122] . <br />  3. Object (range), like {min:100, max 200} . Min and max are inclusive.   If users want to inlcude 200, but not 100 in the range, they may use {min:100.00001, max:200}.   If users want values larger than 100, they may write {min:100}. <br />   The color is applied if one or more conditions in the condition array is met.   If multiple rules could apply on the same data point, it is the last rule that takes effect.
			 */
			formatRules : {type : "object[]"}
		},

		aggregations: {

			/**
			 * Settings for the tooltip
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			toolTip : {type : "sap.viz.ui5.types.Combination_tooltip", multiple : false, deprecated: true},

			/**
			 * Settings for animations in the plot area
			 */
			animation : {type : "sap.viz.ui5.types.Combination_animation", multiple : false},

			/**
			 * Settings for the shape of data series
			 */
			dataShape : {type : "sap.viz.ui5.types.Combination_dataShape", multiple : false},

			/**
			 * Settings for bar properties
			 */
			bar : {type : "sap.viz.ui5.types.Combination_bar", multiple : false},

			/**
			 * Settings for line properties
			 */
			line : {type : "sap.viz.ui5.types.Combination_line", multiple : false}
		}
	}});


	return Combination;

});

}; // end of sap/viz/ui5/types/Combination.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Combination_animation') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Combination_animation.
jQuery.sap.declare('sap.viz.ui5.types.Combination_animation'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Combination_animation",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Combination_animation
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for animations in the plot area
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Combination_animation
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Combination_animation = BaseStructuredType.extend("sap.viz.ui5.types.Combination_animation", /** @lends sap.viz.ui5.types.Combination_animation.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set whether the data loading animation is enabled
			 */
			dataLoading : {type : "boolean", defaultValue : true},

			/**
			 * Set whether the data updating animation is enabled
			 */
			dataUpdating : {type : "boolean", defaultValue : true},

			/**
			 * Set whether the resizing animation is enabled
			 */
			resizing : {type : "boolean", defaultValue : true}
		}
	}});


	return Combination_animation;

});

}; // end of sap/viz/ui5/types/Combination_animation.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Combination_bar') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Combination_bar.
jQuery.sap.declare('sap.viz.ui5.types.Combination_bar'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Combination_bar",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Combination_bar
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for bar properties
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Combination_bar
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Combination_bar = BaseStructuredType.extend("sap.viz.ui5.types.Combination_bar", /** @lends sap.viz.ui5.types.Combination_bar.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set whether the bars have rounded corners
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			isRoundCorner : {type : "boolean", defaultValue : false, deprecated: true}
		}
	}});


	return Combination_bar;

});

}; // end of sap/viz/ui5/types/Combination_bar.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Combination_dataShape') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Combination_dataShape.
jQuery.sap.declare('sap.viz.ui5.types.Combination_dataShape'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Combination_dataShape",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Combination_dataShape
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for the shape of data series
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Combination_dataShape
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Combination_dataShape = BaseStructuredType.extend("sap.viz.ui5.types.Combination_dataShape", /** @lends sap.viz.ui5.types.Combination_dataShape.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set the shape of data series on the primary axis
			 */
			primaryAxis : {type : "string[]", defaultValue : ['bar','line','line']},

			/**
			 * Set the shape of data series on the secondary axis
			 */
			secondaryAxis : {type : "string[]", defaultValue : ['line','line','line']},

			/**
			 * Set the shape of data series on the secondary axis (Old version; still works)
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			secondAxis : {type : "string[]", defaultValue : ['line','line','line'], deprecated: true}
		}
	}});


	return Combination_dataShape;

});

}; // end of sap/viz/ui5/types/Combination_dataShape.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Combination_line') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Combination_line.
jQuery.sap.declare('sap.viz.ui5.types.Combination_line'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Combination_line",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Combination_line
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for line properties
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Combination_line
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Combination_line = BaseStructuredType.extend("sap.viz.ui5.types.Combination_line", /** @lends sap.viz.ui5.types.Combination_line.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set the width of lines, ranging from '1' to '7'. If you enter a value outside the range, the line width will default to '2'.
			 */
			width : {type : "int", defaultValue : 2}
		},

		aggregations : {

			/**
			 * Settings for the visual markers for data points
			 */
			marker : {type: "sap.viz.ui5.types.Combination_line_marker", multiple: false}
		}
	}});


	return Combination_line;

});

}; // end of sap/viz/ui5/types/Combination_line.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Combination_line_marker') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Combination_line_marker.
jQuery.sap.declare('sap.viz.ui5.types.Combination_line_marker'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Combination_line_marker",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Combination_line_marker
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for the visual markers for data points
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Combination_line_marker
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Combination_line_marker = BaseStructuredType.extend("sap.viz.ui5.types.Combination_line_marker", /** @lends sap.viz.ui5.types.Combination_line_marker.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set the visibility of the data point markers
			 */
			visible : {type : "boolean", defaultValue : true},

			/**
			 * Set the shape of the data point markers
			 */
			shape : {type : "string[]", defaultValue : ['circle']},

			/**
			 * Set the size of the data point markers, ranging from '4' to '32'. If you enter a value outside the range, the size defaults to '6'.
			 */
			size : {type : "int", defaultValue : 6},

			/**
			 * Set the number to enable events for markers when they are invisible. If the total amount of markers is bigger than this value, markers will remain hidden when selected or hovered over. The default value is Number.POSITIVE_INFINITY, which is the largest possible value.
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			number : {type : "int", deprecated: true}
		}
	}});


	return Combination_line_marker;

});

}; // end of sap/viz/ui5/types/Combination_line_marker.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Combination_tooltip') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Combination_tooltip.
jQuery.sap.declare('sap.viz.ui5.types.Combination_tooltip'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Combination_tooltip",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Combination_tooltip
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for the tooltip
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.12. 
	 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
	 * @alias sap.viz.ui5.types.Combination_tooltip
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Combination_tooltip = BaseStructuredType.extend("sap.viz.ui5.types.Combination_tooltip", /** @lends sap.viz.ui5.types.Combination_tooltip.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set whether the tooltip is enabled
			 */
			enabled : {type : "boolean", defaultValue : true}
		}
	}});


	return Combination_tooltip;

});

}; // end of sap/viz/ui5/types/Combination_tooltip.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Datalabel') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Datalabel.
jQuery.sap.declare('sap.viz.ui5.types.Datalabel'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Datalabel",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Datalabel
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Module sap.viz.ui5.types.Datalabel
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Datalabel
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Datalabel = BaseStructuredType.extend("sap.viz.ui5.types.Datalabel", /** @lends sap.viz.ui5.types.Datalabel.prototype */ { metadata : {

		library: "sap.viz",



		properties: {

			/**
			 * Set whether the data labels are visible
			 */
			visible : {type : "boolean", defaultValue : false},

			/**
			 * Always show all data labels even they are overlapped
			 */
			hideWhenOverlap : {type : "boolean", defaultValue : true},

			/**
			 * Set whether the chart is a donut chart. Use only for donut charts.
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			isDonut : {type : "boolean", defaultValue : false, deprecated: true},

			/**
			 * Set the type of label
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			type : {type : "string", defaultValue : 'value', deprecated: true},

			/**
			 * If set to 'true', the data labels will be automatically placed outside when the data label position property is inside, and vice versa
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			automaticInOutside : {type : "boolean", defaultValue : true, deprecated: true},

			/**
			 * If set to 'true', the value zero is shown in the data labels
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			showZero : {type : "boolean", defaultValue : true, deprecated: true},

			/**
			 * Set whether the chart is a geo chart
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			isGeoChart : {type : "boolean", defaultValue : false, deprecated: true},

			/**
			 * Set whether the chart is a bubble chart
			 * @deprecated Since version 1.22. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			isBubbleChart : {type : "boolean", defaultValue : false, deprecated: true},

			/**
			 * Set whether the chart is a stack chart. Set for stack chart only.
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			isStackMode : {type : "boolean", defaultValue : false, deprecated: true},

			/**
			 * Set whether the chart is a percent chart. Set for percent chart only.
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			isPercentMode : {type : "boolean", defaultValue : false, deprecated: true},

			/**
			 * If set to 'true', the data label position is defined by the property 'outsidePosition', regardless of whether the data label value is negative
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			positionPreference : {type : "boolean", defaultValue : false, deprecated: true},

			/**
			 * If set to 'true', the data label is visible when it is outside
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			outsideVisible : {type : "boolean", defaultValue : true, deprecated: true},

			/**
			 * If set to 'true', the data label is positioned above the element when it is outside
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			outsidePosition : {type : "sap.viz.ui5.types.Datalabel_outsidePosition", defaultValue : sap.viz.ui5.types.Datalabel_outsidePosition.up, deprecated: true},

			/**
			 * Set painting mode of data labels
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			paintingMode : {type : "sap.viz.ui5.types.Datalabel_paintingMode", defaultValue : sap.viz.ui5.types.Datalabel_paintingMode.rectCoordinate, deprecated: true},

			/**
			 * Set position of data labels
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			position : {type : "sap.viz.ui5.types.Datalabel_position", defaultValue : sap.viz.ui5.types.Datalabel_position.inside, deprecated: true},

			/**
			 * Set orientation of data labels
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			orientation : {type : "sap.viz.ui5.types.Datalabel_orientation", defaultValue : sap.viz.ui5.types.Datalabel_orientation.vertical, deprecated: true},

			/**
			 * If set to 'true', the data label is automatically hidden when bubble width isn't enough to show the whole label in single bubble chart.
			 * @deprecated Since version 1.20. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			respectShapeWidth : {type : "boolean", defaultValue : false, deprecated: true},

			/**
			 * Set the format strings for the data labels. For dual axis charts, the first array is applied to the primary axis and the second array is applied to the second axis. If you enter fewer format strings into an array than there are measures in the respective axis, then the last format string is applied to all remaining measures. The following characters are reserved as tokens for format code: MDYHSAmdyhsa#?%0@. The following is a simple example: [["0.00%"],["0.00%"]].
			 */
			formatString : {type : "any[]", defaultValue : null}
		}
	}});


	return Datalabel;

});

}; // end of sap/viz/ui5/types/Datalabel.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Datatransform') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Datatransform.
jQuery.sap.declare('sap.viz.ui5.types.Datatransform'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Datatransform",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Datatransform
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Module sap.viz.ui5.types.Datatransform
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Datatransform
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Datatransform = BaseStructuredType.extend("sap.viz.ui5.types.Datatransform", /** @lends sap.viz.ui5.types.Datatransform.prototype */ { metadata : {

		library: "sap.viz",



		aggregations: {

			/**
			 * Settings for the auto-binning algorithm
			 */
			autoBinning : {type : "sap.viz.ui5.types.Datatransform_autoBinning", multiple : false},

			/**
			 * Settings for the data sampling algorithm
			 */
			dataSampling : {type : "sap.viz.ui5.types.Datatransform_dataSampling", multiple : false}
		}
	}});


	return Datatransform;

});

}; // end of sap/viz/ui5/types/Datatransform.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Datatransform_autoBinning') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Datatransform_autoBinning.
jQuery.sap.declare('sap.viz.ui5.types.Datatransform_autoBinning'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Datatransform_autoBinning",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Datatransform_autoBinning
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for the auto-binning algorithm
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Datatransform_autoBinning
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Datatransform_autoBinning = BaseStructuredType.extend("sap.viz.ui5.types.Datatransform_autoBinning", /** @lends sap.viz.ui5.types.Datatransform_autoBinning.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set whether data auto-binning is enabled.
			 */
			enable : {type : "boolean", defaultValue : false},

			/**
			 * Set the bin number.
			 */
			binNumber : {type : "int", defaultValue : 10}
		}
	}});


	return Datatransform_autoBinning;

});

}; // end of sap/viz/ui5/types/Datatransform_autoBinning.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Datatransform_dataSampling') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Datatransform_dataSampling.
jQuery.sap.declare('sap.viz.ui5.types.Datatransform_dataSampling'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Datatransform_dataSampling",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Datatransform_dataSampling
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for the data sampling algorithm
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Datatransform_dataSampling
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Datatransform_dataSampling = BaseStructuredType.extend("sap.viz.ui5.types.Datatransform_dataSampling", /** @lends sap.viz.ui5.types.Datatransform_dataSampling.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set whether data sampling is enabled.
			 */
			enable : {type : "boolean", defaultValue : false},

			/**
			 * Set the data point percentage in the original dataset
			 */
			sizeFactor : {type : "int", defaultValue : 1},

			/**
			 * If the data point is larger than this value, data sampling is triggered.
			 */
			numberPrecondition : {type : "int", defaultValue : 3000}
		},

		aggregations : {

			/**
			 * add documentation for aggregation grid
			 */
			grid : {type: "sap.viz.ui5.types.Datatransform_dataSampling_grid", multiple: false}
		}
	}});


	return Datatransform_dataSampling;

});

}; // end of sap/viz/ui5/types/Datatransform_dataSampling.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Datatransform_dataSampling_grid') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Datatransform_dataSampling_grid.
jQuery.sap.declare('sap.viz.ui5.types.Datatransform_dataSampling_grid'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Datatransform_dataSampling_grid",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Datatransform_dataSampling_grid
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Structured Type sap.viz.ui5.types.Datatransform_dataSampling_grid
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Datatransform_dataSampling_grid
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Datatransform_dataSampling_grid = BaseStructuredType.extend("sap.viz.ui5.types.Datatransform_dataSampling_grid", /** @lends sap.viz.ui5.types.Datatransform_dataSampling_grid.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set the number of rows in the grid.
			 */
			row : {type : "int", defaultValue : 3},

			/**
			 * Set the number of columns in the grid.
			 */
			column : {type : "int", defaultValue : 3}
		}
	}});


	return Datatransform_dataSampling_grid;

});

}; // end of sap/viz/ui5/types/Datatransform_dataSampling_grid.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Heatmap') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Heatmap.
jQuery.sap.declare('sap.viz.ui5.types.Heatmap'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Heatmap",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Heatmap
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Module sap.viz.ui5.types.Heatmap
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Heatmap
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Heatmap = BaseStructuredType.extend("sap.viz.ui5.types.Heatmap", /** @lends sap.viz.ui5.types.Heatmap.prototype */ { metadata : {

		library: "sap.viz",



		properties: {

			/**
			 * Set the starting color of the heat map
			 */
			startColor : {type : "string", defaultValue : '#C2E3A9'},

			/**
			 * Set the end color of the heat map
			 */
			endColor : {type : "string", defaultValue : '#73C03C'},

			/**
			 * Set the color palette for the various sectors. For example, ["#748CB2", "#9CC677", "#EACF5E", "#F9AD79", "#D16A7C"].
			 */
			colorPalette : {type : "string[]"},

			/**
			 * Set the MBC legend values. For example, [10,11,12,13,14,15]. The values in the array should be in ascending order. If the number of values in the array is smaller than the MBC legend segment number, the MBC legend automatically calculates the values according to the data. If the number of values in the legendValues array is larger than MBC legend segment number, then only the first "segment number + 1" values are used.
			 */
			legendValues : {type : "int[]"},

			/**
			 * Sample value for formatRules:  [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition: [{Key3:Value3}], color:"#00ffff"}].   Each rule has two properties: the "condition" and the "color".   Value1, Value2 and Value3 are values. <br />  The value of a dimension may be <br />  1, Single value (string), like "China" . <br />  2. Array (enumeration), like ["UK","USA"] . <br />  The value of a measure may be <br />  1, Single value (number), like 20 . <br />  2. Arry (enumeration), like [121,122] . <br />  3. Object (range), like {min:100, max 200} . Min and max are inclusive.   If users want to inlcude 200, but not 100 in the range, they may use {min:100.00001, max:200}.   If users want values larger than 100, they may write {min:100}. <br />   The color is applied if one or more conditions in the condition array is met.   If multiple rules could apply on the same data point, it is the last rule that takes effect.
			 */
			formatRules : {type : "object[]"}
		},

		aggregations: {

			/**
			 * Settings for the border
			 */
			border : {type : "sap.viz.ui5.types.Heatmap_border", multiple : false},

			/**
			 * Settings for animations in the plot area
			 */
			animation : {type : "sap.viz.ui5.types.Heatmap_animation", multiple : false},

			/**
			 * Settings for tooltip
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			toolTip : {type : "sap.viz.ui5.types.Heatmap_tooltip", multiple : false, deprecated: true}
		}
	}});


	return Heatmap;

});

}; // end of sap/viz/ui5/types/Heatmap.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Heatmap_animation') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Heatmap_animation.
jQuery.sap.declare('sap.viz.ui5.types.Heatmap_animation'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Heatmap_animation",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Heatmap_animation
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for animations in the plot area
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Heatmap_animation
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Heatmap_animation = BaseStructuredType.extend("sap.viz.ui5.types.Heatmap_animation", /** @lends sap.viz.ui5.types.Heatmap_animation.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set whether the data loading animation is enabled
			 */
			dataLoading : {type : "boolean", defaultValue : true},

			/**
			 * Set whether the data updating animation is enabled
			 */
			dataUpdating : {type : "boolean", defaultValue : true},

			/**
			 * Set whether the resizing animation is enabled
			 */
			resizing : {type : "boolean", defaultValue : true}
		}
	}});


	return Heatmap_animation;

});

}; // end of sap/viz/ui5/types/Heatmap_animation.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Heatmap_border') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Heatmap_border.
jQuery.sap.declare('sap.viz.ui5.types.Heatmap_border'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Heatmap_border",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Heatmap_border
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for the border
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Heatmap_border
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Heatmap_border = BaseStructuredType.extend("sap.viz.ui5.types.Heatmap_border", /** @lends sap.viz.ui5.types.Heatmap_border.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set the visibility of the zone edge
			 */
			visible : {type : "boolean", defaultValue : true}
		}
	}});


	return Heatmap_border;

});

}; // end of sap/viz/ui5/types/Heatmap_border.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Heatmap_tooltip') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Heatmap_tooltip.
jQuery.sap.declare('sap.viz.ui5.types.Heatmap_tooltip'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Heatmap_tooltip",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Heatmap_tooltip
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for tooltip
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.12. 
	 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
	 * @alias sap.viz.ui5.types.Heatmap_tooltip
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Heatmap_tooltip = BaseStructuredType.extend("sap.viz.ui5.types.Heatmap_tooltip", /** @lends sap.viz.ui5.types.Heatmap_tooltip.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set whether the tooltip is enabled
			 */
			enabled : {type : "boolean", defaultValue : true}
		}
	}});


	return Heatmap_tooltip;

});

}; // end of sap/viz/ui5/types/Heatmap_tooltip.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Legend') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Legend.
jQuery.sap.declare('sap.viz.ui5.types.Legend'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Legend",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Legend
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Module sap.viz.ui5.types.Legend
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Legend
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Legend = BaseStructuredType.extend("sap.viz.ui5.types.Legend", /** @lends sap.viz.ui5.types.Legend.prototype */ { metadata : {

		library: "sap.viz",



		aggregations: {

			/**
			 * Settings for the layout of the legend area
			 */
			layout : {type : "sap.viz.ui5.types.Legend_layout", multiple : false}
		}
	}});


	return Legend;

});

}; // end of sap/viz/ui5/types/Legend.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Legend_layout') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Legend_layout.
jQuery.sap.declare('sap.viz.ui5.types.Legend_layout'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Legend_layout",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Legend_layout
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for the layout of the legend area
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Legend_layout
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Legend_layout = BaseStructuredType.extend("sap.viz.ui5.types.Legend_layout", /** @lends sap.viz.ui5.types.Legend_layout.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set the position of the legend area
			 */
			position : {type : "sap.viz.ui5.types.Legend_layout_position", defaultValue : sap.viz.ui5.types.Legend_layout_position.right},

			/**
			 * Set the priority of the position for the legend area
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			priority : {type : "int", defaultValue : 1, deprecated: true}
		}
	}});


	return Legend_layout;

});

}; // end of sap/viz/ui5/types/Legend_layout.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Line') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Line.
jQuery.sap.declare('sap.viz.ui5.types.Line'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Line",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Line
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Module sap.viz.ui5.types.Line
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Line
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Line = BaseStructuredType.extend("sap.viz.ui5.types.Line", /** @lends sap.viz.ui5.types.Line.prototype */ { metadata : {

		library: "sap.viz",



		properties: {

			/**
			 * Set the orientation of the plot area.
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			orientation : {type : "sap.viz.ui5.types.Line_orientation", defaultValue : sap.viz.ui5.types.Line_orientation.vertical, deprecated: true},

			/**
			 * Set the color palette for the chart. This is not supported for dual axis charts that have measureNamesDimension bound to the legend.
			 */
			colorPalette : {type : "string[]", defaultValue : ['#748CB2','#9CC677','#EACF5E','#F9AD79','#D16A7C','#8873A2','#3A95B3','#B6D949','#FDD36C','#F47958','#A65084','#0063B1','#0DA841','#FCB71D','#F05620','#B22D6E','#3C368E','#8FB2CF','#95D4AB','#EAE98F','#F9BE92','#EC9A99','#BC98BD','#1EB7B2','#73C03C','#F48323','#EB271B','#D9B5CA','#AED1DA','#DFECB2','#FCDAB0','#F5BCB4']},

			/**
			 * Set the color palette for axis 1 in dual charts.
			 */
			primaryValuesColorPalette : {type : "string[]", defaultValue : ['#8FBADD','#B8D4E9','#7AAED6','#A3C7E3','#3D88C4','#66A1D0','#297CBE','#5295CA','#005BA3','#146FB7','#005395','#0063B1']},

			/**
			 * Set the color palette for axis 2 in dual chart.
			 */
			secondaryValuesColorPalette : {type : "string[]", defaultValue : ['#F6A09B','#F9C3C0','#F58E88','#F8B1AD','#F05B52','#F37D76','#EE4A40','#F16C64','#D92419','#ED382D','#C52117','#EB271B']},

			/**
			 * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy. If this value is set to 'normal', the plot area is matte.
			 */
			drawingEffect : {type : "sap.viz.ui5.types.Line_drawingEffect", defaultValue : sap.viz.ui5.types.Line_drawingEffect.normal},

			/**
			 * Set the width of the lines, ranging from '1' to '7'. If you enter a value outside that range, the line width defaults to '2'.
			 */
			width : {type : "int", defaultValue : 2},

			/**
			 * mouse over show one catergory detail
			 * @deprecated Since version 1.20. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			showGroupDetail : {type : "boolean", defaultValue : false, deprecated: true},

			/**
			 * Sample value for formatRules:  [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition: [{Key3:Value3}], color:"#00ffff"}].   Each rule has two properties: the "condition" and the "color".   Value1, Value2 and Value3 are values. <br />  The value of a dimension may be <br />  1, Single value (string), like "China" . <br />  2. Array (enumeration), like ["UK","USA"] . <br />  The value of a measure may be <br />  1, Single value (number), like 20 . <br />  2. Arry (enumeration), like [121,122] . <br />  3. Object (range), like {min:100, max 200} . Min and max are inclusive.   If users want to inlcude 200, but not 100 in the range, they may use {min:100.00001, max:200}.   If users want values larger than 100, they may write {min:100}. <br />   The color is applied if one or more conditions in the condition array is met.   If multiple rules could apply on the same data point, it is the last rule that takes effect.
			 */
			formatRules : {type : "object[]"}
		},

		aggregations: {

			/**
			 * Settings for the tooltip
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			toolTip : {type : "sap.viz.ui5.types.Line_tooltip", multiple : false, deprecated: true},

			/**
			 * Settings for animations.
			 */
			animation : {type : "sap.viz.ui5.types.Line_animation", multiple : false},

			/**
			 * Settings for marker/data point graphics
			 */
			marker : {type : "sap.viz.ui5.types.Line_marker", multiple : false},

			/**
			 * Settings for the hoverline.
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			hoverline : {type : "sap.viz.ui5.types.Line_hoverline", multiple : false, deprecated: true}
		}
	}});


	return Line;

});

}; // end of sap/viz/ui5/types/Line.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Line_animation') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Line_animation.
jQuery.sap.declare('sap.viz.ui5.types.Line_animation'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Line_animation",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Line_animation
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for animations.
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Line_animation
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Line_animation = BaseStructuredType.extend("sap.viz.ui5.types.Line_animation", /** @lends sap.viz.ui5.types.Line_animation.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set whether the data loading animation is enabled
			 */
			dataLoading : {type : "boolean", defaultValue : true},

			/**
			 * Set whether the data updating animation is enabled
			 */
			dataUpdating : {type : "boolean", defaultValue : true},

			/**
			 * Set whether the resizing animation is enabled
			 */
			resizing : {type : "boolean", defaultValue : true}
		}
	}});


	return Line_animation;

});

}; // end of sap/viz/ui5/types/Line_animation.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Line_hoverline') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Line_hoverline.
jQuery.sap.declare('sap.viz.ui5.types.Line_hoverline'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Line_hoverline",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Line_hoverline
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for the hoverline.
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.19. 
	 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
	 * @alias sap.viz.ui5.types.Line_hoverline
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Line_hoverline = BaseStructuredType.extend("sap.viz.ui5.types.Line_hoverline", /** @lends sap.viz.ui5.types.Line_hoverline.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set the visibility of the hoverline.
			 */
			visible : {type : "boolean", defaultValue : true}
		}
	}});


	return Line_hoverline;

});

}; // end of sap/viz/ui5/types/Line_hoverline.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Line_marker') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Line_marker.
jQuery.sap.declare('sap.viz.ui5.types.Line_marker'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Line_marker",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Line_marker
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for marker/data point graphics
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Line_marker
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Line_marker = BaseStructuredType.extend("sap.viz.ui5.types.Line_marker", /** @lends sap.viz.ui5.types.Line_marker.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set the visibility of the markers
			 */
			visible : {type : "boolean", defaultValue : true},

			/**
			 * Set the shape of the markers
			 */
			shape : {type : "sap.viz.ui5.types.Line_marker_shape", defaultValue : sap.viz.ui5.types.Line_marker_shape.circle},

			/**
			 * Set the marker size for data points, ranging from '4' to '32'. If you enter a value outside that range, the marker size defaults to '6'.
			 */
			size : {type : "int", defaultValue : 6},

			/**
			 * Set the number to enable events for markers when they are invisible. If the total amount of markers is bigger than this value, markers will remain hidden when selected or hovered over. The default value is Number.POSITIVE_INFINITY, which is the largest possible value.
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			number : {type : "int", deprecated: true}
		}
	}});


	return Line_marker;

});

}; // end of sap/viz/ui5/types/Line_marker.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Line_tooltip') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Line_tooltip.
jQuery.sap.declare('sap.viz.ui5.types.Line_tooltip'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Line_tooltip",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Line_tooltip
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for the tooltip
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.12. 
	 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
	 * @alias sap.viz.ui5.types.Line_tooltip
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Line_tooltip = BaseStructuredType.extend("sap.viz.ui5.types.Line_tooltip", /** @lends sap.viz.ui5.types.Line_tooltip.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set whether the tooltip is enabled
			 */
			enabled : {type : "boolean", defaultValue : true}
		}
	}});


	return Line_tooltip;

});

}; // end of sap/viz/ui5/types/Line_tooltip.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Pie') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Pie.
jQuery.sap.declare('sap.viz.ui5.types.Pie'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Pie",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Pie
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Module sap.viz.ui5.types.Pie
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Pie
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Pie = BaseStructuredType.extend("sap.viz.ui5.types.Pie", /** @lends sap.viz.ui5.types.Pie.prototype */ { metadata : {

		library: "sap.viz",



		properties: {

			/**
			 * Set the color palette for the sectors of the pie chart
			 */
			colorPalette : {type : "string[]", defaultValue : ['#748CB2','#9CC677','#EACF5E','#F9AD79','#D16A7C','#8873A2','#3A95B3','#B6D949','#FDD36C','#F47958','#A65084','#0063B1','#0DA841','#FCB71D','#F05620','#B22D6E','#3C368E','#8FB2CF','#95D4AB','#EAE98F','#F9BE92','#EC9A99','#BC98BD','#1EB7B2','#73C03C','#F48323','#EB271B','#D9B5CA','#AED1DA','#DFECB2','#FCDAB0','#F5BCB4']},

			/**
			 * Set the chart to display as a donut or a pie. If this value is set to 'true', the chart displays as a donut. If this value is set to 'false', the chart displays as a pie.
			 */
			isDonut : {type : "boolean", defaultValue : false},

			/**
			 * Set whether the chart displays as a geo pie chart. If this value is set to 'true', the chart displays as a geo pie chart. If this value is set to 'false', the chart does not display as a geo pie chart.
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			isGeoPie : {type : "boolean", defaultValue : false, deprecated: true},

			/**
			 * Set the vertical aligment of the chart
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			valign : {type : "sap.viz.ui5.types.Pie_valign", defaultValue : sap.viz.ui5.types.Pie_valign.top, deprecated: true},

			/**
			 * Set the drawing effect of the pie
			 */
			drawingEffect : {type : "sap.viz.ui5.types.Pie_drawingEffect", defaultValue : sap.viz.ui5.types.Pie_drawingEffect.normal},

			/**
			 * Rules to format data points, sample:  [{condition: [{Key1:"Value1", Key2:"Value2"}], color:"#00ff00"}, {condition: [{Key3:"Value3"}], color:"#00ffff"}].  Each rule has two properties: "condition" and "color". The relation among the condition object in "condition" array is "OR",  which means the data point that met any condition in the array will apply the "color".  If multiple rules could apply on the same data point, the last rule would take effect.
			 */
			formatRules : {type : "object[]"},

			/**
			 * Set the plot scale of the pie
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			plotScale : {type : "float", defaultValue : 1, deprecated: true}
		},

		aggregations: {

			/**
			 * Settings for animations in the plot area
			 */
			animation : {type : "sap.viz.ui5.types.Pie_animation", multiple : false},

			/**
			 * Settings for tooltip related properties
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			toolTip : {type : "sap.viz.ui5.types.Pie_tooltip", multiple : false, deprecated: true}
		}
	}});


	return Pie;

});

}; // end of sap/viz/ui5/types/Pie.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Pie_animation') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Pie_animation.
jQuery.sap.declare('sap.viz.ui5.types.Pie_animation'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Pie_animation",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Pie_animation
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for animations in the plot area
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Pie_animation
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Pie_animation = BaseStructuredType.extend("sap.viz.ui5.types.Pie_animation", /** @lends sap.viz.ui5.types.Pie_animation.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set whether the data loading animation is enabled
			 */
			dataLoading : {type : "boolean", defaultValue : true},

			/**
			 * Set whether the data updating animation is enabled
			 */
			dataUpdating : {type : "boolean", defaultValue : true},

			/**
			 * Set whether the resizing animation is enabled
			 */
			resizing : {type : "boolean", defaultValue : true}
		}
	}});


	return Pie_animation;

});

}; // end of sap/viz/ui5/types/Pie_animation.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Pie_tooltip') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Pie_tooltip.
jQuery.sap.declare('sap.viz.ui5.types.Pie_tooltip'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Pie_tooltip",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Pie_tooltip
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for tooltip related properties
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.19. 
	 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
	 * @alias sap.viz.ui5.types.Pie_tooltip
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Pie_tooltip = BaseStructuredType.extend("sap.viz.ui5.types.Pie_tooltip", /** @lends sap.viz.ui5.types.Pie_tooltip.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set whether tooltip is enabled
			 */
			visible : {type : "boolean", defaultValue : true},

			/**
			 * Set the number format of the measure value in tooltip
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			valueFormat : {type : "string", defaultValue : 'n', deprecated: true},

			/**
			 * Set the number format of the percentage label in tooltip
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			percentageFormat : {type : "string", defaultValue : '.0%', deprecated: true},

			/**
			 * Set format string of tooltip. The first string is applied to value and the second is applied to percentage.Any character in "MDYHSAmdyhsa#?%0@" is reserved as a token for format code.
			 */
			formatString : {type : "string[]", defaultValue : null}
		}
	}});


	return Pie_tooltip;

});

}; // end of sap/viz/ui5/types/Pie_tooltip.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.RootContainer') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.RootContainer.
jQuery.sap.declare('sap.viz.ui5.types.RootContainer'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/RootContainer",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.RootContainer
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Module sap.viz.ui5.types.RootContainer
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.RootContainer
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var RootContainer = BaseStructuredType.extend("sap.viz.ui5.types.RootContainer", /** @lends sap.viz.ui5.types.RootContainer.prototype */ { metadata : {

		library: "sap.viz",



		aggregations: {

			/**
			 * Settings for the layout of the root container
			 */
			layout : {type : "sap.viz.ui5.types.RootContainer_layout", multiple : false}
		}
	}});


	return RootContainer;

});

}; // end of sap/viz/ui5/types/RootContainer.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.RootContainer_layout') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.RootContainer_layout.
jQuery.sap.declare('sap.viz.ui5.types.RootContainer_layout'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/RootContainer_layout",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.RootContainer_layout
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for the layout of the root container
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.RootContainer_layout
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var RootContainer_layout = BaseStructuredType.extend("sap.viz.ui5.types.RootContainer_layout", /** @lends sap.viz.ui5.types.RootContainer_layout.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Indicates the layout adjust policy
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			adjustPolicy : {type : "string", deprecated: true},

			/**
			 * Set the universal padding value. This single value is applied to all sides of the chart. Individual settings for each edge are also supported.
			 */
			padding : {type : "int", defaultValue : 24},

			/**
			 * Set the padding value for the top side
			 */
			paddingTop : {type : "int"},

			/**
			 * Set the padding value for the left side
			 */
			paddingLeft : {type : "int"},

			/**
			 * Set the padding value for the right side
			 */
			paddingRight : {type : "int"},

			/**
			 * Set the padding value for the bottom side
			 */
			paddingBottom : {type : "int"},

			/**
			 * Vertical gap value between UI components
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			vgap : {type : "int", defaultValue : 8, deprecated: true},

			/**
			 * Horizontal gap value between UI components
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			hgap : {type : "int", defaultValue : 8, deprecated: true},

			/**
			 * Hide axis title firstly if the space is limited.
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			hideAxisTitleFirst : {type : "boolean", defaultValue : true, deprecated: true}
		}
	}});


	return RootContainer_layout;

});

}; // end of sap/viz/ui5/types/RootContainer_layout.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Scatter') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Scatter.
jQuery.sap.declare('sap.viz.ui5.types.Scatter'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Scatter",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Scatter
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Module sap.viz.ui5.types.Scatter
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Scatter
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Scatter = BaseStructuredType.extend("sap.viz.ui5.types.Scatter", /** @lends sap.viz.ui5.types.Scatter.prototype */ { metadata : {

		library: "sap.viz",



		properties: {

			/**
			 * Set the color of the bubbles
			 */
			colorPalette : {type : "string[]", defaultValue : ['#748CB2','#9CC677','#EACF5E','#F9AD79','#D16A7C','#8873A2','#3A95B3','#B6D949','#FDD36C','#F47958','#A65084','#0063B1','#0DA841','#FCB71D','#F05620','#B22D6E','#3C368E','#8FB2CF','#95D4AB','#EAE98F','#F9BE92','#EC9A99','#BC98BD','#1EB7B2','#73C03C','#F48323','#EB271B','#D9B5CA','#AED1DA','#DFECB2','#FCDAB0','#F5BCB4']},

			/**
			 * Set the shape of the bubbles
			 */
			shapePalette : {type : "string[]", defaultValue : ['circle','square','diamond','triangleUp','triangleDown','triangleLeft','triangleRight','cross','intersection']},

			/**
			 * Set the max value of primary values
			 * @deprecated Since version 1.20. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			maxPriValue : {type : "float", defaultValue : 0, deprecated: true},

			/**
			 * Set the minimum value of primary values
			 * @deprecated Since version 1.20. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			minPriValue : {type : "float", defaultValue : 0, deprecated: true},

			/**
			 * Set the max value of secondary values
			 * @deprecated Since version 1.20. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			maxSecValue : {type : "float", defaultValue : 0, deprecated: true},

			/**
			 * Set the minimum value of secondary values
			 * @deprecated Since version 1.20. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			minSecValue : {type : "float", defaultValue : 0, deprecated: true},

			/**
			 * Set whether it is time based scatter/bubble
			 * @deprecated Since version 1.20. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			timeBased : {type : "boolean", defaultValue : false, deprecated: true},

			/**
			 * Set the drawing effect for the bubbles
			 */
			drawingEffect : {type : "sap.viz.ui5.types.Scatter_drawingEffect", defaultValue : sap.viz.ui5.types.Scatter_drawingEffect.normal},

			/**
			 * Sample value for formatRules:  [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition: [{Key3:Value3}], color:"#00ffff"}].   Each rule has two properties: the "condition" and the "color".   Value1, Value2 and Value3 are values. <br />  The value of a dimension may be <br />  1, Single value (string), like "China" . <br />  2. Array (enumeration), like ["UK","USA"] . <br />  The value of a measure may be <br />  1, Single value (number), like 20 . <br />  2. Arry (enumeration), like [121,122] . <br />  3. Object (range), like {min:100, max 200} . Min and max are inclusive.   If users want to inlcude 200, but not 100 in the range, they may use {min:100.00001, max:200}.   If users want values larger than 100, they may write {min:100}. <br />   The color is applied if one or more conditions in the condition array is met.   If multiple rules could apply on the same data point, it is the last rule that takes effect.
			 */
			formatRules : {type : "object[]"},

			/**
			 * Show/hide the data of negetive value.
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			showNegativeValues : {type : "boolean", defaultValue : true, deprecated: true},

			/**
			 * Set the marker size for data points. The available range is from '4' to '32'.
			 */
			markerSize : {type : "int", defaultValue : 10}
		},

		aggregations: {

			/**
			 * Settings for animations in bubble and scatter charts
			 */
			animation : {type : "sap.viz.ui5.types.Scatter_animation", multiple : false},

			/**
			 * Set tooltip related properties.
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			axisTooltip : {type : "sap.viz.ui5.types.Scatter_axisTooltip", multiple : false, deprecated: true},

			/**
			 * Settings for hoverline properties.
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			hoverline : {type : "sap.viz.ui5.types.Scatter_hoverline", multiple : false, deprecated: true}
		}
	}});


	return Scatter;

});

}; // end of sap/viz/ui5/types/Scatter.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Scatter_animation') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Scatter_animation.
jQuery.sap.declare('sap.viz.ui5.types.Scatter_animation'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Scatter_animation",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Scatter_animation
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for animations in bubble and scatter charts
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Scatter_animation
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Scatter_animation = BaseStructuredType.extend("sap.viz.ui5.types.Scatter_animation", /** @lends sap.viz.ui5.types.Scatter_animation.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set whether the data loading animation is enabled
			 */
			dataLoading : {type : "boolean", defaultValue : true},

			/**
			 * Set whether the data updating animation is enabled
			 */
			dataUpdating : {type : "boolean", defaultValue : true},

			/**
			 * Set whether the resizing animation is enabled
			 */
			resizing : {type : "boolean", defaultValue : true}
		}
	}});


	return Scatter_animation;

});

}; // end of sap/viz/ui5/types/Scatter_animation.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Scatter_axisTooltip') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Scatter_axisTooltip.
jQuery.sap.declare('sap.viz.ui5.types.Scatter_axisTooltip'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Scatter_axisTooltip",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Scatter_axisTooltip
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Set tooltip related properties.
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.19. 
	 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
	 * @alias sap.viz.ui5.types.Scatter_axisTooltip
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Scatter_axisTooltip = BaseStructuredType.extend("sap.viz.ui5.types.Scatter_axisTooltip", /** @lends sap.viz.ui5.types.Scatter_axisTooltip.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * enabled/disabled tooltip.
			 */
			visible : {type : "boolean", defaultValue : true},

			/**
			 * Set format string for small tooltip.The first one is applied to xAxis and the second one is applied to yAxis.Any character in "MDYHSAmdyhsa#?%0@" is reserved as a token for format code.
			 */
			formatString : {type : "string[]", defaultValue : null}
		}
	}});


	return Scatter_axisTooltip;

});

}; // end of sap/viz/ui5/types/Scatter_axisTooltip.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Scatter_hoverline') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Scatter_hoverline.
jQuery.sap.declare('sap.viz.ui5.types.Scatter_hoverline'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Scatter_hoverline",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Scatter_hoverline
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for hoverline properties.
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.19. 
	 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
	 * @alias sap.viz.ui5.types.Scatter_hoverline
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Scatter_hoverline = BaseStructuredType.extend("sap.viz.ui5.types.Scatter_hoverline", /** @lends sap.viz.ui5.types.Scatter_hoverline.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set to enabled/disabled hoverline or not.
			 */
			visible : {type : "boolean", defaultValue : true}
		}
	}});


	return Scatter_hoverline;

});

}; // end of sap/viz/ui5/types/Scatter_hoverline.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.StackedVerticalBar') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.StackedVerticalBar.
jQuery.sap.declare('sap.viz.ui5.types.StackedVerticalBar'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/StackedVerticalBar",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.StackedVerticalBar
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Module sap.viz.ui5.types.StackedVerticalBar
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.StackedVerticalBar
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var StackedVerticalBar = BaseStructuredType.extend("sap.viz.ui5.types.StackedVerticalBar", /** @lends sap.viz.ui5.types.StackedVerticalBar.prototype */ { metadata : {

		library: "sap.viz",



		properties: {

			/**
			 * Set the orientation of the plot area.
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			orientation : {type : "sap.viz.ui5.types.StackedVerticalBar_orientation", defaultValue : sap.viz.ui5.types.StackedVerticalBar_orientation.vertical, deprecated: true},

			/**
			 * Set the color palette for the chart. This is not supported for dual axis charts that have measureNamesDimension bound to the legend.
			 */
			colorPalette : {type : "string[]", defaultValue : ['#748CB2','#9CC677','#EACF5E','#F9AD79','#D16A7C','#8873A2','#3A95B3','#B6D949','#FDD36C','#F47958','#A65084','#0063B1','#0DA841','#FCB71D','#F05620','#B22D6E','#3C368E','#8FB2CF','#95D4AB','#EAE98F','#F9BE92','#EC9A99','#BC98BD','#1EB7B2','#73C03C','#F48323','#EB271B','#D9B5CA','#AED1DA','#DFECB2','#FCDAB0','#F5BCB4']},

			/**
			 * Set the color palette for axis 1 in dual charts.
			 */
			primaryValuesColorPalette : {type : "string[]", defaultValue : ['#8FBADD','#B8D4E9','#7AAED6','#A3C7E3','#3D88C4','#66A1D0','#297CBE','#5295CA','#005BA3','#146FB7','#005395','#0063B1']},

			/**
			 * Set the color palette for axis 2 in dual chart.
			 */
			secondaryValuesColorPalette : {type : "string[]", defaultValue : ['#F6A09B','#F9C3C0','#F58E88','#F8B1AD','#F05B52','#F37D76','#EE4A40','#F16C64','#D92419','#ED382D','#C52117','#EB271B']},

			/**
			 * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy. If this value is set to 'normal', the plot area is matte.
			 */
			drawingEffect : {type : "sap.viz.ui5.types.StackedVerticalBar_drawingEffect", defaultValue : sap.viz.ui5.types.StackedVerticalBar_drawingEffect.normal},

			/**
			 * Set whether bars have rounded corners
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			isRoundCorner : {type : "boolean", defaultValue : false, deprecated: true},

			/**
			 * Sample value for formatRules:  [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition: [{Key3:Value3}], color:"#00ffff"}].   Each rule has two properties: the "condition" and the "color".   Value1, Value2 and Value3 are values. <br />  The value of a dimension may be <br />  1, Single value (string), like "China" . <br />  2. Array (enumeration), like ["UK","USA"] . <br />  The value of a measure may be <br />  1, Single value (number), like 20 . <br />  2. Arry (enumeration), like [121,122] . <br />  3. Object (range), like {min:100, max 200} . Min and max are inclusive.   If users want to inlcude 200, but not 100 in the range, they may use {min:100.00001, max:200}.   If users want values larger than 100, they may write {min:100}. <br />   The color is applied if one or more conditions in the condition array is met.   If multiple rules could apply on the same data point, it is the last rule that takes effect.
			 */
			formatRules : {type : "object[]"},

			/**
			 * Set the display mode for stacked vertical bar charts
			 */
			mode : {type : "sap.viz.ui5.types.StackedVerticalBar_mode", defaultValue : sap.viz.ui5.types.StackedVerticalBar_mode.comparison}
		},

		aggregations: {

			/**
			 * Settings for tooltip related properties
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			toolTip : {type : "sap.viz.ui5.types.StackedVerticalBar_tooltip", multiple : false, deprecated: true},

			/**
			 * Settings for animations in the plot area
			 */
			animation : {type : "sap.viz.ui5.types.StackedVerticalBar_animation", multiple : false}
		}
	}});


	return StackedVerticalBar;

});

}; // end of sap/viz/ui5/types/StackedVerticalBar.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.StackedVerticalBar_animation') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.StackedVerticalBar_animation.
jQuery.sap.declare('sap.viz.ui5.types.StackedVerticalBar_animation'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/StackedVerticalBar_animation",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.StackedVerticalBar_animation
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for animations in the plot area
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.StackedVerticalBar_animation
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var StackedVerticalBar_animation = BaseStructuredType.extend("sap.viz.ui5.types.StackedVerticalBar_animation", /** @lends sap.viz.ui5.types.StackedVerticalBar_animation.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set whether the data loading animation is enabled
			 */
			dataLoading : {type : "boolean", defaultValue : true},

			/**
			 * Set whether the data updating animation is enabled
			 */
			dataUpdating : {type : "boolean", defaultValue : true},

			/**
			 * Set whether the resizing animation is enabled
			 */
			resizing : {type : "boolean", defaultValue : true}
		}
	}});


	return StackedVerticalBar_animation;

});

}; // end of sap/viz/ui5/types/StackedVerticalBar_animation.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.StackedVerticalBar_tooltip') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.StackedVerticalBar_tooltip.
jQuery.sap.declare('sap.viz.ui5.types.StackedVerticalBar_tooltip'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/StackedVerticalBar_tooltip",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.StackedVerticalBar_tooltip
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for tooltip related properties
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.12. 
	 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
	 * @alias sap.viz.ui5.types.StackedVerticalBar_tooltip
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var StackedVerticalBar_tooltip = BaseStructuredType.extend("sap.viz.ui5.types.StackedVerticalBar_tooltip", /** @lends sap.viz.ui5.types.StackedVerticalBar_tooltip.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set whether the tooltip is enabled
			 */
			enabled : {type : "boolean", defaultValue : true}
		}
	}});


	return StackedVerticalBar_tooltip;

});

}; // end of sap/viz/ui5/types/StackedVerticalBar_tooltip.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Title') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Title.
jQuery.sap.declare('sap.viz.ui5.types.Title'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Title",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Title
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Module sap.viz.ui5.types.Title
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Title
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Title = BaseStructuredType.extend("sap.viz.ui5.types.Title", /** @lends sap.viz.ui5.types.Title.prototype */ { metadata : {

		library: "sap.viz",



		properties: {

			/**
			 * Set the visibility of the main title
			 */
			visible : {type : "boolean", defaultValue : false},

			/**
			 * Set the text of the main title
			 */
			text : {type : "string", defaultValue : null},

			/**
			 * Set the alignment of the main title
			 */
			alignment : {type : "sap.viz.ui5.types.Title_alignment", defaultValue : sap.viz.ui5.types.Title_alignment.center}
		},

		aggregations: {

			/**
			 * Settings for layout of title
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			layout : {type : "sap.viz.ui5.types.Title_layout", multiple : false, deprecated: true}
		}
	}});


	return Title;

});

}; // end of sap/viz/ui5/types/Title.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Title_layout') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Title_layout.
jQuery.sap.declare('sap.viz.ui5.types.Title_layout'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Title_layout",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Title_layout
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for layout of title
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.12. 
	 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
	 * @alias sap.viz.ui5.types.Title_layout
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Title_layout = BaseStructuredType.extend("sap.viz.ui5.types.Title_layout", /** @lends sap.viz.ui5.types.Title_layout.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set the position of the title
			 */
			position : {type : "string", defaultValue : 'right'},

			/**
			 * Set the priority of the position for the title
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			priority : {type : "int", defaultValue : 0, deprecated: true}
		}
	}});


	return Title_layout;

});

}; // end of sap/viz/ui5/types/Title_layout.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Tooltip') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Tooltip.
jQuery.sap.declare('sap.viz.ui5.types.Tooltip'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Tooltip",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Tooltip
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Module sap.viz.ui5.types.Tooltip
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Tooltip
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Tooltip = BaseStructuredType.extend("sap.viz.ui5.types.Tooltip", /** @lends sap.viz.ui5.types.Tooltip.prototype */ { metadata : {

		library: "sap.viz",



		properties: {

			/**
			 * A callback function can be specified as a parameter and passed to chart options when the user calls the createViz function. This callback function is called before the tooltip is rendered. The input parameter is a dom element, which is at the bottom of the tooltip. Any dom element such as a button can be appended to this parent node. It can only be called when the tooltip is in actionMode.
			 */
			preRender : {type : "any", defaultValue : null},

			/**
			 * A callback function can be specified as a parameter and passed to chart options when the user calls the createViz function. This callback function is called after the tooltip is rendered. The user can select and change dom elements' properties under the tooltip element.
			 */
			postRender : {type : "any", defaultValue : null},

			/**
			 * Set the visibility of the tooltip
			 */
			visible : {type : "boolean", defaultValue : true},

			/**
			 * Set the drawing effect for the tooltip
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			drawingEffect : {type : "sap.viz.ui5.types.Tooltip_drawingEffect", defaultValue : sap.viz.ui5.types.Tooltip_drawingEffect.normal, deprecated: true},

			/**
			 * Set the format strings for text in the tooltip. For dual axis charts, the first array is applied to the primary axis and the second array is applied to the second axis. If you enter fewer format strings into an array than there are measures in the respective axis, then the last format string is applied to all remaining measures. The following characters are reserved as tokens for format code: MDYHSAmdyhsa#?%0@.The following is an example of an array for a chart with two measures: [["#,##0.00 DM;-#,##.00 DM","#,##.00;-#,##.00"]].
			 */
			formatString : {type : "any[]", defaultValue : null},

			/**
			 * Set whether the tooltip appears in the chart area
			 */
			layinChart : {type : "boolean", defaultValue : true}
		},

		aggregations: {

			/**
			 * Define the background style of the tooltip.
			 */
			background : {type : "sap.viz.ui5.types.Tooltip_background", multiple : false},

			/**
			 * Define the style of the label of the tooltip footer.
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			footerLabel : {type : "sap.viz.ui5.types.Tooltip_footerLabel", multiple : false, deprecated: true},

			/**
			 * Define the color of the value of the tooltip separation line.
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			separationLine : {type : "sap.viz.ui5.types.Tooltip_separationLine", multiple : false, deprecated: true},

			/**
			 * Define the color of the dimension name of the tooltip body.
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			bodyDimensionLabel : {type : "sap.viz.ui5.types.Tooltip_bodyDimensionLabel", multiple : false, deprecated: true},

			/**
			 * Define the color of the dimension value of the tooltip body.
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			bodyDimensionValue : {type : "sap.viz.ui5.types.Tooltip_bodyDimensionValue", multiple : false, deprecated: true},

			/**
			 * Define the color of the measure name of the tooltip body.
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			bodyMeasureLabel : {type : "sap.viz.ui5.types.Tooltip_bodyMeasureLabel", multiple : false, deprecated: true},

			/**
			 * Define the color of the measure value of the tooltip body.
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			bodyMeasureValue : {type : "sap.viz.ui5.types.Tooltip_bodyMeasureValue", multiple : false, deprecated: true},

			/**
			 * Define the background and border color of tooltip close button.
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			closeButton : {type : "sap.viz.ui5.types.Tooltip_closeButton", multiple : false, deprecated: true}
		}
	}});


	return Tooltip;

});

}; // end of sap/viz/ui5/types/Tooltip.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Tooltip_background') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Tooltip_background.
jQuery.sap.declare('sap.viz.ui5.types.Tooltip_background'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Tooltip_background",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Tooltip_background
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Define the background style of the tooltip.
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Tooltip_background
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Tooltip_background = BaseStructuredType.extend("sap.viz.ui5.types.Tooltip_background", /** @lends sap.viz.ui5.types.Tooltip_background.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Define the background color of the tooltip.
			 */
			color : {type : "string", defaultValue : '#ffffff'},

			/**
			 * Define the background border color of the tooltip.
			 */
			borderColor : {type : "string", defaultValue : '#cccccc'}
		}
	}});


	return Tooltip_background;

});

}; // end of sap/viz/ui5/types/Tooltip_background.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Tooltip_bodyDimensionLabel') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Tooltip_bodyDimensionLabel.
jQuery.sap.declare('sap.viz.ui5.types.Tooltip_bodyDimensionLabel'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Tooltip_bodyDimensionLabel",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Tooltip_bodyDimensionLabel
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Define the color of the dimension name of the tooltip body.
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.12. 
	 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
	 * @alias sap.viz.ui5.types.Tooltip_bodyDimensionLabel
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Tooltip_bodyDimensionLabel = BaseStructuredType.extend("sap.viz.ui5.types.Tooltip_bodyDimensionLabel", /** @lends sap.viz.ui5.types.Tooltip_bodyDimensionLabel.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Property color
			 */
			color : {type : "string", defaultValue : '#666666'}
		}
	}});


	return Tooltip_bodyDimensionLabel;

});

}; // end of sap/viz/ui5/types/Tooltip_bodyDimensionLabel.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Tooltip_bodyDimensionValue') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Tooltip_bodyDimensionValue.
jQuery.sap.declare('sap.viz.ui5.types.Tooltip_bodyDimensionValue'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Tooltip_bodyDimensionValue",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Tooltip_bodyDimensionValue
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Define the color of the dimension value of the tooltip body.
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.12. 
	 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
	 * @alias sap.viz.ui5.types.Tooltip_bodyDimensionValue
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Tooltip_bodyDimensionValue = BaseStructuredType.extend("sap.viz.ui5.types.Tooltip_bodyDimensionValue", /** @lends sap.viz.ui5.types.Tooltip_bodyDimensionValue.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Property color
			 */
			color : {type : "string", defaultValue : '#666666'}
		}
	}});


	return Tooltip_bodyDimensionValue;

});

}; // end of sap/viz/ui5/types/Tooltip_bodyDimensionValue.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Tooltip_bodyMeasureLabel') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Tooltip_bodyMeasureLabel.
jQuery.sap.declare('sap.viz.ui5.types.Tooltip_bodyMeasureLabel'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Tooltip_bodyMeasureLabel",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Tooltip_bodyMeasureLabel
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Define the color of the measure name of the tooltip body.
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.12. 
	 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
	 * @alias sap.viz.ui5.types.Tooltip_bodyMeasureLabel
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Tooltip_bodyMeasureLabel = BaseStructuredType.extend("sap.viz.ui5.types.Tooltip_bodyMeasureLabel", /** @lends sap.viz.ui5.types.Tooltip_bodyMeasureLabel.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Property color
			 */
			color : {type : "string", defaultValue : '#666666'}
		}
	}});


	return Tooltip_bodyMeasureLabel;

});

}; // end of sap/viz/ui5/types/Tooltip_bodyMeasureLabel.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Tooltip_bodyMeasureValue') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Tooltip_bodyMeasureValue.
jQuery.sap.declare('sap.viz.ui5.types.Tooltip_bodyMeasureValue'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Tooltip_bodyMeasureValue",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Tooltip_bodyMeasureValue
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Define the color of the measure value of the tooltip body.
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.12. 
	 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
	 * @alias sap.viz.ui5.types.Tooltip_bodyMeasureValue
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Tooltip_bodyMeasureValue = BaseStructuredType.extend("sap.viz.ui5.types.Tooltip_bodyMeasureValue", /** @lends sap.viz.ui5.types.Tooltip_bodyMeasureValue.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Property color
			 */
			color : {type : "string", defaultValue : '#000000'}
		}
	}});


	return Tooltip_bodyMeasureValue;

});

}; // end of sap/viz/ui5/types/Tooltip_bodyMeasureValue.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Tooltip_closeButton') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Tooltip_closeButton.
jQuery.sap.declare('sap.viz.ui5.types.Tooltip_closeButton'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Tooltip_closeButton",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Tooltip_closeButton
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Define the background and border color of tooltip close button.
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.12. 
	 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
	 * @alias sap.viz.ui5.types.Tooltip_closeButton
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Tooltip_closeButton = BaseStructuredType.extend("sap.viz.ui5.types.Tooltip_closeButton", /** @lends sap.viz.ui5.types.Tooltip_closeButton.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Property backgroundColor
			 */
			backgroundColor : {type : "string", defaultValue : '#ffffff'},

			/**
			 * Property borderColor
			 */
			borderColor : {type : "string", defaultValue : '#cccccc'}
		}
	}});


	return Tooltip_closeButton;

});

}; // end of sap/viz/ui5/types/Tooltip_closeButton.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Tooltip_footerLabel') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Tooltip_footerLabel.
jQuery.sap.declare('sap.viz.ui5.types.Tooltip_footerLabel'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Tooltip_footerLabel",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Tooltip_footerLabel
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Define the style of the label of the tooltip footer.
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.12. 
	 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
	 * @alias sap.viz.ui5.types.Tooltip_footerLabel
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Tooltip_footerLabel = BaseStructuredType.extend("sap.viz.ui5.types.Tooltip_footerLabel", /** @lends sap.viz.ui5.types.Tooltip_footerLabel.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Define the color of the label of the tooltip footer.
			 */
			color : {type : "string", defaultValue : '#000000'}
		}
	}});


	return Tooltip_footerLabel;

});

}; // end of sap/viz/ui5/types/Tooltip_footerLabel.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Tooltip_separationLine') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Tooltip_separationLine.
jQuery.sap.declare('sap.viz.ui5.types.Tooltip_separationLine'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Tooltip_separationLine",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Tooltip_separationLine
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Define the color of the value of the tooltip separation line.
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.12. 
	 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
	 * @alias sap.viz.ui5.types.Tooltip_separationLine
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Tooltip_separationLine = BaseStructuredType.extend("sap.viz.ui5.types.Tooltip_separationLine", /** @lends sap.viz.ui5.types.Tooltip_separationLine.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Property borderBottomColor
			 */
			borderBottomColor : {type : "string", defaultValue : '#a7a9ac'}
		}
	}});


	return Tooltip_separationLine;

});

}; // end of sap/viz/ui5/types/Tooltip_separationLine.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Treemap') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Treemap.
jQuery.sap.declare('sap.viz.ui5.types.Treemap'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Treemap",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Treemap
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Module sap.viz.ui5.types.Treemap
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Treemap
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Treemap = BaseStructuredType.extend("sap.viz.ui5.types.Treemap", /** @lends sap.viz.ui5.types.Treemap.prototype */ { metadata : {

		library: "sap.viz",



		properties: {

			/**
			 * Set the starting color of the tree map
			 */
			startColor : {type : "string", defaultValue : '#C2E3A9'},

			/**
			 * Set the end color of the tree map
			 */
			endColor : {type : "string", defaultValue : '#73C03C'},

			/**
			 * Set the color palette for the various sectors. For example, ["#748CB2", "#9CC677", "#EACF5E", "#F9AD79", "#D16A7C"].
			 */
			colorPalette : {type : "string[]"},

			/**
			 * Set the MBC legend values. For example, [10,11,12,13,14,15]. The values in the array should be in ascending order. If the number of values in the array is smaller than the MBC legend segment number, the MBC legend automatically calculates the values according to the data. If the number of values in the legendValues array is larger than MBC legend segment number, then only the first "segment number + 1" values are used.
			 */
			legendValues : {type : "int[]"},

			/**
			 * Sample value for formatRules:  [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition: [{Key3:Value3}], color:"#00ffff"}].   Each rule has two properties: the "condition" and the "color".   Value1, Value2 and Value3 are values. <br />  The value of a dimension may be <br />  1, Single value (string), like "China" . <br />  2. Array (enumeration), like ["UK","USA"] . <br />  The value of a measure may be <br />  1, Single value (number), like 20 . <br />  2. Arry (enumeration), like [121,122] . <br />  3. Object (range), like {min:100, max 200} . Min and max are inclusive.   If users want to inlcude 200, but not 100 in the range, they may use {min:100.00001, max:200}.   If users want values larger than 100, they may write {min:100}. <br />   The color is applied if one or more conditions in the condition array is met.   If multiple rules could apply on the same data point, it is the last rule that takes effect.
			 */
			formatRules : {type : "object[]"}
		},

		aggregations: {

			/**
			 * Settings for the border
			 */
			border : {type : "sap.viz.ui5.types.Treemap_border", multiple : false},

			/**
			 * Settings for animations in the plot area
			 */
			animation : {type : "sap.viz.ui5.types.Treemap_animation", multiple : false},

			/**
			 * Settings for tooltip
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			toolTip : {type : "sap.viz.ui5.types.Treemap_tooltip", multiple : false, deprecated: true}
		}
	}});


	return Treemap;

});

}; // end of sap/viz/ui5/types/Treemap.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Treemap_animation') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Treemap_animation.
jQuery.sap.declare('sap.viz.ui5.types.Treemap_animation'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Treemap_animation",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Treemap_animation
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for animations in the plot area
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Treemap_animation
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Treemap_animation = BaseStructuredType.extend("sap.viz.ui5.types.Treemap_animation", /** @lends sap.viz.ui5.types.Treemap_animation.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set whether the data loading animation is enabled
			 */
			dataLoading : {type : "boolean", defaultValue : true},

			/**
			 * Set whether the data updating animation is enabled
			 */
			dataUpdating : {type : "boolean", defaultValue : true},

			/**
			 * Set whether the resizing animation is enabled
			 */
			resizing : {type : "boolean", defaultValue : true}
		}
	}});


	return Treemap_animation;

});

}; // end of sap/viz/ui5/types/Treemap_animation.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Treemap_border') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Treemap_border.
jQuery.sap.declare('sap.viz.ui5.types.Treemap_border'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Treemap_border",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Treemap_border
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for the border
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.Treemap_border
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Treemap_border = BaseStructuredType.extend("sap.viz.ui5.types.Treemap_border", /** @lends sap.viz.ui5.types.Treemap_border.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set the visibility of the zone edge
			 */
			visible : {type : "boolean", defaultValue : true}
		}
	}});


	return Treemap_border;

});

}; // end of sap/viz/ui5/types/Treemap_border.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.Treemap_tooltip') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.Treemap_tooltip.
jQuery.sap.declare('sap.viz.ui5.types.Treemap_tooltip'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/Treemap_tooltip",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.Treemap_tooltip
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for tooltip
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.12. 
	 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
	 * @alias sap.viz.ui5.types.Treemap_tooltip
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Treemap_tooltip = BaseStructuredType.extend("sap.viz.ui5.types.Treemap_tooltip", /** @lends sap.viz.ui5.types.Treemap_tooltip.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set whether the tooltip is enabled
			 */
			enabled : {type : "boolean", defaultValue : true}
		}
	}});


	return Treemap_tooltip;

});

}; // end of sap/viz/ui5/types/Treemap_tooltip.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.VerticalBar') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.VerticalBar.
jQuery.sap.declare('sap.viz.ui5.types.VerticalBar'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/VerticalBar",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.VerticalBar
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Module sap.viz.ui5.types.VerticalBar
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.VerticalBar
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var VerticalBar = BaseStructuredType.extend("sap.viz.ui5.types.VerticalBar", /** @lends sap.viz.ui5.types.VerticalBar.prototype */ { metadata : {

		library: "sap.viz",



		properties: {

			/**
			 * Set the orientation of the plot area.
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			orientation : {type : "sap.viz.ui5.types.VerticalBar_orientation", defaultValue : sap.viz.ui5.types.VerticalBar_orientation.vertical, deprecated: true},

			/**
			 * Set the color palette for the chart. This is not supported for dual axis charts that have measureNamesDimension bound to the legend.
			 */
			colorPalette : {type : "string[]", defaultValue : ['#748CB2','#9CC677','#EACF5E','#F9AD79','#D16A7C','#8873A2','#3A95B3','#B6D949','#FDD36C','#F47958','#A65084','#0063B1','#0DA841','#FCB71D','#F05620','#B22D6E','#3C368E','#8FB2CF','#95D4AB','#EAE98F','#F9BE92','#EC9A99','#BC98BD','#1EB7B2','#73C03C','#F48323','#EB271B','#D9B5CA','#AED1DA','#DFECB2','#FCDAB0','#F5BCB4']},

			/**
			 * Set the color palette for axis 1 in dual charts.
			 */
			primaryValuesColorPalette : {type : "string[]", defaultValue : ['#8FBADD','#B8D4E9','#7AAED6','#A3C7E3','#3D88C4','#66A1D0','#297CBE','#5295CA','#005BA3','#146FB7','#005395','#0063B1']},

			/**
			 * Set the color palette for axis 2 in dual chart.
			 */
			secondaryValuesColorPalette : {type : "string[]", defaultValue : ['#F6A09B','#F9C3C0','#F58E88','#F8B1AD','#F05B52','#F37D76','#EE4A40','#F16C64','#D92419','#ED382D','#C52117','#EB271B']},

			/**
			 * Set the drawing effect for the plot area. If this value is set to 'glossy', the plot area is glossy. If this value is set to 'normal', the plot area is matte.
			 */
			drawingEffect : {type : "sap.viz.ui5.types.VerticalBar_drawingEffect", defaultValue : sap.viz.ui5.types.VerticalBar_drawingEffect.normal},

			/**
			 * Set whether bars have rounded corners
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			isRoundCorner : {type : "boolean", defaultValue : false, deprecated: true},

			/**
			 * Sample value for formatRules:  [{condition: [{Key1:Value1, Key2:Value2}], color:"#00ff00"}, {condition: [{Key3:Value3}], color:"#00ffff"}].   Each rule has two properties: the "condition" and the "color".   Value1, Value2 and Value3 are values. <br />  The value of a dimension may be <br />  1, Single value (string), like "China" . <br />  2. Array (enumeration), like ["UK","USA"] . <br />  The value of a measure may be <br />  1, Single value (number), like 20 . <br />  2. Arry (enumeration), like [121,122] . <br />  3. Object (range), like {min:100, max 200} . Min and max are inclusive.   If users want to inlcude 200, but not 100 in the range, they may use {min:100.00001, max:200}.   If users want values larger than 100, they may write {min:100}. <br />   The color is applied if one or more conditions in the condition array is met.   If multiple rules could apply on the same data point, it is the last rule that takes effect.
			 */
			formatRules : {type : "object[]"}
		},

		aggregations: {

			/**
			 * Settings for tooltip related properties
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			toolTip : {type : "sap.viz.ui5.types.VerticalBar_tooltip", multiple : false, deprecated: true},

			/**
			 * Settings for animations in the plot area
			 */
			animation : {type : "sap.viz.ui5.types.VerticalBar_animation", multiple : false}
		}
	}});


	return VerticalBar;

});

}; // end of sap/viz/ui5/types/VerticalBar.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.VerticalBar_animation') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.VerticalBar_animation.
jQuery.sap.declare('sap.viz.ui5.types.VerticalBar_animation'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/VerticalBar_animation",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.VerticalBar_animation
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for animations in the plot area
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.VerticalBar_animation
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var VerticalBar_animation = BaseStructuredType.extend("sap.viz.ui5.types.VerticalBar_animation", /** @lends sap.viz.ui5.types.VerticalBar_animation.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set whether the data loading animation is enabled
			 */
			dataLoading : {type : "boolean", defaultValue : true},

			/**
			 * Set whether the data updating animation is enabled
			 */
			dataUpdating : {type : "boolean", defaultValue : true},

			/**
			 * Set whether the resizing animation is enabled
			 */
			resizing : {type : "boolean", defaultValue : true}
		}
	}});


	return VerticalBar_animation;

});

}; // end of sap/viz/ui5/types/VerticalBar_animation.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.VerticalBar_tooltip') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.VerticalBar_tooltip.
jQuery.sap.declare('sap.viz.ui5.types.VerticalBar_tooltip'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/VerticalBar_tooltip",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.VerticalBar_tooltip
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for tooltip related properties
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.12. 
	 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
	 * @alias sap.viz.ui5.types.VerticalBar_tooltip
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var VerticalBar_tooltip = BaseStructuredType.extend("sap.viz.ui5.types.VerticalBar_tooltip", /** @lends sap.viz.ui5.types.VerticalBar_tooltip.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set whether the tooltip is enabled
			 */
			enabled : {type : "boolean", defaultValue : true}
		}
	}});


	return VerticalBar_tooltip;

});

}; // end of sap/viz/ui5/types/VerticalBar_tooltip.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.XYContainer') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.XYContainer.
jQuery.sap.declare('sap.viz.ui5.types.XYContainer'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/XYContainer",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.XYContainer
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Module sap.viz.ui5.types.XYContainer
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.XYContainer
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var XYContainer = BaseStructuredType.extend("sap.viz.ui5.types.XYContainer", /** @lends sap.viz.ui5.types.XYContainer.prototype */ { metadata : {

		library: "sap.viz",



		properties: {

			/**
			 * Set the angle for the pie chart. This value should be between '-180' and '180'.
			 * @deprecated Since version 1.20. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			yAngle : {type : "float", defaultValue : 0, deprecated: true}
		}
	}});


	return XYContainer;

});

}; // end of sap/viz/ui5/types/XYContainer.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.controller.Interaction') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.controller.Interaction.
jQuery.sap.declare('sap.viz.ui5.types.controller.Interaction'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/controller/Interaction",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.controller.Interaction
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Module sap.viz.ui5.types.controller.Interaction
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.controller.Interaction
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Interaction = BaseStructuredType.extend("sap.viz.ui5.types.controller.Interaction", /** @lends sap.viz.ui5.types.controller.Interaction.prototype */ { metadata : {

		library: "sap.viz",



		properties: {

			/**
			 * Set supported event names
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			supportedEventNames : {type : "string[]", defaultValue : ['mouseup','mousedown','mousemove','mouseout','mouseover','touchstart'], deprecated: true},

			/**
			 * Set whether mouse move is enabled
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			enableMouseMove : {type : "boolean", defaultValue : true, deprecated: true},

			/**
			 * Set whether mouse over is enabled
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			enableMouseOver : {type : "boolean", defaultValue : true, deprecated: true},

			/**
			 * Set whether mouse out is enabled
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			enableMouseOut : {type : "boolean", defaultValue : true, deprecated: true},

			/**
			 * Set whether support lasso event is enabled
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			supportLassoEvent : {type : "boolean", defaultValue : true, deprecated: true},

			/**
			 * Set whether hold selection is enabled
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			holdSelection : {type : "boolean", defaultValue : false, deprecated: true},

			/**
			 * Set whether preserve selection when dragging is enabled
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			preserveSelectionWhenDragging : {type : "boolean", defaultValue : false, deprecated: true},

			/**
			 * Set decorations relating to interaction. Each item 
			 *                 that is an object of {name: 'decoration name', fn: 'decoration callback function'} is a decoration. 
			 *                 Currently two decorations are supported: showDetail and hideDetail. 
			 *                 These two decorations can be used to create a user-defined tooltip. 
			 *                     
			 * If these 2 decorations are used, the default tooltip is not used, 
			 *                 and the user should implement a custom tooltip. 
			 *                 The showDetail decoration is called when the tooltip is shown, 
			 *                 and the hideDetail decoration is called when the tooltip is hidden.
			 *                     
			 * The arguments of showDetail are one object of {mode: 'tooltip mode', 
			 *                 data: 'data of hovering selected data point', position: 'mouse position', 
			 *                 container: 'chart container dom element', selectedNumber: 'number of selected data points'}. 
			 *                 'tooltip mode' is either 'infoMode' or 'actionMode'. Hovering over an unselected data point displays the infoMode tooltip, 
			 *                 while hovering over a selected data point displays the actionMode tooltip.
			 *                 'data' is an array of dimensions and measures, where each item is an object of 
			 *                 {name: 'dimension name or measure name', value: 'dimension member or measure value',
			 *                 type: 'literal string of dimension or measure'}. For instance, 
			 *                 {name: 'Country', value: 'China', type: 'dimension'}, or 
			 *                 {name: 'Profit', value: 159, type: 'measure'}.
			 *                     
			 * The arguments of hideDetail are a string representing tooltip mode, 
			 *                 i.e. what kind of tooltip should be hidden.
			 */
			decorations : {type : "any"},

			/**
			 * Set triggers for behavior decration.
			 * @deprecated Since version 1.20. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			triggers : {type : "any", deprecated: true},

			/**
			 * Set handlers for behavior decration.
			 * @deprecated Since version 1.20. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			handlers : {type : "any", deprecated: true}
		},

		aggregations: {

			/**
			 * Settings for selectability
			 */
			selectability : {type : "sap.viz.ui5.types.controller.Interaction_selectability", multiple : false},

			/**
			 * add documentation for aggregation pan
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			pan : {type : "sap.viz.ui5.types.controller.Interaction_pan", multiple : false, deprecated: true}
		}
	}});


	return Interaction;

});

}; // end of sap/viz/ui5/types/controller/Interaction.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.controller.Interaction_pan') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.controller.Interaction_pan.
jQuery.sap.declare('sap.viz.ui5.types.controller.Interaction_pan'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/controller/Interaction_pan",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.controller.Interaction_pan
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Structured Type sap.viz.ui5.types.controller.Interaction_pan
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.19. 
	 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
	 * @alias sap.viz.ui5.types.controller.Interaction_pan
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Interaction_pan = BaseStructuredType.extend("sap.viz.ui5.types.controller.Interaction_pan", /** @lends sap.viz.ui5.types.controller.Interaction_pan.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Enable/disable pan
			 */
			enable : {type : "boolean", defaultValue : true},

			/**
			 * Set orientation of pan
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			orientation : {type : "sap.viz.ui5.types.controller.Interaction_pan_orientation", defaultValue : sap.viz.ui5.types.controller.Interaction_pan_orientation.both, deprecated: true}
		}
	}});


	return Interaction_pan;

});

}; // end of sap/viz/ui5/types/controller/Interaction_pan.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.controller.Interaction_selectability') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.controller.Interaction_selectability.
jQuery.sap.declare('sap.viz.ui5.types.controller.Interaction_selectability'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/controller/Interaction_selectability",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.controller.Interaction_selectability
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for selectability
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.controller.Interaction_selectability
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Interaction_selectability = BaseStructuredType.extend("sap.viz.ui5.types.controller.Interaction_selectability", /** @lends sap.viz.ui5.types.controller.Interaction_selectability.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set the selection mode. If this value is set to 'exclusive' or 'single', only one set of data points can be selected at once. If this value is set to 'inclusive' or 'multiple', multiple sets of data points can be selected at once. If this value is set to 'none', no sets of data points can be selected. The values 'single' and 'multiple' are deprecated; please remove them from your chart.
			 */
			mode : {type : "sap.viz.ui5.types.controller.Interaction_selectability_mode", defaultValue : sap.viz.ui5.types.controller.Interaction_selectability_mode.inclusive},

			/**
			 * Set whether axis labels can be selected
			 */
			axisLabelSelection : {type : "boolean", defaultValue : true},

			/**
			 * Set whether the legend can be selected
			 */
			legendSelection : {type : "boolean", defaultValue : true},

			/**
			 * Set whether lasso selection can be used in the plot area
			 */
			plotLassoSelection : {type : "boolean", defaultValue : true},

			/**
			 * Set whether selection can be done in the plot area by clicking and tapping
			 */
			plotStdSelection : {type : "boolean", defaultValue : true},

			/**
			 * Set whether the user must hold the ctrl key to use lasso selection
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			lassoWithCtrlKey : {type : "boolean", defaultValue : false, deprecated: true},

			/**
			 * Set whether data points can be cached. If it's true, data points might be cached by Interaction for better performance.
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			dataPointsCacheable : {type : "boolean", defaultValue : true, deprecated: true}
		}
	}});


	return Interaction_selectability;

});

}; // end of sap/viz/ui5/types/controller/Interaction_selectability.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.layout.Dock') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.layout.Dock.
jQuery.sap.declare('sap.viz.ui5.types.layout.Dock'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/layout/Dock",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.layout.Dock
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Module sap.viz.ui5.types.layout.Dock
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.layout.Dock
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Dock = BaseStructuredType.extend("sap.viz.ui5.types.layout.Dock", /** @lends sap.viz.ui5.types.layout.Dock.prototype */ { metadata : {

		library: "sap.viz",

	}});


	return Dock;

});

}; // end of sap/viz/ui5/types/layout/Dock.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.layout.Stack') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.layout.Stack.
jQuery.sap.declare('sap.viz.ui5.types.layout.Stack'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/layout/Stack",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.layout.Stack
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Module sap.viz.ui5.types.layout.Stack
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.layout.Stack
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Stack = BaseStructuredType.extend("sap.viz.ui5.types.layout.Stack", /** @lends sap.viz.ui5.types.layout.Stack.prototype */ { metadata : {

		library: "sap.viz",

	}});


	return Stack;

});

}; // end of sap/viz/ui5/types/layout/Stack.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.legend.Common') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.legend.Common.
jQuery.sap.declare('sap.viz.ui5.types.legend.Common'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/legend/Common",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.legend.Common
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Module sap.viz.ui5.types.legend.Common
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.legend.Common
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Common = BaseStructuredType.extend("sap.viz.ui5.types.legend.Common", /** @lends sap.viz.ui5.types.legend.Common.prototype */ { metadata : {

		library: "sap.viz",



		properties: {

			/**
			 * Set the visibility of the legend
			 */
			visible : {type : "boolean", defaultValue : true},

			/**
			 * Set the format string for the legend. The following characters are reserved as tokens for format code: MDYHSAmdyhsa#?%0@.
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			formatString : {type : "string", defaultValue : null, deprecated: true},

			/**
			 * Set whether the legend is hierarchical. This is only supported if the legend is located to the right of the chart.
			 */
			isHierarchical : {type : "boolean", defaultValue : false},

			/**
			 * Set whether the legend is scrollable. If this value is set to 'false', and there is not enough room to show the whole legend, an ellipsis (...) indicates the missing legend items.
			 */
			isScrollable : {type : "boolean", defaultValue : false},

			/**
			 * It is a deprecated property. Please use "legendGroup.layout.position" property to set legend position. 
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			position : {type : "sap.viz.ui5.types.legend.Common_position", defaultValue : sap.viz.ui5.types.legend.Common_position.right, deprecated: true},

			/**
			 * Set legend type for Bubble charts. Non-bubble charts are not supported.
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			type : {type : "sap.viz.ui5.types.legend.Common_type", defaultValue : sap.viz.ui5.types.legend.Common_type.ColorLegend, deprecated: true},

			/**
			 * Set the alignment of the legend
			 * @deprecated Since version 1.12. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			alignment : {type : "sap.viz.ui5.types.legend.Common_alignment", defaultValue : sap.viz.ui5.types.legend.Common_alignment.start, deprecated: true},

			/**
			 * Set the drawing effect for colors in the legend. If this value is set to 'glossy', colors are glossy. If this value is set to 'normal', colors are matte.
			 */
			drawingEffect : {type : "sap.viz.ui5.types.legend.Common_drawingEffect", defaultValue : sap.viz.ui5.types.legend.Common_drawingEffect.normal}
		},

		aggregations: {

			/**
			 * Settings for the legend title
			 */
			title : {type : "sap.viz.ui5.types.legend.Common_title", multiple : false}
		}
	}});


	return Common;

});

}; // end of sap/viz/ui5/types/legend/Common.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.types.legend.Common_title') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides element sap.viz.ui5.types.legend.Common_title.
jQuery.sap.declare('sap.viz.ui5.types.legend.Common_title'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/types/legend/Common_title",['sap/viz/library', 'sap/viz/ui5/core/BaseStructuredType'],
	function(library, BaseStructuredType) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.types.legend.Common_title
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Settings for the legend title
	 * @extends sap.viz.ui5.core.BaseStructuredType
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.types.legend.Common_title
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Common_title = BaseStructuredType.extend("sap.viz.ui5.types.legend.Common_title", /** @lends sap.viz.ui5.types.legend.Common_title.prototype */ { metadata: {

		library: "sap.viz",


		properties : {

			/**
			 * Set the visibility of the legend title
			 */
			visible : {type : "boolean", defaultValue : false},

			/**
			 * Set the text of the legend title
			 */
			text : {type : "string", defaultValue : null}
		}
	}});


	return Common_title;

});

}; // end of sap/viz/ui5/types/legend/Common_title.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.VizContainer') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides control sap.viz.ui5.VizContainer.
jQuery.sap.declare('sap.viz.ui5.VizContainer'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
jQuery.sap.require('sap.viz.libs.sap-viz'); // unlisted dependency retained
jQuery.sap.require('sap.viz.ui5.container.libs.sap-viz-controls-vizcontainer'); // unlisted dependency retained
sap.ui.define("sap/viz/ui5/VizContainer",[
		'sap/viz/library',
		'sap/viz/libs/sap-viz',
		'./container/libs/common/libs/rgbcolor/rgbcolor_static',
		'./container/libs/sap-viz-controls-vizcontainer',
		'./controls/common/BaseControl',
		'./controls/common/feeds/AnalysisObject',
		'./controls/common/feeds/FeedItem',
		'./container/VizControlsHelper'
	], function(library, sapviz, rgbcolor_static, sapvizcontrolsvizcontainer, BaseControl, AnalysisObject, FeedItem, VizControlsHelper) {
	"use strict";

	/**
	 * Constructor for a new ui5/VizContainer.
	 *
	 * @param {string} [sId] id for the new control, generated automatically if no id is given 
	 * @param {object} [mSettings] initial settings for the new control
	 *
	 * @class
	 * Controls ui5/VizContainer
	 * @extends sap.viz.ui5.controls.common.BaseControl
	 *
	 * @constructor
	 * @public
	 * @since 1.19.0
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.19.0 
	 * API is not finished yet and might change completely
	 * @name sap.viz.ui5.VizContainer
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var VizContainer = BaseControl.extend("sap.viz.ui5.VizContainer", /** @lends sap.viz.ui5.VizContainer.prototype */ { metadata : {

		library : "sap.viz",
		properties : {

			/**
			 * Type for visualization.
			 */
			vizType : {type : "string", group : "Misc", defaultValue : null},

			/**
			 * Css for visualization.
			 */
			vizCss : {type : "string", group : "Misc", defaultValue : null},

			/**
			 * Properties for visualization.
			 */
			vizProperties : {type : "object", group : "Misc", defaultValue : null},

			/**
			 * Enable morphing for visualization.
			 */
			enableMorphing : {type : "boolean", group : "Misc", defaultValue : null}
		},
		aggregations : {

			/**
			 * Dataset for chart.
			 */
			vizData : {type : "sap.viz.ui5.data.Dataset", multiple : false}, 

			/**
			 * Available sap.viz.ui5.controls.common.feeds.AnalysisObject for object picker popup UI
			 */
			analysisObjectsForPicker : {type : "sap.viz.ui5.controls.common.feeds.AnalysisObject", multiple : true, singularName : "analysisObjectsForPicker"}, 

			/**
			 * All feeds for chart.
			 */
			feeds : {type : "sap.viz.ui5.controls.common.feeds.FeedItem", multiple : true, singularName : "feed"}
		},
		events : {

			/**
			 * Dispatches "feedsChanged" event when the feeding changes due to add/remove/change feeding items on feeding panel, drag and drop object onto VizFrame, or switch chart type by UI operation.
			 * Application should listen to "feedsChanged" event to get the corresponding data and set it back to VizFrame to to update the visualization with the new data.
			 */
			feedsChanged : {
				parameters : {

					/**
					 * An array of changed feeds.
					 */
					feeds : {type : "sap.viz.ui5.controls.common.feeds.FeedItem[]"}
				}
			}, 

			/**
			 * Dispatches "vizTypeChanged" event when viz type was changed
			 */
			vizTypeChanged : {}, 

			/**
			 * Dispatches "vizDefinitionChanged" event when viz definition was changed.
			 */
			vizDefinitionChanged : {}, 

			/**
			 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
			 * //selected element's detail
			 * target:"Dom Element",//an object pointed to corresponding dom element
			 * data:[{val: "...",//value of this element
			 * ctx:{type:"Dimension"||"Measure"||"MND",
			 * //for Dimension
			 * path:{aa:"...",di:"...",dii:"..."},
			 * //for Measure
			 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
			 * //for MND
			 * path:{mg:"...",mi:"..."}
			 * //path: analysis path
			 * //aa: analysis axis index // 0 for analysis axis 1, 1 for analysis 2
			 * //di: dimension index //zero based
			 * //dii: dimension item index //zero based
			 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
			 * //mi: measure index // measure index in measure group zero based
			 * //dii_a1: each dii of di in analysis axis 1 index
			 * //dii_a2: each dii of di in analysis axis 2 index
			 * }},{
			 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
			 * var:"...",ctx:"..."}]},{
			 * //if under multi selection, there will be more than one selected elements
			 * target:"...",data:["..."]}]}
			 */
			selectData : {}, 

			/**
			 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
			 */
			deselectData : {}, 

			/**
			 * Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
			 * //data of one group
			 * name:"...",val:[{
			 * //data of one row
			 * color:"...",label:"...",shape:"...",value:"..."},"..."]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
			 * //this object specifies the plot area of the chart
			 * height:"...",width:"...",x:"...",y:"..."},point:{
			 * //this object specifies a point which affects the position of tooltip
			 * x:"...",y:"..."}}}
			 */
			showTooltip : {}, 

			/**
			 * Event fires when the mouse hover out of the specific part of chart, no data is passed.
			 */
			hideTooltip : {}, 

			/**
			 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
			 */
			initialized : {}
		}
	}});


	/**
	 * Update VizContainer according to a JSON object, it can update css, properties, feeds and data model.
	 *
	 * @name sap.viz.ui5.VizContainer#vizUpdate
	 * @function
	 * @param {object} oOJson
	 *         A JSON object contains combination of css, properties, feeds and data model.
	 * @type void
	 * @public
	 * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel
	 */


	/**
	 * Selections for the chart instance of the VizContainer.
	 *
	 * @name sap.viz.ui5.VizContainer#vizSelection
	 * @function
	 * @param {object[]} aAPoints
	 *         Some data points of the chart
	 * @param {object} oOAction
	 *         A flag 'clearSelection', whether to clear previous selection, by default the selection will be incremental selection
	 * @type object
	 * @public
	 * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel
	 */

	jQuery.sap.includeStyleSheet(jQuery.sap.getModulePath("sap.viz.ui5.container.libs.css", "/sap.viz.controls.css"));
	VizContainer.prototype.init = function() {
		BaseControl.prototype.init.apply(this,
				arguments);

		this._uiConfig = {
			'layout' : 'horizontal',
			'enableMorphing' : true
		};

		this._vizFrame = null;
		this._vizBuilder = null;
		this._switchBar = null;

		this._vSplitter$ = null;

		this._clearVariables();
	};

	VizContainer.prototype.exit = function() {
		BaseControl.prototype.exit.apply(this,
				arguments);

		this._clearVariables();

		this.setVizData(null);
	};

	VizContainer.prototype._clearVariables = function() {
		this._vizFrame$ = null;
		this._vizBuilder$ = null;
		this._switchBar$ = null;

		this._clearRequestedProperties();
	};
	VizContainer.prototype._clearRequestedProperties = function() {
		this._requestedVizType = 'viz/column';
		this._requestedVizCss = null;
		this._requestedVizProperties = null;

		this._requestedOptions = null;
	};

	VizContainer.prototype.setUiConfig = function(
			oUiConfig) {
		this._mergeConfig(oUiConfig);
	};

	VizContainer.prototype._mergeConfig = function(oUiConfig) {
		oUiConfig = oUiConfig || {};
		if (oUiConfig.layout === 'vertical' || oUiConfig.layout === 'horizontal') {
			this._uiConfig.layout = oUiConfig.layout;
		}
		this._uiConfig.enableMorphing = oUiConfig.enableMorphing !== false;
	};

	VizContainer.prototype.getFeeds = function() {
		var feeds = [];
		if (this._vizFrame && this._vizFrame.feeds()) {
			feeds = FeedItem
					.fromVizControlsFmt(this._vizFrame.feeds());
		} else {
			feeds = this.getAggregation('feeds');
		}
		return feeds;
	};

	VizContainer.prototype.getVizType = function() {
		if (this._vizFrame) {
			return this._vizFrame.vizType();
		} else {
			return this._requestedVizType;
		}
	};
	/**
	 * Setter for property vizType. A string of supported viz type: viz/column,
	 * viz/stacked_column, viz/dual_column, viz/line, viz/area, viz/combination,
	 * viz/dual_line, viz/dual_combination, viz/pie, viz/donut, viz/scatter,
	 * viz/bubble, viz/heatmap, viz/treemap.
	 * 
	 * @param {string}
	 *            sVizType
	 * @returns {sap.viz.ui5.VizContainer}
	 * @public
	 * @function sap.viz.ui5.VizContainer.prototype.setVizType
	 */
	VizContainer.prototype.setVizType = function(sVizType) {
		if (this._vizFrame) {
			this._vizFrame.vizType(sVizType);
		} else {
			this._requestedVizType = sVizType;
		}
		return this;
	};
	VizContainer.prototype.getVizCss = function() {
		if (this._vizFrame) {
			return this._vizFrame.vizCss();
		} else {
			return this._requestedVizCss;
		}
	};
	VizContainer.prototype.setVizCss = function(sVizCss) {
		if (this._vizFrame) {
			this._vizFrame.vizCss(sVizCss);
		} else {
			this._requestedVizCss = sVizCss;
		}
		return this;
	};

	VizContainer.prototype.getVizProperties = function() {
		if (this._vizFrame) {
			return this._vizFrame.vizProperties();
		} else {
			return this._requestedVizProperties;
		}
	};
	/**
	 * Properties for visualization. Example:
	 * 
	 * <pre>
	 *  var vizContainer = new sap.viz.ui5.VizContainer(...);
	 *  var properties = {
	 *      'dataLabel' : {'visible' : true },
	 *      'legend' : { &quot;visible&quot; : true },
	 *      'direction' : 'horizontal',
	 *      'stacking' : 'normal'
	 * };
	 * vizContainer.setVizProperties(properties);
	 * </pre>
	 * 
	 * @param {object}
	 *            oVizProperties
	 * @returns {sap.viz.ui5.VizContainer}
	 * @public
	 * @function sap.viz.ui5.VizContainer.prototype.setVizProperties
	 */
	VizContainer.prototype.setVizProperties = function(oVizProperties) {
		if (this._vizFrame) {
			this._vizFrame.vizProperties(oVizProperties);
		} else {
			this._requestedVizProperties = oVizProperties;
		}
		return this;
	};

	VizContainer.prototype.getEnableMorphing = function() {
		if (this._vizFrame) {
			return this._vizFrame.enableMorphing();
		} else {
			return this._uiConfig.enableMorphing;
		}
	};
	/**
	 * Setter for property enableMorphing. If set true, a tween animation will play
	 * when chart changed.
	 * 
	 * @param {boolean}
	 *            bEnableMorphing
	 * @returns {sap.viz.ui5.VizContainer}
	 * @public
	 * @function sap.viz.ui5.VizContainer.prototype.setEnableMorphing
	 */
	VizContainer.prototype.setEnableMorphing = function(bEnableMorphing) {
		if (this._vizFrame) {
			this._vizFrame.enableMorphing(bEnableMorphing);
		} else {
			this._uiConfig.enableMorphing = bEnableMorphing;
		}
		return this;
	};
	/**
	 * Selections for visualization. Example:
	 * 
	 * <pre>
	 *  var vizContainer = new sap.viz.ui5.VizContainer(...);
	 *  var points = [{
	 *      data : {
	 *      	&quot;Country&quot; : &quot;China&quot;,
	 *          &quot;Year&quot; : &quot;2001&quot;,
	 *          &quot;Product&quot; : &quot;Car&quot;,
	 *          &quot;Profit&quot; : 25
	 *      }}, {
	 *      data : {
	 *      	&quot;Country&quot; : &quot;China&quot;,
	 *          &quot;Year&quot; : &quot;2001&quot;,
	 *          &quot;Product&quot; : &quot;Trunk&quot;,
	 *          &quot;Profit&quot; : 34
	 *      }}];
	 *  var action = {
	 *  	clearSelection : true
	 *  };
	 * vizContainer.vizSelection(points, action);
	 * </pre>
	 * 
	 * @param {object[]}
	 *            aPoints some data points of the chart
	 * @param {object}
	 *            oAction whether to clear previous selection, by default the
	 *            selection will be incremental selection
	 * @returns {sap.viz.ui5.VizContainer}
	 * @public
	 * @function sap.viz.ui5.VizContainer.prototype.vizSelection
	 */
	VizContainer.prototype.vizSelection = function(aPoints, oAction) {
		if (this._vizFrame) {
			var result = this._vizFrame.vizSelection.apply(this._vizFrame,
					arguments);
			if (result === this._vizFrame) {
				result = this;
			}
			return result;
		} else {
			return null;
		}
	};
	/**
	 * Update VizContainer according to a JSON object, it can update css,
	 * properties, feeds and data model. Example:
	 * 
	 * <pre>
	 * var vizContainer = new sap.viz.ui5.VizContainer(...);
	 * var vizData = new sap.viz.ui5.data.FlattenedDataset({
	 *     'dimensions' : [{
	 *         axis: 1,
	 *         name: &quot;Country&quot;,
	 *         value: &quot;{Country}&quot;
	 *         },{
	 *         axis: 2,
	 *         name: &quot;City&quot;
	 *         value: &quot;{City}&quot;  
	 *      }],
	 *      'measures' : [{
	 *          group: 1,
	 *          name: &quot;Quantity sold&quot;,
	 *          value: &quot;{Quantity sold}&quot;
	 *       }],
	 *       'data' : {
	 *           'path' : &quot;/rawData&quot;
	 *       }
	 * });
	 * var cssString = 'position:absolute;left:0px;top:0px;';
	 * var properties = {
	 *     'dataLabel' : {'visible' : true },
	 *     'legend' : {&quot;visible&quot; : true},
	 *     'direction' : 'horizontal',
	 *     'stacking' : 'normal'
	 * };
	 * var FeedItem = sap.viz.ui5.controls.common.feeds.FeedItem;
	 * var feeds = [
	 *     new FeedItem({'uid' : 'primaryValues', 
	 *                   'type' : 'Measure',
	 *                   'values' []}),
	 *     new FeedItem({'uid' : 'regionColor', 
	 *                   'type' : 'Dimension',
	 *                   'values' []})];  
	 * vizContainer.vizUpdate({
	 *               'data' : vizData,
	 *               'css' : cssString,
	 *               'properties' : properties, 
	 *               'feeds' : feeds
	 *           });
	 * </pre>
	 * 
	 * @param {object}
	 *            oOptions a JSON object contains combination of css, properties,
	 *            feeds and data model.
	 * @returns {sap.viz.ui5.VizContainer}
	 * @public
	 * @function sap.viz.ui5.VizContainer.prototype.vizUpdate
	 */
	VizContainer.prototype.vizUpdate = function(oOptions) {
		if (this._vizFrame) {
			if (oOptions.data || oOptions.feeds) {
				this._requestedOptions = this._requestedOptions || {};
			}

			if (this._requestedOptions) {
				// Save common keyword in options, release these options when
				// aggregations trigger render
				var requestedOptions = this._requestedOptions;
				requestedOptions.css = requestedOptions.css || oOptions.css;
				requestedOptions.properties = requestedOptions.properties
						|| oOptions.properties;

				if (oOptions.data) {
					this.setVizData(oOptions.data);
				}
				if (oOptions.feeds) {
					this._resetFeeds(oOptions.feeds);
				}
			} else {
				this._vizFrame.vizUpdate(oOptions);
			}
		}
	};

	VizContainer.prototype._resetFeeds = function(aFeeds) {
		this.destroyFeeds();

		// update feeds in sequence of aaindexs
		VizControlsHelper.updateFeedsByAAIndex(
				this.getVizType(), aFeeds);
	
		if (aFeeds && aFeeds.length) {
			for (var i = 0; i < aFeeds.length; i++) {
				this.addFeed(aFeeds[i]);
			}
		}
		return this;
	};
	VizContainer.prototype._setAnalysisObjectsForPicker = function(
			aAnalysisObjects) {
		this.destroyAnalysisObjectsForPicker();
		if (aAnalysisObjects && aAnalysisObjects.length) {
			for (var i = 0; i < aAnalysisObjects.length; i++) {
				this.addAnalysisObjectsForPicker(aAnalysisObjects[i]);
			}
		}
		return this;
	};

	VizContainer.prototype._createVizFrame = function(dom) {
		var VizFrame = sap.viz.controls.frame.VizFrame;
		var GlobalConfig = sap.viz.controls.common.config.GlobalConfig;

		var vizFrameConfig = GlobalConfig
				.defaultUIConfig(GlobalConfig.DEFAULT_UICONFIG_TYPE_FRAME);
		vizFrameConfig.enableFilterMenu = false;
		vizFrameConfig.enableFilterBar = false;
		vizFrameConfig.enableSettingButton = false;
		vizFrameConfig.enableFullScreenButton = false;
		vizFrameConfig.controls.chart.enableMorphing = this._uiConfig.enableMorphing;
		vizFrameConfig.controls.chart.enableTrellis = false;
		vizFrameConfig.controls.contextMenu.menu = [ [ "direction", "stacking" ],
				[ "legend", "datalabels" ] ];
		var vizFrame = new VizFrame(dom, vizFrameConfig);

		vizFrame.addEventListener('feedsChanged', jQuery.proxy(function(e) {
			this._resetFeeds(this.getFeeds());
			this.fireEvent("feedsChanged", {
				'feeds' : this.getFeeds()
			});
		}, this));

		vizFrame.addEventListener('vizTypeChanged', jQuery.proxy(function(e) {
			this.fireEvent("vizTypeChanged");
		}, this));

		vizFrame.addEventListener('vizDefinitionChanged', jQuery.proxy(function(e) {
			this.fireEvent("vizDefinitionChanged");
		}, this));

		vizFrame.vizOn('selectData', jQuery.proxy(function(e) {
			this.fireEvent("selectData", e);
		}, this));
		vizFrame.vizOn('deselectData', jQuery.proxy(function(e) {
			this.fireEvent("deselectData", e);
		}, this));
		vizFrame.vizOn('showTooltip', jQuery.proxy(function(e) {
			this.fireEvent("showTooltip", e);
		}, this));
		vizFrame.vizOn('hideTooltip', jQuery.proxy(function(e) {
			this.fireEvent("hideTooltip", e);
		}, this));
		vizFrame.vizOn('initialized', jQuery.proxy(function(e) {
			this.fireEvent("initialized", e);
		}, this));

		var options = vizFrame.getDefaultIncompleteOptions(this.getVizType());

		var feeds = this.getAggregation('feeds');
		if (feeds) {
			options.feeds = VizControlsHelper
					.getFeedInstances(feeds);
		}
		var data = VizControlsHelper
				.getFakedDataInstance(this.getVizType(), this.getVizData(), feeds);
		if (data) {
			options.data = data;
		}
		if (this.getVizCss()) {
			options.css = this.getVizCss();
		}
		if (this.getVizProperties()) {
			options.properties = this.getVizProperties();
		}
		this._clearRequestedProperties();
		vizFrame.createViz(options);
		return vizFrame;
	};
	/**
	 * Create children views.
	 * 
	 * @private
	 */
	VizContainer.prototype._createChildren = function() {
		var app$ = this._app$;
		var cssPrefix = 'ui5-viz-controls';
		var GlobalConfig = sap.viz.controls.common.config.GlobalConfig;

		// VizFrame
		this._vizFrame$ = jQuery(document.createElement('div')).appendTo(app$)
				.addClass(cssPrefix + '-viz-frame');
		this._vizFrame = this._createVizFrame(this._vizFrame$[0]);

		if (this._uiConfig.layout === 'horizontal') {
			// VizBuilder
			var vizBuilderConfig = GlobalConfig
					.defaultUIConfig(GlobalConfig.DEFAULT_UICONFIG_TYPE_BUILDER);
			vizBuilderConfig.controls.feedingPanel.enableTrellis = false;
			vizBuilderConfig.controls.switchBar.groups = VizControlsHelper
					.getSwitchBarGroups();

			this._vizBuilder$ = jQuery(document.createElement('div'))
					.appendTo(app$).addClass(cssPrefix + '-viz-builder');
			this._vizBuilder = new sap.viz.controls.builder.VizBuilder(
					this._vizBuilder$[0], vizBuilderConfig);
			this._vizBuilder.connect(this._vizFrame.vizUid());
			// Splitter
			this._vSplitter$ = jQuery(document.createElement('div')).appendTo(app$)
					.addClass(cssPrefix + '-vertical-splitter');
		} else if (this._uiConfig.layout === 'vertical') {
			// SwitchBar
			var switchBarConfig = GlobalConfig
					.defaultUIConfig(GlobalConfig.DEFAULT_UICONFIG_TYPE_SWITCHBAR);
			switchBarConfig.groups = VizControlsHelper
					.getSwitchBarGroups();

			this._switchBar$ = jQuery(document.createElement('div')).appendTo(app$);
			this._switchBar = new sap.viz.controls.switchbar.SwitchBar(
					this._switchBar$[0], switchBarConfig);
			this._switchBar.connect(this._vizFrame.vizUid());
		}

		this._validateAOs();
		this._validateSize();
	};

	VizContainer.prototype._updateChildren = function() {
		var options = {};
		if (this._requestedOptions) {
			if (this._requestedOptions.css) {
				options.css = this._requestedOptions.css;
			}
			if (this._requestedOptions.properties) {
				options.properties = this._requestedOptions.properties;
			}
			this._requestedOptions = null;
		}
		options.data = VizControlsHelper
				.getFakedDataInstance(this.getVizType(), this.getVizData(), this
						.getAggregation('feeds'));
		options.feeds = VizControlsHelper
				.getFeedInstances(this.getAggregation('feeds'));

		this._vizFrame.vizUpdate(options);

		this._validateAOs();
	};

	VizContainer.prototype._validateAOs = function() {
		if (this._vizBuilder) {
			var aoInstaces = AnalysisObject
					.toVizControlsFmt(this.getAnalysisObjectsForPicker());
			this._vizBuilder.analysisObjectsForPicker(aoInstaces);
		}
	};

	// need to validateSize in case the host(browser/control) size change.
	VizContainer.prototype._validateSize = function() {

		if (this._uiConfig.layout === 'horizontal') {
			this._app$.css({
				'min-width' : '560px',
				// TODO Plus 1 for upper border, maybe it should fix in viz.controls
				'min-height' : '601px'
			});
		} else if (this._uiConfig.layout === 'vertical') {
			this._app$.css({
				'min-width' : '300px',
				'min-height' : '654px'
			});
		}

		this.$().css({
			'overflow' : 'hidden'
		});
		// this._app$.css({
		// 'width' : size.width,
		// 'height' : size.height,
		// 'overflow': 'hidden'
		// });
		var appSize = {
			'width' : this._app$.width(),
			'height' : this._app$.height()
		};

		if (this._uiConfig.layout === 'horizontal' && this._vizFrame) {
			var buiderWidth = this._vizBuilder$.width();

			this._vizFrame.size({
				'width' : appSize.width - buiderWidth,
				'height' : appSize.height
			});
			this._vizBuilder.size({
				'width' : buiderWidth,
				// TODO: Minus 1 for upper border, maybe it should fix in
				// viz.controls
				'height' : appSize.height - 1
			});
			this._vizFrame$.css({
				'left' : '0px',
				'top' : '0px'
			});
			this._vizBuilder$.css({
				'left' : appSize.width - buiderWidth + 'px',
				'top' : '0px'
			});
			this._vSplitter$.css({
				'left' : appSize.width - buiderWidth + 'px',
				'top' : '0px',
				'height' : appSize.height + 'px'
			});
		} else if (this._uiConfig.layout === 'vertical' && this._vizFrame) {
			var switchBarWidth = 388;
			var switchBarHeight = 54;
			this._vizFrame.size({
				'width' : appSize.width,
				'height' : appSize.height - switchBarHeight
			});
			this._switchBar.size({
				'width' : switchBarWidth,
				'height' : switchBarHeight
			});
			this._vizFrame$.css({
				'left' : '0px',
				'top' : switchBarHeight + 'px'
			});
			this._switchBar$.css({
				'left' : (appSize.width - switchBarWidth) / 2 + 'px',
				'top' : (switchBarHeight - 36) / 2 + 'px'
			});
		}
		this.$().css({
			'overflow' : 'auto'
		});
	};


	return VizContainer;

});

}; // end of sap/viz/ui5/VizContainer.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.controls.VizFrame') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides control sap.viz.ui5.controls.VizFrame.
jQuery.sap.declare('sap.viz.ui5.controls.VizFrame'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
jQuery.sap.require('sap.ui.core.theming.Parameters'); // unlisted dependency retained
jQuery.sap.require('sap.ui.Device'); // unlisted dependency retained
sap.ui.define("sap/viz/ui5/controls/VizFrame",[
        'sap/viz/library',
        'sap/ui/core/theming/Parameters',
        'sap/viz/ui5/theming/Util',
        'sap/viz/ui5/utils/CommonUtil',
        './ResponsiveLegend',
        './common/BaseControl',
        './common/feeds/AnalysisObject',
        './common/feeds/FeedItem',
        './common/feeds/FeedHelper',
        './common/helpers/RuntimeOptionsHelper',
        './common/helpers/DefaultPropertiesHelper',
        './common/utils/Constants',
        './common/utils/SelectionDetailUtil',
        'sap/ui/Device'
    ], function(
            library,
            Parameters,
            Util,
            CommonUtil,
            ResponsiveLegend,
            BaseControl,
            AnalysisObject,
            FeedItem,
            FeedHelper,
            RuntimeOptionsHelper,
            DefaultPropertiesHelper,
            Constants,
            SelectionDetailUtil,
            Device) {
    "use strict";

    var BindingService = sap.viz.vizservices.__internal__.BindingService;
    var PropertyService = sap.viz.vizservices.__internal__.PropertyService;

    /**
     * Constructor for a new ui5/controls/VizFrame. For more information on the available info chart types, see the following <a href="docs/vizdocs/index.html" target="_blank">documentation</a>.
     *
     * @param {string} [sId] id for the new control, generated automatically if no id is given
     * @param {object} [mSettings] initial settings for the new control
     *
     * @class
     * VizFrame is a viz control that manages a visualization’s initialization, layout, feeding, customization and interactions.
     * @extends sap.viz.ui5.controls.common.BaseControl
     *
     * @constructor
     * @public
     * @since 1.22.0
     * @alias sap.viz.ui5.controls.VizFrame
     * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
     */
    var VizFrame = BaseControl.extend("sap.viz.ui5.controls.VizFrame", /** @lends sap.viz.ui5.controls.VizFrame.prototype */ { metadata : {

        library : "sap.viz",
        properties : {

            /**
             * Type for viz frame. User can pass 'chartType' or 'info/chartType'. For example both 'bar' and 'info/bar' will create a info bar chart.
             * Supported chart type: column, dual_column, bar, dual_bar, stacked_bar, stacked_column, line, dual_line, combination, bullet, time_bullet, bubble, time_bubble, pie, donut,
             * timeseries_column, timeseries_line, timeseries_scatter, timeseries_bubble, timeseries_stacked_column, timeseries_100_stacked_column, timeseries_bullet, timeseries_waterfall,
             * scatter, vertical_bullet, dual_stacked_bar, 100_stacked_bar, 100_dual_stacked_bar, dual_stacked_column, 100_stacked_column,
             * 100_dual_stacked_column, stacked_combination, horizontal_stacked_combination, dual_stacked_combination, dual_horizontal_stacked_combination, heatmap,
             * waterfall, horizontal_waterfall
             */
            vizType : {type : "string", group : "Misc", defaultValue : "column"},

            /**
             * Chart properties, refer to chart property doc for more details.
             */
            vizProperties : {type : "object", group : "Misc", defaultValue : null},

            /**
             * Chart scales, refer to chart property doc for more details.
             * @since 1.25
             */
            vizScales : {type : "object", group : "Misc", defaultValue : null},

            /**
             * Chart customizations property, aim to customize existing (build-in) charts
             * to meet specific LoB requirements.
             * Currently, supported chart type : column, dual_column, bar, dual_bar, stacked_column, stacked_bar, 100_stacked_bar, 100_stacked_column, 100_dual_stacked_bar, 100_dual_stacked_column, dual_stacked_bar, dual_stacked_column, line, horizontal_line, dual_line, dual_horizontal_line, combination, horizontal_combination, stacked_combination, horizontal_stacked_combination, dual_stacked_combination, dual_horizontal_stacked_combination, scatter, bubble.
             */
            vizCustomizations : {type : "object", group : "Misc", defaultValue : null},

            /**
             * Set chart's legend properties.
             */
            legendVisible : {type : "boolean", group : "Misc", defaultValue : true}

        },
        aggregations : {

            /**
             * Dataset for chart.
             */
            dataset : {type : "sap.viz.ui5.data.Dataset", multiple : false},

            /**
             * All feeds for chart.
             */
            feeds : {type : "sap.viz.ui5.controls.common.feeds.FeedItem", multiple : true, singularName : "feed"}
        },
        events : {

            /**
             * Event fires when the rendering ends.
             */
            renderComplete : {},

            /**
             * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in.
             */
            selectData : {},

            /**
             * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in
             */
            deselectData : {}
        }
    }});


    /**
     * Uid for viz frame. It supports other controls to connect to a viz instance.
     *
     * @name sap.viz.ui5.controls.VizFrame#getVizUid
     * @function
     * @type string
     * @public
     * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel
     */

    /**
     * Get ResponsiveLegend Control. (For fiori application set only. It has been deprecated since 1.28.)
     *
     * @name sap.viz.ui5.controls.VizFrame#getResponsiveLegend
     * @function
     * @type void
     * @public
     * @deprecated Since version 1.28.
     * This API has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
     * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel
     */


    /**
     * Return current legend group visibility.
     *
     * @name sap.viz.ui5.controls.VizFrame#getLegendVisible
     * @function
     * @type boolean
     * @public
     * @since 1.28
     */


    /**
     * Will respect the setting for all available legends.
     *
     * @name sap.viz.ui5.controls.VizFrame#setLegendVisible
     * @function
     * @param {boolean} bLegendVisible
     *         Set legend visibility.
     * @type object
     * @public
     * @since 1.28
     */

    VizFrame.prototype.init = function() {
        sap.viz.ui5.controls.common.BaseControl.prototype.init.apply(this, arguments);

        this._wrapApi('setModel', function() {this._invalidateDataset = true;}.bind(this));
        this._wrapApi('setDataset', function() {this._invalidateDataset = true;}.bind(this));
        this._wrapApi('destroyDataset', function() {this._invalidateDataset = true;}.bind(this));

        this._wrapApi('addFeed', function() {this._invalidateFeeds = true;}.bind(this));
        this._wrapApi('removeFeed', function() {this._invalidateFeeds = true;}.bind(this));
        this._wrapApi('destroyFeeds', function() {this._invalidateFeeds = true;}.bind(this));

        this._vizFrame = null;
        this._currentTheme = null;
        this._connectPopover = null;
        this._currentTemplate = null;
        this._errorType = null;
        this._bulletProperties = {plotArea:{}};
        this._waterfallProperties = {plotArea:{}};
        this._bReadyToRender = true;
        this._scalesOption = null;

        this._clearVariables();

        this._templateCache = {};
        this.data("sap-ui-fastnavgroup", "true", true/*Write into DOM*/);
    };

    VizFrame.prototype.applySettings = function() {
        sap.ui.core.Control.prototype.applySettings.apply(this, arguments);
    };

    VizFrame.prototype.exit = function() {
        sap.viz.ui5.controls.common.BaseControl.prototype.exit.apply(this, arguments);

        this._clearVariables();

        if (this._vizFrame) {
            this._vizFrame.destroy();
        }
        this._vizFrame = null;
    };

    VizFrame.prototype._clearVariables = function() {
        this._clearRequestedProperties();
        this._bulletProperties = {plotArea:{}};
        this._waterfallProperties = {plotArea:{}};
        this._cachedDataset = null;
        this._connectPopover = null;
        this._templateCache = null;
    };

    VizFrame.prototype._clearRequestedProperties = function() {
        this.setProperty('vizProperties', null);
        this.setProperty('vizScales', null);
        this.setProperty('vizCustomizations', null);
        this._scalesOption = null;
    };

    VizFrame.prototype.getVizUid = function() {
        return this.getId();
    };


    /**
     * Setter for property uiConfig. uiConfig could only set via settings parameter
     * of constructor.
     *
     * uiConfig from base type could config the instance. Supported uiConfig
     * keyword: applicationSet, showErrorMessage
     *
     * Example:
     *
     * <pre>
     * var vizFrame = new sap.viz.ui5.controls.VizFrame({
     *  'vizType' : 'bar',
     *  'uiConfig' : {
     *      'applicationSet' : 'fiori',
     *      'showErrorMessage' : true
     *  }
     * });
     * </pre>
     *
     * @returns {sap.viz.ui5.controls.VizFrame}
     * @public
     * @param {object} oUiConfig
     */
    VizFrame.prototype.setUiConfig = function(oUiConfig) {
        sap.viz.ui5.controls.common.BaseControl.prototype.setUiConfig.apply(this, arguments);
    };

    /**
     * Setter for property vizType. vizType could only set via settings parameter in Constructor.
     * Do not set vizType at runtime.
     *
     * vizType is a string of supported chart type or extension chart type.
     *
     * Supported chart types: bubble, combination, column, bar, line, stacked_bar, stacked_column, bullet, vertical_bullet, timebubble.
     * User can pass 'chartType' or 'info/chartType' for these supported chart types.
     *
     * Example:
     * <pre>
     * var vizFrame = new sap.viz.ui5.controls.VizFrame({
     *  'vizType' : 'bar'
     * });
     * </pre>
     *
     * For extension chart type, user should load extension js file manually at first.
     *
     * Example:
     * <pre>
     * var vizFrame = new sap.viz.ui5.controls.VizFrame({
     *  'vizType' : 'myextension'
     * });
     * </pre>
     *
     * @param {string}
     *            sVizType
     * @returns {sap.viz.ui5.controls.VizFrame}
     * @public
     */
    VizFrame.prototype.setVizType = function(sVizType) {
        var oldType = this._getCalculatedType();
        if (sVizType !== this.getVizType()) {
            this._invalidateVizType = true;
        }
        this.setProperty('vizType', sVizType, true);

        var newType = this._getCalculatedType();
        if (oldType !== newType && !this._pendingRerendering && (this._vizFrame || this._errorType)) {
            var userFeeds = this._userFeeds || {
                feeds: this.getFeeds(),
                vizType: oldType
            };
            if (userFeeds.vizType === newType) {
                this.destroyFeeds();
                userFeeds.feeds.forEach(function(feed) {
                    this.addFeed(feed);
                }, this);
                this._userFeeds = null;
            } else {
                this._switchFeeds(oldType, this._getCalculatedType(), userFeeds);
            }
        } else {
            this.invalidate();
        }
        return this;
    };

    VizFrame.prototype._switchFeeds = function (fromType, toType, userFeeds) {
        var lwFeeds = FeedItem.toLightWeightFmt(this.getFeeds());
        var newFeeds = sap.viz.vizservices.BVRService.switchFeeds(fromType, lwFeeds, toType).feedItems;
        var defMap = FeedHelper.getFeedDefsMap(toType);
        newFeeds.forEach(function (feed) {
            if (feed.id && defMap[feed.id]) {
                feed.type = defMap[feed.id].type;
            }
        });
        var newUi5Feeds = FeedItem.fromLightWeightFmt(newFeeds);
        userFeeds.feeds.forEach(function(feed) {
            this.removeFeed(feed, true);
        }, this);
        this.vizUpdate({feeds : newUi5Feeds});
        // this._userFeeds is reset in removeFeed above, and vizUpdate>(destroyFeeds & addFeeds), so restore it here
        this._userFeeds = userFeeds;
    };


    // override to add dataset invalidated flag
    VizFrame.prototype.invalidate = function(oOrigin) {
        if (oOrigin instanceof sap.viz.ui5.data.Dataset) {
            this._invalidateDataset = true;
        }
        if (oOrigin instanceof FeedItem) {
            this._userFeeds = null;
        }
        sap.viz.ui5.controls.common.BaseControl.prototype.invalidate.call(this, oOrigin);
    };

    VizFrame.prototype.getVizProperties = function() {
        if (this._vizFrame) {
            return this._mergeProperties(this._mergeProperties({}, this._vizFrame.properties() || {}), this.getProperty('vizProperties') || {});
        } else {
            return this.getProperty('vizProperties');
        }
    };

    VizFrame.prototype.getVizScales = function() {
        if (this._vizFrame) {
            return CommonUtil.extendScales(this._vizFrame.scales() || [], this.getProperty('vizScales') || []);
        } else {
            return this.getProperty('vizScales');
        }
    };

    //description for demokit explored
    /**
     * Zoom the chart plot.
     *
     * @param {object}
     *            contains a "direction" attribute with value "in" or "out" indicating zoom to enlarge or shrink respectively
     * @public
     * @name sap.viz.ui5.controls.VizFrame#zoom
     * @function
     * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel
     */

     //description for UI5 API Reference
    /**
     * Zoom the chart plot.
     *
     * Example:
     * <pre>
     *  var vizFrame = new sap.viz.ui5.controls.VizFrame(...);
     *  vizFrame.zoom({direction: "in"});
     * </pre>
     *
     * @param {object}
     *            contains a "direction" attribute with value "in" or "out" indicating zoom to enlarge or shrink respectively
     * @public
     */
    VizFrame.prototype.zoom = function(cfg) {
        if (this._vizFrame) {
            this._vizFrame.zoom({
                target: "plotArea",
                direction: cfg.direction
            });
        }
   };

    /**
     * Properties for viz frame.
     *
     * Example:
     *
     * <pre>
     *  var vizFrame = new sap.viz.ui5.controls.VizFrame(...);
     *  var properties = {
     *      'legend' : { 'visible'; : true }
     * };
     * vizFrame.setVizProperties(properties);
     * </pre>
     *
     * @param {object}
     *            oVizProperties
     * @returns {sap.viz.ui5.controls.VizFrame}
     * @public
     */
    VizFrame.prototype.setVizProperties = function(oVizProperties) {
        var type = this._getCalculatedType();
        // save bullet proeprties
        if ( oVizProperties && (type === "info/bullet" || type === "info/vertical_bullet") ) {
            RuntimeOptionsHelper.processBulletProperty(this._bulletProperties, oVizProperties);
        }
        // save waterfall proeprties
        if ( oVizProperties && (type === "info/timeseries_waterfall") ) {
            RuntimeOptionsHelper.processWaterfallProperty(this._waterfallProperties, oVizProperties);
        }
        var options = sap.viz.api.serialization.migrate({
            'type' : this._getCalculatedType(),
            'properties' : oVizProperties
        });
        if (this._vizFrame && !this._pendingRerendering) {
            //If no data, don't need clear the message
            if (this._errorType !== Constants.ERROR_TYPE.NODATA) {
                this._updateDescription();
            }
            try {
                this._vizFrame.update(options);
            } catch (err) {
                this._handleErr(err);
            }
        } else {
            // Use as a cache
            this.setProperty('vizProperties', this._mergeProperties(this.getProperty('vizProperties') || {}, options.properties || {}));
            this.setVizScales(options.scales, this._scalesOption);
        }
        return this;
    };

    /**
     * Scales for VizFrame.
     *
     * Example:
     *
     * <pre>
     * var vizFrame = new sap.viz.ui5.controls.VizFrame(...);
     * var scales = [{
     *      'feed': 'color',
     *      'palette': ['#ff0000']
     * }];
     * var vizScalesOption = {replace: true};
     * vizFrame.setVizScales(scales, vizScalesOption);
     * </pre>
     *
     * @param {object}
     *            oVizScales
     * @param {object} [oVizScalesOption]
     * <pre>
     * {
     *     replace: Boolean - replace scales or not. When oVizScalesOption.replace is true,
     *                        replace existing scales with the input scales.
     * }
     * </pre>
     * @returns {sap.viz.ui5.controls.VizFrame}
     * @public
     */
    VizFrame.prototype.setVizScales = function(oVizScales, oVizScalesOption) {
        if (this._vizFrame && !this._pendingRerendering) {
            try {
                if (oVizScalesOption) {
                    this._vizFrame.scales(oVizScales, {level: 'user', replace: oVizScalesOption.replace});
                } else {
                    this._vizFrame.scales(oVizScales);
                }
            } catch (err) {
                this._handleErr(err);
            }
        } else {
            if (oVizScalesOption) {
                this._scalesOption = {level: 'user', replace: oVizScalesOption.replace};
            }
            if (oVizScalesOption && oVizScalesOption.replace) {
                //If reset scales, there is no need to use a cache.
                this.setProperty('vizScales', oVizScales);
            } else {
                this.setProperty('vizScales', CommonUtil.extendScales(this.getProperty('vizScales') || [], oVizScales || []));
            }
        }
        return this;
    };

    VizFrame.prototype.getLegendVisible = function(){
        return this.getVizProperties().legendGroup.computedVisibility;
    };

    VizFrame.prototype.setLegendVisible = function(visibility){
        this.setVizProperties({
            'legend': {
                'visible' : visibility
            },
            'sizeLegend': {
                'visible' : visibility
            }
        });

        return this;
    };

    //description for demokit explored
    /**
     * Selections for viz frame.
     *
     * @param {object[]}
     *            aPoints some data points of the chart
     * @param {object}
     *            oAction whether to clear previous selection, by default the selection will be incremental selection
     * @returns {sap.viz.ui5.controls.VizFrame}
     * @public
     * @name sap.viz.ui5.controls.VizFrame#vizSelection
     * @function
     * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel
     */

    //description for UI5 API Reference
    /**
     * Selections for viz frame. Example:
     *
     * <pre>
     *  var vizFrame = new sap.viz.ui5.controls.VizFrame(...);
     *  //vizSelection for set
     *  var points = [{
     *      data : {
     *          "Country" : "China",
     *          "Year" : "2001",
     *          "Product" : "Car",
     *          "Profit" : 25
     *      }}, {
     *      data : {
     *          "Country" : "China",
     *          "Year" : "2001",
     *          "Product" : "Trunk",
     *          "Profit" : 34
     *      }}];
     *  var action = {
     *      clearSelection : true
     *  };
     * vizFrame.vizSelection(points, action);
     * //vizSelection for get and return result
     * var result = vizFrame.vizSelection();
     * result = [{
     *          data : {
     *              "Country" : "China",
     *              "Year" : "2001",
     *              "Product" : "Car",
     *              "Profit" : 25
     *          },
     *          unit : {
     *              "Profit" : "$"
     *          },
     *          dataName : {
     *              "Profit" : "Actual"
     *          }
     *       }, {
     *          data : {
     *              "Country" : "China",
     *              "Year" : "2001",
     *              "Product" : "Trunk",
     *              "Profit" : 34
     *          },
     *          unit : {
     *              "Profit" : "$"
     *          },
     *          dataName : {
     *              "Profit" : "Actual"
     *          }
     *      }]
     * </pre>
     *
     * @param {object[]}
     *            aPoints some data points of the chart
     * @param {object}
     *            oAction whether to clear previous selection, by default the
     *            selection will be incremental selection
     * @returns {sap.viz.ui5.controls.VizFrame}
     * @public
     */
    VizFrame.prototype.vizSelection = function(aPoints, oAction) {
        if (this._vizFrame) {
            try {
                var result = this._vizFrame.selection.apply(this._vizFrame, arguments);
                if (result === this._vizFrame) {
                    result = this;
                }
            } catch (e) {
                return null;
            }
            return result;
        } else {
            return null;
        }
    };

    //description for demokit explored
    /**
     * Update viz frame according to a JSON object, it can update css, properties,
     * feeds and data model.
     *
     * VizFrame instance has to be placed at its corresponding parent at first to make this API work.
     *
     * @param {object}
     *            oOptions a JSON object contains combination of properties, feeds
     *            and data model.
     * @returns {sap.viz.ui5.controls.VizFrame}
     * @public
     * @name sap.viz.ui5.controls.VizFrame#vizUpdate
     * @function
     * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel
     */

     //description for UI5 API Reference
    /**
     * Update viz frame according to a JSON object, it can update css, properties,
     * feeds and data model.
     *
     * VizFrame instance has to be placed at its corresponding parent at first to make this API work.
     *
     * Example:
     *
     * <pre>
     * var vizFrame = new sap.viz.ui5.controls.VizFrame(...);
     * var data = new  sap.viz.ui5.data.FlattenedDataset(...);
     * var properties = {
     *     'legend' : {'visible' : true},
     * };
     * var scales = [{
     *      'feed': 'color',
     *      'palette': ['#ff0000']
     * }];
     * var customizations = {id:"sap.viz.custom",customOverlayProperties: {}};
     * var FeedItem = sap.viz.ui5.controls.common.feeds.FeedItem;
     * var feeds = [
     *     new FeedItem({'uid' : 'primaryValues',
     *                   'type' : 'Measure',
     *                   'values' []}),
     *     new FeedItem({'uid' : 'regionColor',
     *                   'type' : 'Dimension',
     *                   'values' []})];
     * vizFrame.vizUpdate({
     *               'data' : data,
     *               'properties' : properties,
     *               'scales' : scales,
     *               'customizations' : customizations,
     *               'feeds' : feeds
     *           });
     * </pre>
     *
     * @param {object}
     *            oOptions a JSON object contains combination of properties, feeds
     *            and data model.
     * @returns {sap.viz.ui5.controls.VizFrame}
     * @public
     */
    VizFrame.prototype.vizUpdate = function(oOptions) {
        if (this._vizFrame || this._errorType) {
            if (oOptions.data || oOptions.feeds) {
                // Create requested cache when aggregation changed
                if (oOptions.properties) {
                    this.setVizProperties(oOptions.properties);
                }
                if (oOptions.scales) {
                    this.setVizScales(oOptions.scales);
                }
                if (oOptions.customizations) {
                    this.setVizCustomizations(oOptions.customizations);
                }
                if (oOptions.data) {
                    this.setDataset(oOptions.data);
                }
                if (oOptions.feeds) {
                    this.destroyFeeds();
                    oOptions.feeds.forEach(function(feedItem) {
                        this.addFeed(feedItem);
                    }.bind(this));
                }
            } else {
                try {
                    // Call _vizFrame.vizUpdate directly when aggregation not changed
                    this._vizFrame.update(oOptions);
                } catch (err) {
                    this._handleErr(err);
                }
            }
        }

    };

    /**
    * Set chart customizations,could set via settings parameter of constructor or call the func directly
    * @function setVizCustomizations
    * @memberof VizFrame
    *
    * @supported chart types: column,dual_column,bar,dual_bar,stacked_column,stacked_bar,100_stacked_bar,100_stacked_column,100_dual_stacked_bar,100_dual_stacked_column,
    * dual_stacked_bar,dual_stacked_column,line,horizontal_line,dual_line,dual_horizontal_line,combination,horizontal_combination,stacked_combination,
    * horizontal_stacked_combination,dual_stacked_combination,dual_horizontal_stacked_combination,scatter,bubble.
    *
    * @param {Object} obj The object describe the customizations which contains 4 keys.
    *   id the customizations id
    *   [customOverlayProperties] {}
    *   [customRendererProperties] {id, [{ctx, properties}]}
    *   [customInteractionProperties] {id, {properties}}
    *
    * @example <caption>Sample Code:</caption>
    * VizFrame.vizCustomizations({id : "", customOverlayProperties: {}, customRendererProperties: {}, customInteractionProperties: {}});
    * @returns {sap.viz.ui5.controls.VizFrame}
    */
    VizFrame.prototype.setVizCustomizations = function(obj) {
        if (VizFrame._isCustomizationAPISupportedVizType(this._getCalculatedType())) {
            if (this._vizFrame && !this._pendingRerendering) {
                try {
                    this._vizFrame.customizations(obj);
                } catch (err) {
                    this._handleErr(err);
                }
            } else {
                // Use as a cache
                this.setProperty('vizCustomizations', this._mergeProperties(this.getProperty('vizCustomizations') || {}, obj || {}));
            }
        }
        return this;
    };

    VizFrame.prototype.getVizCustomizations = function(){
        if (this._vizFrame) {
            return this._mergeProperties(this._mergeProperties({}, this._vizFrame.customizations() || {}), this.getProperty('vizCustomizations') || {});
        } else {
            return this.getProperty('vizCustomizations');
        }
    };

    VizFrame._isCustomizationAPISupportedVizType = function(vizType) {
        // @formatter:off
        return jQuery.inArray(vizType,
                [ 'info/column', 'info/dual_column','info/bar', 'info/dual_bar', 'info/stacked_bar','info/stacked_column',
                  'info/100_stacked_bar','info/100_stacked_column','info/100_dual_stacked_bar','info/100_dual_stacked_column',
                  'info/dual_stacked_bar','info/dual_stacked_column','info/line','info/horizontal_line','info/dual_line',
                  'info/dual_horizontal_line','info/bubble', "info/scatter", 'info/combination','info/horizontal_combination',
                  'info/stacked_combination', 'info/horizontal_stacked_combination','info/dual_stacked_combination',
                  'info/dual_horizontal_stacked_combination', 'info/timeseries_combination', 'info/timeseries_bullet',
                  'info/dual_timeseries_combination', 'info/dual_combination', 'info/dual_horizontal_combination']) !== -1;
        // @formatter:on
    };

    VizFrame.prototype.getResponsiveLegend = function(){
        if (this._vizFrame) {
            return sap.viz.ui5.controls.ResponsiveLegend.createInstance(this._vizFrame.responsiveLegend());
        }
    };

    //description for demokit explored
    /**
     * Export the current viz as SVG String.
     *
     * @public
     * @function
     * @name sap.viz.ui5.controls.VizFrame#exportToSVGString
     * @param {Object} [option] the option defines the width and height of exported svg and if the exported svg includes the orignal title,legend and title
     * @return {string} the SVG string of the current viz or empty svg if error occurs.
     * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel
     */

    //description for UI5 API Reference
    /**
     * Export the current viz as SVG String.
     * The viz is ready to be exported to svg ONLY after the initialization is finished.
     * Any attempt to export to svg before that will result in an empty svg string.
     * @public
     * @param {Object} [option]
     * <pre>
     * {
     *     width: Number - the exported svg will be scaled to the specific width.
     *     height: Number - the exported svg will be scaled to the specific height.
     *     hideTitleLegend: Boolean - flag to indicate if the exported svg includes the original title and legend.
     *     hideAxis: Boolean - flag to indicate if the exported svg includes the original axis.
     * }
     * </pre>
     * @return {string} the SVG string of the current viz or empty svg if error occurs.
     */
    VizFrame.prototype.exportToSVGString = function (option) {
        var result = "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\"/>";
        if (this._vizFrame) {
            result = this._vizFrame.exportToSVGString(option);
        }
        return result;
    };

    VizFrame.prototype._getScopeString = function () {
        //aScope is like [[sapContrast], [sapABC, sapD], ...]. We stringfy it.
        var aScope = Parameters.getActiveScopesFor(this);
        return JSON.stringify(aScope);
    };

    VizFrame.prototype._scopingChangedFun = function (eventOptions) {
        var oElement = eventOptions.getParameter("element");
        var handleScopingChange = false;
        if (this === oElement) {
            handleScopingChange = true;
        } else {
            var node = this;
            while (node) {
                node = node.getParent();
                if (node === oElement) {
                    handleScopingChange = true;
                    break;
                }
            }
        }

        if (handleScopingChange) {
            var sScopeChain = this._getScopeString();
            //undefined means vizFrame is not rendered.
            if (this._sCurrentScopeChain !== undefined &&
                this._sCurrentScopeChain !== sScopeChain) {
                this._themeChangedHandler();
                var renderOptions = {
                    forceThemeChange : true
                };
                this._renderVizFrame(renderOptions);
            }
        }
    };

    /*
    *Create necessary chart container before rendering.
    */
    VizFrame.prototype._createContainerDiv = function () {
        // sap.ui.core.RenderManager.preserveContent
        jQuery(this._app$).attr("data-sap-ui-preserve", true);

        // Container
        var vizFrame$ = this.$().find("." + Constants.CSS_PREFIX + '-viz-frame');
        if (vizFrame$.length === 0) {
            vizFrame$ = jQuery(document.createElement('div'));
            vizFrame$.addClass(Constants.CSS_PREFIX + '-viz-frame');
            vizFrame$.appendTo(this._app$);
        }

        //Description container
        if (!this.$().find("." + Constants.CSS_PREFIX + '-viz-description').length) {
            var description$ = jQuery(document.createElement('div'));
            description$.addClass(Constants.CSS_PREFIX + '-viz-description');
            description$.appendTo(this._app$);
            description$.attr('tabindex', 0);

            var descriptionTitle$ = jQuery(document.createElement('div'));
            descriptionTitle$.addClass(Constants.CSS_PREFIX + '-viz-description-title');
            descriptionTitle$.appendTo(description$);

            var descriptionDetail$ = jQuery(document.createElement('div'));
            descriptionDetail$.addClass(Constants.CSS_PREFIX + '-viz-description-detail');
            descriptionDetail$.appendTo(description$);

            var descriptionMessage$ = jQuery(document.createElement('div'));
            descriptionMessage$.addClass(Constants.CSS_PREFIX + '-viz-description-message');
            descriptionMessage$.appendTo(description$);

        }
    };

    VizFrame.prototype._createVizFrame = function (options) {
        sap.ui.getCore().attachThemeScopingChanged(this._scopingChangedFun, this);

        options.container = this.$().find("." + Constants.CSS_PREFIX + '-viz-frame').get(0);

        var vizFrame = this._vizFrame = new sap.viz.vizframe.VizFrame(options, {
            'controls' : {
                'morpher' : {
                    'enabled' : false
                }
            }, 'throwError' : true
        });

        vizFrame.on('selectData', function(e) {
            this.fireEvent("selectData", e);
        }.bind(this));
        vizFrame.on('deselectData', function(e) {
            this.fireEvent("deselectData", e);
        }.bind(this));
        vizFrame.on('initialized', function(e) {
            var vizFrame$ = this.$().find("." + Constants.CSS_PREFIX + '-viz-frame');
            vizFrame$.focusin(function(event){
                event.preventDefault();
                vizFrame$.addClass('sapMFocus');
            });
            vizFrame$.focusout(function(event){
                event.preventDefault();
                vizFrame$.removeClass('sapMFocus');
            });
            this.fireEvent("renderComplete", e);
        }.bind(this));
        vizFrame.on('scroll', function(e) {
            this.fireEvent("_scroll", e);
        }.bind(this));
        vizFrame.on('_selectionDetails', function(e) {
            SelectionDetailUtil.appendShapeStrings(e.data);
            this.fireEvent("_selectionDetails", e);
        }.bind(this));
        vizFrame.on('_zoomDetected', function(e) {
            this.fireEvent("_zoomDetected", e);
        }.bind(this));
        return vizFrame;
    };

    VizFrame.prototype._emptyVizFrame = function(bKeepVizInstance) {
        var vizFrame$ = this.$().find("." + Constants.CSS_PREFIX + '-viz-frame');
        if (vizFrame$.length === 0) {
            return;
        } else if (!bKeepVizInstance) {
            vizFrame$.empty();
        } else {
            vizFrame$.find(".v-info").remove();
        }
        sap.ui.getCore().detachThemeScopingChanged(this._scopingChangedFun, this);
    };

    VizFrame.prototype._migrate = function(type, feeds) {
        feeds.forEach(function(feedItem) {
            var migrated = sap.viz.api.serialization.feedsIdToBindingId(type, feedItem.getUid());
            if (migrated) {
                feedItem.setProperty('uid', migrated, true);
            }
        });
        if (type === "info/bullet" ||
            type === "info/vertical_bullet" ||
            type === "info/timeseries_bullet") {
            var hasActualBinding = false;
            feeds.forEach(function(feedItem) {
                hasActualBinding = hasActualBinding || feedItem.getUid() === 'actualValues';
            });
            if (!hasActualBinding) {
                feeds.forEach(function(feedItem) {
                    if (feedItem.getUid() === 'valueAxis') {
                        feedItem.setUid('actualValues');
                        if (feedItem.getValues().length > 1) {
                            feeds.push(new FeedItem({
                                'uid' : 'additionalValues',
                                'type' : 'Measure',
                                'values' : [feedItem.getValues()[1]]
                            }));
                            feedItem.setValues([feedItem.getValues()[0]]);
                        }
                    }
                });
            }
        }
    };

    function indexOfColorPalette(feeds){
        for (var i = feeds.length - 1; i >= 0; i--) {
            var fd = feeds[i];
            if (fd.feed && fd.feed === "color" && fd.palette) {
                return i;
            }
        }
        return -1;
    }

    // vizFrame checks user input and adds extra props according to chart type
    VizFrame.prototype._checkProps = function(applicationSet, options, feeds){
        //decorate user property
        if (applicationSet === 'fiori') {
            options.properties =  RuntimeOptionsHelper.decorateFiori(options, feeds, this.getVizProperties());
        }

        if (options.properties) {
            options.properties = PropertyService.removeInvalid(options.type, options.properties);
        }

        if (options.type === "info/bullet" || options.type === "info/vertical_bullet") {
            options.properties = this._mergeProperties(options.properties || {},this._bulletProperties);
            RuntimeOptionsHelper.decorateBullet(options, feeds);
        }

        if (options.type === "info/timeseries_bullet") {
            RuntimeOptionsHelper.decorateTimeBullet(options);
        }
    
        if (options.type === "info/timeseries_waterfall") {
            RuntimeOptionsHelper.decorateWaterfall(options, feeds);
            options.properties = this._mergeProperties(options.properties || {},this._waterfallProperties);
        }
    };

    function getDefaultProp(chartName, applicationSet, oControl) {
        var mFn = PropertyService.mergeProperties;
        var getUI5Theme = sap.viz.ui5.theming.Util.readCSSParameters;
        var defaultProp = DefaultPropertiesHelper.get(PropertyService, chartName, applicationSet);
        var extraProp = DefaultPropertiesHelper.getExtraProp(applicationSet);
        return mFn(chartName, defaultProp, getUI5Theme(chartName, oControl), extraProp);
    }

    //  in BITSDC2-2919, we want to merge ui5 and fiori properties into an template
    //  and pass it to cvom chart. Such that cvom will treat those properties as template prop
    //  rather than user properties
    //  this function will merge props, vizFrame will use the result to create the template
    VizFrame.prototype._getTemplateProps = function(applicationSet, cvomTemplate){
        var mFn = PropertyService.mergeProperties;
        var chartName, ii;
        var mergedProps = {};
        for (ii = 0; ii < Constants.CORE_CHART_TYPES.length; ii++) {
            chartName = Constants.CORE_CHART_TYPES[ii];
            mergedProps[chartName] = getDefaultProp(chartName, applicationSet, this);
        }

        if (cvomTemplate.properties) {
            for (ii = 0; ii < Constants.CORE_CHART_TYPES.length; ii++) {
                chartName = Constants.CORE_CHART_TYPES[ii];
                mergedProps[chartName] = mFn(chartName, cvomTemplate.properties[chartName], mergedProps[chartName]);
                mergedProps[chartName] = PropertyService.removeInvalid(chartName, mergedProps[chartName] );
            }
        }
        return mergedProps;
    };

    VizFrame.prototype._getOptions = function(type, feeds){
        var options = {
            'type': type,
            'properties': {}
        };

        // data
        if (this._invalidateDataset) {
            options.data = this._getVizDataset();
            this._invalidateDataset = false;
        }
        // feeds
        if (this._invalidateFeeds) {
            options.bindings = this._getVizBindings(type, feeds);
            this._invalidateFeeds = false;
        }
        // properties
        if (this.getProperty('vizProperties')) {
            options.properties = this.getProperty('vizProperties');
        }
        // scales
        if (this.getProperty('vizScales')) {
            options.scales = this.getProperty('vizScales');
        }
        if (this._scalesOption) {
            options.scalesOption = this._scalesOption;
        }
        // customized properties
        if (this.getProperty('vizCustomizations')) {
            options.customizations = this.getProperty('vizCustomizations');
        }
        // runtime color scales
        if (this._aRuntimeScales) {
            options.sharedRuntimeScales = this._aRuntimeScales;
        }
        
        options.template = this._currentTemplate;

        return options;
    };
   
    VizFrame.prototype._setCustomMessages = function (o) {
        this._errorInfo = o;
        this._handleDescription(this._errorType);
    };

    VizFrame.prototype._renderVizFrame = function (renderOptions) {
        if (!this._readyToRender()){
            return;
        }

        var applicationSet = (this.getUiConfig() || {}).applicationSet;
        var type = this._getCalculatedType();
        var feeds = this.getFeeds();
        var mFn = PropertyService.mergeProperties;

        var originalInvalids = {
            _invalidateDataset: this._invalidateDataset,
            _invalidateVizType: this._invalidateVizType,
            _invalidateFeeds:   this._invalidateFeeds
        };

        // Migrate
        this._migrate(type, feeds);

        var themeChanged = false,
            theme = sap.ui.getCore().getConfiguration().getTheme();
        if ((renderOptions && renderOptions.forceThemeChange) ||
                (this._currentTheme !== theme)) {
            themeChanged = true;
        }
        originalInvalids.theme = theme;

        //nothing changed
        if (!(this._invalidateFeeds || this._invalidateDataset || themeChanged || this._invalidateVizType || this._localeChanged) || !this._isDataReady()) {
            return;
        }

        this._createContainerDiv();

        try {
            var options = this._getOptions(type, feeds);
            if (!options){
                return;
            }
            this._currentTheme = theme;
            
            //extension is very sensitive, we do not want to change their behaviors
            //do not use template for extension
            if (this._isExtension()) {
                var defaultProp = getDefaultProp(type, applicationSet);
                options.properties = mFn(type, defaultProp, options.properties);
            }

            this._checkProps(applicationSet, options, feeds, type);

            if (this._invalidateVizType) {
                this._invalidateVizType = false;
            }

            if (!this._vizFrame) {
                if (options.data) {
                    this._createVizFrame(options);
                    this._clearRequestedProperties();
                }
            } else {
                this._vizFrame.update(options);
                this._clearRequestedProperties();
            }
            if (this._connectPopover) {
                this._connectPopover();
            }

            //If empty data, display "No Data" in center
            var vizDS = this._getVizDataset();
            if (vizDS && vizDS._FlatTableD && (!vizDS._FlatTableD._data.length)) {
                throw Constants.ERROR_MESSAGE.NODATA;
            } else {
                //clear the description here to make sure previous description is cleared
                this._errorType = null;
                this._updateDescription();
            }
            this._localeChanged = false;
        } catch (err) {
            if (!this._vizFrame) {
                this._invalidateDataset = originalInvalids._invalidateDataset;
                this._invalidateVizType = originalInvalids._invalidateVizType;
                this._invalidateFeeds = originalInvalids._invalidateFeeds;
                this._currentTheme = originalInvalids.theme;
                this._emptyVizFrame();
            }
            this._handleErr(err);
        }
    };
    
    VizFrame.prototype._themeChangedHandler = function(forceUnregister){
        //in librart.js  sap.viz._changeTemplate('standard_fiori') is called whenever the theme is changed
        var applicationSet = (this.getUiConfig() || {}).applicationSet;
        var appSetId = applicationSet || "";
        
        //we need to append mode in newId.
        var modeString = "";
        this._sCurrentScopeChain = this._getScopeString();
        if (this._sCurrentScopeChain) {
            modeString = this._sCurrentScopeChain;
        }
        
        var theme = sap.ui.getCore().getConfiguration().getTheme();
        var newId = theme + "_" + appSetId + "_" + Constants.TEMPLATE_POSTFIX + modeString;
        this._currentTemplate = newId;

        var currentId = sap.viz.api.env.Template.get();
        var extapi = sap.viz.extapi.env.Template;

        // !!TODO the assumption is that ui5 theme parameter and fiori props won't change
        // when change bluecrystal -> hcb -> bluecrystal
        // so we can reuse the template
        // but if user change ui5 theme parameter or fiori between two same themes
        // we need to abandon the old template and generate new one
        if (!extapi.isRegistered(newId) || forceUnregister) {
            extapi.unregister(newId);
        
            var cvomTemplate;
            if (currentId.indexOf(Constants.TEMPLATE_POSTFIX) > -1 ) {
                cvomTemplate = extapi.getPackage('standard_fiori') || extapi.getPackage('default');
            } else {
                cvomTemplate = extapi.current();
            }
    
            if (!this._templateCache[newId]) {
                this._templateCache[newId] = this._getTemplateProps(applicationSet, cvomTemplate);
            }
    
            //apply new dynamic template
            var cache = this._templateCache[newId];
            //default tempate has not property
            cvomTemplate.properties = cvomTemplate.properties || {};
            cvomTemplate.scales = cvomTemplate.scales || {};
            for (var chartName in cache) {
                if (cache.hasOwnProperty(chartName)) {
                    cvomTemplate.properties[chartName] = cache[chartName];
                    // TODO: default property helper define color palette as prop
                    // standard_fiori define them as scale
                    // we prefer the color palette in default property helper
                    // in future, we should refactor
                    var tempFeeds = cvomTemplate.scales[chartName];
                    if (tempFeeds) {
                        var tempIndex = indexOfColorPalette(tempFeeds);
                        if (tempIndex > -1) {
                            tempFeeds.splice(tempIndex, 1);
                        }
                    }
                }
            }
            cvomTemplate.id = newId;
            cvomTemplate.name = newId;
            extapi.register(cvomTemplate);
        }
    };
    
    VizFrame.prototype.onThemeChanged = function(e){
        if (this._app$ && this.$()) {
            this._themeChangedHandler(e.triggeredBy && e.triggeredBy === 'themedesigner');
            this.invalidate();
        }
    };

    VizFrame.prototype.onlocalizationChanged = function() {
        // Render the chart after language resource is ready.
        if (this._app$ && this.$()) {
            sap.viz._applyLocale(function() {
                if (this._errorType) {
                    this._localeChanged = true;
                    this.invalidate();
                }
            }.bind(this));
        }
    };

    VizFrame.prototype._isDataReady = function(){
        var ds = this.getDataset();
        return (!ds || !ds.isReady()) ? false : true;
    };

    VizFrame.prototype._getVizDataset = function() {
        var ds = this.getDataset();
        if (this._isExtension()) {
            var metadata = this._getMetadata();
            if (metadata) {
                if (metadata.dataType === 'raw') {
                    return ds.getRawDataset();
                } else if (metadata.dataType === 'sap.viz.api.data.CrosstableDataset') {
                    FeedHelper.updateAxis(ds.getDimensions(), this._getCalculatedType(), this.getFeeds());
                    return ds.getVIZCrossDataset();
                } else {
                    return ds.getVIZFlatDataset();
                }
            } else {
                FeedHelper.updateAxis(ds.getDimensions(), this._getCalculatedType(), this.getFeeds());
                return ds.getVIZCrossDataset();
            }
         } else {
            return ds.getVIZFlatDataset();
        }
    };

    VizFrame.prototype._getVizBindings = function(type, feeds) {
        if (feeds && feeds.length) {
            var lwFeedItems = FeedItem.toLightWeightFmt(feeds);
            lwFeedItems = sap.viz.vizservices.BVRService.suggestFeeds(type, lwFeedItems,
                [{'id' : 'MND', 'type' : 'MND'}]).feedItems;
            if (this._isExtension()) {
                var metadata = this._getMetadata();
                if (metadata) {
                    if (metadata.dataType === 'sap.viz.api.data.CrosstableDataset') {
                        return BindingService.generateBindings(type, lwFeedItems, 'CrossTableDataset');
                    } else {
                        return BindingService.generateBindings(type, lwFeedItems, 'FlatTableDataset');
                    }
                } else {
                    return BindingService.generateBindings(type, lwFeedItems, 'CrossTableDataset');
                }
            } else {
                return BindingService.generateBindings(type, lwFeedItems, 'FlatTableDataset');
            }
        } else {
            return null;
        }
    };

    VizFrame.prototype._getMetadata = function() {
        var metadata;
        try {
            metadata = sap.viz.api.metadata.Viz.get(this._getCalculatedType());
        } catch (err) {
            metadata = null;
        }
        return metadata;
    };

    VizFrame.prototype._onConnectPopover = function(callback) {
        if (arguments.length > 0) {
            this._connectPopover = callback;
        }
        return this._connectPopover;
    };

    VizFrame.prototype._createChildren = function() {
        this._themeChangedHandler();
        this._renderVizFrame();
    };

    VizFrame.prototype._updateChildren = function() {
        this._renderVizFrame();
    };

    VizFrame.prototype._validateSize = function(event) {
        if (!this._app$ || !this.$() || (event && event.size &&
            (event.size.height == 0 || event.size.width == 0))) {
            return;
        }

        var appSize = {
            'width' : this.$().width(),
            'height' : this.$().height()
        };

        if (this._vizFrame) {
            var size = this._vizFrame.size();
            if (!size || size.width !== appSize.width || size.height !== appSize.height) {
                this._vizFrame.size({
                    'width' : appSize.width,
                    'height' : appSize.height
                });
            }
        }
    };

    VizFrame.prototype._getCalculatedType = function() {
        if (this._isExtension()) {
            return this.getVizType();
        } else {
            return this._getInfoType();
        }
    };

    VizFrame.prototype._isExtension = function() {
        return Constants.CORE_CHART_TYPES.indexOf(this._getInfoType()) === -1;
    };

    VizFrame.prototype._getInfoType = function() {
        var vizType = this.getVizType();
        if (vizType.indexOf("info/") === -1) {
            return 'info/' + vizType;
        } else {
            return vizType;
        }
    };

    VizFrame.prototype._mergeProperties = function(target, properties) {
        return PropertyService.mergeProperties(
            this._getCalculatedType(), target, properties);
    };

    VizFrame.prototype._wrapApi = function(name, afterCallback) {
        this[name] = function() {
            var ret = VizFrame.prototype[name].apply(this, arguments);
            afterCallback();
            return ret;
        }.bind(this);
    };

    VizFrame.prototype._updateDescription = function (desc) {

       var description$ = this.$().find("." + Constants.CSS_PREFIX + '-viz-description');
       var title$ = description$.find("." + Constants.CSS_PREFIX + '-viz-description-title');
       var detail$ = description$.find("." + Constants.CSS_PREFIX + '-viz-description-detail');
       var message$ = description$.find("." + Constants.CSS_PREFIX + '-viz-description-message');
       if (!description$.length){
              return;
       }
       if (!desc){
              description$.hide();
       } else {
            description$.show();
            title$.empty();
            detail$.empty();
            message$.empty();

            if (desc.title) {
                title$.show().text(desc.title);
            }
            if (desc.detail) {
                detail$.show().text(desc.detail);
            }
            if (desc.message) {
                message$.show().text(desc.message);
            }
       }
    };

    VizFrame.prototype._handleDescription = function (errorType, err) {
        var desc;
        if (!errorType) {
            return;
        }
        if (this._errorInfo && this._errorInfo[errorType]) {
            desc = {
                message : this._errorInfo[errorType]
            };
        } else if (errorType === Constants.ERROR_TYPE.INVALIDDATA) {
            desc = {
                title: sap.viz.extapi.env.Language.getResourceString("IDS_ERROR_INVALIDE_DATA"),
                detail: sap.viz.extapi.env.Language.getResourceString("IDS_ERROR_INVALIDE_DATA_DESCRIPTION")
            };
        } else if (errorType === Constants.ERROR_TYPE.MULTIPLEUNITS) {
            desc = {
                title: sap.viz.extapi.env.Language.getResourceString("IDS_ERROR_INVALIDE_DATA"),
                detail: sap.viz.extapi.env.Language.getResourceString("IDS_ERROR_INVALIDE_DATA_MULTIPLEUNITS")
            };
        } else if (errorType === Constants.ERROR_TYPE.NODATA) {
            desc = {
                title: sap.viz.extapi.env.Language.getResourceString("IDS_ERROR_ISNODATA")
            };
        } else {
            desc = {
                message: err
            };
        }
        this._updateDescription(desc);
    };

    VizFrame.prototype._handleErr = function(err) {
        var showError = (this.getUiConfig() || {}).showErrorMessage !== false;
        if (showError) {
            if (err === Constants.ERROR_MESSAGE.MULTIPLEUNITS) {
                this._errorType = Constants.ERROR_TYPE.MULTIPLEUNITS;
                //As this error happens when getting dataset, so it needs to clean up the already exist vizFrame.
                if (this._vizFrame) {
                    this._clearVariables();
                    this._vizFrame.destroy();
                    this._vizFrame = null;
                    this._templateCache = {};
                }
            } else if (err === Constants.ERROR_MESSAGE.NODATA) {
                this._errorType = Constants.ERROR_TYPE.NODATA;
            } else if (err.toString().indexOf("[50060]") >= 0) {
                this._errorType = Constants.ERROR_TYPE.INVALIDDATA;
            } else {
                this._errorType = Constants.ERROR_TYPE.OTHERS;
            }
            this._handleDescription(this._errorType, err);
        }
        if (this._errorType !== Constants.ERROR_TYPE.NODATA) {
            if (this._vizFrame) {
                this._emptyVizFrame(true);
            }
            this.fireEvent('renderFail', {
                'id' : 'renderFail',
                'error' : err
            });
        }
    };

    /*
     * Internal API - set/get runtime scales
     */
    VizFrame.prototype._runtimeScales = function(aRuntimeScales, bSuppressInvalidate) {
        if (arguments.length === 0) {
            return this._vizFrame ? this._vizFrame.runtimeScales() : this._aRuntimeScales;
        } else if (aRuntimeScales) {
            this._aRuntimeScales = [].concat(aRuntimeScales);
            if (!bSuppressInvalidate) {
                this.invalidate();
            }
        }
    };

    /*
     * Internal API - get zoom information.
     * @return {object} the zooming enablement and current zooming level of VizFrame.
     */
    VizFrame.prototype._getZoomInfo = function() {
        var zoomInOut, enabled, currentZoomLevel, zoomInfo, states = this._states();
        if (states) {
            zoomInOut = states.zoomInOut;
            if (zoomInOut) {
                enabled =  zoomInOut.enabled;
                currentZoomLevel = zoomInOut.currentZoomLevel;
            } else {
                enabled = false;
                currentZoomLevel = null;
            }
            zoomInfo =  {
                enabled: enabled,
                currentZoomLevel: currentZoomLevel
            };
        } else {
            zoomInfo = {};
        } 
        return zoomInfo;
    };

    /*
     * Internal API - set/get status
     */
    VizFrame.prototype._states = function () {
        var result;
        if (this._vizFrame) {
            result = this._vizFrame.states.apply(this._vizFrame, arguments);
        }
        return result === this._vizFrame ? this : result;
    };

     /*
     * Internal API - set/get ready to render flag for analytic chart to control the rendering workflow
     */
    VizFrame.prototype._readyToRender = function (readyToRender) {
        if (arguments.length === 0) {
            return this._bReadyToRender;
        } else {
            this._bReadyToRender = readyToRender;
        }

    };

    return VizFrame;
});

}; // end of sap/viz/ui5/controls/VizFrame.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.controls.VizTooltip') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

jQuery.sap.declare('sap.viz.ui5.controls.VizTooltip'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
jQuery.sap.require('sap.ui.core.Popup'); // unlisted dependency retained
sap.ui.define("sap/viz/ui5/controls/VizTooltip",[
    './common/BaseControl',
    './charttooltip/TooltipContainer',
    'sap/ui/core/Popup',
    './common/utils/FormatDataUtil'
], function(BaseControl, TooltipContainer, Popup, FormatDataUtil) {
    "use strict";

    /**
     * Constructor for a new ui5/controls/VizTooltip.
     *
     * @param {string} [sId] id for the new control, generated automatically if no id is given 
     * @param {object} [mSettings] initial settings for the new control
     *
     * @class
     * Viz Chart Tooltip
     * @extends sap.viz.ui5.controls.common.BaseControl
     *
     * @constructor
     * @public
     * @since 1.44.0
     * @name sap.viz.ui5.controls.VizTooltip
     * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
     */
    var VizTooltip = BaseControl.extend("sap.viz.ui5.controls.VizTooltip", {
        metadata: {
            library: "sap.viz",
            properties: {
                /**
                 * The pattern is used to format the measures/timeDimensions displayed in Tooltip. 
                 * If value type of format string is String or an object with 'formatPattern' and 'dataUnit' values defined, the value will be used to format all measures. The value of ‘formatPattern’ here is a string to define the format pattern of numbers, and value of ‘dataUnit’ is a postfix string to indicate the unit of measure.
                 * If value type is Object whose key is measure/timeDimension name, the possible value type is string or an object with ‘formatPattern’ and ‘dataUnit’ values defined. And each string value will be used to format the specified measure or time dimension.
                 * And TimeDimension does not support 'dataUnit'.
                 */
                formatString: {type: "any", defaultValue: null}
            }
        },
        renderer: function (oRm, oControl) {
            oRm.write("<div");
            oRm.writeControlData(oControl);
            oRm.writeClasses();
            oRm.writeStyles();
            oRm.write('>');      
            oRm.write('</div>');
        }
    });

    VizTooltip.prototype.init = function() {
        BaseControl.prototype.init.apply(this, arguments);
        this._uid = null;
        this._oTooltipContainer = null;
        this._oPopup = null;
    };

    VizTooltip.prototype.exit = function() {
        BaseControl.prototype.exit.apply(this, arguments);

        var vizFrame = sap.ui.getCore().byId(this._uid);
        if (vizFrame) {
            if (vizFrame._vizFrame) {
                vizFrame._vizFrame.off('showInstantTooltip');
                vizFrame._vizFrame.off('hideInstantTooltip');
                var connectCallback = vizFrame._onConnectPopover() || {};
                if (connectCallback.ref === this) {
                    vizFrame._onConnectPopover(null);
                }
            } else {
                vizFrame._onConnectPopover(jQuery.proxy(function(event) {
                    if (!vizFrame._vizFrame) {
                        return;
                    }
                    vizFrame._vizFrame.off('showInstantTooltip');
                    vizFrame._vizFrame.off('hideInstantTooltip');
                }, this));
            }
        }
        
        if (this._oPopup) {
            this._oPopup.destroy();
            this._oPopup = null;
            this._oTooltipContainer = null;
        }
        
        this._uid = null;
    };

    /**
     * Connect chart Tooltip with VizFrame. Chart Tooltip is only supported for VizFrame with 'fiori' type. It must be called by application.
     * 
     * Example:
     * <pre>
     * var vizFrame = new sap.viz.ui5.controls.VizFrame({
     *  'vizType' : 'bar',
     *  'uiConfig' : {
     *     'applicationSet': 'fiori'
     *   }
     * });
     * var Tooltip = new sap.viz.ui5.controls.VizTooltip({});
     * Tooltip.connect(vizFrame.getVizUid());
     * </pre>
     * 
     * @param 
     *   {string} uid
     * @public
     * @function sap.viz.ui5.controls.Tooltip.prototype.connect
     */
    VizTooltip.prototype.connect = function(uid) {
        this._uid = uid;
        if (!this._oPopup) {
            this._createTooltip();
        }
        
        var vizFrame = sap.ui.getCore().byId(this._uid);
        var uiConfig = vizFrame.getUiConfig();
        if (!uiConfig || uiConfig.applicationSet !== 'fiori') {
            return;
        }

        var that = this;
        function connectCb() {
            if (!vizFrame._vizFrame) {
                return;
            }
            that._chartType = vizFrame._vizFrame.type();
            vizFrame._vizFrame.off('showTooltip');
            vizFrame._vizFrame.off('hideTooltip');
            vizFrame._vizFrame.on('showInstantTooltip', function(event) {
                that._prepareTooltip(event.data);
                that._oPopup.close(0);
                that._oPopup.open(0);
            });
            vizFrame._vizFrame.on('hideInstantTooltip', function() {
                that._oPopup.close(0);
            });
        }

        connectCb.ref = this;
        if (vizFrame._vizFrame) {
            connectCb();
        }
        vizFrame._onConnectPopover(connectCb);
    };

    VizTooltip.prototype._createTooltip = function(data) {
        this._oTooltipContainer = new TooltipContainer();
        this._oPopup = new Popup();
        this._oPopup.setContent(this._oTooltipContainer);
        this._oPopup.setShadow(false);
    };

    VizTooltip.prototype._prepareTooltip = function(data) {
        var config = {
            formatString: this.getFormatString(),
            chartType: this._chartType,
            mode: "tooltip"
        };
        var formattedData = FormatDataUtil.formatData(data, config);
        this._oTooltipContainer.setContent(formattedData.val);
        var my = Popup.Dock.CenterBottom;
        var at = Popup.Dock.LeftTop;
        var x = data.point.x;
        var padding = 10;
        var y = data.point.y;
        var offset = 0 + " " + (-padding);

        // we need to simulate mousemove event since keyboard do not support this 
        // And using offset will not trigger flip behavior
        var of = document.createEvent('MouseEvents');
        of.initMouseEvent("mousemove", true, true, window, 0, 0, 0, x, y, false, false, false, false, 0, null);
        //wrap and fix to jQuery.Event
        of = jQuery.event.fix(of);

        this._oPopup.setPosition(my, at, of, offset, "flipfit");
    };

    VizTooltip.prototype.addStyleClass = function() {
        this._oTooltipContainer.addStyleClass.apply(this._oTooltipContainer, arguments);
    };

    VizTooltip.prototype.removeStyleClass = function() {
        this._oTooltipContainer.removeStyleClass.apply(this._oTooltipContainer, arguments);
    };

    return VizTooltip;
});

}; // end of sap/viz/ui5/controls/VizTooltip.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.controls.chartpopover.ContentPanel') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */
jQuery.sap.declare('sap.viz.ui5.controls.chartpopover.ContentPanel'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
jQuery.sap.require('jquery.sap.global'); // unlisted dependency retained
jQuery.sap.require('sap.ui.core.Control'); // unlisted dependency retained
jQuery.sap.require('sap.ui.layout.form.SimpleForm'); // unlisted dependency retained
jQuery.sap.require('sap.ui.layout.Grid'); // unlisted dependency retained
jQuery.sap.require('sap.m.Text'); // unlisted dependency retained
jQuery.sap.require('sap.m.ObjectNumber'); // unlisted dependency retained
jQuery.sap.require('sap.m.Label'); // unlisted dependency retained
jQuery.sap.require('sap.ui.core.TextAlign'); // unlisted dependency retained
sap.ui.define("sap/viz/ui5/controls/chartpopover/ContentPanel",[
    'jquery.sap.global',
    './ShapeMarker',
    'sap/ui/core/Control',
    'sap/ui/layout/form/SimpleForm',
    'sap/ui/layout/Grid',
    'sap/m/Text',
    'sap/m/ObjectNumber',
    'sap/m/Label',
    'sap/ui/core/TextAlign',
    '../common/utils/SelectionDetailUtil'
],
function(jQuery, ShapeMarker, Control, SimpleForm, Grid, Text, ObjectNumber, Label, TextAlign, SelectionDetailUtil) {
    "use strict";

    var ContentPanel = Control.extend('sap.viz.ui5.controls.chartpopover.ContentPanel', {
        metadata : {
            properties : {
                'showLine' : 'boolean'
            },
            publicMethods : ["setContentData"]
        },

        renderer : {
            render : function(oRm, oControl) {
                oRm.write('<div');
                oRm.addClass("viz-controls-chartPopover-contentPanel");
                oRm.writeClasses();
                oRm.writeControlData(oControl);
                oRm.writeAttribute("aria-labelledby", oControl._oDimLabel.getId() + " " + oControl._oForm.getId());
                oRm.writeAttribute('tabindex', -1);
                oRm.write('>');
                oRm.renderControl(oControl._oShapeLabel);
                oRm.renderControl(oControl._oPanel);
                oRm.write('</div>');
            }
        }
    });

    ContentPanel.prototype.init = function() {
        this._measureItemsLen = 0;
        this._maxMeasureLableLen = 15;
        this._maxMeasureValueLen = 12;

        this._oShapeLabel = new ShapeMarker(this._createId('vizShapeMarker'), {
        }).addStyleClass('viz-controls-chartPopover-dimension-marker');
        this._oDimLabel = new Text(this._createId('vizDimensionLabel'), {
        }).addStyleClass('viz-controls-chartPopover-dimension-label');
        
        this._oForm = new SimpleForm({
            editable : false,
            maxContainerCols : 2,
            layout:"ResponsiveGridLayout",
            labelSpanL: 6,
            labelSpanM: 6,
            labelSpanS: 6,
            emptySpanL: 0,
            emptySpanM: 0,
            emptySpanS: 0,
            columnsL: 2,
            columnsM: 2,
            content: [
            ]
        });
        this._oPanel = new Grid({
            width: '100%',
            defaultSpan:"L12 M12 S12",
            content : [
                this._oDimLabel,
                this._oForm
            ]
        }).addStyleClass('viz-controls-chartPopover-Vlt');

    };

    ContentPanel.prototype.setContentData = function(data) {
        var values = data.val, dims = '', measureValue, dimensionValue, item = {}, name;
        this._measureItemsLen = 0;
        if (values) {
            this._oForm.removeAllContent();

            //Check measure's type long text mode or not
            var isLongMode = false, i, displayValue;
            for (i = 0; i < values.length; i++) {
                if (values[i].type && values[i].type.toLowerCase()  === 'dimension') {
                    if (data.isTimeSeries && values.hasOwnProperty("timeDimensions") &&
                            values.timeDimensions.indexOf(i) > -1) {
                        //Time Dimension
                        dimensionValue = values[i].value;
                        var fiscalLabels = (values[i].timeAxis && values[i].timeAxis.getFiscalUnitLabels &&
                            values[i].timeAxis.getFiscalUnitLabels());
                        if(fiscalLabels && fiscalLabels.length > 0 ) {
                            displayValue = dimensionValue.fiscalperiod;
                            if (dimensionValue.fiscalyear) {
                                if (!displayValue || displayValue.length < dimensionValue.fiscalyear.length) {
                                    displayValue = dimensionValue.fiscalyear;
                                }
                            }
                        }
                        else {
                            displayValue = dimensionValue.time;
                            if (dimensionValue.day) {
                                if (!displayValue || displayValue.length < dimensionValue.day.length) {
                                    displayValue = dimensionValue.day;
                                }
                            }
                        }

                        if(values[i].name.length > this._maxMeasureLableLen ||
                             displayValue.length > this._maxMeasureValueLen){
                            isLongMode = true;
                            break;
                        }
                        else {
                            //for fiscal, one or two labels.
                            if (fiscalLabels && fiscalLabels.length > 0 &&
                                fiscalLabels[0].length > this._maxMeasureLableLen) {
                                isLongMode = true;
                                break;
                            }
                            if (fiscalLabels && fiscalLabels.length > 1 &&
                                fiscalLabels[1].length > this._maxMeasureLableLen) {
                                isLongMode = true;
                              break;
                        }
                    }

                    }
                } else if (values[i].type && values[i].type.toLowerCase()  === 'measure') {
                    measureValue = values[i].value;
                    if (measureValue == null) {
                        measureValue = this._getNoValueLabel();
                    }
                    if ((values[i].dataName || values[i].name).length > this._maxMeasureLableLen ||
                            measureValue.toString().length > this._maxMeasureValueLen) {
                        isLongMode = true;
                        break;
                    }
                }
            }
    
            for (i = 0; i < values.length; i++) {
                name = values[i].dataName || values[i].name;
                if (values[i].type && values[i].type.toLowerCase() === 'dimension') {
                    dimensionValue = values[i].value;
                    if (data.isTimeSeries && values.hasOwnProperty("timeDimensions") &&
                        values.timeDimensions.indexOf(i) > -1){
                        //Time Dimension
                        var fiscalLabels = (values[i].timeAxis && values[i].timeAxis.getFiscalUnitLabels &&
                            values[i].timeAxis.getFiscalUnitLabels());
                        if (fiscalLabels && fiscalLabels.length > 0) {
                            item.name = fiscalLabels[0];
                            item.value = dimensionValue.fiscalyear;
                            this._renderLabels(isLongMode, item, data.isTimeSeries);
                            if (fiscalLabels.length > 1) {
                                item.name = fiscalLabels[1];
                                item.value = dimensionValue.fiscalperiod;
                                this._renderLabels(isLongMode, item, data.isTimeSeries);
                            }
                        }
                        else {
                            if (dimensionValue.time) {
                                item.name = name;
                                item.value = dimensionValue.time;
                                this._renderLabels(isLongMode, item, data.isTimeSeries);
                            }
                            if (dimensionValue.day) {
                                item.name = dimensionValue.time ? "" : name;
                                item.value = dimensionValue.day;
                                this._renderLabels(isLongMode, item, data.isTimeSeries);
                            }
                        }
                    } else {
                        if (dims == null) {
                            dims = this._getNoValueLabel();
                        } else if (dims.length > 0) {
                            if (dimensionValue === null) {
                                dims = dims + ' - ' + this._getNoValueLabel();
                            } else {
                                dims = dims + ' - ' + dimensionValue;
                            }
                        } else {
                            if (dimensionValue === null) {
                                dims = this._getNoValueLabel();
                            } else {
                            dims = dimensionValue.toString();
                            }
                        }
                    }
                } else if (values[i].type && values[i].type.toLowerCase()  === 'measure') {
                    item.name = name;
                    item.value = values[i].value;
                    item.unit = values[i].unit;
                    this._renderLabels(isLongMode, item);
                }
            }

            var isPeriodicWaterfall = function(data) {
				var result = false;
				if (data.selectByTimeAxisGroup && data.val) {
					var measureCount = 0;
					for (var i = 0; i < data.val.length; i++) {
						if (data.val[i].type === 'Measure') {
							measureCount++;
						}
					}
					if (measureCount > 1) {
						result = true;
					}
				}
				return result;
			};
    
            if (!isPeriodicWaterfall(data) && typeof data.color === 'string') {
                var markerSize = this._oDimLabel.$().css('margin-left');
                if (markerSize) {
                    markerSize = parseInt(markerSize.substr(0, markerSize.length - 2), 10);
                    this._oShapeLabel.setMarkerSize(markerSize);
                }
                this._oShapeLabel.setColor(data.color).setType((data.shape ? data.shape : 'square'));
                if (this.getShowLine()) {
                    this._oShapeLabel.setShowWithLine(data.type).setLineInfo(data.lineInfo);
                } else {
                    this._oShapeLabel.setShowWithLine(undefined);
                }
                if (data.stroke && data.stroke.visible) {
                    //Draw marker with stroke
                    this._oShapeLabel.setStroke(data.stroke);
                }
            } else {
                this._oShapeLabel.setType(null);
                this._oShapeLabel.setShowWithLine(undefined);
            }
            
            if (data.pattern) {
                this._oShapeLabel.setPattern(data.pattern);
            } else {
                this._oShapeLabel.setPattern(null);
            }

            if (dims && dims.length > 0) {
                this._oDimLabel.setVisible(true);
                this._oDimLabel.setText(dims);
            } else {
                this._oDimLabel.setVisible(false);
            }
    
            this._measureItemsLen = data.val.length;
        }
    };
    
    ContentPanel.prototype._renderLabels = function(isLongMode, item, isTimeSeries){
        var valueLabel;
        if (isLongMode) {
            this._oForm.setLabelSpanS(12);
            if (item.name !== '') {
                this._oForm.addContent(new Text({
                    text: item.name
                }).addStyleClass('viz-controls-chartPopover-measure-labels viz-controls-chartPopover-measure-labels-wrapper-name'));
            }
            valueLabel = new ObjectNumber({
                number: item.value,
                unit: item.unit,
                textAlign: TextAlign.Begin
            }).addStyleClass('viz-controls-chartPopover-measure-labels viz-controls-chartPopover-measure-labels-wrapper-value');
            this._oForm.addContent(valueLabel);
            if (isTimeSeries && (item.name === '')) {
                valueLabel.addStyleClass('viz-controls-chartPopover-timeDayDimValue');
            }
        } else {
            this._oForm.setLabelSpanS(6);
            this._oForm.addContent(new Label({
                text: item.name
            }).addStyleClass('viz-controls-chartPopover-measure-labels viz-controls-chartPopover-measure-name'));
            if (item.value !== null) {
                valueLabel = new ObjectNumber({
                    number: item.value,
                    unit: item.unit,
                    textAlign: TextAlign.End
                }).addStyleClass('viz-controls-chartPopover-measure-labels viz-controls-chartPopover-measure-value');
            } else {
                valueLabel = new ObjectNumber({
                    number: this._getNoValueLabel(),
                    textAlign: TextAlign.End
                }).addStyleClass('viz-controls-chartPopover-measure-labels viz-controls-chartPopover-measure-value');
            }
            
            if (isTimeSeries && (item.name === '')) {
                //Time axis and min level is second.
                valueLabel.addStyleClass('viz-controls-chartPopover-timeDayValue');
            }
            this._oForm.addContent(valueLabel);
        }
    };

    ContentPanel.prototype.isMultiSelected = function() {
        return this._measureItemsLen === 0;
    };

    /**
     * Creates an id for an Element prefixed with the control id
     *
     * @return {string} id
     * @public
     */
    ContentPanel.prototype._createId = function(sId) {
        return this.getId() + "-" + sId;
    };
    
    ContentPanel.prototype._getNoValueLabel = function(){
        return sap.viz.extapi.env.Language.getResourceString("IDS_ISNOVALUE");
    };

    ContentPanel.prototype.exit = function(sId) {
        if (this._oForm) {
            this._oForm.destroy();
            this._oForm = null;
        }

        if (this._oShapeLabel) {
            this._oShapeLabel.destroy();
            this._oShapeLabel = null;
        }

        if (this._oDimLabel) {
            this._oDimLabel.destroy();
            this._oDimLabel = null;
        }

        if (this._oPanel) {
            this._oPanel.destroy();
            this._oPanel = null;
        }
    };
    
    return ContentPanel;
});

}; // end of sap/viz/ui5/controls/chartpopover/ContentPanel.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.core.BaseChart') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides control sap.viz.ui5.core.BaseChart.
jQuery.sap.declare('sap.viz.ui5.core.BaseChart'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
jQuery.sap.require('sap.ui.core.Control'); // unlisted dependency retained
jQuery.sap.require('sap.ui.core.theming.Parameters'); // unlisted dependency retained
jQuery.sap.require('sap.viz.libs.sap-viz'); // unlisted dependency retained
sap.ui.define("sap/viz/ui5/core/BaseChart",[
		'sap/ui/core/Control',
		'sap/ui/core/theming/Parameters',
		'sap/viz/library',
		'sap/viz/libs/sap-viz',
		'./BaseStructuredType',
		'./BaseChartMetadata'
	], function(Control, Parameters, library, sapviz, BaseStructuredType, BaseChartMetadata) {
	"use strict";

	/**
	 * Constructor for a new ui5/core/BaseChart.
	 *
	 * @param {string} [sId] id for the new control, generated automatically if no id is given 
	 * @param {object} [mSettings] initial settings for the new control
	 *
	 * @class
	 * An abstract base class for all VIZ charts
	 * @extends sap.ui.core.Control
	 *
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame} 
	 * control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2.
	 * Charting API is not finished yet and might change completely
	 * @name sap.viz.ui5.core.BaseChart
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var BaseChart = Control.extend("sap.viz.ui5.core.BaseChart", /** @lends sap.viz.ui5.core.BaseChart.prototype */ { metadata : {

		"abstract" : true,
		library : "sap.viz",
		properties : {

			/**
			 * Width of the Chart as a CSS size.
			 */
			width : {type : "sap.ui.core.CSSSize", group : "Dimension", defaultValue : '640px'},

			/**
			 * Height of the Chart as a CSS size.
			 */
			height : {type : "sap.ui.core.CSSSize", group : "Dimension", defaultValue : '480px'},

			/**
			 * CSS style of Chart.
			 */
			css : {type : "string", group : "Appearance", defaultValue : null}
		},
		aggregations : {

			/**
			 * Dataset for this chart
			 */
			dataset : {type : "sap.viz.ui5.data.Dataset", multiple : false}, 

			/**
			 * Control tree to display when there is no data available
			 */
			noData : {type : "sap.ui.core.Control", multiple : false}
		},
		events : {

			/**
			 * Fired before a new VIZ instance is created. Event parameter "usrOptions" contains the intended value for the parameter with the same name of the createViz call.
			 */
			beforeCreateViz : {
				parameters : {

					/**
					 * Value for the parameter with the same name of the createViz call.
					 */
					usrOptions : {type : "object"}
				}
			}
		}
	}}, BaseChartMetadata);

	BaseChart.prototype.getVIZChartType = function() {
		return this.getMetadata().getVIZChartType();
	};

	BaseChart.prototype._getSapVizCSS = function() {
	  //@Alex Su: To be compatible with the less mode, the way is to load a css file by an ajax request and use less.Parser to parse it on fly.
	  var sCSSText,sCSSUrl,sCSSContent;
	  var oLink = jQuery.sap.domById("sap-ui-theme-sap.viz");
	  if ( oLink ) {
	    sCSSUrl = oLink.href;
	    sCSSText = jQuery.sap.syncGetText(sCSSUrl + "?", undefined, undefined);
	    if (!sCSSText){
	      sCSSText = "";
	    }
	  } 
	  if (this.getCss()){
	    sCSSContent = sCSSText + this.getCss();
	  }
	  return sCSSContent;
	};

	BaseChart.prototype._getMergedChartOptions = function (){
	  var usrOptions = this._getOptions();
	  //work around for axis line and grid line, will be removed in next push
	  var gridlineColor = Parameters.get('sapVizChartAxisGridlineColor');
	  var axislineColor = Parameters.get('sapVizChartAxisColor');
	  var cssOptions = {
	      xAxis:{
	        gridline:{
	          color:gridlineColor
	        }
	      },
	      yAxis:{
	        gridline:{
	          color:gridlineColor
	        }
	      }
	  };
	  var chartType = this.getVIZChartType();
	  switch (chartType){
	  case "viz/dual_bar":
	    cssOptions.yAxis.color = axislineColor;
	    break;
	  case "viz/dual_combination":
	  case "viz/dual_line":
	  case "viz/dual_stacked_column":
	  case "viz/100_dual_stacked_column":
	  case "viz/dual_column":
	    cssOptions.xAxis.color = axislineColor;
	    break;
	  default:
	    cssOptions.xAxis.color = axislineColor;
	    cssOptions.yAxis.color = axislineColor;
	    break;
	  }
	  return jQuery.extend(true, cssOptions, usrOptions);
	};

	BaseChart.prototype._unregisterListener = function (){
	  if ( this._sResizeListenerId ) {
	    sap.ui.core.ResizeHandler.deregister(this._sResizeListenerId);
	    delete this._sResizeListenerId;
	  }  
	};

	BaseChart.prototype._registerListener = function (){
	  this._sResizeListenerId = sap.ui.core.ResizeHandler.register(this.getDomRef(), jQuery.proxy(this.onresize, this) );
	};

	BaseChart.prototype._renderChart = function (){
	  //TODO How to define feeding API?
	  if ( !sap.viz.__svg_support || !this.getDataset() || !this.getDataset().getVIZDataset() ) {
	    return;
	  }

	  // properly clean up an existing VIZ instance
	  if ( this._oVIZInstance ) {
	    this._oVIZInstance.destroy();
	    delete this._oVIZInstance;
	  }
  
	  var cssSettings = this._getSapVizCSS();

	  var chartOptions = this._getMergedChartOptions();
  
	  // collect the options for the new VIZ instance
	  var oUsrOptions = {
	    type : this.getVIZChartType(),
	    data : this.getDataset().getVIZDataset(),
	    container : this.getDomRef(),
	    options : chartOptions,
	    css : cssSettings
	   };

	  // fire event to allow apps to enhance the options. This might change the options!
	  this.fireBeforeCreateViz({
	    usrOptions : oUsrOptions
	  });
  
	  // create a VIZ chart out of it
	  this._oVIZInstance = sap.viz.core.createViz(oUsrOptions); 

	  // attach event listeners to the VIZ instance
	  var that = this;
	  jQuery.sap.forIn(this._mVIZHandler, function(sName, fnHandler) {
	    that._oVIZInstance.on(sName + BaseChart.EVENT_SUFFIX, fnHandler);
	  });

  
	};

	BaseChart.prototype.init = function() {
		//sap.ui.core.Control.prototype.init.call(this);
		sap.viz._initializeVIZ();
		this._mVIZHandler = {};
	};

	BaseChart.prototype.exit = function() {
		// unregister from resize handler
	  this._unregisterListener();
	  // properly clean up an existing VIZ instance
		if ( this._oVIZInstance ) {
			this._oVIZInstance.destroy();
			delete this._oVIZInstance;
		}
	};

	BaseChart.prototype.onBeforeRendering = function() {
	  this._unregisterListener();
	};

	BaseChart.prototype.onAfterRendering = function() {
	  this._renderChart();
	  this._registerListener();
	};

	BaseChart.prototype.onresize = function(o) {
		// retrieve new size and set it for the viz charts
		var size = {width : this.$().width(), height: this.$().height()};
		if ( this.getDomRef() && this._oVIZInstance ) {
			this._oVIZInstance.size(size);
		}
	};

	/**
	 * Set chart's default selection.
	 * 
	 * @param {object[]} Array of default selection info
	 * @deprecated Since 1.19.
	 * Please use selection API {sap.viz.ui5.core.BaseChart.prototype.selection}.
	 * @public
	 */
	BaseChart.prototype.setDefaultSelection = function(selectionInfos) {
	  // retrieve new size and set it for the viz charts
	  var ds = this.getDataset();
	  if (ds){
	     var vizds = ds.getVIZDataset();
	     if (vizds){
	       vizds.info({
	        'type' : 'defaultSelection',
	        'value' : selectionInfos
	       });
	     if (this._oVIZInstance){
	        this._oVIZInstance.data(vizds);
	      }
	    }
	  }
	};

	BaseChart.prototype.onThemeChanged = function (o){
	  if (!this.getDomRef()){
	    return;
	  } 
	  this._renderChart();
	};

	BaseChart.prototype.onLocalizationChanged = function (o){
	  if (!this.getDomRef()){
	    return;
	  } 
	  this._renderChart();
	};

	BaseChart.prototype.validateAggregation = function(sAggregationName, oObject, bMultiple) {
		if ( sAggregationName === "interaction" ) {
			// can convert types in the following case
			// - if a chart receives a controller.Interaction (e.g. via XMLView using old namespaces)
			oObject = BaseStructuredType._convertAggregatedObject.call(this, sAggregationName, oObject, bMultiple);
		}
		return Control.prototype.validateAggregation.call(this, sAggregationName, oObject, bMultiple);
	};

	BaseChart.EVENT_SUFFIX = ".sap.viz.ui5.core";
	BaseChart.prototype._getOrCreate = BaseStructuredType.prototype._getOrCreate;

	BaseChart.prototype._getOptions = BaseStructuredType.prototype._getOptions;

	BaseChart.prototype._attachVIZEvent = function(sName, oData, fnHandler, oListener) {
		var that = this;
		if (!this.hasListeners(sName)) {
			this._mVIZHandler[sName] = function(o) {
				that.fireEvent(sName, o);
			};

			if (this._oVIZInstance) {
				this._oVIZInstance.on(sName + BaseChart.EVENT_SUFFIX, this._mVIZHandler[sName]);
			}
		}

		Control.prototype.attachEvent.apply(this, arguments);
		return this;
	};

	BaseChart.prototype._detachVIZEvent = function(sName, oData, fnHandler, oListener) {
		Control.prototype.detachEvent.apply(this, arguments);
		if ( !this.hasListeners(sName) ) {
			if ( this._oVIZInstance ) {
				this._oVIZInstance.on(sName + BaseChart.EVENT_SUFFIX, null);
			}
			delete this._mVIZHandler[sName];
		}
	  return this;
	};

	BaseChart.prototype.getVIZInstance = function() {
		return this._oVIZInstance || null;
	};

	/**
	 * Get/Set selected data points. 
	 * To get selection, please use selection() or selection(Options). 
	 * To set selection, please use selection(selectionPoint), or selection(selectionPoint, Options)
	 * 
	 * 
	 * @param {object[]} [selectionPoint]
	 *       Array of Objects with either data or ctx should be set Points. Each point is
	 *<pre>
	 * {
	 *    data: {key: "value", ...},//optional
	 *    ctx:  [{mi: 0, ...}, {...}, ...], // optional. It takes higher priority when both parameters of 'data' and 'ctx' are used. 
	 * }
	 *</pre>
	 *       Either data or ctx should be set.
	 * @param {object} options
	 *       selection options.
	 *       Parameters used in getting data points from selection 
	 *<pre> 
	 *       {
	 *           "withDataCtx": Boolean, // optional. Default value is false.
	 *           "withInfo": Boolean, // optional. Default value is false. 
	 *       }
	 *</pre>
	 *       Parameters used to set data points to be selected   
	 *<pre>
	 *       {
	 *           "selectionMode": "inclusive" or "exclusive" // optional. Default value keeps the same as the selection mode 
	 *                                                       // set by chart property of "interaction -> selectablity -> mode".
	 *                                                       // It takes higher priority when both parameters of 'clearSelection' 
	 *                                                       // and 'selectionMode' are used. 
	 *           "clearSelection": Boolean // Optional, deprecated parameter. 'selectionMode' is to replace this parameter. 
	 *                                     // Use 'clearSelection' for backward-compatibility only.
	 *       }
	 *</pre>
	 * @returns {object[]} | {boolean} 
	 *      Array of Points(for getting selection). Each point is
	 *<pre>
	 *      {
	 *          "data": {key: 'value', ...},
	 *          "ctx":  [{mi: 0, ...}, {...}, ...], // optional. Depends on "withDataCtx".
	 *          "info":  [{type: 'additionalData', ...}, {...}, ...], // optional. Depends on "withInfo".
	 *      }
	 *</pre>
	 *      or Boolean (for setting selection)
	 *           True means setting selection is successful.
	 *           False means setting selection is unsuccessful.
	 * @public
	 */
	BaseChart.prototype.selection = function(selectionPoint, options){
	  if (this._oVIZInstance){
	      return this._oVIZInstance.selection.apply(this._oVIZInstance, arguments);
	  }
	};


	return BaseChart;

});

}; // end of sap/viz/ui5/core/BaseChart.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.data.CustomDataset') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides control sap.viz.ui5.data.CustomDataset.
jQuery.sap.declare('sap.viz.ui5.data.CustomDataset'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/data/CustomDataset",['sap/viz/library','./Dataset'],
    function(library, Dataset) {
    "use strict";

    /**
     * Constructor for a new ui5/data/CustomDataset.
     *
     * @param {string} [sId] id for the new control, generated automatically if no id is given 
     * @param {object} [mSettings] initial settings for the new control
     *
     * @class
     * A dataset for raw data format.
     * @extends sap.viz.ui5.data.Dataset
     *
     * @constructor
     * @public
     * @since 1.31
     * @name sap.viz.ui5.data.CustomDataset
     * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
     */
    var CustomDataset = Dataset.extend("sap.viz.ui5.data.CustomDataset", /** @lends sap.viz.ui5.data.CustomDataset.prototype */ { metadata : {

        library : "sap.viz",
        properties : {

            /**
             * Data containing dimensions and measures. The format and structure of this data is depends on the chart.
             */
            data : {type : "object", group : "Misc"}
        }
    }});


    /**
     * @returns sap.viz.api.data.CustomDataset
     */
    CustomDataset.prototype.getRawDataset = function() {
        return this.getProperty('data');
    };

     // check if the data is ready to consume 
    CustomDataset.prototype.isReady = function(){
        return true;
    };

    return CustomDataset;
});

}; // end of sap/viz/ui5/data/CustomDataset.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.Area') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides control sap.viz.ui5.Area.
jQuery.sap.declare('sap.viz.ui5.Area'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/Area",['sap/viz/library', './core/BaseChart'],
	function(library, BaseChart) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.Area
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Chart sap.viz.ui5.Area
	 * @extends sap.viz.ui5.core.BaseChart
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.Area
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Area = BaseChart.extend("sap.viz.ui5.Area", /** @lends sap.viz.ui5.Area.prototype */ { metadata : {

		library : "sap.viz",


		aggregations : {

			/**
			 * Module sap.viz.modules.rootContainer
			 */
			general : {type : "sap.viz.ui5.types.RootContainer", multiple : false},

			/**
			 * Module sap.viz.modules.controller.interaction
			 */
			interaction : {type : "sap.viz.ui5.types.controller.Interaction", multiple : false},

			/**
			 * Module sap.viz.modules.title
			 */
			title : {type : "sap.viz.ui5.types.Title", multiple : false},

			/**
			 * Module sap.viz.modules.legend
			 */
			legendGroup : {type : "sap.viz.ui5.types.Legend", multiple : false},

			/**
			 * Module sap.viz.modules.legend.common
			 */
			legend : {type : "sap.viz.ui5.types.legend.Common", multiple : false},

			/**
			 * Module sap.viz.chart.elements.Tooltip
			 */
			toolTip : {type : "sap.viz.ui5.types.Tooltip", multiple : false},

			/**
			 * Module sap.viz.modules.xycontainer
			 */
			xyContainer : {type : "sap.viz.ui5.types.XYContainer", multiple : false},

			/**
			 * Module sap.viz.modules.datalabel
			 */
			dataLabel : {type : "sap.viz.ui5.types.Datalabel", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			yAxis : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			xAxis : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.background
			 */
			background : {type : "sap.viz.ui5.types.Background", multiple : false},

			/**
			 * Module sap.viz.modules.area
			 */
			plotArea : {type : "sap.viz.ui5.types.Area", multiple : false}
		},

		events : {

			/**
			 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
			 * //selected element's detail
			 * target:"Dom Element",//an object pointed to corresponding dom element
			 * data:[{val: "...",//value of this element
			 * ctx:{type:"Dimension"||"Measure"||"MND",
			 * //for Dimension
			 * path:{aa:"...",di:"...",dii:"..."},
			 * //for Measure
			 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
			 * //for MND
			 * path:{mg:"...",mi:"..."}
			 * //path: analysis path
			 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
			 * //di: dimension index //zero based
			 * //dii: dimension item index //zero based
			 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
			 * //mi: measure index // measure index in measure group zero based
			 * //dii_a1: each dii of di in analysis axis 1 index
			 * //dii_a2: each dii of di in analysis axis 2 index
			 * }},{
			 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
			 * var:"...",ctx:"..."}]},{
			 * //if under multi selection, there will be more than one selected elements
			 * target:"...",data:["..."]}]}
			 */
			selectData : {},

			/**
			 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
			 */
			deselectData : {},

			/**
			 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
			 * //All measures
			 * name:"...",val:[{//measure value is an array containing only one item
			 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
			 * //this object specifies the plot area of the chart
			 * height:"...",width:"...",x:"...",y:"..."},point:{
			 * //this object specifies a point which affects the position of tooltip
			 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			showTooltip : {deprecated: true},

			/**
			 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			hideTooltip : {deprecated: true},

			/**
			 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
			 */
			initialized : {}
		},

		vizChartType: "viz/area"

	}});


	return Area;

});

}; // end of sap/viz/ui5/Area.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.Area100') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides control sap.viz.ui5.Area100.
jQuery.sap.declare('sap.viz.ui5.Area100'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/Area100",['sap/viz/library', './core/BaseChart'],
	function(library, BaseChart) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.Area100
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Chart sap.viz.ui5.Area100
	 * @extends sap.viz.ui5.core.BaseChart
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.Area100
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Area100 = BaseChart.extend("sap.viz.ui5.Area100", /** @lends sap.viz.ui5.Area100.prototype */ { metadata : {

		library : "sap.viz",


		aggregations : {

			/**
			 * Module sap.viz.modules.rootContainer
			 */
			general : {type : "sap.viz.ui5.types.RootContainer", multiple : false},

			/**
			 * Module sap.viz.modules.controller.interaction
			 */
			interaction : {type : "sap.viz.ui5.types.controller.Interaction", multiple : false},

			/**
			 * Module sap.viz.modules.title
			 */
			title : {type : "sap.viz.ui5.types.Title", multiple : false},

			/**
			 * Module sap.viz.modules.legend
			 */
			legendGroup : {type : "sap.viz.ui5.types.Legend", multiple : false},

			/**
			 * Module sap.viz.modules.legend.common
			 */
			legend : {type : "sap.viz.ui5.types.legend.Common", multiple : false},

			/**
			 * Module sap.viz.chart.elements.Tooltip
			 */
			toolTip : {type : "sap.viz.ui5.types.Tooltip", multiple : false},

			/**
			 * Module sap.viz.modules.xycontainer
			 */
			xyContainer : {type : "sap.viz.ui5.types.XYContainer", multiple : false},

			/**
			 * Module sap.viz.modules.datalabel
			 */
			dataLabel : {type : "sap.viz.ui5.types.Datalabel", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			yAxis : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			xAxis : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.background
			 */
			background : {type : "sap.viz.ui5.types.Background", multiple : false},

			/**
			 * Module sap.viz.modules.area
			 */
			plotArea : {type : "sap.viz.ui5.types.Area", multiple : false}
		},

		events : {

			/**
			 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
			 * //selected element's detail
			 * target:"Dom Element",//an object pointed to corresponding dom element
			 * data:[{val: "...",//value of this element
			 * ctx:{type:"Dimension"||"Measure"||"MND",
			 * //for Dimension
			 * path:{aa:"...",di:"...",dii:"..."},
			 * //for Measure
			 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
			 * //for MND
			 * path:{mg:"...",mi:"..."}
			 * //path: analysis path
			 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
			 * //di: dimension index //zero based
			 * //dii: dimension item index //zero based
			 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
			 * //mi: measure index // measure index in measure group zero based
			 * //dii_a1: each dii of di in analysis axis 1 index
			 * //dii_a2: each dii of di in analysis axis 2 index
			 * }},{
			 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
			 * var:"...",ctx:"..."}]},{
			 * //if under multi selection, there will be more than one selected elements
			 * target:"...",data:["..."]}]}
			 */
			selectData : {},

			/**
			 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
			 */
			deselectData : {},

			/**
			 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
			 * //All measures
			 * name:"...",val:[{//measure value is an array containing only one item
			 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
			 * //this object specifies the plot area of the chart
			 * height:"...",width:"...",x:"...",y:"..."},point:{
			 * //this object specifies a point which affects the position of tooltip
			 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			showTooltip : {deprecated: true},

			/**
			 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			hideTooltip : {deprecated: true},

			/**
			 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
			 */
			initialized : {}
		},

		vizChartType: "viz/100_area"

	}});


	return Area100;

});

}; // end of sap/viz/ui5/Area100.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.Bar') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides control sap.viz.ui5.Bar.
jQuery.sap.declare('sap.viz.ui5.Bar'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/Bar",['sap/viz/library', './core/BaseChart'],
	function(library, BaseChart) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.Bar
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Chart sap.viz.ui5.Bar
	 * @extends sap.viz.ui5.core.BaseChart
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame}</b>(<code>new sap.viz.ui5.controls.VizFrame({'vizType': 'bar'})</code>)
	 * <b>control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.Bar
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Bar = BaseChart.extend("sap.viz.ui5.Bar", /** @lends sap.viz.ui5.Bar.prototype */ { metadata : {

		library : "sap.viz",


		aggregations : {

			/**
			 * Module sap.viz.modules.rootContainer
			 */
			general : {type : "sap.viz.ui5.types.RootContainer", multiple : false},

			/**
			 * Module sap.viz.modules.controller.interaction
			 */
			interaction : {type : "sap.viz.ui5.types.controller.Interaction", multiple : false},

			/**
			 * Module sap.viz.modules.title
			 */
			title : {type : "sap.viz.ui5.types.Title", multiple : false},

			/**
			 * Module sap.viz.modules.legend
			 */
			legendGroup : {type : "sap.viz.ui5.types.Legend", multiple : false},

			/**
			 * Module sap.viz.modules.legend.common
			 */
			legend : {type : "sap.viz.ui5.types.legend.Common", multiple : false},

			/**
			 * Module sap.viz.chart.elements.Tooltip
			 */
			toolTip : {type : "sap.viz.ui5.types.Tooltip", multiple : false},

			/**
			 * Module sap.viz.modules.xycontainer
			 */
			xyContainer : {type : "sap.viz.ui5.types.XYContainer", multiple : false},

			/**
			 * Module sap.viz.modules.datalabel
			 */
			dataLabel : {type : "sap.viz.ui5.types.Datalabel", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			xAxis : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			yAxis : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.background
			 */
			background : {type : "sap.viz.ui5.types.Background", multiple : false},

			/**
			 * Module sap.viz.modules.bar
			 */
			plotArea : {type : "sap.viz.ui5.types.Bar", multiple : false}
		},

		events : {

			/**
			 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
			 * //selected element's detail
			 * target:"Dom Element",//an object pointed to corresponding dom element
			 * data:[{val: "...",//value of this element
			 * ctx:{type:"Dimension"||"Measure"||"MND",
			 * //for Dimension
			 * path:{aa:"...",di:"...",dii:"..."},
			 * //for Measure
			 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
			 * //for MND
			 * path:{mg:"...",mi:"..."}
			 * //path: analysis path
			 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
			 * //di: dimension index //zero based
			 * //dii: dimension item index //zero based
			 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
			 * //mi: measure index // measure index in measure group zero based
			 * //dii_a1: each dii of di in analysis axis 1 index
			 * //dii_a2: each dii of di in analysis axis 2 index
			 * }},{
			 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
			 * var:"...",ctx:"..."}]},{
			 * //if under multi selection, there will be more than one selected elements
			 * target:"...",data:["..."]}]}
			 */
			selectData : {},

			/**
			 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
			 */
			deselectData : {},

			/**
			 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
			 * //All measures
			 * name:"...",val:[{//measure value is an array containing only one item
			 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
			 * //this object specifies the plot area of the chart
			 * height:"...",width:"...",x:"...",y:"..."},point:{
			 * //this object specifies a point which affects the position of tooltip
			 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			showTooltip : {deprecated: true},

			/**
			 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			hideTooltip : {deprecated: true},

			/**
			 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
			 */
			initialized : {}
		},

		vizChartType: "viz/bar"

	}});


	return Bar;

});

}; // end of sap/viz/ui5/Bar.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.Bubble') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides control sap.viz.ui5.Bubble.
jQuery.sap.declare('sap.viz.ui5.Bubble'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/Bubble",['sap/viz/library', './core/BaseChart'],
	function(library, BaseChart) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.Bubble
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Chart sap.viz.ui5.Bubble
	 * @extends sap.viz.ui5.core.BaseChart
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame}</b>(<code>new sap.viz.ui5.controls.VizFrame({'vizType': 'bubble'})</code>)
	 * <b>control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.Bubble
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Bubble = BaseChart.extend("sap.viz.ui5.Bubble", /** @lends sap.viz.ui5.Bubble.prototype */ { metadata : {

		library : "sap.viz",


		aggregations : {

			/**
			 * Module sap.viz.modules.rootContainer
			 */
			general : {type : "sap.viz.ui5.types.RootContainer", multiple : false},

			/**
			 * Module sap.viz.modules.title
			 */
			title : {type : "sap.viz.ui5.types.Title", multiple : false},

			/**
			 * Module sap.viz.modules.legend
			 */
			legendGroup : {type : "sap.viz.ui5.types.Legend", multiple : false},

			/**
			 * Module sap.viz.modules.legend.common
			 */
			legend : {type : "sap.viz.ui5.types.legend.Common", multiple : false},

			/**
			 * Module sap.viz.modules.legend.common
			 */
			sizeLegend : {type : "sap.viz.ui5.types.legend.Common", multiple : false},

			/**
			 * Module sap.viz.modules.xycontainer
			 */
			xyContainer : {type : "sap.viz.ui5.types.XYContainer", multiple : false},

			/**
			 * Module sap.viz.modules.datalabel
			 */
			dataLabel : {type : "sap.viz.ui5.types.Datalabel", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			xAxis : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			yAxis : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.background
			 */
			background : {type : "sap.viz.ui5.types.Background", multiple : false},

			/**
			 * Module sap.viz.modules.bubble
			 */
			plotArea : {type : "sap.viz.ui5.types.Bubble", multiple : false},

			/**
			 * Module sap.viz.chart.elements.Tooltip
			 */
			toolTip : {type : "sap.viz.ui5.types.Tooltip", multiple : false},

			/**
			 * Module sap.viz.modules.controller.interaction
			 */
			interaction : {type : "sap.viz.ui5.types.controller.Interaction", multiple : false}
		},

		events : {

			/**
			 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
			 * //selected element's detail
			 * target:"Dom Element",//an object pointed to corresponding dom element
			 * data:[{val: "...",//value of this element
			 * ctx:{type:"Dimension"||"Measure"||"MND",
			 * //for Dimension
			 * path:{aa:"...",di:"...",dii:"..."},
			 * //for Measure
			 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
			 * //for MND
			 * path:{mg:"...",mi:"..."}
			 * //path: analysis path
			 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
			 * //di: dimension index //zero based
			 * //dii: dimension item index //zero based
			 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
			 * //mi: measure index // measure index in measure group zero based
			 * //dii_a1: each dii of di in analysis axis 1 index
			 * //dii_a2: each dii of di in analysis axis 2 index
			 * }},{
			 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
			 * var:"...",ctx:"..."}]},{
			 * //if under multi selection, there will be more than one selected elements
			 * target:"...",data:["..."]}]}
			 */
			selectData : {},

			/**
			 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
			 */
			deselectData : {},

			/**
			 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
			 * //All measures
			 * name:"...",val:[{//measure value is an array containing only one item
			 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
			 * //this object specifies the plot area of the chart
			 * height:"...",width:"...",x:"...",y:"..."},point:{
			 * //this object specifies a point which affects the position of tooltip
			 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			showTooltip : {deprecated: true},

			/**
			 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			hideTooltip : {deprecated: true},

			/**
			 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
			 */
			initialized : {}
		},

		vizChartType: "viz/bubble"

	}});


	return Bubble;

});

}; // end of sap/viz/ui5/Bubble.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.Bullet') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides control sap.viz.ui5.Bullet.
jQuery.sap.declare('sap.viz.ui5.Bullet'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/Bullet",['sap/viz/library', './core/BaseChart'],
	function(library, BaseChart) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.Bullet
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Chart sap.viz.ui5.Bullet
	 * @extends sap.viz.ui5.core.BaseChart
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame}</b>(<code>new sap.viz.ui5.controls.VizFrame({'vizType': 'vertical_bullet'})</code>)
	 * <b>control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.Bullet
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Bullet = BaseChart.extend("sap.viz.ui5.Bullet", /** @lends sap.viz.ui5.Bullet.prototype */ { metadata : {

		library : "sap.viz",


		aggregations : {

			/**
			 * Module sap.viz.modules.rootContainer
			 */
			general : {type : "sap.viz.ui5.types.RootContainer", multiple : false},

			/**
			 * Module sap.viz.modules.controller.interaction
			 */
			interaction : {type : "sap.viz.ui5.types.controller.Interaction", multiple : false},

			/**
			 * Module sap.viz.modules.title
			 */
			title : {type : "sap.viz.ui5.types.Title", multiple : false},

			/**
			 * Module sap.viz.chart.elements.Tooltip
			 */
			toolTip : {type : "sap.viz.ui5.types.Tooltip", multiple : false},

			/**
			 * Module sap.viz.modules.xycontainer
			 */
			xyContainer : {type : "sap.viz.ui5.types.XYContainer", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			yAxis : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.background
			 */
			background : {type : "sap.viz.ui5.types.Background", multiple : false},

			/**
			 * Module sap.viz.modules.bullet
			 */
			plotArea : {type : "sap.viz.ui5.types.Bullet", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			xAxis2 : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			yAxis2 : {type : "sap.viz.ui5.types.Axis", multiple : false}
		},

		events : {

			/**
			 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
			 * //selected element's detail
			 * target:"Dom Element",//an object pointed to corresponding dom element
			 * data:[{val: "...",//value of this element
			 * ctx:{type:"Dimension"||"Measure"||"MND",
			 * //for Dimension
			 * path:{aa:"...",di:"...",dii:"..."},
			 * //for Measure
			 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
			 * //for MND
			 * path:{mg:"...",mi:"..."}
			 * //path: analysis path
			 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
			 * //di: dimension index //zero based
			 * //dii: dimension item index //zero based
			 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
			 * //mi: measure index // measure index in measure group zero based
			 * //dii_a1: each dii of di in analysis axis 1 index
			 * //dii_a2: each dii of di in analysis axis 2 index
			 * }},{
			 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
			 * var:"...",ctx:"..."}]},{
			 * //if under multi selection, there will be more than one selected elements
			 * target:"...",data:["..."]}]}
			 */
			selectData : {},

			/**
			 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
			 */
			deselectData : {},

			/**
			 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
			 * //All measures
			 * name:"...",val:[{//measure value is an array containing only one item
			 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
			 * //this object specifies the plot area of the chart
			 * height:"...",width:"...",x:"...",y:"..."},point:{
			 * //this object specifies a point which affects the position of tooltip
			 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			showTooltip : {deprecated: true},

			/**
			 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			hideTooltip : {deprecated: true},

			/**
			 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
			 */
			initialized : {}
		},

		vizChartType: "viz/bullet"

	}});


	return Bullet;

});

}; // end of sap/viz/ui5/Bullet.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.Column') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides control sap.viz.ui5.Column.
jQuery.sap.declare('sap.viz.ui5.Column'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/Column",['sap/viz/library', './core/BaseChart'],
	function(library, BaseChart) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.Column
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Chart sap.viz.ui5.Column
	 * @extends sap.viz.ui5.core.BaseChart
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame}</b>(<code>new sap.viz.ui5.controls.VizFrame({'vizType': 'column'})</code>)
	 * <b>control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.Column
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Column = BaseChart.extend("sap.viz.ui5.Column", /** @lends sap.viz.ui5.Column.prototype */ { metadata : {

		library : "sap.viz",


		aggregations : {

			/**
			 * Module sap.viz.modules.rootContainer
			 */
			general : {type : "sap.viz.ui5.types.RootContainer", multiple : false},

			/**
			 * Module sap.viz.modules.controller.interaction
			 */
			interaction : {type : "sap.viz.ui5.types.controller.Interaction", multiple : false},

			/**
			 * Module sap.viz.modules.title
			 */
			title : {type : "sap.viz.ui5.types.Title", multiple : false},

			/**
			 * Module sap.viz.modules.legend
			 */
			legendGroup : {type : "sap.viz.ui5.types.Legend", multiple : false},

			/**
			 * Module sap.viz.modules.legend.common
			 */
			legend : {type : "sap.viz.ui5.types.legend.Common", multiple : false},

			/**
			 * Module sap.viz.chart.elements.Tooltip
			 */
			toolTip : {type : "sap.viz.ui5.types.Tooltip", multiple : false},

			/**
			 * Module sap.viz.modules.xycontainer
			 */
			xyContainer : {type : "sap.viz.ui5.types.XYContainer", multiple : false},

			/**
			 * Module sap.viz.modules.datalabel
			 */
			dataLabel : {type : "sap.viz.ui5.types.Datalabel", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			yAxis : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			xAxis : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.background
			 */
			background : {type : "sap.viz.ui5.types.Background", multiple : false},

			/**
			 * Module sap.viz.modules.verticalbar
			 */
			plotArea : {type : "sap.viz.ui5.types.VerticalBar", multiple : false}
		},

		events : {

			/**
			 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
			 * //selected element's detail
			 * target:"Dom Element",//an object pointed to corresponding dom element
			 * data:[{val: "...",//value of this element
			 * ctx:{type:"Dimension"||"Measure"||"MND",
			 * //for Dimension
			 * path:{aa:"...",di:"...",dii:"..."},
			 * //for Measure
			 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
			 * //for MND
			 * path:{mg:"...",mi:"..."}
			 * //path: analysis path
			 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
			 * //di: dimension index //zero based
			 * //dii: dimension item index //zero based
			 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
			 * //mi: measure index // measure index in measure group zero based
			 * //dii_a1: each dii of di in analysis axis 1 index
			 * //dii_a2: each dii of di in analysis axis 2 index
			 * }},{
			 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
			 * var:"...",ctx:"..."}]},{
			 * //if under multi selection, there will be more than one selected elements
			 * target:"...",data:["..."]}]}
			 */
			selectData : {},

			/**
			 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
			 */
			deselectData : {},

			/**
			 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
			 * //All measures
			 * name:"...",val:[{//measure value is an array containing only one item
			 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
			 * //this object specifies the plot area of the chart
			 * height:"...",width:"...",x:"...",y:"..."},point:{
			 * //this object specifies a point which affects the position of tooltip
			 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			showTooltip : {deprecated: true},

			/**
			 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			hideTooltip : {deprecated: true},

			/**
			 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
			 */
			initialized : {}
		},

		vizChartType: "viz/column"

	}});


	return Column;

});

}; // end of sap/viz/ui5/Column.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.Combination') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides control sap.viz.ui5.Combination.
jQuery.sap.declare('sap.viz.ui5.Combination'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/Combination",['sap/viz/library', './core/BaseChart'],
	function(library, BaseChart) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.Combination
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Chart sap.viz.ui5.Combination
	 * @extends sap.viz.ui5.core.BaseChart
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame}</b>(<code>new sap.viz.ui5.controls.VizFrame({'vizType': 'combination'})</code>)
	 * <b>control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.Combination
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Combination = BaseChart.extend("sap.viz.ui5.Combination", /** @lends sap.viz.ui5.Combination.prototype */ { metadata : {

		library : "sap.viz",


		aggregations : {

			/**
			 * Module sap.viz.modules.rootContainer
			 */
			general : {type : "sap.viz.ui5.types.RootContainer", multiple : false},

			/**
			 * Module sap.viz.modules.controller.interaction
			 */
			interaction : {type : "sap.viz.ui5.types.controller.Interaction", multiple : false},

			/**
			 * Module sap.viz.modules.title
			 */
			title : {type : "sap.viz.ui5.types.Title", multiple : false},

			/**
			 * Module sap.viz.modules.legend
			 */
			legendGroup : {type : "sap.viz.ui5.types.Legend", multiple : false},

			/**
			 * Module sap.viz.modules.legend.common
			 */
			legend : {type : "sap.viz.ui5.types.legend.Common", multiple : false},

			/**
			 * Module sap.viz.chart.elements.Tooltip
			 */
			toolTip : {type : "sap.viz.ui5.types.Tooltip", multiple : false},

			/**
			 * Module sap.viz.modules.xycontainer
			 */
			xyContainer : {type : "sap.viz.ui5.types.XYContainer", multiple : false},

			/**
			 * Module sap.viz.modules.datalabel
			 */
			dataLabel : {type : "sap.viz.ui5.types.Datalabel", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			yAxis : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			xAxis : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.background
			 */
			background : {type : "sap.viz.ui5.types.Background", multiple : false},

			/**
			 * Module sap.viz.modules.combination
			 */
			plotArea : {type : "sap.viz.ui5.types.Combination", multiple : false}
		},

		events : {

			/**
			 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
			 * //selected element's detail
			 * target:"Dom Element",//an object pointed to corresponding dom element
			 * data:[{val: "...",//value of this element
			 * ctx:{type:"Dimension"||"Measure"||"MND",
			 * //for Dimension
			 * path:{aa:"...",di:"...",dii:"..."},
			 * //for Measure
			 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
			 * //for MND
			 * path:{mg:"...",mi:"..."}
			 * //path: analysis path
			 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
			 * //di: dimension index //zero based
			 * //dii: dimension item index //zero based
			 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
			 * //mi: measure index // measure index in measure group zero based
			 * //dii_a1: each dii of di in analysis axis 1 index
			 * //dii_a2: each dii of di in analysis axis 2 index
			 * }},{
			 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
			 * var:"...",ctx:"..."}]},{
			 * //if under multi selection, there will be more than one selected elements
			 * target:"...",data:["..."]}]}
			 */
			selectData : {},

			/**
			 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
			 */
			deselectData : {},

			/**
			 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
			 * //All measures
			 * name:"...",val:[{//measure value is an array containing only one item
			 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
			 * //this object specifies the plot area of the chart
			 * height:"...",width:"...",x:"...",y:"..."},point:{
			 * //this object specifies a point which affects the position of tooltip
			 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			showTooltip : {deprecated: true},

			/**
			 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			hideTooltip : {deprecated: true},

			/**
			 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
			 */
			initialized : {}
		},

		vizChartType: "viz/combination"

	}});


	return Combination;

});

}; // end of sap/viz/ui5/Combination.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.Donut') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides control sap.viz.ui5.Donut.
jQuery.sap.declare('sap.viz.ui5.Donut'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/Donut",['sap/viz/library', './core/BaseChart'],
	function(library, BaseChart) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.Donut
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Chart sap.viz.ui5.Donut
	 * @extends sap.viz.ui5.core.BaseChart
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame}</b>(<code>new sap.viz.ui5.controls.VizFrame({'vizType': 'donut'})</code>)
	 * <b>control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.Donut
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Donut = BaseChart.extend("sap.viz.ui5.Donut", /** @lends sap.viz.ui5.Donut.prototype */ { metadata : {

		library : "sap.viz",


		aggregations : {

			/**
			 * Module sap.viz.modules.rootContainer
			 */
			general : {type : "sap.viz.ui5.types.RootContainer", multiple : false},

			/**
			 * Module sap.viz.modules.title
			 */
			title : {type : "sap.viz.ui5.types.Title", multiple : false},

			/**
			 * Module sap.viz.modules.legend
			 */
			legendGroup : {type : "sap.viz.ui5.types.Legend", multiple : false},

			/**
			 * Module sap.viz.modules.legend.common
			 */
			legend : {type : "sap.viz.ui5.types.legend.Common", multiple : false},

			/**
			 * Module sap.viz.modules.xycontainer
			 */
			xyContainer : {type : "sap.viz.ui5.types.XYContainer", multiple : false},

			/**
			 * Module sap.viz.modules.pie
			 */
			plotArea : {type : "sap.viz.ui5.types.Pie", multiple : false},

			/**
			 * Module sap.viz.modules.datalabel
			 */
			dataLabel : {type : "sap.viz.ui5.types.Datalabel", multiple : false},

			/**
			 * Module sap.viz.modules.controller.interaction
			 */
			interaction : {type : "sap.viz.ui5.types.controller.Interaction", multiple : false},

			/**
			 * Module sap.viz.chart.elements.Tooltip
			 */
			toolTip : {type : "sap.viz.ui5.types.Tooltip", multiple : false},

			/**
			 * Module sap.viz.modules.datatransform
			 */
			dataTransform : {type : "sap.viz.ui5.types.Datatransform", multiple : false}
		},

		events : {

			/**
			 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
			 * //selected element's detail
			 * target:"Dom Element",//an object pointed to corresponding dom element
			 * data:[{val: "...",//value of this element
			 * ctx:{type:"Dimension"||"Measure"||"MND",
			 * //for Dimension
			 * path:{aa:"...",di:"...",dii:"..."},
			 * //for Measure
			 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
			 * //for MND
			 * path:{mg:"...",mi:"..."}
			 * //path: analysis path
			 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
			 * //di: dimension index //zero based
			 * //dii: dimension item index //zero based
			 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
			 * //mi: measure index // measure index in measure group zero based
			 * //dii_a1: each dii of di in analysis axis 1 index
			 * //dii_a2: each dii of di in analysis axis 2 index
			 * }},{
			 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
			 * var:"...",ctx:"..."}]},{
			 * //if under multi selection, there will be more than one selected elements
			 * target:"...",data:["..."]}]}
			 */
			selectData : {},

			/**
			 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
			 */
			deselectData : {},

			/**
			 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
			 * //All measures
			 * name:"...",val:[{//measure value is an array containing only one item
			 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
			 * //this object specifies the plot area of the chart
			 * height:"...",width:"...",x:"...",y:"..."},point:{
			 * //this object specifies a point which affects the position of tooltip
			 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			showTooltip : {deprecated: true},

			/**
			 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			hideTooltip : {deprecated: true},

			/**
			 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
			 */
			initialized : {}
		},

		vizChartType: "viz/donut"

	}});


	return Donut;

});

}; // end of sap/viz/ui5/Donut.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.DualBar') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides control sap.viz.ui5.DualBar.
jQuery.sap.declare('sap.viz.ui5.DualBar'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/DualBar",['sap/viz/library', './core/BaseChart'],
	function(library, BaseChart) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.DualBar
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Chart sap.viz.ui5.DualBar
	 * @extends sap.viz.ui5.core.BaseChart
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame}</b>(<code>new sap.viz.ui5.controls.VizFrame({'vizType': 'dual_bar'})</code>)
	 * <b>control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.DualBar
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var DualBar = BaseChart.extend("sap.viz.ui5.DualBar", /** @lends sap.viz.ui5.DualBar.prototype */ { metadata : {

		library : "sap.viz",


		aggregations : {

			/**
			 * Module sap.viz.modules.rootContainer
			 */
			general : {type : "sap.viz.ui5.types.RootContainer", multiple : false},

			/**
			 * Module sap.viz.modules.controller.interaction
			 */
			interaction : {type : "sap.viz.ui5.types.controller.Interaction", multiple : false},

			/**
			 * Module sap.viz.modules.title
			 */
			title : {type : "sap.viz.ui5.types.Title", multiple : false},

			/**
			 * Module sap.viz.modules.legend
			 */
			legendGroup : {type : "sap.viz.ui5.types.Legend", multiple : false},

			/**
			 * Module sap.viz.modules.legend.common
			 */
			legend : {type : "sap.viz.ui5.types.legend.Common", multiple : false},

			/**
			 * Module sap.viz.chart.elements.Tooltip
			 */
			toolTip : {type : "sap.viz.ui5.types.Tooltip", multiple : false},

			/**
			 * Module sap.viz.modules.xycontainer
			 */
			xyContainer : {type : "sap.viz.ui5.types.XYContainer", multiple : false},

			/**
			 * Module sap.viz.modules.datalabel
			 */
			dataLabel : {type : "sap.viz.ui5.types.Datalabel", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			xAxis : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			yAxis : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.background
			 */
			background : {type : "sap.viz.ui5.types.Background", multiple : false},

			/**
			 * Module sap.viz.modules.bar
			 */
			plotArea : {type : "sap.viz.ui5.types.Bar", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			xAxis2 : {type : "sap.viz.ui5.types.Axis", multiple : false}
		},

		events : {

			/**
			 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
			 * //selected element's detail
			 * target:"Dom Element",//an object pointed to corresponding dom element
			 * data:[{val: "...",//value of this element
			 * ctx:{type:"Dimension"||"Measure"||"MND",
			 * //for Dimension
			 * path:{aa:"...",di:"...",dii:"..."},
			 * //for Measure
			 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
			 * //for MND
			 * path:{mg:"...",mi:"..."}
			 * //path: analysis path
			 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
			 * //di: dimension index //zero based
			 * //dii: dimension item index //zero based
			 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
			 * //mi: measure index // measure index in measure group zero based
			 * //dii_a1: each dii of di in analysis axis 1 index
			 * //dii_a2: each dii of di in analysis axis 2 index
			 * }},{
			 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
			 * var:"...",ctx:"..."}]},{
			 * //if under multi selection, there will be more than one selected elements
			 * target:"...",data:["..."]}]}
			 */
			selectData : {},

			/**
			 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
			 */
			deselectData : {},

			/**
			 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
			 * //All measures
			 * name:"...",val:[{//measure value is an array containing only one item
			 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
			 * //this object specifies the plot area of the chart
			 * height:"...",width:"...",x:"...",y:"..."},point:{
			 * //this object specifies a point which affects the position of tooltip
			 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			showTooltip : {deprecated: true},

			/**
			 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			hideTooltip : {deprecated: true},

			/**
			 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
			 */
			initialized : {}
		},

		vizChartType: "viz/dual_bar"

	}});


	return DualBar;

});

}; // end of sap/viz/ui5/DualBar.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.DualColumn') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides control sap.viz.ui5.DualColumn.
jQuery.sap.declare('sap.viz.ui5.DualColumn'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/DualColumn",['sap/viz/library', './core/BaseChart'],
	function(library, BaseChart) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.DualColumn
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Chart sap.viz.ui5.DualColumn
	 * @extends sap.viz.ui5.core.BaseChart
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame}</b>(<code>new sap.viz.ui5.controls.VizFrame({'vizType': 'dual_column'})</code>)
	 * <b>control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.DualColumn
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var DualColumn = BaseChart.extend("sap.viz.ui5.DualColumn", /** @lends sap.viz.ui5.DualColumn.prototype */ { metadata : {

		library : "sap.viz",


		aggregations : {

			/**
			 * Module sap.viz.modules.rootContainer
			 */
			general : {type : "sap.viz.ui5.types.RootContainer", multiple : false},

			/**
			 * Module sap.viz.modules.controller.interaction
			 */
			interaction : {type : "sap.viz.ui5.types.controller.Interaction", multiple : false},

			/**
			 * Module sap.viz.modules.title
			 */
			title : {type : "sap.viz.ui5.types.Title", multiple : false},

			/**
			 * Module sap.viz.modules.legend
			 */
			legendGroup : {type : "sap.viz.ui5.types.Legend", multiple : false},

			/**
			 * Module sap.viz.modules.legend.common
			 */
			legend : {type : "sap.viz.ui5.types.legend.Common", multiple : false},

			/**
			 * Module sap.viz.chart.elements.Tooltip
			 */
			toolTip : {type : "sap.viz.ui5.types.Tooltip", multiple : false},

			/**
			 * Module sap.viz.modules.xycontainer
			 */
			xyContainer : {type : "sap.viz.ui5.types.XYContainer", multiple : false},

			/**
			 * Module sap.viz.modules.datalabel
			 */
			dataLabel : {type : "sap.viz.ui5.types.Datalabel", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			yAxis : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			xAxis : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.background
			 */
			background : {type : "sap.viz.ui5.types.Background", multiple : false},

			/**
			 * Module sap.viz.modules.verticalbar
			 */
			plotArea : {type : "sap.viz.ui5.types.VerticalBar", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			yAxis2 : {type : "sap.viz.ui5.types.Axis", multiple : false}
		},

		events : {

			/**
			 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
			 * //selected element's detail
			 * target:"Dom Element",//an object pointed to corresponding dom element
			 * data:[{val: "...",//value of this element
			 * ctx:{type:"Dimension"||"Measure"||"MND",
			 * //for Dimension
			 * path:{aa:"...",di:"...",dii:"..."},
			 * //for Measure
			 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
			 * //for MND
			 * path:{mg:"...",mi:"..."}
			 * //path: analysis path
			 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
			 * //di: dimension index //zero based
			 * //dii: dimension item index //zero based
			 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
			 * //mi: measure index // measure index in measure group zero based
			 * //dii_a1: each dii of di in analysis axis 1 index
			 * //dii_a2: each dii of di in analysis axis 2 index
			 * }},{
			 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
			 * var:"...",ctx:"..."}]},{
			 * //if under multi selection, there will be more than one selected elements
			 * target:"...",data:["..."]}]}
			 */
			selectData : {},

			/**
			 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
			 */
			deselectData : {},

			/**
			 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
			 * //All measures
			 * name:"...",val:[{//measure value is an array containing only one item
			 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
			 * //this object specifies the plot area of the chart
			 * height:"...",width:"...",x:"...",y:"..."},point:{
			 * //this object specifies a point which affects the position of tooltip
			 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			showTooltip : {deprecated: true},

			/**
			 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			hideTooltip : {deprecated: true},

			/**
			 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
			 */
			initialized : {}
		},

		vizChartType: "viz/dual_column"

	}});


	return DualColumn;

});

}; // end of sap/viz/ui5/DualColumn.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.DualCombination') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides control sap.viz.ui5.DualCombination.
jQuery.sap.declare('sap.viz.ui5.DualCombination'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/DualCombination",['sap/viz/library', './core/BaseChart'],
	function(library, BaseChart) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.DualCombination
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Chart sap.viz.ui5.DualCombination
	 * @extends sap.viz.ui5.core.BaseChart
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.DualCombination
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var DualCombination = BaseChart.extend("sap.viz.ui5.DualCombination", /** @lends sap.viz.ui5.DualCombination.prototype */ { metadata : {

		library : "sap.viz",


		aggregations : {

			/**
			 * Module sap.viz.modules.rootContainer
			 */
			general : {type : "sap.viz.ui5.types.RootContainer", multiple : false},

			/**
			 * Module sap.viz.modules.controller.interaction
			 */
			interaction : {type : "sap.viz.ui5.types.controller.Interaction", multiple : false},

			/**
			 * Module sap.viz.modules.title
			 */
			title : {type : "sap.viz.ui5.types.Title", multiple : false},

			/**
			 * Module sap.viz.modules.legend
			 */
			legendGroup : {type : "sap.viz.ui5.types.Legend", multiple : false},

			/**
			 * Module sap.viz.modules.legend.common
			 */
			legend : {type : "sap.viz.ui5.types.legend.Common", multiple : false},

			/**
			 * Module sap.viz.chart.elements.Tooltip
			 */
			toolTip : {type : "sap.viz.ui5.types.Tooltip", multiple : false},

			/**
			 * Module sap.viz.modules.xycontainer
			 */
			xyContainer : {type : "sap.viz.ui5.types.XYContainer", multiple : false},

			/**
			 * Module sap.viz.modules.datalabel
			 */
			dataLabel : {type : "sap.viz.ui5.types.Datalabel", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			yAxis : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			xAxis : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.background
			 */
			background : {type : "sap.viz.ui5.types.Background", multiple : false},

			/**
			 * Module sap.viz.modules.combination
			 */
			plotArea : {type : "sap.viz.ui5.types.Combination", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			yAxis2 : {type : "sap.viz.ui5.types.Axis", multiple : false}
		},

		events : {

			/**
			 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
			 * //selected element's detail
			 * target:"Dom Element",//an object pointed to corresponding dom element
			 * data:[{val: "...",//value of this element
			 * ctx:{type:"Dimension"||"Measure"||"MND",
			 * //for Dimension
			 * path:{aa:"...",di:"...",dii:"..."},
			 * //for Measure
			 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
			 * //for MND
			 * path:{mg:"...",mi:"..."}
			 * //path: analysis path
			 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
			 * //di: dimension index //zero based
			 * //dii: dimension item index //zero based
			 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
			 * //mi: measure index // measure index in measure group zero based
			 * //dii_a1: each dii of di in analysis axis 1 index
			 * //dii_a2: each dii of di in analysis axis 2 index
			 * }},{
			 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
			 * var:"...",ctx:"..."}]},{
			 * //if under multi selection, there will be more than one selected elements
			 * target:"...",data:["..."]}]}
			 */
			selectData : {},

			/**
			 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
			 */
			deselectData : {},

			/**
			 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
			 * //All measures
			 * name:"...",val:[{//measure value is an array containing only one item
			 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
			 * //this object specifies the plot area of the chart
			 * height:"...",width:"...",x:"...",y:"..."},point:{
			 * //this object specifies a point which affects the position of tooltip
			 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			showTooltip : {deprecated: true},

			/**
			 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			hideTooltip : {deprecated: true},

			/**
			 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
			 */
			initialized : {}
		},

		vizChartType: "viz/dual_combination"

	}});


	return DualCombination;

});

}; // end of sap/viz/ui5/DualCombination.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.DualLine') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides control sap.viz.ui5.DualLine.
jQuery.sap.declare('sap.viz.ui5.DualLine'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/DualLine",['sap/viz/library', './core/BaseChart'],
	function(library, BaseChart) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.DualLine
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Chart sap.viz.ui5.DualLine
	 * @extends sap.viz.ui5.core.BaseChart
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame}</b>(<code>new sap.viz.ui5.controls.VizFrame({'vizType': 'dual_line'})</code>)
	 * <b>control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.DualLine
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var DualLine = BaseChart.extend("sap.viz.ui5.DualLine", /** @lends sap.viz.ui5.DualLine.prototype */ { metadata : {

		library : "sap.viz",


		aggregations : {

			/**
			 * Module sap.viz.modules.rootContainer
			 */
			general : {type : "sap.viz.ui5.types.RootContainer", multiple : false},

			/**
			 * Module sap.viz.modules.controller.interaction
			 */
			interaction : {type : "sap.viz.ui5.types.controller.Interaction", multiple : false},

			/**
			 * Module sap.viz.modules.title
			 */
			title : {type : "sap.viz.ui5.types.Title", multiple : false},

			/**
			 * Module sap.viz.modules.legend
			 */
			legendGroup : {type : "sap.viz.ui5.types.Legend", multiple : false},

			/**
			 * Module sap.viz.modules.legend.common
			 */
			legend : {type : "sap.viz.ui5.types.legend.Common", multiple : false},

			/**
			 * Module sap.viz.chart.elements.Tooltip
			 */
			toolTip : {type : "sap.viz.ui5.types.Tooltip", multiple : false},

			/**
			 * Module sap.viz.modules.xycontainer
			 */
			xyContainer : {type : "sap.viz.ui5.types.XYContainer", multiple : false},

			/**
			 * Module sap.viz.modules.datalabel
			 */
			dataLabel : {type : "sap.viz.ui5.types.Datalabel", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			yAxis : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			xAxis : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.background
			 */
			background : {type : "sap.viz.ui5.types.Background", multiple : false},

			/**
			 * Module sap.viz.modules.line
			 */
			plotArea : {type : "sap.viz.ui5.types.Line", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			yAxis2 : {type : "sap.viz.ui5.types.Axis", multiple : false}
		},

		events : {

			/**
			 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
			 * //selected element's detail
			 * target:"Dom Element",//an object pointed to corresponding dom element
			 * data:[{val: "...",//value of this element
			 * ctx:{type:"Dimension"||"Measure"||"MND",
			 * //for Dimension
			 * path:{aa:"...",di:"...",dii:"..."},
			 * //for Measure
			 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
			 * //for MND
			 * path:{mg:"...",mi:"..."}
			 * //path: analysis path
			 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
			 * //di: dimension index //zero based
			 * //dii: dimension item index //zero based
			 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
			 * //mi: measure index // measure index in measure group zero based
			 * //dii_a1: each dii of di in analysis axis 1 index
			 * //dii_a2: each dii of di in analysis axis 2 index
			 * }},{
			 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
			 * var:"...",ctx:"..."}]},{
			 * //if under multi selection, there will be more than one selected elements
			 * target:"...",data:["..."]}]}
			 */
			selectData : {},

			/**
			 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
			 */
			deselectData : {},

			/**
			 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
			 * //All measures
			 * name:"...",val:[{//measure value is an array containing only one item
			 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
			 * //this object specifies the plot area of the chart
			 * height:"...",width:"...",x:"...",y:"..."},point:{
			 * //this object specifies a point which affects the position of tooltip
			 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			showTooltip : {deprecated: true},

			/**
			 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			hideTooltip : {deprecated: true},

			/**
			 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
			 */
			initialized : {}
		},

		vizChartType: "viz/dual_line"

	}});


	return DualLine;

});

}; // end of sap/viz/ui5/DualLine.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.DualStackedColumn') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides control sap.viz.ui5.DualStackedColumn.
jQuery.sap.declare('sap.viz.ui5.DualStackedColumn'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/DualStackedColumn",['sap/viz/library', './core/BaseChart'],
	function(library, BaseChart) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.DualStackedColumn
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Chart sap.viz.ui5.DualStackedColumn
	 * @extends sap.viz.ui5.core.BaseChart
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame}</b>(<code>new sap.viz.ui5.controls.VizFrame({'vizType': 'dual_stacked_column'})</code>)
	 * <b>control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.DualStackedColumn
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var DualStackedColumn = BaseChart.extend("sap.viz.ui5.DualStackedColumn", /** @lends sap.viz.ui5.DualStackedColumn.prototype */ { metadata : {

		library : "sap.viz",


		aggregations : {

			/**
			 * Module sap.viz.modules.rootContainer
			 */
			general : {type : "sap.viz.ui5.types.RootContainer", multiple : false},

			/**
			 * Module sap.viz.modules.controller.interaction
			 */
			interaction : {type : "sap.viz.ui5.types.controller.Interaction", multiple : false},

			/**
			 * Module sap.viz.modules.title
			 */
			title : {type : "sap.viz.ui5.types.Title", multiple : false},

			/**
			 * Module sap.viz.modules.legend
			 */
			legendGroup : {type : "sap.viz.ui5.types.Legend", multiple : false},

			/**
			 * Module sap.viz.modules.legend.common
			 */
			legend : {type : "sap.viz.ui5.types.legend.Common", multiple : false},

			/**
			 * Module sap.viz.chart.elements.Tooltip
			 */
			toolTip : {type : "sap.viz.ui5.types.Tooltip", multiple : false},

			/**
			 * Module sap.viz.modules.xycontainer
			 */
			xyContainer : {type : "sap.viz.ui5.types.XYContainer", multiple : false},

			/**
			 * Module sap.viz.modules.datalabel
			 */
			dataLabel : {type : "sap.viz.ui5.types.Datalabel", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			yAxis : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			xAxis : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.background
			 */
			background : {type : "sap.viz.ui5.types.Background", multiple : false},

			/**
			 * Module sap.viz.modules.stackedverticalbar
			 */
			plotArea : {type : "sap.viz.ui5.types.StackedVerticalBar", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			yAxis2 : {type : "sap.viz.ui5.types.Axis", multiple : false}
		},

		events : {

			/**
			 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
			 * //selected element's detail
			 * target:"Dom Element",//an object pointed to corresponding dom element
			 * data:[{val: "...",//value of this element
			 * ctx:{type:"Dimension"||"Measure"||"MND",
			 * //for Dimension
			 * path:{aa:"...",di:"...",dii:"..."},
			 * //for Measure
			 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
			 * //for MND
			 * path:{mg:"...",mi:"..."}
			 * //path: analysis path
			 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
			 * //di: dimension index //zero based
			 * //dii: dimension item index //zero based
			 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
			 * //mi: measure index // measure index in measure group zero based
			 * //dii_a1: each dii of di in analysis axis 1 index
			 * //dii_a2: each dii of di in analysis axis 2 index
			 * }},{
			 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
			 * var:"...",ctx:"..."}]},{
			 * //if under multi selection, there will be more than one selected elements
			 * target:"...",data:["..."]}]}
			 */
			selectData : {},

			/**
			 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
			 */
			deselectData : {},

			/**
			 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
			 * //All measures
			 * name:"...",val:[{//measure value is an array containing only one item
			 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
			 * //this object specifies the plot area of the chart
			 * height:"...",width:"...",x:"...",y:"..."},point:{
			 * //this object specifies a point which affects the position of tooltip
			 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			showTooltip : {deprecated: true},

			/**
			 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			hideTooltip : {deprecated: true},

			/**
			 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
			 */
			initialized : {}
		},

		vizChartType: "viz/dual_stacked_column"

	}});


	return DualStackedColumn;

});

}; // end of sap/viz/ui5/DualStackedColumn.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.DualStackedColumn100') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides control sap.viz.ui5.DualStackedColumn100.
jQuery.sap.declare('sap.viz.ui5.DualStackedColumn100'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/DualStackedColumn100",['sap/viz/library', './core/BaseChart'],
	function(library, BaseChart) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.DualStackedColumn100
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Chart sap.viz.ui5.DualStackedColumn100
	 * @extends sap.viz.ui5.core.BaseChart
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame}</b>(<code>new sap.viz.ui5.controls.VizFrame({'vizType': '100_dual_stacked_column'})</code>)
	 * <b>control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.DualStackedColumn100
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var DualStackedColumn100 = BaseChart.extend("sap.viz.ui5.DualStackedColumn100", /** @lends sap.viz.ui5.DualStackedColumn100.prototype */ { metadata : {

		library : "sap.viz",


		aggregations : {

			/**
			 * Module sap.viz.modules.rootContainer
			 */
			general : {type : "sap.viz.ui5.types.RootContainer", multiple : false},

			/**
			 * Module sap.viz.modules.controller.interaction
			 */
			interaction : {type : "sap.viz.ui5.types.controller.Interaction", multiple : false},

			/**
			 * Module sap.viz.modules.title
			 */
			title : {type : "sap.viz.ui5.types.Title", multiple : false},

			/**
			 * Module sap.viz.modules.legend
			 */
			legendGroup : {type : "sap.viz.ui5.types.Legend", multiple : false},

			/**
			 * Module sap.viz.modules.legend.common
			 */
			legend : {type : "sap.viz.ui5.types.legend.Common", multiple : false},

			/**
			 * Module sap.viz.chart.elements.Tooltip
			 */
			toolTip : {type : "sap.viz.ui5.types.Tooltip", multiple : false},

			/**
			 * Module sap.viz.modules.xycontainer
			 */
			xyContainer : {type : "sap.viz.ui5.types.XYContainer", multiple : false},

			/**
			 * Module sap.viz.modules.datalabel
			 */
			dataLabel : {type : "sap.viz.ui5.types.Datalabel", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			yAxis : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			xAxis : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.background
			 */
			background : {type : "sap.viz.ui5.types.Background", multiple : false},

			/**
			 * Module sap.viz.modules.stackedverticalbar
			 */
			plotArea : {type : "sap.viz.ui5.types.StackedVerticalBar", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			yAxis2 : {type : "sap.viz.ui5.types.Axis", multiple : false}
		},

		events : {

			/**
			 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
			 * //selected element's detail
			 * target:"Dom Element",//an object pointed to corresponding dom element
			 * data:[{val: "...",//value of this element
			 * ctx:{type:"Dimension"||"Measure"||"MND",
			 * //for Dimension
			 * path:{aa:"...",di:"...",dii:"..."},
			 * //for Measure
			 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
			 * //for MND
			 * path:{mg:"...",mi:"..."}
			 * //path: analysis path
			 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
			 * //di: dimension index //zero based
			 * //dii: dimension item index //zero based
			 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
			 * //mi: measure index // measure index in measure group zero based
			 * //dii_a1: each dii of di in analysis axis 1 index
			 * //dii_a2: each dii of di in analysis axis 2 index
			 * }},{
			 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
			 * var:"...",ctx:"..."}]},{
			 * //if under multi selection, there will be more than one selected elements
			 * target:"...",data:["..."]}]}
			 */
			selectData : {},

			/**
			 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
			 */
			deselectData : {},

			/**
			 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
			 * //All measures
			 * name:"...",val:[{//measure value is an array containing only one item
			 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
			 * //this object specifies the plot area of the chart
			 * height:"...",width:"...",x:"...",y:"..."},point:{
			 * //this object specifies a point which affects the position of tooltip
			 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			showTooltip : {deprecated: true},

			/**
			 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			hideTooltip : {deprecated: true},

			/**
			 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
			 */
			initialized : {}
		},

		vizChartType: "viz/100_dual_stacked_column"

	}});


	return DualStackedColumn100;

});

}; // end of sap/viz/ui5/DualStackedColumn100.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.Heatmap') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides control sap.viz.ui5.Heatmap.
jQuery.sap.declare('sap.viz.ui5.Heatmap'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/Heatmap",['sap/viz/library', './core/BaseChart'],
	function(library, BaseChart) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.Heatmap
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Chart sap.viz.ui5.Heatmap
	 * @extends sap.viz.ui5.core.BaseChart
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame}</b>(<code>new sap.viz.ui5.controls.VizFrame({'vizType': 'heatmap'})</code>)
	 * <b>control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.Heatmap
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Heatmap = BaseChart.extend("sap.viz.ui5.Heatmap", /** @lends sap.viz.ui5.Heatmap.prototype */ { metadata : {

		library : "sap.viz",


		aggregations : {

			/**
			 * Module sap.viz.modules.rootContainer
			 */
			general : {type : "sap.viz.ui5.types.RootContainer", multiple : false},

			/**
			 * Module sap.viz.modules.title
			 */
			title : {type : "sap.viz.ui5.types.Title", multiple : false},

			/**
			 * Module sap.viz.modules.legend
			 */
			legendGroup : {type : "sap.viz.ui5.types.Legend", multiple : false},

			/**
			 * Module sap.viz.modules.legend.common
			 */
			legend : {type : "sap.viz.ui5.types.legend.Common", multiple : false},

			/**
			 * Module sap.viz.modules.xycontainer
			 */
			xyContainer : {type : "sap.viz.ui5.types.XYContainer", multiple : false},

			/**
			 * Module sap.viz.modules.datalabel
			 */
			dataLabel : {type : "sap.viz.ui5.types.Datalabel", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			xAxis : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			yAxis : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.heatmap
			 */
			plotArea : {type : "sap.viz.ui5.types.Heatmap", multiple : false},

			/**
			 * Module sap.viz.chart.elements.Tooltip
			 */
			toolTip : {type : "sap.viz.ui5.types.Tooltip", multiple : false},

			/**
			 * Module sap.viz.modules.controller.interaction
			 */
			interaction : {type : "sap.viz.ui5.types.controller.Interaction", multiple : false}
		},

		events : {

			/**
			 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
			 * //selected element's detail
			 * target:"Dom Element",//an object pointed to corresponding dom element
			 * data:[{val: "...",//value of this element
			 * ctx:{type:"Dimension"||"Measure"||"MND",
			 * //for Dimension
			 * path:{aa:"...",di:"...",dii:"..."},
			 * //for Measure
			 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
			 * //for MND
			 * path:{mg:"...",mi:"..."}
			 * //path: analysis path
			 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
			 * //di: dimension index //zero based
			 * //dii: dimension item index //zero based
			 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
			 * //mi: measure index // measure index in measure group zero based
			 * //dii_a1: each dii of di in analysis axis 1 index
			 * //dii_a2: each dii of di in analysis axis 2 index
			 * }},{
			 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
			 * var:"...",ctx:"..."}]},{
			 * //if under multi selection, there will be more than one selected elements
			 * target:"...",data:["..."]}]}
			 */
			selectData : {},

			/**
			 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
			 */
			deselectData : {},

			/**
			 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
			 * //All measures
			 * name:"...",val:[{//measure value is an array containing only one item
			 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
			 * //this object specifies the plot area of the chart
			 * height:"...",width:"...",x:"...",y:"..."},point:{
			 * //this object specifies a point which affects the position of tooltip
			 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			showTooltip : {deprecated: true},

			/**
			 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			hideTooltip : {deprecated: true},

			/**
			 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
			 */
			initialized : {}
		},

		vizChartType: "viz/heatmap"

	}});


	return Heatmap;

});

}; // end of sap/viz/ui5/Heatmap.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.HorizontalArea') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides control sap.viz.ui5.HorizontalArea.
jQuery.sap.declare('sap.viz.ui5.HorizontalArea'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/HorizontalArea",['sap/viz/library', './core/BaseChart'],
	function(library, BaseChart) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.HorizontalArea
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Chart sap.viz.ui5.HorizontalArea
	 * @extends sap.viz.ui5.core.BaseChart
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.HorizontalArea
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var HorizontalArea = BaseChart.extend("sap.viz.ui5.HorizontalArea", /** @lends sap.viz.ui5.HorizontalArea.prototype */ { metadata : {

		library : "sap.viz",


		aggregations : {

			/**
			 * Module sap.viz.modules.rootContainer
			 */
			general : {type : "sap.viz.ui5.types.RootContainer", multiple : false},

			/**
			 * Module sap.viz.modules.controller.interaction
			 */
			interaction : {type : "sap.viz.ui5.types.controller.Interaction", multiple : false},

			/**
			 * Module sap.viz.modules.title
			 */
			title : {type : "sap.viz.ui5.types.Title", multiple : false},

			/**
			 * Module sap.viz.modules.legend
			 */
			legendGroup : {type : "sap.viz.ui5.types.Legend", multiple : false},

			/**
			 * Module sap.viz.modules.legend.common
			 */
			legend : {type : "sap.viz.ui5.types.legend.Common", multiple : false},

			/**
			 * Module sap.viz.chart.elements.Tooltip
			 */
			toolTip : {type : "sap.viz.ui5.types.Tooltip", multiple : false},

			/**
			 * Module sap.viz.modules.xycontainer
			 */
			xyContainer : {type : "sap.viz.ui5.types.XYContainer", multiple : false},

			/**
			 * Module sap.viz.modules.datalabel
			 */
			dataLabel : {type : "sap.viz.ui5.types.Datalabel", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			xAxis : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			yAxis : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.background
			 */
			background : {type : "sap.viz.ui5.types.Background", multiple : false},

			/**
			 * Module sap.viz.modules.area
			 */
			plotArea : {type : "sap.viz.ui5.types.Area", multiple : false}
		},

		events : {

			/**
			 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
			 * //selected element's detail
			 * target:"Dom Element",//an object pointed to corresponding dom element
			 * data:[{val: "...",//value of this element
			 * ctx:{type:"Dimension"||"Measure"||"MND",
			 * //for Dimension
			 * path:{aa:"...",di:"...",dii:"..."},
			 * //for Measure
			 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
			 * //for MND
			 * path:{mg:"...",mi:"..."}
			 * //path: analysis path
			 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
			 * //di: dimension index //zero based
			 * //dii: dimension item index //zero based
			 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
			 * //mi: measure index // measure index in measure group zero based
			 * //dii_a1: each dii of di in analysis axis 1 index
			 * //dii_a2: each dii of di in analysis axis 2 index
			 * }},{
			 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
			 * var:"...",ctx:"..."}]},{
			 * //if under multi selection, there will be more than one selected elements
			 * target:"...",data:["..."]}]}
			 */
			selectData : {},

			/**
			 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
			 */
			deselectData : {},

			/**
			 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
			 * //All measures
			 * name:"...",val:[{//measure value is an array containing only one item
			 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
			 * //this object specifies the plot area of the chart
			 * height:"...",width:"...",x:"...",y:"..."},point:{
			 * //this object specifies a point which affects the position of tooltip
			 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			showTooltip : {deprecated: true},

			/**
			 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			hideTooltip : {deprecated: true},

			/**
			 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
			 */
			initialized : {}
		},

		vizChartType: "viz/horizontal_area"

	}});


	return HorizontalArea;

});

}; // end of sap/viz/ui5/HorizontalArea.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.HorizontalArea100') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides control sap.viz.ui5.HorizontalArea100.
jQuery.sap.declare('sap.viz.ui5.HorizontalArea100'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/HorizontalArea100",['sap/viz/library', './core/BaseChart'],
	function(library, BaseChart) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.HorizontalArea100
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Chart sap.viz.ui5.HorizontalArea100
	 * @extends sap.viz.ui5.core.BaseChart
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.HorizontalArea100
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var HorizontalArea100 = BaseChart.extend("sap.viz.ui5.HorizontalArea100", /** @lends sap.viz.ui5.HorizontalArea100.prototype */ { metadata : {

		library : "sap.viz",


		aggregations : {

			/**
			 * Module sap.viz.modules.rootContainer
			 */
			general : {type : "sap.viz.ui5.types.RootContainer", multiple : false},

			/**
			 * Module sap.viz.modules.controller.interaction
			 */
			interaction : {type : "sap.viz.ui5.types.controller.Interaction", multiple : false},

			/**
			 * Module sap.viz.modules.title
			 */
			title : {type : "sap.viz.ui5.types.Title", multiple : false},

			/**
			 * Module sap.viz.modules.legend
			 */
			legendGroup : {type : "sap.viz.ui5.types.Legend", multiple : false},

			/**
			 * Module sap.viz.modules.legend.common
			 */
			legend : {type : "sap.viz.ui5.types.legend.Common", multiple : false},

			/**
			 * Module sap.viz.chart.elements.Tooltip
			 */
			toolTip : {type : "sap.viz.ui5.types.Tooltip", multiple : false},

			/**
			 * Module sap.viz.modules.xycontainer
			 */
			xyContainer : {type : "sap.viz.ui5.types.XYContainer", multiple : false},

			/**
			 * Module sap.viz.modules.datalabel
			 */
			dataLabel : {type : "sap.viz.ui5.types.Datalabel", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			xAxis : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			yAxis : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.background
			 */
			background : {type : "sap.viz.ui5.types.Background", multiple : false},

			/**
			 * Module sap.viz.modules.area
			 */
			plotArea : {type : "sap.viz.ui5.types.Area", multiple : false}
		},

		events : {

			/**
			 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
			 * //selected element's detail
			 * target:"Dom Element",//an object pointed to corresponding dom element
			 * data:[{val: "...",//value of this element
			 * ctx:{type:"Dimension"||"Measure"||"MND",
			 * //for Dimension
			 * path:{aa:"...",di:"...",dii:"..."},
			 * //for Measure
			 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
			 * //for MND
			 * path:{mg:"...",mi:"..."}
			 * //path: analysis path
			 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
			 * //di: dimension index //zero based
			 * //dii: dimension item index //zero based
			 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
			 * //mi: measure index // measure index in measure group zero based
			 * //dii_a1: each dii of di in analysis axis 1 index
			 * //dii_a2: each dii of di in analysis axis 2 index
			 * }},{
			 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
			 * var:"...",ctx:"..."}]},{
			 * //if under multi selection, there will be more than one selected elements
			 * target:"...",data:["..."]}]}
			 */
			selectData : {},

			/**
			 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
			 */
			deselectData : {},

			/**
			 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
			 * //All measures
			 * name:"...",val:[{//measure value is an array containing only one item
			 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
			 * //this object specifies the plot area of the chart
			 * height:"...",width:"...",x:"...",y:"..."},point:{
			 * //this object specifies a point which affects the position of tooltip
			 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			showTooltip : {deprecated: true},

			/**
			 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			hideTooltip : {deprecated: true},

			/**
			 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
			 */
			initialized : {}
		},

		vizChartType: "viz/100_horizontal_area"

	}});


	return HorizontalArea100;

});

}; // end of sap/viz/ui5/HorizontalArea100.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.Line') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides control sap.viz.ui5.Line.
jQuery.sap.declare('sap.viz.ui5.Line'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/Line",['sap/viz/library', './core/BaseChart'],
	function(library, BaseChart) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.Line
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Chart sap.viz.ui5.Line
	 * @extends sap.viz.ui5.core.BaseChart
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame}</b>(<code>new sap.viz.ui5.controls.VizFrame({'vizType': 'line'})</code>)
	 * <b>control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.Line
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Line = BaseChart.extend("sap.viz.ui5.Line", /** @lends sap.viz.ui5.Line.prototype */ { metadata : {

		library : "sap.viz",


		aggregations : {

			/**
			 * Module sap.viz.modules.rootContainer
			 */
			general : {type : "sap.viz.ui5.types.RootContainer", multiple : false},

			/**
			 * Module sap.viz.modules.controller.interaction
			 */
			interaction : {type : "sap.viz.ui5.types.controller.Interaction", multiple : false},

			/**
			 * Module sap.viz.modules.title
			 */
			title : {type : "sap.viz.ui5.types.Title", multiple : false},

			/**
			 * Module sap.viz.modules.legend
			 */
			legendGroup : {type : "sap.viz.ui5.types.Legend", multiple : false},

			/**
			 * Module sap.viz.modules.legend.common
			 */
			legend : {type : "sap.viz.ui5.types.legend.Common", multiple : false},

			/**
			 * Module sap.viz.chart.elements.Tooltip
			 */
			toolTip : {type : "sap.viz.ui5.types.Tooltip", multiple : false},

			/**
			 * Module sap.viz.modules.xycontainer
			 */
			xyContainer : {type : "sap.viz.ui5.types.XYContainer", multiple : false},

			/**
			 * Module sap.viz.modules.datalabel
			 */
			dataLabel : {type : "sap.viz.ui5.types.Datalabel", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			yAxis : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			xAxis : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.background
			 */
			background : {type : "sap.viz.ui5.types.Background", multiple : false},

			/**
			 * Module sap.viz.modules.line
			 */
			plotArea : {type : "sap.viz.ui5.types.Line", multiple : false}
		},

		events : {

			/**
			 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
			 * //selected element's detail
			 * target:"Dom Element",//an object pointed to corresponding dom element
			 * data:[{val: "...",//value of this element
			 * ctx:{type:"Dimension"||"Measure"||"MND",
			 * //for Dimension
			 * path:{aa:"...",di:"...",dii:"..."},
			 * //for Measure
			 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
			 * //for MND
			 * path:{mg:"...",mi:"..."}
			 * //path: analysis path
			 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
			 * //di: dimension index //zero based
			 * //dii: dimension item index //zero based
			 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
			 * //mi: measure index // measure index in measure group zero based
			 * //dii_a1: each dii of di in analysis axis 1 index
			 * //dii_a2: each dii of di in analysis axis 2 index
			 * }},{
			 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
			 * var:"...",ctx:"..."}]},{
			 * //if under multi selection, there will be more than one selected elements
			 * target:"...",data:["..."]}]}
			 */
			selectData : {},

			/**
			 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
			 */
			deselectData : {},

			/**
			 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
			 * //All measures
			 * name:"...",val:[{//measure value is an array containing only one item
			 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
			 * //this object specifies the plot area of the chart
			 * height:"...",width:"...",x:"...",y:"..."},point:{
			 * //this object specifies a point which affects the position of tooltip
			 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			showTooltip : {deprecated: true},

			/**
			 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			hideTooltip : {deprecated: true},

			/**
			 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
			 */
			initialized : {}
		},

		vizChartType: "viz/line"

	}});


	return Line;

});

}; // end of sap/viz/ui5/Line.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.Pie') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides control sap.viz.ui5.Pie.
jQuery.sap.declare('sap.viz.ui5.Pie'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/Pie",['sap/viz/library', './core/BaseChart'],
	function(library, BaseChart) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.Pie
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Chart sap.viz.ui5.Pie
	 * @extends sap.viz.ui5.core.BaseChart
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame}</b>(<code>new sap.viz.ui5.controls.VizFrame({'vizType': 'pie'})</code>)
	 * <b>control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.Pie
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Pie = BaseChart.extend("sap.viz.ui5.Pie", /** @lends sap.viz.ui5.Pie.prototype */ { metadata : {

		library : "sap.viz",


		aggregations : {

			/**
			 * Module sap.viz.modules.rootContainer
			 */
			general : {type : "sap.viz.ui5.types.RootContainer", multiple : false},

			/**
			 * Module sap.viz.modules.title
			 */
			title : {type : "sap.viz.ui5.types.Title", multiple : false},

			/**
			 * Module sap.viz.modules.legend
			 */
			legendGroup : {type : "sap.viz.ui5.types.Legend", multiple : false},

			/**
			 * Module sap.viz.modules.legend.common
			 */
			legend : {type : "sap.viz.ui5.types.legend.Common", multiple : false},

			/**
			 * Module sap.viz.modules.xycontainer
			 */
			xyContainer : {type : "sap.viz.ui5.types.XYContainer", multiple : false},

			/**
			 * Module sap.viz.modules.pie
			 */
			plotArea : {type : "sap.viz.ui5.types.Pie", multiple : false},

			/**
			 * Module sap.viz.modules.datalabel
			 */
			dataLabel : {type : "sap.viz.ui5.types.Datalabel", multiple : false},

			/**
			 * Module sap.viz.modules.controller.interaction
			 */
			interaction : {type : "sap.viz.ui5.types.controller.Interaction", multiple : false},

			/**
			 * Module sap.viz.chart.elements.Tooltip
			 */
			toolTip : {type : "sap.viz.ui5.types.Tooltip", multiple : false},

			/**
			 * Module sap.viz.modules.datatransform
			 */
			dataTransform : {type : "sap.viz.ui5.types.Datatransform", multiple : false}
		},

		events : {

			/**
			 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
			 * //selected element's detail
			 * target:"Dom Element",//an object pointed to corresponding dom element
			 * data:[{val: "...",//value of this element
			 * ctx:{type:"Dimension"||"Measure"||"MND",
			 * //for Dimension
			 * path:{aa:"...",di:"...",dii:"..."},
			 * //for Measure
			 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
			 * //for MND
			 * path:{mg:"...",mi:"..."}
			 * //path: analysis path
			 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
			 * //di: dimension index //zero based
			 * //dii: dimension item index //zero based
			 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
			 * //mi: measure index // measure index in measure group zero based
			 * //dii_a1: each dii of di in analysis axis 1 index
			 * //dii_a2: each dii of di in analysis axis 2 index
			 * }},{
			 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
			 * var:"...",ctx:"..."}]},{
			 * //if under multi selection, there will be more than one selected elements
			 * target:"...",data:["..."]}]}
			 */
			selectData : {},

			/**
			 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
			 */
			deselectData : {},

			/**
			 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
			 * //All measures
			 * name:"...",val:[{//measure value is an array containing only one item
			 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
			 * //this object specifies the plot area of the chart
			 * height:"...",width:"...",x:"...",y:"..."},point:{
			 * //this object specifies a point which affects the position of tooltip
			 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			showTooltip : {deprecated: true},

			/**
			 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			hideTooltip : {deprecated: true},

			/**
			 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
			 */
			initialized : {}
		},

		vizChartType: "viz/pie"

	}});


	return Pie;

});

}; // end of sap/viz/ui5/Pie.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.Scatter') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides control sap.viz.ui5.Scatter.
jQuery.sap.declare('sap.viz.ui5.Scatter'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/Scatter",['sap/viz/library', './core/BaseChart'],
	function(library, BaseChart) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.Scatter
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Chart sap.viz.ui5.Scatter
	 * @extends sap.viz.ui5.core.BaseChart
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame}</b>(<code>new sap.viz.ui5.controls.VizFrame({'vizType': 'scatter'})</code>)
	 * <b>control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.Scatter
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Scatter = BaseChart.extend("sap.viz.ui5.Scatter", /** @lends sap.viz.ui5.Scatter.prototype */ { metadata : {

		library : "sap.viz",


		aggregations : {

			/**
			 * Module sap.viz.modules.rootContainer
			 */
			general : {type : "sap.viz.ui5.types.RootContainer", multiple : false},

			/**
			 * Module sap.viz.modules.title
			 */
			title : {type : "sap.viz.ui5.types.Title", multiple : false},

			/**
			 * Module sap.viz.modules.legend
			 */
			legendGroup : {type : "sap.viz.ui5.types.Legend", multiple : false},

			/**
			 * Module sap.viz.modules.legend.common
			 */
			legend : {type : "sap.viz.ui5.types.legend.Common", multiple : false},

			/**
			 * Module sap.viz.modules.xycontainer
			 */
			xyContainer : {type : "sap.viz.ui5.types.XYContainer", multiple : false},

			/**
			 * Module sap.viz.modules.datalabel
			 */
			dataLabel : {type : "sap.viz.ui5.types.Datalabel", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			xAxis : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			yAxis : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.background
			 */
			background : {type : "sap.viz.ui5.types.Background", multiple : false},

			/**
			 * Module sap.viz.modules.scatter
			 */
			plotArea : {type : "sap.viz.ui5.types.Scatter", multiple : false},

			/**
			 * Module sap.viz.chart.elements.Tooltip
			 */
			toolTip : {type : "sap.viz.ui5.types.Tooltip", multiple : false},

			/**
			 * Module sap.viz.modules.controller.interaction
			 */
			interaction : {type : "sap.viz.ui5.types.controller.Interaction", multiple : false},

			/**
			 * Module sap.viz.modules.datatransform
			 */
			dataTransform : {type : "sap.viz.ui5.types.Datatransform", multiple : false}
		},

		events : {

			/**
			 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
			 * //selected element's detail
			 * target:"Dom Element",//an object pointed to corresponding dom element
			 * data:[{val: "...",//value of this element
			 * ctx:{type:"Dimension"||"Measure"||"MND",
			 * //for Dimension
			 * path:{aa:"...",di:"...",dii:"..."},
			 * //for Measure
			 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
			 * //for MND
			 * path:{mg:"...",mi:"..."}
			 * //path: analysis path
			 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
			 * //di: dimension index //zero based
			 * //dii: dimension item index //zero based
			 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
			 * //mi: measure index // measure index in measure group zero based
			 * //dii_a1: each dii of di in analysis axis 1 index
			 * //dii_a2: each dii of di in analysis axis 2 index
			 * }},{
			 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
			 * var:"...",ctx:"..."}]},{
			 * //if under multi selection, there will be more than one selected elements
			 * target:"...",data:["..."]}]}
			 */
			selectData : {},

			/**
			 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
			 */
			deselectData : {},

			/**
			 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
			 * //All measures
			 * name:"...",val:[{//measure value is an array containing only one item
			 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
			 * //this object specifies the plot area of the chart
			 * height:"...",width:"...",x:"...",y:"..."},point:{
			 * //this object specifies a point which affects the position of tooltip
			 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			showTooltip : {deprecated: true},

			/**
			 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			hideTooltip : {deprecated: true},

			/**
			 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
			 */
			initialized : {}
		},

		vizChartType: "viz/scatter"

	}});


	return Scatter;

});

}; // end of sap/viz/ui5/Scatter.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.StackedColumn') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides control sap.viz.ui5.StackedColumn.
jQuery.sap.declare('sap.viz.ui5.StackedColumn'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/StackedColumn",['sap/viz/library', './core/BaseChart'],
	function(library, BaseChart) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.StackedColumn
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Chart sap.viz.ui5.StackedColumn
	 * @extends sap.viz.ui5.core.BaseChart
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame}</b>(<code>new sap.viz.ui5.controls.VizFrame({'vizType': 'stacked_column'})</code>)
	 * <b>control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.StackedColumn
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var StackedColumn = BaseChart.extend("sap.viz.ui5.StackedColumn", /** @lends sap.viz.ui5.StackedColumn.prototype */ { metadata : {

		library : "sap.viz",


		aggregations : {

			/**
			 * Module sap.viz.modules.rootContainer
			 */
			general : {type : "sap.viz.ui5.types.RootContainer", multiple : false},

			/**
			 * Module sap.viz.modules.controller.interaction
			 */
			interaction : {type : "sap.viz.ui5.types.controller.Interaction", multiple : false},

			/**
			 * Module sap.viz.modules.title
			 */
			title : {type : "sap.viz.ui5.types.Title", multiple : false},

			/**
			 * Module sap.viz.modules.legend
			 */
			legendGroup : {type : "sap.viz.ui5.types.Legend", multiple : false},

			/**
			 * Module sap.viz.modules.legend.common
			 */
			legend : {type : "sap.viz.ui5.types.legend.Common", multiple : false},

			/**
			 * Module sap.viz.chart.elements.Tooltip
			 */
			toolTip : {type : "sap.viz.ui5.types.Tooltip", multiple : false},

			/**
			 * Module sap.viz.modules.xycontainer
			 */
			xyContainer : {type : "sap.viz.ui5.types.XYContainer", multiple : false},

			/**
			 * Module sap.viz.modules.datalabel
			 */
			dataLabel : {type : "sap.viz.ui5.types.Datalabel", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			yAxis : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			xAxis : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.background
			 */
			background : {type : "sap.viz.ui5.types.Background", multiple : false},

			/**
			 * Module sap.viz.modules.stackedverticalbar
			 */
			plotArea : {type : "sap.viz.ui5.types.StackedVerticalBar", multiple : false}
		},

		events : {

			/**
			 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
			 * //selected element's detail
			 * target:"Dom Element",//an object pointed to corresponding dom element
			 * data:[{val: "...",//value of this element
			 * ctx:{type:"Dimension"||"Measure"||"MND",
			 * //for Dimension
			 * path:{aa:"...",di:"...",dii:"..."},
			 * //for Measure
			 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
			 * //for MND
			 * path:{mg:"...",mi:"..."}
			 * //path: analysis path
			 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
			 * //di: dimension index //zero based
			 * //dii: dimension item index //zero based
			 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
			 * //mi: measure index // measure index in measure group zero based
			 * //dii_a1: each dii of di in analysis axis 1 index
			 * //dii_a2: each dii of di in analysis axis 2 index
			 * }},{
			 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
			 * var:"...",ctx:"..."}]},{
			 * //if under multi selection, there will be more than one selected elements
			 * target:"...",data:["..."]}]}
			 */
			selectData : {},

			/**
			 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
			 */
			deselectData : {},

			/**
			 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
			 * //All measures
			 * name:"...",val:[{//measure value is an array containing only one item
			 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
			 * //this object specifies the plot area of the chart
			 * height:"...",width:"...",x:"...",y:"..."},point:{
			 * //this object specifies a point which affects the position of tooltip
			 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			showTooltip : {deprecated: true},

			/**
			 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			hideTooltip : {deprecated: true},

			/**
			 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
			 */
			initialized : {}
		},

		vizChartType: "viz/stacked_column"

	}});


	return StackedColumn;

});

}; // end of sap/viz/ui5/StackedColumn.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.StackedColumn100') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides control sap.viz.ui5.StackedColumn100.
jQuery.sap.declare('sap.viz.ui5.StackedColumn100'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/StackedColumn100",['sap/viz/library', './core/BaseChart'],
	function(library, BaseChart) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.StackedColumn100
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Chart sap.viz.ui5.StackedColumn100
	 * @extends sap.viz.ui5.core.BaseChart
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame}</b>(<code>new sap.viz.ui5.controls.VizFrame({'vizType': '100_stacked_column'})</code>)
	 * <b>control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.StackedColumn100
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var StackedColumn100 = BaseChart.extend("sap.viz.ui5.StackedColumn100", /** @lends sap.viz.ui5.StackedColumn100.prototype */ { metadata : {

		library : "sap.viz",


		aggregations : {

			/**
			 * Module sap.viz.modules.rootContainer
			 */
			general : {type : "sap.viz.ui5.types.RootContainer", multiple : false},

			/**
			 * Module sap.viz.modules.controller.interaction
			 */
			interaction : {type : "sap.viz.ui5.types.controller.Interaction", multiple : false},

			/**
			 * Module sap.viz.modules.title
			 */
			title : {type : "sap.viz.ui5.types.Title", multiple : false},

			/**
			 * Module sap.viz.modules.legend
			 */
			legendGroup : {type : "sap.viz.ui5.types.Legend", multiple : false},

			/**
			 * Module sap.viz.modules.legend.common
			 */
			legend : {type : "sap.viz.ui5.types.legend.Common", multiple : false},

			/**
			 * Module sap.viz.chart.elements.Tooltip
			 */
			toolTip : {type : "sap.viz.ui5.types.Tooltip", multiple : false},

			/**
			 * Module sap.viz.modules.xycontainer
			 */
			xyContainer : {type : "sap.viz.ui5.types.XYContainer", multiple : false},

			/**
			 * Module sap.viz.modules.datalabel
			 */
			dataLabel : {type : "sap.viz.ui5.types.Datalabel", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			yAxis : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			xAxis : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.background
			 */
			background : {type : "sap.viz.ui5.types.Background", multiple : false},

			/**
			 * Module sap.viz.modules.stackedverticalbar
			 */
			plotArea : {type : "sap.viz.ui5.types.StackedVerticalBar", multiple : false}
		},

		events : {

			/**
			 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
			 * //selected element's detail
			 * target:"Dom Element",//an object pointed to corresponding dom element
			 * data:[{val: "...",//value of this element
			 * ctx:{type:"Dimension"||"Measure"||"MND",
			 * //for Dimension
			 * path:{aa:"...",di:"...",dii:"..."},
			 * //for Measure
			 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
			 * //for MND
			 * path:{mg:"...",mi:"..."}
			 * //path: analysis path
			 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
			 * //di: dimension index //zero based
			 * //dii: dimension item index //zero based
			 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
			 * //mi: measure index // measure index in measure group zero based
			 * //dii_a1: each dii of di in analysis axis 1 index
			 * //dii_a2: each dii of di in analysis axis 2 index
			 * }},{
			 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
			 * var:"...",ctx:"..."}]},{
			 * //if under multi selection, there will be more than one selected elements
			 * target:"...",data:["..."]}]}
			 */
			selectData : {},

			/**
			 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
			 */
			deselectData : {},

			/**
			 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
			 * //All measures
			 * name:"...",val:[{//measure value is an array containing only one item
			 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
			 * //this object specifies the plot area of the chart
			 * height:"...",width:"...",x:"...",y:"..."},point:{
			 * //this object specifies a point which affects the position of tooltip
			 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			showTooltip : {deprecated: true},

			/**
			 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			hideTooltip : {deprecated: true},

			/**
			 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
			 */
			initialized : {}
		},

		vizChartType: "viz/100_stacked_column"

	}});


	return StackedColumn100;

});

}; // end of sap/viz/ui5/StackedColumn100.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.TimeBubble') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides control sap.viz.ui5.TimeBubble.
jQuery.sap.declare('sap.viz.ui5.TimeBubble'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/TimeBubble",['sap/viz/library', './core/BaseChart'],
	function(library, BaseChart) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.TimeBubble
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Chart sap.viz.ui5.TimeBubble
	 * @extends sap.viz.ui5.core.BaseChart
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * <b>SAP strongly recommends that existing consumers of those controls migrate to the new {@link sap.viz.ui5.controls.VizFrame VizFrame}</b>(<code>new sap.viz.ui5.controls.VizFrame({'vizType': 'time_bubble'})</code>)
	 * <b>control to benefit from new charting enhancements and timely support. </b>
	 * 
	 * <b>Note</b>: As the feature set, design and API usage of VizFrame might differ from the old chart controls, make sure you evaluate it thoroughly before migration.
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.TimeBubble
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var TimeBubble = BaseChart.extend("sap.viz.ui5.TimeBubble", /** @lends sap.viz.ui5.TimeBubble.prototype */ { metadata : {

		library : "sap.viz",


		aggregations : {

			/**
			 * Module sap.viz.modules.rootContainer
			 */
			general : {type : "sap.viz.ui5.types.RootContainer", multiple : false},

			/**
			 * Module sap.viz.modules.title
			 */
			title : {type : "sap.viz.ui5.types.Title", multiple : false},

			/**
			 * Module sap.viz.modules.legend
			 */
			legendGroup : {type : "sap.viz.ui5.types.Legend", multiple : false},

			/**
			 * Module sap.viz.modules.legend.common
			 */
			legend : {type : "sap.viz.ui5.types.legend.Common", multiple : false},

			/**
			 * Module sap.viz.modules.legend.common
			 */
			sizeLegend : {type : "sap.viz.ui5.types.legend.Common", multiple : false},

			/**
			 * Module sap.viz.modules.xycontainer
			 */
			xyContainer : {type : "sap.viz.ui5.types.XYContainer", multiple : false},

			/**
			 * Module sap.viz.modules.datalabel
			 */
			dataLabel : {type : "sap.viz.ui5.types.Datalabel", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			xAxis : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.axis
			 */
			yAxis : {type : "sap.viz.ui5.types.Axis", multiple : false},

			/**
			 * Module sap.viz.modules.background
			 */
			background : {type : "sap.viz.ui5.types.Background", multiple : false},

			/**
			 * Module sap.viz.modules.bubble
			 */
			plotArea : {type : "sap.viz.ui5.types.Bubble", multiple : false},

			/**
			 * Module sap.viz.chart.elements.Tooltip
			 */
			toolTip : {type : "sap.viz.ui5.types.Tooltip", multiple : false},

			/**
			 * Module sap.viz.modules.controller.interaction
			 */
			interaction : {type : "sap.viz.ui5.types.controller.Interaction", multiple : false}
		},

		events : {

			/**
			 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
			 * //selected element's detail
			 * target:"Dom Element",//an object pointed to corresponding dom element
			 * data:[{val: "...",//value of this element
			 * ctx:{type:"Dimension"||"Measure"||"MND",
			 * //for Dimension
			 * path:{aa:"...",di:"...",dii:"..."},
			 * //for Measure
			 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
			 * //for MND
			 * path:{mg:"...",mi:"..."}
			 * //path: analysis path
			 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
			 * //di: dimension index //zero based
			 * //dii: dimension item index //zero based
			 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
			 * //mi: measure index // measure index in measure group zero based
			 * //dii_a1: each dii of di in analysis axis 1 index
			 * //dii_a2: each dii of di in analysis axis 2 index
			 * }},{
			 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
			 * var:"...",ctx:"..."}]},{
			 * //if under multi selection, there will be more than one selected elements
			 * target:"...",data:["..."]}]}
			 */
			selectData : {},

			/**
			 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
			 */
			deselectData : {},

			/**
			 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
			 * //All measures
			 * name:"...",val:[{//measure value is an array containing only one item
			 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
			 * //this object specifies the plot area of the chart
			 * height:"...",width:"...",x:"...",y:"..."},point:{
			 * //this object specifies a point which affects the position of tooltip
			 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			showTooltip : {deprecated: true},

			/**
			 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			hideTooltip : {deprecated: true},

			/**
			 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
			 */
			initialized : {}
		},

		vizChartType: "viz/time_bubble"

	}});


	return TimeBubble;

});

}; // end of sap/viz/ui5/TimeBubble.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.Treemap') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides control sap.viz.ui5.Treemap.
jQuery.sap.declare('sap.viz.ui5.Treemap'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
sap.ui.define("sap/viz/ui5/Treemap",['sap/viz/library', './core/BaseChart'],
	function(library, BaseChart) {
		"use strict";

	/**
	 * Constructor for a new sap.viz.ui5.Treemap
	 * 
	 * @param {string} [sId] id for the new control, generated automatically if no id is given
	 * @param {object} [mSettings] initial settings for the new control
	 * 
	 * @classdesc Chart sap.viz.ui5.Treemap
	 * @extends sap.viz.ui5.core.BaseChart
	 * 
	 * @constructor
	 * @public
	 * @since 1.7.2
	 * @deprecated Since version 1.32.0. 
	 * The chart controls in the <code>sap.viz.ui5</code> package (which were always marked as <i>experimental</i>) have been deprecated since 1.32.0. 
	 * They are no longer actively developed and won't receive new features or improvements, only important bug fixes. They will only remain in the 
	 * SAPUI5 distribution for backward compatibility. 
	 * 
	 * @experimental Since version 1.7.2. 
	 * Charting API is not finished yet and might change completely.
	 * @alias sap.viz.ui5.Treemap
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Treemap = BaseChart.extend("sap.viz.ui5.Treemap", /** @lends sap.viz.ui5.Treemap.prototype */ { metadata : {

		library : "sap.viz",


		aggregations : {

			/**
			 * Module sap.viz.modules.rootContainer
			 */
			general : {type : "sap.viz.ui5.types.RootContainer", multiple : false},

			/**
			 * Module sap.viz.modules.title
			 */
			title : {type : "sap.viz.ui5.types.Title", multiple : false},

			/**
			 * Module sap.viz.modules.legend
			 */
			legendGroup : {type : "sap.viz.ui5.types.Legend", multiple : false},

			/**
			 * Module sap.viz.modules.legend.common
			 */
			legend : {type : "sap.viz.ui5.types.legend.Common", multiple : false},

			/**
			 * Module sap.viz.modules.xycontainer
			 */
			xyContainer : {type : "sap.viz.ui5.types.XYContainer", multiple : false},

			/**
			 * Module sap.viz.modules.datalabel
			 */
			dataLabel : {type : "sap.viz.ui5.types.Datalabel", multiple : false},

			/**
			 * Module sap.viz.modules.treemap
			 */
			plotArea : {type : "sap.viz.ui5.types.Treemap", multiple : false},

			/**
			 * Module sap.viz.chart.elements.Tooltip
			 */
			toolTip : {type : "sap.viz.ui5.types.Tooltip", multiple : false},

			/**
			 * Module sap.viz.modules.controller.interaction
			 */
			interaction : {type : "sap.viz.ui5.types.controller.Interaction", multiple : false}
		},

		events : {

			/**
			 * Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in accordance with the following format.<code>{name: "selectData",data:[{
			 * //selected element's detail
			 * target:"Dom Element",//an object pointed to corresponding dom element
			 * data:[{val: "...",//value of this element
			 * ctx:{type:"Dimension"||"Measure"||"MND",
			 * //for Dimension
			 * path:{aa:"...",di:"...",dii:"..."},
			 * //for Measure
			 * path:{mg:"...",mi:"...",dii_a1:"...",dii_a2:"..."},
			 * //for MND
			 * path:{mg:"...",mi:"..."}
			 * //path: analysis path
			 * //aa: analysis axis index // 0 for analysis axis 1,  1 for analysis 2
			 * //di: dimension index //zero based
			 * //dii: dimension item index //zero based
			 * //mg: measure group index // 0 for measure group 1,1 for measure group 2
			 * //mi: measure index // measure index in measure group zero based
			 * //dii_a1: each dii of di in analysis axis 1 index
			 * //dii_a2: each dii of di in analysis axis 2 index
			 * }},{
			 * //for bubble, tagcloud and scatter, there will be more than one values in one selected element.
			 * var:"...",ctx:"..."}]},{
			 * //if under multi selection, there will be more than one selected elements
			 * target:"...",data:["..."]}]}
			 */
			selectData : {},

			/**
			 * Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in accordance with the following format.<code>{name: "deselectData",data:["---the same as selectedData---"]}
			 */
			deselectData : {},

			/**
			 * This event is deprecated, please use showDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover onto the specific part of chart, data context of tooltip would be passed in accordance with the following format.<code>{name:"showTooltip",data:{body:[{
			 * //All measures
			 * name:"...",val:[{//measure value is an array containing only one item
			 * value:"..."}]},"..."],footer:[{label:"...",value:"..."},"..."],plotArea:{
			 * //this object specifies the plot area of the chart
			 * height:"...",width:"...",x:"...",y:"..."},point:{
			 * //this object specifies a point which affects the position of tooltip
			 * x:"...",y:"..."},selectedValues:...//this number specify how many values are selected}}
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			showTooltip : {deprecated: true},

			/**
			 * This event is deprecated, please use hideDetail decoration (refer to properties: interaction.decorations) instead. Event fires when the mouse hover out of the specific part of chart, no data is passed.
			 * @deprecated Since version 1.19. 
			 * This Property has been deprecated. This interface will be removed from the SAPUI5 delivery in one of the next releases.
			 */
			hideTooltip : {deprecated: true},

			/**
			 * Event fires when the loading ends. To use the event listener when creating charts, you must use an event that is passed by the events option. For more information on events options, see the usrOptions section of the <a href="sap.viz.core.html#createViz" target="_blank">createViz</a> function in the API document.
			 */
			initialized : {}
		},

		vizChartType: "viz/treemap"

	}});


	return Treemap;

});

}; // end of sap/viz/ui5/Treemap.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.controls.chartpopover.ChartPopover') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */
jQuery.sap.declare('sap.viz.ui5.controls.chartpopover.ChartPopover'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
jQuery.sap.require('jquery.sap.global'); // unlisted dependency retained
jQuery.sap.require('sap.ui.core.Control'); // unlisted dependency retained
sap.ui.define("sap/viz/ui5/controls/chartpopover/ChartPopover",[
    'jquery.sap.global',
    './ContentPanel',
    './HeaderBar',
    './SubActionItemsPage',
    'sap/ui/core/Control',
    'sap/viz/ui5/format/ChartFormatter',
    '../common/utils/FormatDataUtil'
],
function(jQuery, ContentPanel, HeaderBar, SubActionItemsPage, Control, ChartFormatter, FormatDataUtil) {
	
    /**
     * ChartPopover provides a popover used with charts to display chart selections.
     * Content and Action List Items can be customized.
     *
     */
      var ChartPopover = Control.extend('sap.viz.ui5.controls.chartpopover.ChartPopover', {
        metadata : {
            properties : {
                'customDataControl' : {
                    type : 'any'
                }, //Parameter is selectData and returned Value is an UI5 Controls
                'actionItems' : {
                    type : 'object[]'
                },
                'formatString': {
                    type: 'any'
                },
                'chartType' : {
                     type : 'string'
                },
                'showLine' : {
                    type: 'boolean',
                    defaultValue : true
                }
            }
        }
    });

    ChartPopover.prototype.init = function() {
        this._listItemHeight = 3;
        this._isActionItemsChanged = true;
        //3rem
        this._options = null;
        this._oContentPanel = new ContentPanel(this._createId('vizContentPanel'), {});

        this._oSelectedLabel = new sap.m.Label(this._createId('vizSelectedLabel'), { });

        this._oSelectedBar = new sap.m.Bar(this._createId('vizSelectedBar'), {
            contentMiddle : [this._oSelectedLabel]
            })
            .addStyleClass('viz-controls-chartPopover-vizSelectedBar')
            .addStyleClass('viz-controls-chartPopover-vizSelectedBarBorder');

        this._oCustomHeader = new HeaderBar(this._createId('vizHeaderBar'), {
            title : sap.viz.extapi.env.Language.getResourceString("IDS_CURRENT_SELECTION"),
            showNavButton : false,
            closeButtonPress : jQuery.proxy(this.close, this),
            navButtonPress : jQuery.proxy(this._navigateBack, this)
        });

        this._oPopover = new sap.m.ResponsivePopover(this._createId('vizChartPopover'), {
            horizontalScrolling : false,
            placement : sap.m.PlacementType.HorizontalPreferedRight,
            contentWidth : "18rem",
            customHeader : this._oCustomHeader,
            content : [this._oContentPanel]
        });
        this._oPopover.addStyleClass('viz-controls-chartPopover');
        this._oPopover.attachAfterClose(this._afterClose, this);
        this._oPopover.attachAfterOpen(this._afterOpen, this);
        
        this._setAriaLabelledBys();
        this._infoDiv = null;
        this._chartType = null;
    };
    
    ChartPopover.prototype._setAriaLabelledBys = function(){
        this._oPopover.removeAllAriaLabelledBy();
        
        this._oPopover.addAriaLabelledBy(this._oContentPanel);
        this._oPopover.addAriaLabelledBy(this._oSelectedLabel);
    };

    ChartPopover.prototype._afterOpen = function() {
        this._oCustomHeader._oCloseButton.focus();
    };

    ChartPopover.prototype._afterClose = function() {
        this._navigateBack();
        if (this._options && this._options.selectedValues < 1) {
            this._oPopover.removeContent(this._oSelectedBar);
        }
        if (this._infoDiv) {
            this._infoDiv.focus();
        }
    };

    /**
     * Returns true if the popover is open, otherwise false.
     *
     * @returns {boolean} true if the popover is open, otherwise false
     *
     */
    ChartPopover.prototype.isOpen = function() {
        return this._oPopover.isOpen();
    };

    function hasClass(node, clz) {
        if (!node || !node.getAttribute) {
            return false;
        }
        var nodeClz = node.getAttribute('class') || "";
        return (' ' + nodeClz + ' ').indexOf(' ' + clz + ' ') >= 0;
    }

    /**
     * Open Chart's Popover.
     */
    ChartPopover.prototype.openBy = function(oControl, bSkipInstanceManager) {
        if (oControl) {
            this._oCustomHeader.setTitle(sap.viz.extapi.env.Language.getResourceString('IDS_CURRENT_SELECTION'));
            this._updateContent();
            this._updateActionItems();
            
            //Set Popover's openBy element
            var targetElement = this._updatePopoverSettings(oControl);
            var contents = this._oPopover.getContent();
            if(contents.length > 0){
                this._oPopover.setInitialFocus(contents[0].getId());
            }
            setTimeout((function(){
                this._oPopover.openBy(targetElement, bSkipInstanceManager); //oControl.firstChild
            }).bind(this), 0);
        }
        return this;
    };

    /**
     * Close Chart's Popover.
     */
    ChartPopover.prototype.close = function() {
        this._oPopover.close();
        return this;
    };

    /**
     * Destroy Chart's Popover
     */
    ChartPopover.prototype.exit = function() {
        if (this._oContentPanel) {
            this._oContentPanel.destroy();
            this._oContentPanel = null;
        }

        if (this._oSelectedLabel) {
            this._oSelectedLabel.destroy();
            this._oSelectedLabel = null;
        }

        if (this._oCustomHeader) {
            this._oCustomHeader.destroy();
            this._oCustomHeader = null;
        }

        if (this._oCustomPanel) {
            this._oCustomPanel.destroy();
            this._oCustomPanel = null;
        }

        if (this._oPopover) {
            this._oPopover.destroy();
            this._oPopover = null;
        }

        if(this._targetElement){
                this._targetElement.remove();
            this._targetElement = null;
        }

        this._options = null;
        this._infoDiv = null;
        this._chartType = null;
    };

    /**
     * Set popover's options
     */
    ChartPopover.prototype.setOptions = function(options) {
        var config = {
            formatString: this.getFormatString(),
            chartType: this.getChartType(),
            mode: "popover"
        };
        var data = FormatDataUtil.formatData(options, config); 
        if (!this._infoDiv || this.getChartType() != this._chartType) {
            var node = options.target;
            while ((node = node.parentNode) && !hasClass(node, "v-info")) {
            } 
            this._infoDiv = node;
            this._chartType = this.getChartType();
        }
        if (this._infoDiv) {
            var _screenReaderDiv = this._infoDiv.querySelector(".v-m-screenreader-container");
            if (_screenReaderDiv) {
                var li = _screenReaderDiv.querySelector("li");
                if (li && options.selectedValues) {
                    var text = options.selectedValues === 1 ? 
                            " " + sap.viz.extapi.env.Language.getResourceString("IDS_VALUE_SELECTED") : 
                            " " + sap.viz.extapi.env.Language.getResourceString("IDS_VALUES_SELECTED") ;
                    li.innerText = options.selectedValues + text;
                }
            }
        }
        this._options = options;
        this._oContentPanel.setShowLine(this.getShowLine()).setContentData(data);
        if (!data.val || options.selectedValues > 1) {
            this._oSelectedLabel.setText(options.selectedValues + " " +
                    (options.selectedValues === 1 ? sap.viz.extapi.env.Language.getResourceString("IDS_VALUE_SELECTED") :
                            sap.viz.extapi.env.Language.getResourceString("IDS_VALUES_SELECTED")));
            this._oPopover.insertContent(this._oSelectedBar, 1);
            if(data.val === undefined){
                //Legend Selection or category selection or lasso selection
                this._oSelectedBar.removeStyleClass('viz-controls-chartPopover-vizSelectedBarBorder');    
            }          
        } else {
            this._oPopover.removeContent(this._oSelectedBar);
        }
        return this;
    };

    ChartPopover.prototype.setActionItems = function(items){ 
        this._actionItems = [];
        this._actionItems = jQuery.extend(true, this._actionItems, items);
        this._isActionItemsChanged = true;
    };

    ChartPopover.prototype.getActionItems = function(items){
        return this._actionItems; 
    };

    ChartPopover.prototype._updateContent = function() {
        var contents = this.getCustomDataControl();
        if (contents) {
            //Has Custom Data Content.
            //1. remove the repvious custom panel.
            //2. remove content panel
            //3. insert new custom panel
            if (this._oCustomPanel) {
                this._oPopover.removeContent(this._oCustomPanel);
            }
            this._oCustomPanel = contents(this._options);
            this._oPopover.removeContent(this._oContentPanel);
            this._oPopover.insertContent(this._oCustomPanel, 0);
            this._oSelectedBar.addStyleClass('viz-controls-chartPopover-vizSelectedBarBorder');
        } else {
            //No custom data content.
            this._oPopover.removeContent(this._oCustomPanel);
            this._oCustomPanel = null; // it does not work
            
            if(this._oContentPanel.isMultiSelected()){
                this._oPopover.removeContent(this._oContentPanel);
            }else if (this._oPopover.indexOfContent(this._oContentPanel) === -1) {
                this._oPopover.insertContent(this._oContentPanel, 0);
                this._oSelectedBar.addStyleClass('viz-controls-chartPopover-vizSelectedBarBorder');
            }
        }
        return this;
    };

    ChartPopover.prototype._updateActionItems = function() {
        if (this._isActionItemsChanged) {
            var actionItems = this._actionItems;
            if(!this._oActionList){
                //new action list
                actionItems = this.getActionItems();
                if (actionItems && actionItems.length > 0) {
                    this._actionItems = jQuery.extend(true, this._actionItems, actionItems);
                    this._oActionList = new sap.m.List({
                    }).addStyleClass('viz-controls-chartPopover-actionList');
                    this._oPopover.addContent(this._oActionList);
                }
            }

            if (actionItems && actionItems.length > 0) {
                this._oActionList.removeAllItems();
                var item;

                for (var i = 0, len = actionItems.length; i < len; i++) {
                    item = actionItems[i];
                    if (item.type === 'action') {
                        this._oActionList.addItem(new sap.m.ActionListItem({
                            text : item.text,
                            press : item.press ? item.press : function() {
                            }
                        }));
                    } else if (item.type === 'navigation') {
                        this._oActionList.addItem(new sap.m.StandardListItem({
                            title : item.text,
                            type : 'Navigation',
                            press : jQuery.proxy(function(event) {
                                var index = this._oActionList.indexOfItem(event.getSource());
                                var subActionItems = this._actionItems[index].children;
                                if (subActionItems && subActionItems.length > 0) {
                                    this._oSubActionItemsPage = new SubActionItemsPage();
                                    this._oPopover.insertContent(this._oSubActionItemsPage);

                                    this._oSubActionItemsPage.setItems(subActionItems);
                                    this._oCustomHeader.setTitle(this._actionItems[index].text);
                                    this._navigateTo();
                                }
                            }, this)
                        }));
                    }
                }
            }else{
                if(this._oActionList){
                    this._oActionList.destroy();
                    this._oActionList = null;
                }
            }

            this._isActionItemsChanged = false;
        }
    };

    ChartPopover.prototype._navigateBack = function() {
        this._resetHeaderBar();
        if(this._oActionList){
            this._oActionList.removeStyleClass('hideActionList');
            this._oActionList.focus();
        }
        
        this._setAriaLabelledBys();
    };
    
    ChartPopover.prototype._resetHeaderBar = function() {
        this._oPopover.removeContent(this._oSubActionItemsPage);
        this._oCustomHeader.setShowNavButton(false).setTitle(sap.viz.extapi.env.Language.getResourceString("IDS_CURRENT_SELECTION"));
    };
    
    ChartPopover.prototype._navigateTo = function(pageId) {
        this._oCustomHeader.setShowNavButton(true);
        if(this._oActionList){
            this._oActionList.addStyleClass('hideActionList');
        }
        this._oPopover.removeAriaLabelledBy(this._oContentPanel);
    };

    /**
     * Creates an id for an Element prefixed with the control id
     *
     * @return {string} id
     */
    ChartPopover.prototype._createId = function(sId) {
        return this.getId() + "-" + sId;
    };


    ChartPopover.prototype._updatePopoverSettings = function(target){
            var data = this._options.data.val;
            var targetSize = target.getBoundingClientRect(), 
                measureValue; 
            var parseIntFn = function (number){
                return parseInt(number, 10);
            };
            var targetData = target.__data__;
            if(data !== undefined){
                for(var i = 0, len = data.length; i < len; i++){
                    if(data[i].type && (data[i].type.toLowerCase() === "measure")){
                        measureValue = data[i].value;
                        break;
                    }
                }
            } else if (targetData && targetData.measureNames){
                measureValue = targetData[targetData.measureNames];
            }

            var dataType = this._options.data.type;
            var isDataTypeLine = dataType && dataType === "line";
            var targetElement, offsetX;
            switch(this.getChartType()){
                case 'info/bar':
                case 'info/dual_bar':
                    if (measureValue < 0) {
                        this._oPopover.setPlacement(sap.m.PlacementType.PreferredLeftOrFlip);
                    } else {
                        this._oPopover.setPlacement(sap.m.PlacementType.PreferredRightOrFlip);
                    }
                    targetElement = target.firstChild;
                    break;
                case 'info/column':
                case 'info/dual_column':
                case 'info/timeseries_column':
                    if(measureValue < 0){
                        this._oPopover.setPlacement(sap.m.PlacementType.PreferredBottomOrFlip);
                    }else{
                        this._oPopover.setPlacement(sap.m.PlacementType.PreferredTopOrFlip);
                    }
                    targetElement = target.firstChild;
                    break;
                case 'info/pie':
                case 'info/donut':
                    offsetX = parseIntFn(targetSize.width / 2);
                    this._oPopover.setOffsetX(-offsetX);
                    this._oPopover.setPlacement(sap.m.PlacementType.PreferredRightOrFlip);
                    targetElement = target.firstChild;
                    break;
                case 'info/bullet':
                    this._oPopover.setPlacement(sap.m.PlacementType.PreferredRightOrFlip);
                    targetElement = target;
                    break;
                case 'info/vertical_bullet':
                case 'info/timeseries_bullet' :
                    this._oPopover.setPlacement(sap.m.PlacementType.PreferredTopOrFlip);
                    targetElement = target;
                    break;
                //Create DIV Element to workaround popover's reference issue. 
                case 'info/line': 
                case 'info/timeseries_line':
                case 'info/timeseries_scatter':
                case 'info/timeseries_bubble':
                case 'info/dual_line':
                case 'info/bubble':
                case 'info/time_bubble':
                case 'info/scatter': 
                case 'info/stacked_bar':
                case 'info/dual_stacked_bar':
                case 'info/100_stacked_bar':
                case 'info/100_dual_stacked_bar':
                case 'info/waterfall':
                case 'info/timeseries_waterfall':
                    this._oPopover.setPlacement(sap.m.PlacementType.VerticalPreferredTop);
                    targetElement = target.firstChild;
                    break;
                case 'info/stacked_column':
                case 'info/dual_stacked_column':
                case 'info/100_stacked_column':
                case 'info/100_dual_stacked_column':
                case 'info/horizontal_waterfall':
                case 'info/heatmap':
                case 'info/timeseries_stacked_column':
                case 'info/timeseries_100_stacked_column':
                    this._oPopover.setPlacement(sap.m.PlacementType.HorizontalPreferredRight);
                    targetElement = target.firstChild;
                    break;
                //Handle Combination chart
                case 'info/combination':
                case 'info/timeseries_combination':
                case 'info/dual_timeseries_combination':
                    if(isDataTypeLine){
                        this._oPopover.setPlacement(sap.m.PlacementType.PreferredTopOrFlip);
                    }else{
                        if(measureValue < 0){
                            this._oPopover.setPlacement(sap.m.PlacementType.PreferredBottomOrFlip);
                        }else{
                            this._oPopover.setPlacement(sap.m.PlacementType.PreferredTopOrFlip);
                        }
                    }
                    targetElement = target.firstChild;
                    break;
                case 'info/dual_combination':
                case 'info/stacked_combination':
                case 'info/dual_stacked_combination':
                    if(isDataTypeLine){ 
                         this._oPopover.setPlacement(sap.m.PlacementType.VerticalPreferedTop); 
                     }else{ 
                         this._oPopover.setPlacement(sap.m.PlacementType.HorizontalPreferedRight); 
                     }
                    targetElement = target.firstChild;
                    break;
                case 'info/dual_horizontal_combination':
                case 'info/horizontal_stacked_combination':
                case 'info/dual_horizontal_stacked_combination':
                    if(isDataTypeLine){ 
                        this._oPopover.setPlacement(sap.m.PlacementType.HorizontalPreferedRight); 
                    }else{ 
                        this._oPopover.setPlacement(sap.m.PlacementType.VerticalPreferedTop); 
                    }
                    targetElement = target.firstChild;
                    break;
            }
            return targetElement;
    };
    
    ChartPopover.prototype.addStyleClass = function() {
        this._oPopover.addStyleClass.apply(this._oPopover, arguments);
    };

    ChartPopover.prototype.removeStyleClass = function() {
        this._oPopover.removeStyleClass.apply(this._oPopover, arguments);
    };

    return ChartPopover;
});

}; // end of sap/viz/ui5/controls/chartpopover/ChartPopover.js
if ( !jQuery.sap.isDeclared('sap.viz.ui5.controls.Popover') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

(c) Copyright 2009-2017 SAP SE. All rights reserved
 */

// Provides control sap.viz.ui5.controls.Popover.
jQuery.sap.declare('sap.viz.ui5.controls.Popover'); // unresolved dependency added by SAPUI5 'AllInOne' Builder
jQuery.sap.require('sap.ui.layout.Grid'); // unlisted dependency retained
jQuery.sap.require('sap.ui.layout.form.SimpleForm'); // unlisted dependency retained
sap.ui.define("sap/viz/ui5/controls/Popover",[
		'sap/ui/layout/Grid',
		'sap/ui/layout/form/SimpleForm',
		'sap/viz/library',
		'./common/BaseControl',
		'./chartpopover/ChartPopover'
	], function(Grid, SimpleForm, library, BaseControl, ChartPopover) {
	"use strict";

	/**
	 * Constructor for a new ui5/controls/Popover.
	 *
	 * @param {string} [sId] id for the new control, generated automatically if no id is given 
	 * @param {object} [mSettings] initial settings for the new control
	 *
	 * @class
	 * Viz Chart Popover
	 * @extends sap.viz.ui5.controls.common.BaseControl
	 *
	 * @constructor
	 * @public
	 * @since 1.22.0
	 * @experimental Since version 1.22.0. 
	 * API is not finished yet and might change completely
	 * @name sap.viz.ui5.controls.Popover
	 * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel
	 */
	var Popover = BaseControl.extend("sap.viz.ui5.controls.Popover", /** @lends sap.viz.ui5.controls.Popover.prototype */ { metadata : {

		library : "sap.viz",
		properties : {

			/**
			 * A callback function let user customize Popover's content panel.
			 */
			customDataControl : {type : "any", defaultValue : null},

			/**
			 * The items of this list or rows of Action List in Home Page inside the Popover.
			 */
			actionItems : {type : "object[]", defaultValue : null},

			/**
			 * The pattern is used to format the measures displayed in Popover. 
			 * If value type of format string is String, the format string will be used to format all measures. 
			 * If value type is Object, each format string in the Object will be used to format the specified measure or time dimension.
			 */
			formatString : {type : "any", defaultValue : null},
			
			/**
			 * Show line with popover marker in line/combination charts.
			 */
			showLine : {type : "boolean", defaultValue : true}
		}
	}});


	/**
	 * Connect Chart's Popover with VizFrame.
	 *
	 * @name sap.viz.ui5.controls.Popover#connect
	 * @function
	 * @param {string} sVizFrameId
	 *         Set Uid of VizFrame.
	 * @type void
	 * @public
	 * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel
	 */


	/**
	 * Close Chart's Popover.
	 *
	 * @name sap.viz.ui5.controls.Popover#close
	 * @function
	 * @type void
	 * @public
	 * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel
	 */

	Popover.prototype.init = function() {
	  BaseControl.prototype.init.apply(this, arguments);

	  this._Popover = undefined;
	  this._uid = undefined;
	};

	Popover.prototype.exit = function() {
	    BaseControl.prototype.exit.apply(this, arguments);
	  
	    var vizFrame = sap.ui.getCore().byId(this._uid);
        if (vizFrame) {
            if (vizFrame._vizFrame) {
                vizFrame._vizFrame.off('showTooltip');
                vizFrame._vizFrame.off('hideTooltip');
                var connectCallback = vizFrame._onConnectPopover() || {};
                if (connectCallback.ref === this) {
                	vizFrame._onConnectPopover(undefined);
                }
            } else {
                vizFrame._onConnectPopover(jQuery.proxy(function(event) {
                    if (!vizFrame._vizFrame) {
                        return;
                    }
                    vizFrame._vizFrame.off('showTooltip');
                    vizFrame._vizFrame.off('hideTooltip');
                }, this));
            }
        }
        
        if (this._Popover) {
            this._Popover.destroy();
        }
	    this._Popover = undefined;
	    this._uid = undefined;
	};

	/**
	 * Connect chart Popover with VizFrame. Chart Popover is only supported for VizFrame with 'fiori' type. 
	 * It must be called by application. 
	 * 
	 * Example:
	 * <pre>
	 * var vizFrame = new sap.viz.ui5.controls.VizFrame({
	 * 	'vizType' : 'bar',
	 *  'uiConfig' : {
	 *     'applicationSet': 'fiori'
	 *   }
	 * });
	 * var vizPopover = new sap.viz.ui5.controls.Popover({});
	 * vizPopover.connect(vizFrame.getVizUid());
	 * </pre>
	 * 
	 * @param 
	 * 	 {string} uid
	 * @public
	 * @function sap.viz.ui5.controls.Popover.prototype.connect
	 */
	Popover.prototype.connect = function(uid){
	  this._uid = uid;
	  if(!this._Popover){
	    this._createPopover();
	  }
	  
	  var vizFrame = sap.ui.getCore().byId(this._uid);
	  var uiConfig = vizFrame.getUiConfig();
	  if (!uiConfig || uiConfig.applicationSet !== 'fiori') {
	  	return;
	  }
	  var popOver = this._Popover;
	  
	  function connectCb() {
	  	  if (!vizFrame._vizFrame) {
		  	return;
		  }
		  vizFrame._vizFrame.off('showInstantTooltip');
		  vizFrame._vizFrame.off('hideInstantTooltip');
		  vizFrame._vizFrame.on('showTooltip', function(event) {
		  	  if (event.data.target) {
				  popOver.setOptions(event.data).openBy(event.data.target);
		  	  }
		  });
		  vizFrame._vizFrame.on('hideTooltip', function() {
			  popOver.close(); 
		  });
		  popOver.setChartType(vizFrame._vizFrame.type());
		  popOver._oPopover.setOffsetX(0);
		  popOver._oPopover.setOffsetY(0);
	  }
	  
	  connectCb.ref = this;
	  
	  if (vizFrame._vizFrame) {
		  connectCb();
	  }
	  vizFrame._onConnectPopover(connectCb);
	};

	Popover.prototype.close = function(){
	    if(this._Popover){
	        this._Popover.close();
	    }
	  };

	Popover.prototype.setFormatString = function(fStr) {
		this.setProperty("formatString", fStr);
		if(this._Popover){
			this._Popover.setFormatString(fStr);
		} else {
			this._createPopover();
		}
		return this;
	};

	Popover.prototype.setCustomDataControl = function(con){
		this.setProperty('customDataControl', con);
		if(this._Popover){
			this._Popover.setCustomDataControl(con);
		}else{
			this._createPopover();
		}
		return this;
	};

	Popover.prototype.setActionItems = function(actionItems){
		this.setProperty('actionItems', actionItems);
		if(this._Popover){
			this._Popover.setActionItems(actionItems);
		}else{
			this._createPopover();
		}
		return this;
	};
	
	Popover.prototype.setShowLine = function(isShowLine){
        this.setProperty('showLine', isShowLine);
        if(this._Popover){
            this._Popover.setShowLine(isShowLine);
        }else{
            this._createPopover();
        }
        return this;
    };

	Popover.prototype._createPopover = function(){
	  this._Popover = new ChartPopover({
	    actionItems : this.getActionItems(),
	    customDataControl : this.getCustomDataControl(),
	    formatString : this.getFormatString(),
	    showLine : this.getShowLine()
	  });
	 };

    Popover.prototype.addStyleClass = function() {
        this._Popover.addStyleClass.apply(this._Popover, arguments);
    };

    Popover.prototype.removeStyleClass = function() {
        this._Popover.removeStyleClass.apply(this._Popover, arguments);
    };

	return Popover;

});

}; // end of sap/viz/ui5/controls/Popover.js
