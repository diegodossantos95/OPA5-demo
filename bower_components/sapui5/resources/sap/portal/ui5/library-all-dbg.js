// This file has been generated by the SAPUI5 'AllInOne' Builder
jQuery.sap.declare('sap.portal.ui5.library-all');
if ( !jQuery.sap.isDeclared('sap.portal.ui5.externals.es3shims.objectgetprototypeof') ) {
jQuery.sap.declare('sap.portal.ui5.externals.es3shims.objectgetprototypeof');

if ( typeof Object.getPrototypeOf !== "function" ) {

    Object.getPrototypeOf = function getPrototypeOf(object){

        return object.constructor.prototype;

    };

}

}; // end of sap/portal/ui5/externals/es3shims/objectgetprototypeof.js
if ( !jQuery.sap.isDeclared('sap.portal.ui5.externals.es5shims.arrayprototypeindexof') ) {
jQuery.sap.declare('sap.portal.ui5.externals.es5shims.arrayprototypeindexof');

if (!Array.prototype.indexOf) {

    Array.prototype.indexOf = function indexOf(find, startAt) {

        if (typeof(startAt) === 'undefined') {
            startAt = 0;
        }

        var length = this.length;

        if (startAt < 0) {
            startAt += length;
        }

        if (startAt < 0) {
            startAt = 0;
        }

        var index;

        for (index = startAt; index < length; index++) {
            if (typeof(this[index]) !== 'undefined' && this[index] === find) {
                return index;
            }
        }

        return -1;

    };

}

}; // end of sap/portal/ui5/externals/es5shims/arrayprototypeindexof.js
if ( !jQuery.sap.isDeclared('sap.portal.ui5.externals.es5shims.arrayprototypelastindexof') ) {
jQuery.sap.declare('sap.portal.ui5.externals.es5shims.arrayprototypelastindexof');

if (!Array.prototype.lastIndexOf) {

    Array.prototype.lastIndexOf = function lastIndexOf(find, startAt) {

        var length = this.length;
        var lastIndex = length - 1;

        if (typeof(startAt) === 'undefined') {
            startAt = lastIndex;
        }

        if (startAt < 0) {
            startAt += length;
        }

        if (startAt > lastIndex) {
            startAt = lastIndex;
        }

        var index;

        for (index = startAt; index > 0; index--) {
            if (typeof(this[index]) !== 'undefined' && this[index] === find) {
                return index;
            }
        }

        return -1;

    };

}

}; // end of sap/portal/ui5/externals/es5shims/arrayprototypelastindexof.js
if ( !jQuery.sap.isDeclared('sap.portal.ui5.externals.es5shims.functionprototypebind') ) {
jQuery.sap.declare('sap.portal.ui5.externals.es5shims.functionprototypebind');

if (!Function.prototype.bind) {

    /**
     * Creates a new function that, when called, itself calls this function in the context of the provided this value,
     * with a given sequence of arguments preceding any provided when the new function was called.
     */
    Function.prototype.bind = function bind(context) {

        if (typeof this !== 'function') {
            // closest thing possible to the ECMAScript 5 internal IsCallable function
            throw new TypeError('Function.prototype.bind - what is trying to be fBound is not callable');
        }

        // Callee
        var fn = this;
        var bindFn;

        // If no custom arguments bound -> use 'light' bound version
        if (arguments.length < 2) {

            //noinspection NestedFunctionJS
            bindFn = function lightBind() {

                return (!arguments.length) ?
                    fn.call(context) :
                    fn.apply(context, arguments);

            };

        } else {

            // Else -> use 'heavy' bound version
            var fnSlice = Array.prototype.slice;
            var args = (arguments.length > 1) && fnSlice.call(arguments, 1);

            //noinspection NestedFunctionJS
            bindFn = function heavyBind() {

                return (arguments.length) ?
                    fn.apply(context, args.concat(fnSlice.call(arguments))) :
                    fn.apply(context, args);

            };

        }

        bindFn.displayName = fn.displayName || fn.name;
        return bindFn;

    };

}

}; // end of sap/portal/ui5/externals/es5shims/functionprototypebind.js
if ( !jQuery.sap.isDeclared('sap.portal.ui5.externals.es5shims.windowprototypegetcomputedstyle') ) {
jQuery.sap.declare('sap.portal.ui5.externals.es5shims.windowprototypegetcomputedstyle');

if (!window.getComputedStyle) {

    window.getComputedStyle = function(el, pseudo) {
        this.el = el;
        this.getPropertyValue = function(prop) {
            var re = /(\-([a-z]){1})/g;
            if (prop == 'float') prop = 'styleFloat';
            if (re.test(prop)) {
                prop = prop.replace(re, function () {
                    return arguments[2].toUpperCase();
                });
            }
            return el.currentStyle[prop] ? el.currentStyle[prop] : null;
        };
        return this;
    };

}
}; // end of sap/portal/ui5/externals/es5shims/windowprototypegetcomputedstyle.js
if ( !jQuery.sap.isDeclared('sap.portal.ui5.library') ) {
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5) (c) Copyright 2009-2013 SAP AG. All rights reserved
 */

/* -----------------------------------------------------------------------------------
 * Hint: This is a derived (generated) file. Changes should be done in the underlying
 * source files only (*.type, *.js) or they will be lost after the next generation.
 * ----------------------------------------------------------------------------------- */

/**
 * Initialization Code and shared classes of library sap.portal.ui5 (1.50.0)
 */
jQuery.sap.declare("sap.portal.ui5.library");
jQuery.sap.require('sap.ui.core.Core'); // unlisted dependency retained

/**
 * SAP UI library: sap.portal.ui5
 *
 * @namespace
 * @name sap.portal.ui5
 * @public
 */


// library dependencies
jQuery.sap.require('sap.ui.core.library'); // unlisted dependency retained


// delegate further initialization of this library to the Core
sap.ui.getCore().initLibrary({
	name : "sap.portal.ui5",
	dependencies : ["sap.ui.core"],
	types: [],
	interfaces: [],
	controls: [],
	elements: [],
	noLibraryCSS: true,
	version: "1.50.0"
});


// -----------------------------------------------------------------------------
// Begin of Library Initialization coding, copied from shared.js
// -----------------------------------------------------------------------------

sap.ui.lazyRequire('sap.portal.ui5.core.PropertyObserver');
sap.ui.lazyRequire('sap.portal.ui5.core.ObjectMetadata');
sap.ui.lazyRequire('sap.portal.ui5.core.ObservablePropertiesMixin');
sap.ui.lazyRequire('sap.portal.ui5.core.Object');
sap.ui.lazyRequire('sap.portal.ui5.core.View');
sap.ui.lazyRequire('sap.portal.ui5.core.DynamicView');
sap.ui.lazyRequire('sap.portal.ui5.core.UI5ControlView');
sap.ui.lazyRequire('sap.portal.ui5.core.LayoutInterface');
sap.ui.lazyRequire('sap.portal.ui5.core.Collection');
sap.ui.lazyRequire('sap.portal.ui5.core.ComponentCollection');
sap.ui.lazyRequire('sap.portal.ui5.core.LayoutData');
sap.ui.lazyRequire('sap.portal.ui5.core.ComponentManager');
sap.ui.lazyRequire('sap.portal.ui5.core.Component');

}; // end of sap/portal/ui5/library.js
if ( !jQuery.sap.isDeclared('sap.portal.ui5.core.ObservablePropertiesMixin') ) {
"use strict";






jQuery.sap.declare('sap.portal.ui5.core.ObservablePropertiesMixin');

/**
 * @experimental
 * @class sap.portal.ui5.core.ObservablePropertiesMixin
 */
sap.portal.ui5.core.ObservablePropertiesMixin = {

    /**
     * @property {boolean}
     * @private
     */
    _bNotifyPropertyObserversSuspended: false,

    /**
     *
     */
    applySettings: function applySettings() {

        this._bindNestedPropertiesObservation();

        if (this._super) {
            this._super.apply(this, arguments);
        }

        this._bindPropertiesObservation();
        this._notifyInitPropertyObservers();

    },

    /**
     *
     * @param sPropertyPath
     * @returns {*}
     */
    getPropertyByPath: function getPropertyByPath(sPropertyPath) {

        var oScope = this,
            sProperty = sPropertyPath,
            sGetter,
            oValue;

        if (sPropertyPath.indexOf('.') > -1) {

            var aPropertyPath = sPropertyPath.split('.'),
                iIndex, iLength;

            for (iIndex = 0, iLength = aPropertyPath.length - 1;
                iIndex < iLength;
                iIndex++) {

                sProperty = aPropertyPath[iIndex];
                sGetter = 'get' + sProperty.charAt(0).toUpperCase() + sProperty.slice(1);

                if (typeof(oScope[sGetter]) === 'function') {

                    oScope = oScope[sGetter].apply(oScope);

                } else {

                    oScope = oScope.getProperty(sProperty);

                }

                if (!oScope) {
                    return;
                }

            }

            // Point to tail
            sProperty = aPropertyPath[iIndex];

        }

        sGetter = 'get' + sProperty.charAt(0).toUpperCase() + sProperty.slice(1);
        if (typeof(oScope[sGetter]) === 'function') {

            oValue = oScope[sGetter].apply(oScope);

        } else {

            oValue = oScope.getProperty(sProperty);

        }

        return oValue;

    },

    /**
     *
     * @private
     */
    _notifyInitPropertyObservers: function _notifyInitPropertyObservers() {

        var oObservers = this.getMetadata().getPropertyObservers();

        var sObserverKey,
            iPropertyIndex, iPropertiesLength,
            oObserver, aProperties;

        for (sObserverKey in oObservers) {
            if (typeof(oObservers[sObserverKey]) !== 'undefined') {

                oObserver = oObservers[sObserverKey];

                if (!oObserver.isCallableOnInit()) {
                    continue;
                }

                aProperties = oObserver.getObservableProperties();

                for (iPropertyIndex = 0, iPropertiesLength = aProperties.length;
                     iPropertyIndex < iPropertiesLength;
                     iPropertyIndex++) {
                    this._notifyPropertyObserver(oObserver, aProperties[iPropertyIndex]);
                }
            }
        }

    },

    /**
     *
     * @private
     */
    _bindPropertiesObservation: function _bindPropertiesObservation() {

        // Observe own properties
        this.attachEvent('_change', this._notifyPropertyObservers.bind(this));

    },

    /**
     *
     * @private
     */
    _bindNestedPropertiesObservation: function _bindNestedPropertiesObservation() {

        var oProperties = this.getMetadata().getAllProperties(),
            sPropertyName,
            oProperty;

        // Bind observation of nested properties
        for (sPropertyName in oProperties) {
            if (typeof(oProperties[sPropertyName]) !== 'undefined') {

                oProperty = this.getProperty(sPropertyName);

                if (oProperty instanceof sap.ui.base.ManagedObject) {
                    this._bindNestedPropertyObservation(oProperty, sPropertyName);
                }

            }
        }

        this.attachEvent('_change', function _rebindNestedPropertiesObservation(oEvent) {

            var oValue = oEvent.getParameter('newValue'),
                sPropertyName = oEvent.getParameter('name');

            if (oValue instanceof sap.ui.base.ManagedObject) {
                this._bindNestedPropertyObservation(oValue, sPropertyName);
            }

        }.bind(this));

    },

    /**
     *
     * @param oProperty
     * @param sPropertyName
     * @private
     */
    _bindNestedPropertyObservation: function _bindNestedPropertyObservation(oProperty, sPropertyName) {

        var fnNotifyObserver = this._notifyNestedPropertyObservers.bind(this, oProperty, sPropertyName);
        oProperty.attachEvent('_change', fnNotifyObserver);

    },

    /**
     *
     * @param oProperty
     * @private
     */
    _unbindNestedPropertyObservation: function _unbindNestedPropertyObservation(oProperty) {

        // TODO:

    },

    /**
     *
     * @param oEvent
     * @private
     */
    _notifyNestedPropertyObservers: function _notifyNestedPropertyObservers(oParentProperty, sParentPropertyName, oEvent) {

        var oObservers = oObservers || this.getMetadata().getPropertyObservers(),
            sObserverKey;

        if (this._bNotifyPropertyObserversSuspended) {
            return;
        }

        var sProperty = oEvent.getParameter('name');

        for (sObserverKey in oObservers) {
            if (typeof(oObservers[sObserverKey]) !== 'undefined') {
                this._notifyPropertyObserver(oObservers[sObserverKey], oEvent, sParentPropertyName + '.' + sProperty);
            }
        }

    },

    /**
     *
     * @param oEvent
     * @private
     */
    _notifyPropertyObservers: function _notifyPropertyObservers(oEvent, oObservers) {

        var oObservers = oObservers || this.getMetadata().getPropertyObservers(),
            sObserverKey;

        if (this._bNotifyPropertyObserversSuspended) {
            return;
        }

        for (sObserverKey in oObservers) {
            if (typeof(oObservers[sObserverKey]) !== 'undefined') {
                this._notifyPropertyObserver(oObservers[sObserverKey], oEvent);
            }
        }

    },

    /**
     *
     * @param oObserver
     * @param sProperty
     * @param oNewValue
     * @param oOldValue
     * @private
     */
    _notifyPropertyObserver: function _notifyPropertyObserver(oObserver, oEvent, sProperty) {

        if (oObserver.isSuspended()) {
            return;
        }

        var oNewValue, oOldValue;

        if (oEvent instanceof Object) {
            sProperty = sProperty || oEvent.getParameter('name');
            oOldValue = oEvent.getParameter('oldValue');
        } else if (typeof(oEvent) === 'string') {
            sProperty = oEvent;
            oOldValue = null
        }

        if (!oObserver.isObservesProperty(sProperty)) {
            return;
        }

        var oNewValue = this.getPropertyByPath(sProperty);

        return oObserver.notify(this, sProperty, oNewValue, oOldValue);

    },

    /**
     *
     */
    suspendPropertyObservers: function suspendPropertyObservers() {

        this._bNotifyPropertyObserversSuspended = true;

    },

    /**
     *
     */
    resumePropertyObservers: function resumePropertyObservers() {

        this._bNotifyPropertyObserversSuspended = false;

    }

};

}; // end of sap/portal/ui5/core/ObservablePropertiesMixin.js
if ( !jQuery.sap.isDeclared('sap.portal.ui5.core.PropertyObserver') ) {
"use strict";






jQuery.sap.declare('sap.portal.ui5.core.PropertyObserver');

/**
 * @experimental
 * @class sap.portal.ui5.core.PropertyObserver
 * @param aProperties
 * @param fnCallback
 * @returns {Function}
 * @constructor
 */
sap.portal.ui5.core.PropertyObserver = function PropertyObserver(aProperties, fnCallback) {

    var oObserver = !(this instanceof sap.portal.ui5.core.PropertyObserver) ?
        new sap.portal.ui5.core.PropertyObserver :
        this;

    if (aProperties) {
        oObserver.setObservableProperties(aProperties);
    }

    if (fnCallback) {
        oObserver.setCallback(fnCallback);
    }

    return oObserver;

};

sap.portal.ui5.core.PropertyObserver.prototype = {

    /**
     * @property {Function}
     */
    _fnCallback: null,

    /**
     * @property {Array}
     */
    _aProperties: [],

    /**
     * @property {Boolean}
     */
    _bIsCallableOnInit: false,

    /**
     * @property {Boolean}
     */
    _bIsSuspended: false,

    /**
     * @property {Object}
     */
    _oObservationTarget: null,

    /**
     * @property {String}
     */
    _sObservationProperty: null,

    /**
     *
     * @param aProperties
     */
    setObservableProperties: function setObservedProperties(aProperties) {

        if (typeof(aProperties) === 'string') {
            aProperties = [aProperties];
        }

        if (!(aProperties instanceof Array)) {
            // TODO:
            throw new TypeError;
        }

        this._aProperties = aProperties;

    },

    /**
     *
     * @returns {*}
     */
    getObservableProperties: function getObservedProperties() {

        return this._aProperties;

    },

    /**
     *
     * @param sProperty
     * @returns {boolean}
     */
    isObservesProperty: function isObservesProperty(sProperty) {

        return this._aProperties ? (this._aProperties.indexOf(sProperty) !== -1) : false;

    },

    /**
     *
     * @param fnCallback
     */
    setCallback: function setCallback(fnCallback) {

        this._fnCallback = fnCallback;

    },

    /**
     *
     * @returns {Function}
     */
    getCallback: function getCallback() {

        return this._fnCallback;

    },

    /**
     *
     * @returns {*}
     */
    callOnInit: function callOnInit() {

        this._bIsCallableOnInit = true;
        return this;

    },

    /**
     *
     * @returns {boolean}
     */
    isCallableOnInit: function isCallableOnInit() {

        return this._bIsCallableOnInit;

    },

    /**
     *
     * @returns {boolean}
     */
    isSuspended: function isSuspended() {

        return this._bIsSuspended;

    },

    /**
     *
     */
    suspend: function suspend() {

        this._bIsSuspended = true;

    },

    /**
     *
     */
    resume: function resume() {

        this._bIsSuspended = false;

    },

    /**
     *
     * @param vValue
     */
    updatePropertyValue: function updatePropertyValue(vValue, sProperty) {

        this._oObservationTarget.suspendPropertyObservers();
        this._oObservationTarget.setProperty(sProperty || this._sObservationProperty, vValue);
        this._oObservationTarget.resumePropertyObservers();

    },

    /**
     *
     * @param oTarget
     * @param sProperty
     * @param oNewValue
     * @param oOldValue
     * @returns {Function}
     */
    notify: function notify(oTarget, sProperty, oNewValue, oOldValue) {

        if (this.isSuspended()) {
            return;
        }

        var oPreservedObservationTarget = this._oObservationTarget,
            sPreservedObservationProperty = sProperty;


        this._oObservationTarget   = oTarget;
        this._sObservationProperty = sProperty;

        var fnCallback = this.getCallback();

        if (typeof(fnCallback) === 'string') {
            fnCallback = oTarget[fnCallback];
        }

        if (typeof(fnCallback) !== 'function') {
            throw new Error;
        }

        var vResult = fnCallback.call(oTarget, sProperty, oNewValue, oOldValue, this);

        this._oObservationTarget   = oPreservedObservationTarget;
        this._sObservationProperty = sPreservedObservationProperty;

        return vResult;

    }

};
}; // end of sap/portal/ui5/core/PropertyObserver.js
if ( !jQuery.sap.isDeclared('sap.portal.ui5.core.ObjectMetadata') ) {
"use strict";

jQuery.sap.require('sap.ui.base.ManagedObjectMetadata'); // unlisted dependency retained


jQuery.sap.declare('sap.portal.ui5.core.ObjectMetadata');

/**
 * @experimental
 * @class sap.portal.ui5.core.ObjectMetadata
 * @extends sap.ui.base.ManagedObject
 * @param sClassName
 * @param oClassInfo
 * @constructor
 */
sap.portal.ui5.core.ObjectMetadata = function ObjectMetadata(sClassName, oClassInfo) {

    // call super constructor
    sap.ui.base.ManagedObjectMetadata.apply(this, arguments);

};

//chain the prototypes
sap.portal.ui5.core.ObjectMetadata.prototype = jQuery.sap.newObject(sap.ui.base.ManagedObjectMetadata.prototype);

/**
 *
 * @param oClassInfo
 */
sap.portal.ui5.core.ObjectMetadata.prototype.extend = function extend(oClassInfo) {

    this._processPropertyObservers(oClassInfo);
    this.extendWithMixins(oClassInfo);
    return sap.ui.base.ManagedObjectMetadata.prototype.extend.call(this, oClassInfo);

};

/**
 * @member sap.portal.ui5.core.ObjectMetadata
 * @param oClassInfo
 */
sap.portal.ui5.core.ObjectMetadata.prototype.extendWithMixins = function extendWithMixins(oClassInfo) {

    var oBaseClass   = this.getClass().prototype,
        oParentClass = this.getParentClassPrototype(oClassInfo);

    if (!oParentClass || !oBaseClass) {
        // TODO: Desc
        throw new Error();
    }

    var sProp, iIndex, iLength,
        oMerge = {};

    for (sProp in oClassInfo) {
        if (oClassInfo.hasOwnProperty(sProp)) {
            oMerge[sProp] = [oClassInfo[sProp]];
        }
    }

    var aNewMixins = oClassInfo.metadata.mixins,
        aMixins = (this.getParent() instanceof sap.portal.ui5.core.ObjectMetadata) ?
            this.getParent().getMixins() :
            [];

    if (aNewMixins) {

        var sMixinName, oMixinBody,
            sMixinProp;

        for (iIndex = aNewMixins.length - 1; iIndex > -1; iIndex--) {

            sMixinName = aNewMixins[iIndex];

            if (aMixins.indexOf(sMixinName) !== -1) {
                continue; // Mixin already mixed
            }

            jQuery.sap.require(sMixinName);

            oMixinBody = jQuery.sap.getObject(sMixinName);

            if (typeof(oMixinBody) === 'function') {
                oMixinBody = oMixinBody.prototype;
            }

            for (sMixinProp in oMixinBody) {
                if (oMixinBody.hasOwnProperty(sMixinProp)) {
                    if (oMerge[sMixinProp]) {
                        oMerge[sMixinProp].splice(
                            oMerge[sMixinProp].length - 1, 0,
                            oMixinBody[sMixinProp]
                        );
                    } else {
                        oMerge[sMixinProp] = [oMixinBody[sMixinProp]];
                    }
                }
            }

        }

    }

    var oMergeValue, oProp;

    for (sProp in oMerge) {
        if (oMerge.hasOwnProperty(sProp)) { // Here is important to check own property

            oProp = oMerge[sProp];

            if (typeof(oParentClass[sProp]) !== 'undefined') {
                oProp.unshift(oParentClass[sProp]);
            }

            switch (typeof(oProp[oProp.length - 1])) {

            // Merge methods
            case 'function':

                if (sProp !== 'constructor') {

                    oMergeValue = oProp[0];

                    for (iIndex = 1, iLength = oProp.length; iIndex < iLength; iIndex++) {

                        // TODO: Insert here support of property observers chaining???

                        if (typeof(oMergeValue)   === 'function'
                        &&  typeof(oProp[iIndex]) === 'function') {
                            oMergeValue = this.factorySuperMethodWrapper(oMergeValue, oProp[iIndex]);
                        } else {
                            oMergeValue = oProp[iIndex];
                        }

                    }

                    oProp = oMergeValue;

                }

                break;

            default:
                oProp = oProp[oProp.length - 1];
                break;

            }

            if (oClassInfo[sProp] !== oProp) {
                oClassInfo[sProp] = oProp;
            }

        }
    }

};

/**
 *
 * @param {Function} fnSuper
 * @param {Function} fnOverload
 * @return {Function}
 */
sap.portal.ui5.core.ObjectMetadata.prototype.factorySuperMethodWrapper = function factorySuperMethodWrapper(fnSuper, fnOverload) {

    var fnOverloadedMethod = function overloadedMethod() {

        // Save existing call parent
        var fnOriginalSuper = this._super;

        // Set new super and bind scope
        this._super = function shiftSuper() {

            // NOTE: This function wrapper is required to avoid
            // endless loop when calling super from super.
            // In such cases without this function the super method
            // points to himself causing endless recursion.

            // Shifting super method
            this._super = fnOriginalSuper;

            // Cleanup
            if (typeof(this._super) === 'undefined') {
                delete this._super;
            }

            return fnSuper.apply(this, arguments);

        };

        // Save overloaded function result
        var vResult = fnOverload.apply(this, arguments);

        // Restore call parent
        this._super = fnOriginalSuper;

        // Cleanup
        if (typeof(this._super) === 'undefined') {
            delete this._super;
        }

        return vResult;

    };

    return fnOverloadedMethod;

};

/**
 * @private
 * @param oClassInfo
 */
sap.portal.ui5.core.ObjectMetadata.prototype._processPropertyObservers = function processPropertyObservers(oClassInfo) {

    // Add holder for property observers
    this._mPropertyObservers = {};
    this._mMixins = oClassInfo.metadata.mixins || [];

    var oBaseClass   = this.getClass().prototype,
        oParentClass = this.getParentClassPrototype(oClassInfo);

    if (!oParentClass || !oBaseClass) {
        // TODO: Desc
        throw new Error();
    }

    var sProp, oObserver;

    // Extract property observers into metadata property
    // and replace PO objects in class body to theirs callback methods.
    for (sProp in oClassInfo) {
        if (oClassInfo[sProp] instanceof sap.portal.ui5.core.PropertyObserver) {
            oObserver = oClassInfo[sProp];
            this._mPropertyObservers[sProp] = oObserver;
            oBaseClass[sProp] = oClassInfo[sProp] = oObserver.getCallback();
            oObserver.setCallback(sProp);
        }
    }

};

/**
 *
 * @param sKey
 * @returns {*}
 */
sap.portal.ui5.core.ObjectMetadata.prototype.getPropertyObserver = function getPropertyObserver(sKey) {

    return this._mPropertyObservers[sKey];

};

/**
 *
 * @returns {*}
 */
sap.portal.ui5.core.ObjectMetadata.prototype.getPropertyObservers = function getPropertyObservers() {

    if (this.getParent() instanceof sap.portal.ui5.core.ObjectMetadata) {
        return jQuery.extend({}, this.getParent().getPropertyObservers(), this._mPropertyObservers);
    } else {
        return this._mPropertyObservers;
    }

};

/**
 *
 * @param oClassInfo
 * @returns {*}
 */
sap.portal.ui5.core.ObjectMetadata.prototype.getParentClassPrototype = function getParentPrototype(oClassInfo) {

    var sParentClass = oClassInfo.metadata.baseType + '.prototype';
    return jQuery.sap.getObject(sParentClass);

};

/**
 *
 * @returns {*}
 */
sap.portal.ui5.core.ObjectMetadata.prototype.getMixins = function getMixins() {

    if (this.getParent() instanceof sap.portal.ui5.core.ObjectMetadata) {
        return this._mMixins.concat(this.getParent().getMixins());
    } else {
        return jQuery.unique(this._mMixins);
    }

};

}; // end of sap/portal/ui5/core/ObjectMetadata.js
if ( !jQuery.sap.isDeclared('sap.portal.ui5.core.Object') ) {
"use strict";

jQuery.sap.require('sap.ui.base.ManagedObject'); // unlisted dependency retained


jQuery.sap.declare('sap.portal.ui5.core.Object');

/**
 * @experimental
 * @class   sap.portal.ui5.core.Object
 * @extends sap.ui.base.ManagedObject
 * @uses    sap.portal.ui5.core.ObservablePropertiesMixin
 * @abstract
 */
sap.ui.base.ManagedObject.extend('sap.portal.ui5.core.Object', {

    metadata: {
        'abstract':    true,
        publicMethods: [],
        library:       'sap.portal.ui5.core',
        properties:    {},
        aggregations:  {},
        associations:  {},

        events: {

            /**
             * @event
             */
            init: {
            },

            /**
             * @event
             */
            destroy: {
            }

        },

        mixins: ['sap.portal.ui5.core.ObservablePropertiesMixin']

    },

    /**
     *
     */
    constructor: function constructor() {

        sap.ui.base.ManagedObject.apply(this, arguments);
        this.afterInit();

    },

    /**
     *
     */
    afterInit: function afterInit() {

        this.fireEvent('init');

    },

    /**
     *
     * @param oProperties
     */
    setProperties: function setProperties(oProperties) {

        var fnSetter;

        for (var sProperty in oProperties) {
            fnSetter = this['set' + sProperty[0].toUpperCase() + sProperty.substring(1)];
            if (typeof(fnSetter) === 'function') {
                fnSetter.call(this, oProperties[sProperty]);
            } else {
                this.setProperty(sProperty, oProperties[sProperty]);
            }
        }

        return this;

    },

    /**
     *
     * @returns {*}
     */
    destroy: function destroy() {

        var aPromises = [],
            fnSuper   = this._super.bind(this, arguments),
            sId       = this.getId(),
            oDfd      = jQuery.Deferred();

        this.fireEvent('destroy', {
            promises: aPromises
        });

        // Make promise which will be resolved
        // only when all operations be resolved
        jQuery
            .when.apply(jQuery, aPromises)
            .always( function() {

                jQuery
                    .when(fnSuper())
                    .always( function() {

                        //jQuery.sap.log.debug('Resolving Object.destroy promise', sId);
                        oDfd.resolve();

                    });

            });

        return oDfd.promise();

    },

    /**
     * @returns {boolean}
     */
    isDestroyed: function isDestroyed() {

        return Boolean(this.bIsDestroyed);

    }

}, /* Metadata constructor */ sap.portal.ui5.core.ObjectMetadata);

/**
 *
 * @param oConfig
 * @param sInterfaceClass
 */
sap.portal.ui5.core.Object.factoryUCTypeObject = function factoryUCTypeObject(oConfig, sInterfaceClass) {

    var sConstructorClass = oConfig.uctype || sInterfaceClass;

    // DISABLED: corrupts objects
    //delete oConfig.uctype;

    return sap.portal.ui5.core.Object.factoryObject(oConfig, sInterfaceClass, sConstructorClass);

};

/**
 *
 * @param oObject
 * @param sInterfaceClass
 */
sap.portal.ui5.core.Object.isInstanceOf = function isInstanceOf(oObject, sInterfaceClass) {

    var fnInterfaceConstructor = jQuery.sap.getObject(sInterfaceClass);

    if (typeof(fnInterfaceConstructor) !== 'function' || fnInterfaceConstructor._sapUiLazyLoader) {

        jQuery.sap.require(sInterfaceClass);

        fnInterfaceConstructor = jQuery.sap.getObject(sInterfaceClass);

        if (typeof(fnInterfaceConstructor) !== 'function') {
            throw new Error('Class ' + sInterfaceClass + ' is not found');
        }

    }

    if (oObject === null) {
        return false;
    }

    if (oObject instanceof fnInterfaceConstructor) {
        return true;
    }

    if (typeof(oObject.getMetadata) === 'function'
    &&  typeof(oObject.getMetadata().getMixins) === 'function'
    &&  oObject.getMetadata().getMixins().indexOf(sInterfaceClass) !== -1) {
        return true;
    }

    return false;

};

/**
 *
 * @param oConfig
 * @param sInterfaceClass
 * @param sConstructorClass
 * @returns {*}
 */
sap.portal.ui5.core.Object.factoryObject = function factoryObject(oConfig, sInterfaceClass, sConstructorClass) {

    var oObject;

    if (jQuery.isPlainObject(oConfig)) {

        var fnConstructor = jQuery.sap.getObject(sConstructorClass);
        if (typeof(fnConstructor) !== 'function' || fnConstructor._sapUiLazyLoader) {
            jQuery.sap.require(sConstructorClass);
            fnConstructor = jQuery.sap.getObject(sConstructorClass);
            if (typeof(fnConstructor) !== 'function') {
                throw new Error('Class ' + sConstructorClass + ' is not found');
            }
        }

        if (typeof(fnConstructor.getMetadata) === 'function'
        &&  typeof(fnConstructor.getMetadata().isAbstract) === 'function'
        &&  fnConstructor.getMetadata().isAbstract()) {
            throw new Error('Class ' + sConstructorClass + ' is abstract');
        }

        oObject = new fnConstructor(oConfig);

    } else {

        oObject = oConfig;

    }

    // check here
    if (sInterfaceClass && !sap.portal.ui5.core.Object.isInstanceOf(oObject, sInterfaceClass)) {
        throw new Error('Interface mismatch');
    }

    return oObject;

};

}; // end of sap/portal/ui5/core/Object.js
if ( !jQuery.sap.isDeclared('sap.portal.ui5.core.View') ) {
"use strict";


jQuery.sap.declare('sap.portal.ui5.core.View');

/**
 * @experimental
 * @class sap.portal.ui5.core.View
 * @extends sap.portal.ui5.core.Object
 */
sap.portal.ui5.core.Object.extend('sap.portal.ui5.core.View', {
    metadata: {
        'abstract': true,
        properties: {

            /**
             * @cfg {Object}
             * @accessor
             */
            componentModel: {
                type: 'any',
                defaultValue: null
            },

            /**
             * @cfg {sap.portal.ui5.core.Component}
             * @accessor
             */
            controller: {
                type: 'any',
                defaultValue: null
            },

            /**
             * @cfg {string}
             * @accessor
             */
            placeAt: {
                type: 'any',
                defaultValue: null
            }

        },
        events: {

            /**
             * @event
             */
            render: {},

            /**
             * @event
             */
            renderChildComponents: {},

            /**
             * @event
             */
            beforeUnrender: {},

            /**
             * @event
             */
            unrender: {},

            /**
             * Before component repaint/dimension change
             * @event
             */
            beforeReflow: {},

            /**
             * Component repainted/dimension changed
             * @event
             */
            reflow: {}

        }
    },

    /**
     * @return {jQuery.promise}
     */
    unrender: function unrender() {

        jQuery.sap.log.error('CALLING STUB FUNCTION');
        this.fireEvent('beforeUnrender');
        this.fireEvent('unrender');
        var oDfd = jQuery.Deferred();
        oDfd.resolve();
        return oDfd.promise();

    },

    /**
     * @return {jQuery.promise}
     */
    render: function render() {

        jQuery.sap.log.error('CALLING STUB FUNCTION');
        this.fireEvent('render');
        var oDfd = jQuery.Deferred();
        oDfd.resolve();
        return oDfd.promise();

    },

    /**
     * @return {jQuery.promise}
     */
    renderChildComponents: function renderChildComponents(aComponents, oLayoutData) {

        jQuery.sap.log.error('CALLING STUB FUNCTION');
        this.fireEvent('renderChildComponents');
        var oDfd = jQuery.Deferred();
        oDfd.resolve();
        return oDfd.promise();

    },

    /**
     *
     * @returns {boolean}
     */
    isRendered: function isRendered() {

        jQuery.sap.log.error('CALLING STUB FUNCTION');
        return false;

    },

    /**
     *
     * @param oController
     * @return {jQuery.Promise}
     */
    detachController: function detachController(oController) {

        if (this.getController() !== oController) {
            return undefined;
        }

        var aPromises = [];

        if (this.isRendered()) {
            aPromises.push( this.unrender() );
        }

        aPromises.push( this.setController(null) );
        aPromises.push( this.setPlaceAt(null) );

        return jQuery.when.apply(jQuery, aPromises);

    },

    /**
     *
     * @param oController
     */
    attachController: function attachController(oController) {

        this.setController(oController);

    },

    /**
     *
     * @returns {*}
     */
    destroy: function destroy() {

        var aPromises = [];

        var oController = this.getController();

        if (oController) {
            aPromises.push( this.detachController(oController) );
        }

        return jQuery
               .when.apply(jQuery, aPromises)
               .pipe( this._super.bind(this, arguments) );

    }

});

}; // end of sap/portal/ui5/core/View.js
if ( !jQuery.sap.isDeclared('sap.portal.ui5.core.Collection') ) {
"use strict";



jQuery.sap.declare('sap.portal.ui5.core.Collection');

/**
 * @experimental
 * @class sap.portal.ui5.core.Collection
 * @extends sap.portal.ui5.core.Object
 */
sap.portal.ui5.core.Object.extend('sap.portal.ui5.core.Collection', {

    metadata: {
        properties: {

            /**
             * Private array representation of collection
             * @cfg {array}
             * @accessor
             */
            items: {
                type: 'any',
                defaultValue: null
            },

            /**
             * String that defines class to which items should be casted
             * @cfg {string}
             * @accessor
             */
            itemType: {
                type: 'string',
                defaultValue: null
            },

            /**
             * Flag that defined weather casting to be enabled
             * @cfg {boolean}
             * @accessor
             */
            castItems: {
                type: 'boolean',
                defaultValue: false
            },

            /**
             * @cfg {boolean}
             * @accessor
             */
            autoDestroyItems: {
                type: 'boolean',
                defaultValue: false
            }

        },

        events: {

            /**
             * @event
             */
            itemAdded: {},

            /**
             * @event
             */
            itemRemoved: {},

            /**
             * @event
             */
            itemModified: {},

            /**
             * @event
             */
            itemReplaced: {},

            /**
             * @event
             */
            collectionModified: {},

            /**
             * @event
             */
            collectionReplaced: {},

            /**
             * @event
             */
            beforeCollectionReplaced: {},

        }

    },

    /**
     * @protected
     * @property {array}
     */
    aCollection: null,

    /**
     * @template
     */
    init: function init() {

        this.aCollection = this.factoryCollection();

        if (this._super) {
            this._super.apply(this, arguments);
        }

    },

    /**
     * @protected
     */
    factoryCollection: function factoryCollection() {

        return [];

    },

    /**
     * @private
     * @method
     */
    _processCollection: sap.portal.ui5.core.PropertyObserver(
        ['items'],
        /**
         * @member sap.portal.ui5.core.Collection
         * @param sKey
         * @param aCollection
         * @param aOldCollection
         * @param oObserver
         */
        function processCollection(sKey, aCollection, aOldCollection, oObserver) {

            this.fireEvent('beforeCollectionReplaced', {
                newValue: aCollection,
                oldValue: aOldCollection
            });

            if (aCollection === null && aOldCollection === null) {
                aCollection = this.factoryCollection();
            }

            if (!jQuery.isArray(aCollection)) {
                throw new TypeError('Given collection items is not array');
            }

            if (aOldCollection) {
                this.removeItems(aOldCollection);
            }

            this.aCollection = aCollection;

            this.addItems(aCollection, 0);

            oObserver.updatePropertyValue(aCollection);

            this.fireEvent('collectionReplaced', {
                newValue: aCollection,
                oldValue: aOldCollection
            });

        }

    ).callOnInit(),

    /**
     * Validate single item content type
     *
     * If given string value, then validator will lookup for object using
     * string value as path.
     *
     * If given function value, then validator will check items using instanceof operator.
     *
     * @protected
     * @method
     * @param  {*} item Item to be checked
     * @return {Boolean}
     */
    validateContentItemType: function validateContentItemType(oItem) {

        var sType = this.getItemType();

        // Check if content type is native class and item matches to it.
        if (jQuery.type(oItem) === sType) {
            return true;
        }

        var fnItemClass = jQuery.sap.getObject(sType);

        switch (true) {

        case typeof(fnItemClass) === 'function':
            return (oItem instanceof fnItemClass);

        default:
            throw new Error('Path: ' + sType + ' is not function');

        }

    },

    /**
     * Casts item to class defined in itemType property of collection.
     *
     * @param oItem
     * parameter to be passed to constructor of class defined in itemType
     * @return instance of class defined in itemType
     * @throws TypeError in case itemType does not define any class
     */
    castItem: function castItem(oItem) {

        var sType = this.getItemType();

        if (jQuery.isPlainObject(oItem) && oItem.uctype) {
            sType = oItem.uctype;
            delete oItem.uctype;
        }

        var fnConstructor = jQuery.sap.getObject(sType),
            oResult = oItem;

        if (!fnConstructor) {
            jQuery.sap.require(sType);
            fnConstructor = jQuery.sap.getObject(sType);
        }

        switch (true) {

        case typeof(fnConstructor) === 'function':
            oResult = new fnConstructor(oItem);
            break;

        default:
            throw new Error('Path: ' + sType + ' is not function');

        }

        if (!this.validateContentItemType(oResult)) {
            throw new Error;
        }

        return oResult;

    },

    /**
     *
     * @returns {number}
     */
    getLength: function getLength() {

        return this.aCollection.length;

    },

    /**
     *
     * @param aNewItems
     * @param iStartIndex
     * @returns {boolean}
     */
    addItems: function addItems(aNewItems, iStartIndex) {

        if (!jQuery.isArray(aNewItems)) {
            throw new TypeError();
        }

        // Run validator over all items
        var iIndex, oItem,
            iLength = aNewItems.length,
            iStartIndex = (iStartIndex === undefined ? this.getLength() : iStartIndex);

        for (iIndex = 0; iIndex < iLength; iIndex++) {
            oItem = aNewItems[iIndex];
            this.addByIndex(iStartIndex++, oItem);
        }

        return true;

    },

    /**
     *
     * @param aItems
     * @returns {boolean}
     */
    removeItems: function removeItems(aItems) {

        if (!jQuery.isArray(aItems)) {
            throw new TypeError();
        }

        // Run validator over all items
        var iIndex, oItem,
            iLength = aItems.length,
            iRemovalIndex;

        for (iIndex = 0; iIndex < iLength; iIndex++) {

            oItem = aItems[iIndex];
            iRemovalIndex = this.indexOf(oItem);

            if (iRemovalIndex === -1) {
                continue;
            }

            this.removeByIndex(iRemovalIndex);

        }

        return true;

    },

    /**
     * Adds item to collection.
     *
     * @param oItem
     * item to be added to collection
     * @return updated collection
     */
    addItem: function addItem(oItem) {

        return this.addItems([oItem]);

    },

    /**
     * Removes item from collection.
     *
     * @param oItem
     * item to be removed from collection
     * @return updated collection
     */
    removeItem: function removeItem(oItem) {

        return this.removeItems([oItem]);

    },

    /**
     *
     * @param iIndex
     * @param oItem
     */
    addByIndex: function addByIndex(iIndex, oItem) {

        if (this.getItemType() && !this.validateContentItemType(oItem)) {

            var sType = this.getItemType();

            // If casting option not enabled -> throw validation exception
            if (!this.getCastItems()) {
                throw new TypeError('Item #' + iIndex + ' ' + String(oItem) + ' is not type of ' + sType);
            }

            // If casting fails -> throw exception with explanation.
            try {

                oItem = this.castItem(oItem);

            } catch (oException) {

                var oError = new Error('Unable to cast item #' + iIndex + ' ' + String(oItem) + ' into ' + sType + ': ' + oException.message);

                // Store parent exception for further investigation
                oError.parent = oException;

                throw oError;

            }

        }

        this.observeItemModifications(oItem);

        var aCollection = this.aCollection,
            iCollectionLength = aCollection.length;

        if (iIndex < 0) {

            throw new Error('Out of range');

        } else if ((iCollectionLength - 1) < iIndex || iIndex === 0) {

            aCollection[iIndex] = oItem;

            this.fireEvent('_change', {
                "id": this.getId(),
                "name": 'items.length',
                "oldValue": iCollectionLength,
                "newValue": aCollection.length
            });

            this.fireEvent('itemAdded', {
                index: iIndex,
                item: oItem
            });

            this.fireEvent('collectionModified', {
                action: 'itemAdded',
                index: iIndex,
                item: oItem
            });


        } else {

            var oldItem = aCollection.splice(iIndex, 1, oItem)[0];

            this.fireEvent('itemReplaced', {
                index: iIndex,
                item: oItem,
                oldItem: oldItem
            });

            this.fireEvent('collectionModified', {
                action: 'itemReplaced',
                index: iIndex,
                item: oItem
            });

        }

    },

    /**
     *
     * @param iIndex
     * @returns {boolean}
     */
    removeByIndex: function removeByIndex(iIndex) {

        var oItem = this.getItemAtIndex(iIndex),
            aCollection = this.aCollection;

        var iCollectionLength = aCollection.length;

        if (iIndex < 0 || !(iIndex < iCollectionLength)) {
            throw new Error('out of range');
        }

        this.unobserveItemModifications(oItem);

        aCollection.splice(iIndex, 1);

        this.fireEvent('_change', {
            "id":       this.getId(),
            "name":     'items.length',
            "oldValue": iCollectionLength,
            "newValue": aCollection.length
        });

        this.fireEvent('itemRemoved', {
            index: iIndex,
            item:  oItem
        });

        this.fireEvent('collectionModified', {
            action: 'itemRemoved',
            index:  iIndex,
            item:   oItem
        });

        return true;

    },

    /**
     *
     * @param iIndex
     * @returns {*}
     */
    getItemAtIndex: function getItemAtIndex(iIndex) {

        return this.aCollection[iIndex];

    },

    /**
     * Get item index in the array of _items
     *
     * @param item
     * Item to be searched in the array of _items
     * @return Item index in case it is found, -1 otherwise
     */
    indexOf: function indexOf(oItem) {

        var aCollection = this.aCollection;

        if (aCollection.indexOf instanceof Function) {
            return aCollection.indexOf(oItem);
        } else if (aCollection instanceof Array) {
            return jQuery.indexOf(oItem);
        } else {
            throw new Error;
        }

    },

    /**
     * Get item index in the array of _items
     *
     * @param item
     * Item to be searched in the array of _items
     * @return Item index in case it is found, -1 otherwise
     */
    lastIndexOf: function lastIndexOf(oItem) {

        var aCollection = this.aCollection;

        if (aCollection.lastIndexOf instanceof Function) {
            return aCollection.lastIndexOf(oItem);
        } else if (aCollection instanceof Array) {
            return jQuery.lastIndexOf(oItem);
        } else {
            throw new Error;
        }

    },

    /**
     * Callback to be invoked each time one of the items
     * in the collection fires _change event
     *
     * @protected
     * @param evt {sap.ui.base.Event}
     * _change event thrown by one of the items
     */
    notifyItemModification: function notifyItemModification(oEvent) {

        var oItem       = oEvent.getSource(),
            oParameters = oEvent.getParameters(),
            sProperty   = oEvent.getParameter('name');

        var iItemIndex = this.indexOf(oItem);

        this.fireEvent('itemModified', {
            oldValue: oParameters.oldValue,
            newValue: oParameters.newValue,
            index:    iItemIndex,
            property: sProperty,
            target:   this
        });

        this.fireEvent('collectionModified', {
            action:   'itemModified',
            index:    iItemIndex,
            property: sProperty,
            item:     oItem
        });

    },

    /**
     * @protected
     * @param oItem
     */
    observeItemModifications: function observeItemModifications(oItem) {

        if (oItem instanceof sap.ui.base.EventProvider) {
            oItem.attachEvent('_change', this.notifyItemModification.bind(this));
        }

    },

    /**
     * @protected
     * @param oItem
     */
    unobserveItemModifications: function unobserveItemModifications(oItem) {

        // TODO:

    },

    /**
     *
     * @param fnCallback
     * @returns {Array}
     */
    forEach: function forEach(fnCallback) {

        if (typeof(fnCallback) !== 'function') {
            throw new TypeError;
        }

        var aCollection = this.aCollection,
            iIndex, iLength = aCollection.length,
            aResults = [];

        for (iIndex = 0; iIndex < iLength; iIndex++) {
            aResults.push( fnCallback.call(this, aCollection[iIndex], iIndex) );
        }

        return aResults;

    },

    /**
     *
     * @param fnCallback
     * @returns {Array}
     */
    queryBy: function queryBy(fnCallback) {

        if (typeof(fnCallback) !== 'function') {
            throw new TypeError;
        }

        var aCollection = this.aCollection,
            iIndex, iLength = aCollection.length,
            aResults = [];

        for (iIndex = 0; iIndex < iLength; iIndex++) {
            if (fnCallback.call(this, aCollection[iIndex], iIndex) === true) {
                aResults.push(aCollection[iIndex]);
            }
        }

        return aResults;

    },

    /**
     *
     * @param fnCallback
     * @param iFromIndex
     * @returns {number}
     */
    findBy: function findBy(fnCallback, iFromIndex) {

        if (typeof(fnCallback) !== 'function') {
            throw new TypeError;
        }

        var aCollection = this.aCollection,
            iIndex, iLength = aCollection.length;

        for (iIndex = (iFromIndex || 0); iIndex < iLength; iIndex++) {
            if (fnCallback.call(this, aCollection[iIndex], iIndex) === true) {
                return iIndex;
            }
        }

        return -1;

    },

    /**
     *
     * @param sProperty
     * @param vValue
     * @returns {number}
     */
    findByProperty: function findByProperty(sProperty, vValue) {

        return this.findBy(function fnIterator(oItem) {

            if (oItem instanceof sap.ui.base.ManagedObject) {

                return (oItem.getProperty(sProperty) === vValue);

            } else if (oItem instanceof Object && oItem !== null) {

                return (oItem[sProperty] === vValue);

            } else {

                throw new TypeError;

            }

        });

    },

    /**
     * @param sProperty
     * @param vValue
     * @returns {*}
     */
    getByProperty: function getByProperty(sProperty, vValue) {

        var aCollection = this.aCollection,
            oItem, iIndex,
            iLength = aCollection.length;

        for (iIndex = 0; iIndex < iLength; iIndex++) {

            oItem = aCollection[iIndex];

            if (oItem instanceof sap.ui.base.ManagedObject) {

                if (oItem.getProperty(sProperty) === vValue) {
                    return oItem;
                }

            } else if (oItem instanceof Object && oItem !== null) {

                if (oItem[sProperty] === vValue) {
                    return oItem;
                }

            } else {

                throw new TypeError;

            }

        }

        return undefined;

    },

    /**
     *
     * @param sProperty
     * @param sValue
     * @returns {Array}
     */
    queryByProperty: function queryByProperty(sProperty, vValue) {

        return this.queryBy(function fnIterator(oItem) {

            if (oItem instanceof sap.ui.base.ManagedObject) {

                return (oItem.getProperty(sProperty) === vValue);

            } else if (oItem instanceof Object && oItem !== null) {

                return (oItem[sProperty] === vValue);

            } else {

                throw new TypeError;

            }

        });

    },

    /**
     * @public
     */
    destroy: function destroy() {

        var aPromises = [],
            fnSuper = this._super.bind(this, arguments),
            sId = this.getId();

        if (this.getAutoDestroyItems()) {
            aPromises.push( this.destroyItems() );
        }

        // Make promise which will be resolved
        // only when all operations be resolved
        return jQuery
            .when.apply(jQuery, aPromises)
            .always( function() {

                return fnSuper();

            });
            //.done( function() {
            //
            //    jQuery.sap.log.debug('Resolving Collection.destroy promise', sId);
            //
            //});

    },

    /**
     * @public
     */
    destroyItems: function destroyItems() {

        var aCollection = this.aCollection,
            oItem, iIndex,
            iLength   = aCollection.length,
            aPromises = [];

        for (iIndex = 0; iIndex < iLength; iIndex++) {

            oItem = aCollection[iIndex];

            if (oItem instanceof sap.ui.base.ManagedObject || (
                typeof(oItem) === 'object'
                && oItem !== null
                && typeof(oItem.destroy) === 'function'
            )) {
                aPromises.push(oItem.destroy());
            }
        }

        return jQuery.when.apply(jQuery, aPromises);

    }

});

}; // end of sap/portal/ui5/core/Collection.js
if ( !jQuery.sap.isDeclared('sap.portal.ui5.core.ComponentCollection') ) {
"use strict";


jQuery.sap.declare('sap.portal.ui5.core.ComponentCollection');

/**
 * @experimental
 * @class sap.portal.ui5.core.ComponentCollection
 * @extends sap.portal.ui5.core.Collection
 */
sap.portal.ui5.core.Collection.extend('sap.portal.ui5.core.ComponentCollection', {

    metadata: {

        properties: {

            /**
             * @cfg {boolean}
             * @accessor
             */
            castItems: {
                type: 'boolean',
                defaultValue: true
            },

            /**
             * @cfg {string}
             * @accessor
             */
            itemType: {
                type: 'string',
                defaultValue: 'sap.portal.ui5.core.Component'
            },

            /**
             * @cfg {boolean}
             * @accessor
             */
            autoDestroyItems: {
                type: 'boolean',
                defaultValue: true
            }

        }

    },

    /**
     *
     *
     * @param sMethod
     * @param aArguments
     * @returns {Array}
     */
    applyMethod: function applyMethod(sMethod, aArguments) {

        var aCollection = this.aCollection,
            iIndex, oItem, iLength = aCollection.length,
            aResult = [];

        for (iIndex = 0; iIndex < iLength; iIndex++) {
            oItem = aCollection[iIndex];
            aResult.push( oItem[sMethod].apply(oItem, aArguments ? aArguments : []) );
        }

        return aResult;

    },

    /**
     *
     * @param sId
     * @param bRecursive
     * @returns {*}
     */
    getByComponentId: function getByComponentId(sId, bRecursive) {

        var aCollection = this.aCollection,
            iIndex, iLength = aCollection.length;

        for (iIndex = 0; iIndex < iLength; iIndex++) {
            if (aCollection[iIndex].getComponentId() === sId) {
                return aCollection[iIndex];
            }
        }

        if (bRecursive) {
            var oResult;
            for (iIndex = 0; iIndex < iLength; iIndex++) {
                oResult = aCollection[iIndex].getChildByComponentId(sId, true);
                if (oResult) {
                    return oResult;
                }
            }
        }

    }

});

}; // end of sap/portal/ui5/core/ComponentCollection.js
if ( !jQuery.sap.isDeclared('sap.portal.ui5.core.ComponentManager') ) {
"use strict";


jQuery.sap.declare('sap.portal.ui5.core.ComponentManager');

/**
 * @experimental
 * @class sap.portal.ui5.core.ComponentManager
 * @extends sap.portal.ui5.core.Object
 */
sap.portal.ui5.core.Object.extend('sap.portal.ui5.core.ComponentManager', {

    /**
     * @property {Object}
     * @private
     */
    _oComponents: {},

    /**
     *
     * @param sId
     * @returns {*}
     */
    getComponent: function getComponent(sId) {

        return this._oComponents[sId];

    },

    /**
     *
     * @param sId
     * @param oComponent
     */
    registerComponent: function registerComponent(sId, oComponent) {

        if (typeof(sId) !== 'string' && typeof(sId) !== 'number') {
            throw new TypeError('ID is not string/number');
        }

        if (!(oComponent instanceof sap.portal.ui5.core.Component)) {
            throw new TypeError('Given component is not instance');
        }

        if (this._oComponents[sId]) {
            throw new Error('ID ' + sId + ' is already registered in component manager.');
        }

        this._oComponents[sId] = oComponent;

    },

    /**
     *
     * @param sId
     */
    unregisterComponent: function unregisterComponent(sId) {

        if (typeof(sId) !== 'string' && typeof(sId) !== 'number') {
            throw new TypeError('ID is not string/number');
        }

        delete this._oComponents[sId];

    }

});

// Create singletone
/**
 * @singleton
 * @type {sap.portal.ui5.core.ComponentManager}
 */
sap.portal.ui5.core.ComponentManager = new sap.portal.ui5.core.ComponentManager;

}; // end of sap/portal/ui5/core/ComponentManager.js
if ( !jQuery.sap.isDeclared('sap.portal.ui5.core.DynamicView') ) {
  jQuery.sap.declare('sap.portal.ui5.core.DynamicView');
"use strict";



/**
 * @experimental
 * @class sap.portal.ui5.core.DynamicView
 * @extends sap.portal.ui5.core.View
 */
sap.portal.ui5.core.View.extend('sap.portal.ui5.core.DynamicView', {

    metadata: {
        properties: {

            /**
             *
             */
            defaultView: {
                type: 'any',
                defaultValue: null
            },

            /**
             *
             */
            desktopView: {
                type: 'any',
                defaultValue: null
            },

            /**
             *
             */
            mobileView: {
                type: 'any',
                defaultValue: null
            },

            /**
             *
             */
            tabletView: {
                type: 'any',
                defaultValue: null
            },

            /**
             *
             */
            phoneView: {
                type: 'any',
                defaultValue: null
            },

            /**
             * Bridged view object
             * @property {sap.portal.ui5.core.View}
             * @protected
             */
            viewApi: {
                type: 'any',
                defaultValue: null
            },

            /**
             * @protected
             */
            viewClass: {
                type: 'string',
                defaultValue: 'sap.portal.ui5.core.View'
            },

            /**
             * @protected
             */
            detectedDevices: {
                type: 'any',
                defaultValue: jQuery.device.is
            }

        }
    },

    /**
     *
     * @returns {*}
     */
    detectViewApi: function detectViewApi() {

        var oDetected = this.getDetectedDevices();

        var oPhoneView   = this.getPhoneView(),
            oTabletView  = this.getTabletView(),
            oMobileView  = this.getMobileView(),
            oDesktopView = this.getDesktopView(),
            oDefaultView = this.getDefaultView();

        if (!oDefaultView) {
            throw new Error('No default view defined');
        }

        switch (true) {

        case Boolean(oDetected.phone && oPhoneView):
            return oPhoneView;

        case Boolean(oDetected.tablet && oTabletView):
            return oTabletView;

        case Boolean(oDetected.mobile && oMobileView):
            return oMobileView;

        case Boolean(oDetected.desktop && oDesktopView):
            return oDesktopView;

        default:
            return oDefaultView;

        }

    },

    /**
     * @protected
     */
    processViewApi: sap.portal.ui5.core.PropertyObserver('viewApi', function processViewApi(sKey, oValue, oOldValue, oObserver) {

        var oViewApi   = this.getViewApi(),
            sViewClass = this.getViewClass();

        if (oViewApi === null) {
            oViewApi = this.detectViewApi();
        }

        if (jQuery.isPlainObject(oViewApi)) {
            oViewApi = sap.portal.ui5.core.Object.factoryUCTypeObject(oViewApi, sViewClass);
        } else if (!sap.portal.ui5.core.Object.isInstanceOf(oViewApi, sViewClass)) {
            throw new Error('Interface mismatch');
        }

        // Update property in object without triggering observation again
        oObserver.updatePropertyValue(oViewApi);

        // Subscribe to all view events to make event forwarding
        var oEvents = this.getMetadata().getAllEvents(),
            sEvent;

        for (sEvent in oEvents) {
            oViewApi.attachEvent(sEvent, {}, function forwardEvent(oEvent) {
                this.fireEvent(oEvent.sId, oEvent.getParameters());
            });
        }

    }).callOnInit(),

    /**
     * @protected
     */
    proxySetProperty: sap.portal.ui5.core.PropertyObserver(
        ['componentModel', 'controller', 'placeAt'],
        function proxySetProperty(sKey, oValue) {

            var oViewApi = this.getViewApi();
            oViewApi.setProperty(sKey, oValue);

        }
    ).callOnInit(),

    /**
     * @return {jQuery.promise}
     */
    unrender: function unrender() {

        var oViewApi = this.getViewApi();
        return oViewApi.unrender.apply(oViewApi, arguments);

    },

    /**
     * @return {jQuery.promise}
     */
    render: function render() {

        var oViewApi = this.getViewApi();
        return oViewApi.render.apply(oViewApi, arguments);

    },

    /**
     * @return {jQuery.promise}
     */
    renderChildComponents: function renderChildComponents(aComponents, oLayoutData) {

        var oViewApi = this.getViewApi();
        return oViewApi.renderChildComponents.apply(oViewApi, arguments);

    },

    /**
     *
     * @returns {boolean}
     */
    isRendered: function isRendered() {

        var oViewApi = this.getViewApi();
        return oViewApi.isRendered.apply(oViewApi, arguments);

    },

    /**
     *
     * @returns {*}
     */
    destroy: function destroy() {

        var oViewApi = this.getViewApi();
        return oViewApi.destroy.apply(oViewApi, arguments);

    }

});
}; // end of sap/portal/ui5/core/DynamicView.js
if ( !jQuery.sap.isDeclared('sap.portal.ui5.core.LayoutData') ) {
"use strict";


jQuery.sap.declare('sap.portal.ui5.core.LayoutData');

/**
 * @experimental
 * @class sap.portal.ui5.core.LayoutData
 * @extends sap.portal.ui5.core.Collection
 */
sap.portal.ui5.core.Collection.extend('sap.portal.ui5.core.LayoutData', {

    metadata: {
        properties: {

            /**
             * @protected
             * @cfg {string}
             */
            primaryKey: {
                type: 'string',
                defaultValue: 'componentId'
            },

            /**
             * Parameters for layout engine
             * @cfg {Object}
             */
             layoutConfig: {
                 type: 'any',
                 defaultValue: {}
             }

        }
    },

    /**
     *
     * @param sId
     * @returns {*}
     */
    getByComponentId: function getByComponentId(sId, sProperty) {

        var iIndex = this.findByProperty(sProperty || this.getPrimaryKey(), sId);

        if (iIndex === -1) {
            return;
        }

        return this.getItemAtIndex(iIndex);

    }

});
}; // end of sap/portal/ui5/core/LayoutData.js
if ( !jQuery.sap.isDeclared('sap.portal.ui5.core.LayoutInterface') ) {
"use strict";


jQuery.sap.declare('sap.portal.ui5.core.LayoutInterface');

/**
 * @experimental
 * @class sap.portal.ui5.core.LayoutInterface
 * @extends sap.portal.ui5.core.Object
 */
sap.portal.ui5.core.Object.extend('sap.portal.ui5.core.LayoutInterface', {

    metadata: {
        'abstract': true
    },

    /**
     *
     * @param aComponents
     * @param oLayoutData
     * @param oView
     * @param oComponent
     * @returns {{component: {}, childComponents: {}}}
     */
    processLayout: function processLayout(aComponents, oLayoutData, oView, oComponent) {

        return {

            component: {
            },

            childComponents: {
            }

        }

    }

});

}; // end of sap/portal/ui5/core/LayoutInterface.js
if ( !jQuery.sap.isDeclared('sap.portal.ui5.core.UI5ControlView') ) {
"use strict";


jQuery.sap.declare('sap.portal.ui5.core.UI5ControlView');

/**
 * @experimental
 * @class sap.portal.ui5.core.UI5ControlView
 * @extends sap.portal.ui5.core.View
 */
sap.portal.ui5.core.View.extend('sap.portal.ui5.core.UI5ControlView', {

    metadata: {
        properties: {

            /**
             * @cfg {Object}
             * @accessor
             */
            config: {
                type: 'any',
                defaultValue: {}
            },

            /**
             * @cfg {string}
             * @accessor
             */
            controlClass: {
                type: 'string',
                defaultValue: null
            },

            /**
             * @cfg {Object}
             * @accessor
             */
            control: {
                type: 'any',
                defaultValue: null
            },

            /**
             * @cfg {Object}
             * @accessor
             */
            layoutControl: {
                type: 'any',
                defaultValue: null
            },

            /**
             * @cfg {string}
             * @accessor
             */
            layoutClass: {
                type: 'string',
                defaultValue: null
            },

            /**
             * @cfg {Object}
             * @accessor
             */
            layoutConfig: {
                type: 'any',
                defaultValue: {}
            },

            /**
             * @cfg {string|Array}
             */
            controlStyleClass: {
                type: 'any',
                defaultValue: null
            },

            /**
             * @cfg {string|Array}
             */
            layoutStyleClass: {
                type: 'any',
                defaultValue: null
            },

            /**
             * @cfg {string}
             */
            width: {
                type: 'string',
                defaultValue: null
            },

            /**
             * @cfg {string}
             */
            height: {
                type: 'string',
                defaultValue: null
            },

            /**
             * @cfg {string}
             */
            innerWidth: {
                type: 'string',
                defaultValue: null
            },

            /**
             * @cfg {string}
             */
            innerHeight: {
                type: 'string',
                defaultValue: null
            },

            /**
             * @cfg {string}
             */
            minWidth: {
                type: 'string',
                defaultValue: null
            },

            /**
             * @cfg {string}
             */
            minHeight: {
                type: 'string',
                defaultValue: null
            },

            /**
             * @cfg {string}
             */
            maxWidth: {
                type: 'string',
                defaultValue: null
            },

            /**
             * @cfg {string}
             */
            maxHeight: {
                type: 'string',
                defaultValue: null
            }

        },

        events: {

            /**
             * Fired when internal layout reflow happen
             * @event
             */
            innerReflow: {
            }

        }

    },

    /**
     * Promise placeholder
     * @protected
     */
    renderPromise: null,

    /**
     * Promise placeholder
     * @protected
     */
    unrenderPromise: null,

    /**
     * Promise placeholder
     * @protected
     */
    renderChildComponentsPromise: null,

    /**
     * Promise placeholder
     * @protected
     */
    processDimensionsPromise: null,

    /**
     * Promise placeholder
     * @protected
     */
    processInnerDimensionsPromise: null,

    /**
     * @protected
     * @param oConfig
     * @returns {*}
     */
    processConfig: function processConfig(oConfig) {

        return oConfig;

    },

    /**
     * @protected
     * @param oConfig
     * @returns {*}
     */
    processLayoutConfig: function processLayoutConfig(oConfig) {

        return oConfig;

    },

    /**
     * @protected
     * @method
     */
    instantiateLayoutControl: sap.portal.ui5.core.PropertyObserver(
        'layoutConfig',
        /**
         * @member sap.portal.ui5.core.UI5ControlView
         */
        function instantiateLayoutControl() {

            var oConfig  = this.getLayoutConfig(),
                oControl = this.getLayoutControl();

            // Do not instantiate control if no config
            // or control is already exists
            if (oConfig === null || oControl) {
                return;
            }

            var sInterface   = 'sap.ui.core.Control',
                sConstructor = this.getProperty('layoutClass');

            if (!sConstructor) {
                return;
            }

            oConfig  = this.processLayoutConfig(oConfig);
            oControl = sap.portal.ui5.core.Object.factoryObject(oConfig || {}, sInterface, sConstructor);

            this.setLayoutControl(oControl);

        }
    ).callOnInit(),

    /**
     * Helper function
     * @protected
     * @param oControl
     */
    invalidateControl: function invalidateControl(oControl, sReason) {

        var aPendingControls = sap.portal.ui5.core.UI5ControlView.aPendingInvalidationControls;

        // Push into invalidation if control still not in invalidation
        if (aPendingControls.indexOf(oControl) === -1 && !oControl.isInvalidateSuppressed()) {
            aPendingControls.push(oControl);

            if (sReason) {
                //jQuery.sap.log.warning((this.getController() ? this.getController().getComponentId() : this.getId()) + ', invalidating control ' + oControl.getId() + ': ' + sReason);
            }

            return oControl.invalidate();
        }

    },

    /**
     * @protected
     * @method
     */
    instantiateControl: sap.portal.ui5.core.PropertyObserver(
        'config',
        /**
         * @member sap.portal.ui5.core.UI5ControlView
         */
        function instantiateControl() {

            var oConfig  = this.getConfig(),
                oControl = this.getControl();

            // Do not instantiate control if no config
            // or control is already exists
            if (oConfig === null || oControl) {
                return;
            }

            var sInterface   = 'sap.ui.core.Control',
                sConstructor = this.getProperty('controlClass');

            if (!sConstructor) {
                return;
            }

            oConfig  = this.processConfig(oConfig);
            oControl = sap.portal.ui5.core.Object.factoryObject(oConfig || {}, sInterface, sConstructor);

            this.setControl(oControl);

        }
    ).callOnInit(),

    /**
     * @protected
     * @method
     */
    attachLayoutControl: sap.portal.ui5.core.PropertyObserver(
        ['control', 'layoutControl'],
        /**
         * @member sap.portal.ui5.core.UI5ControlView
         */
        function attachLayoutControl() {

            var oControl = this.getControl(),
                oLayoutControl = this.getLayoutControl();

            if (!oControl || !oLayoutControl) {
                return;
            }

            oLayoutControl.placeAt(oControl);

            if (typeof(oControl.insertContent) !== 'function') {
                throw new Error('Control does not support inner content/inner layout');
            }

        }
    ),

    /**
     * @protected
     * @method
     */
    processComponentModel: sap.portal.ui5.core.PropertyObserver(
        ['control', 'componentModel'],
        /**
         * @member sap.portal.ui5.core.UI5ControlView
         */
        function processComponentModel() {

            var oControl = this.getControl(),
                oModel   = this.getComponentModel();

            if (oModel   instanceof sap.ui.model.Model
            &&  oControl instanceof sap.ui.core.Element) {
                oControl.setModel(oModel);
            }

        }
    ).callOnInit(),

    /**
     * @protected
     */
    destroyControl: function destroyControl() {

        var oControl = this.getControl();

        if (oControl) {
            // Do destroy w/o invalidation if not rendered
            oControl.destroy( this.isRendered() ? false : true );
        }

        this.setControl(null);

    },

    /**
     * @protected
     */
    destroyLayoutControl: function destroyLayoutControl() {

        var oControl = this.getLayoutControl();

        if (oControl) {
            oControl.destroy();
        }

        this.setLayoutControl(null);

    },

    /**
     *
     * @returns {*}
     */
    destroy: function destroy() {

        var aPromises = [],
            fnSuper   = this._super.bind(this, arguments),
            sId       = this.getId(),
            oDfd      = jQuery.Deferred();

        oDfd.bInUse = true;
        oDfd.sUid   = 'destroy-' + jQuery.sap.uid();

        aPromises.push( this.unrender() );
        aPromises.push( this.destroyLayoutControl() );
        aPromises.push( this.destroyControl() );

        // Make promise which will be resolved
        // only when all operations be resolved
        jQuery
            .when.apply(jQuery, aPromises)
            .always( function() {

                jQuery
                    .when(fnSuper())
                    .always( function() {

                        //jQuery.sap.log.debug('Resolving UI5ControlView.destroy promise', sId, oDfd.sUid);
                        oDfd.resolve();

                    });

            });

        return oDfd.promise();

    },

    /**
     *
     * @returns {jQuery.promise}
     */
    unrender: function unrender() {

        var sId = this.getId(),
            oRenderPromise = this.renderPromise,
            oRenderChildComponentsPromise = this.renderChildComponentsPromise;

        this.fireEvent('beforeUnrender');

        if (oRenderPromise
        &&  oRenderPromise.bInUse
        &&  oRenderPromise.state() === 'pending') {
            //jQuery.sap.log.debug('Rejecting UI5ControlView.render promise', sId, oRenderPromise.sUid);
            oRenderPromise.reject();
        }

        if (oRenderChildComponentsPromise
        &&  oRenderChildComponentsPromise.bInUse
        &&  oRenderChildComponentsPromise.state() === 'pending') {
            //jQuery.sap.log.debug('Rejecting UI5ControlView.renderChildComponents promise', sId, oRenderChildComponentsPromise.sUid);
            oRenderChildComponentsPromise.reject();
        }

        this.renderPromise = null;
        this.renderChildComponentsPromise = null;

        var oDfd = this.unrenderPromise = jQuery.Deferred();

        oDfd.bInUse = true;
        oDfd.sUid   = 'unrender-' + jQuery.sap.uid();

        oDfd.done( function fireEvent() {

            this.fireEvent('unrender');

        }.bind(this));

        try {

            var oControl = this.getControl();

            switch (true) {

            // No control - no rendering
            case (oControl === null || typeof(oControl) === 'undefined'):
                //jQuery.sap.log.debug('Resolving UI5ControlView.unrender promise', sId, oDfd.sUid);
                oDfd.resolve(false /* indicates no rendedering */);
                break;

            case (oControl instanceof sap.ui.core.Element):

                var oUIArea = oControl.getUIArea(),
                    oParent = oControl.getParent();

                switch (true) {

                // try to remove using UIArea
                case (oUIArea && oUIArea.indexOfContent(oControl) !== -1):
                    sap.portal.ui5.core.UI5ControlView.aPendingUIUpdatedPromises.push(oDfd);
                    oUIArea.removeContent(oControl);
                    break;

                // else, try to remove using it's parent (only if it supports aggregation)
                case (oParent && typeof(oParent.removeContent) === 'function'):

                    oParent.removeContent(oControl);

                    // Remove content anyway even if invalidation is supressed
                    if (oParent.isInvalidateSuppressed()) {

                        oControl.$().remove();
                        oDfd.resolve();

                    } else {

                        sap.portal.ui5.core.UI5ControlView.aPendingUIUpdatedPromises.push(oDfd);

                    }

                    break;

                // remove using native jquery
                // note: don't use control destroy here.
                default:
                    oControl.$().remove();
                    oDfd.resolve();
                    break;

                }

                break;

            default:
                throw new Error('Unsupported');

            }

        } catch(oException) {

            oDfd.rejectWith(this, oException);
            throw oException;

        }

        return oDfd.promise();

    },

    /**
     *
     * @returns {jQuery.promise}
     */
    render: function render() {

        var oDfd     = this.renderPromise,
            oPlaceAt = this.getPlaceAt(),
            sId      = this.getId(),
            oUnrenderPromise = this.unrenderPromise;

        // Reject unrender promise if pending
        if (oUnrenderPromise
            && oUnrenderPromise.bInUse
            && oUnrenderPromise.state() === 'pending') {
                //jQuery.sap.log.debug('Rejecting UI5ControlView.unrender promise', sId, oUnrenderPromise.sUid);
                oUnrenderPromise.reject();
        }

        this.unrenderPromise = null;

        //jQuery.sap.log.debug('Rendering UI5ControlView', sId);

        var oConfig = {
            placeAt: oPlaceAt
        };

        if (oDfd && oDfd.bInUse) {

            if (jQuery.sap.equal(oConfig, oDfd.oConfig) && oDfd.state() !== 'rejected') {
                //jQuery.sap.log.debug('Reusing UI5ControlView.render promise (same config)', sId, oDfd.sUid);
                return oDfd;
            }

            switch (oDfd.state()) {

            case 'pending':
                //jQuery.sap.log.debug('Rejecting UI5ControlView.render promise', sId, oDfd.sUid);
                oDfd.reject();
                oDfd = jQuery.Deferred();
                break;

            default:
                oDfd = jQuery.Deferred();
                break;

            }

        } else if (!oDfd) {

            oDfd = jQuery.Deferred();

        }

        this.renderPromise = oDfd;

        oDfd.sUid     = 'render-' + jQuery.sap.uid();
        oDfd.bInUse  = true;
        oDfd.oConfig  = oConfig;
        oDfd.oPromise = oDfd.promise();
        oDfd.oPromise.oDeferred = oDfd;

        // Ignore destroyed state
        if (this.isDestroyed()) {
            //jQuery.sap.log.debug('Rejecting UI5ControlView.render promise', sId, oDfd.sUid);
            oDfd.reject();
            return oDfd.oPromise;
        }

        oDfd.done( function fireEvent() {

            this.fireEvent('render');

        }.bind(this));

        var bInvalidate = false,
            oCore = sap.ui.getCore();

        try {

            var oControl = this.getControl();

            if (!oControl) {
                oDfd.reject();
                return oDfd.oPromise;
            }

            var oPlaceHolder = (jQuery.isPlainObject(oPlaceAt)) ?
                oPlaceAt.target :
                oPlaceAt;

            if (typeof (oPlaceAt) === 'object') {

                var aProperties = [
                        'width', 'minWidth', 'maxWidth',
                        'height', 'minHeight', 'maxHeight',
                        'innerWidth', 'innerHeight'
                    ];

                var iPropertyIndex,
                    iPropertiesLength = aProperties.length,
                    sProperty, sMessage;

                for (iPropertyIndex = 0; iPropertyIndex < iPropertiesLength; iPropertyIndex++) {
                    sProperty = aProperties[iPropertyIndex];
                    if (typeof(oPlaceAt[sProperty]) !== 'undefined' && String(this.mProperties[sProperty]) !== String(oPlaceAt[sProperty])) {
                        oControl.iSuppressInvalidate++;
                        sMessage = sProperty + ' is changed from ' + this.mProperties[sProperty] + ' to ' + oPlaceAt[sProperty];
                        this.setProperty(sProperty, oPlaceAt[sProperty]);
                        oControl.iSuppressInvalidate--;
                        if (!jQuery.when(this.processDimensionsPromise).state() === 'resolved'
                        ||  !jQuery.when(this.processInnerDimensionsPromise).state() === 'resolved') {
                            bInvalidate = typeof(bInvalidate) === 'string' ?
                                (bInvalidate + ', ' + sMessage) :
                                (sMessage);
                        }
                    }
                }

            }

            switch(true) {

            case oPlaceHolder instanceof sap.ui.commons.layout.PositionContainer:

                if (oControl.getParent() !== oPlaceHolder) {

                    // Disabling invalidation if exists
                    // because the position container
                    // will do his own content invalidation
                    bInvalidate = oPlaceHolder.getParent() ? false : true;

                    oPlaceHolder.iSuppressInvalidate++;
                    oPlaceHolder.setControl(oControl);
                    oPlaceHolder.iSuppressInvalidate--;

                    if (!this.isRendered()) {
                        bInvalidate = 'Position container got a new control';
                    }

                }

                break;

            case oPlaceHolder instanceof sap.ui.core.Element:

                // If placeholder supports content aggregation
                if (typeof(oPlaceHolder.insertContent) === 'function') {

                    var iActualIndex = oPlaceHolder.indexOfContent(oControl);

                    switch (true) {

                    // If control is not present or is already present,
                    // but have to be inserted at specific position
                    case (typeof(oPlaceAt.index) !== 'undefined') && (iActualIndex !== oPlaceAt.index):

                        // Actual UI5 have no ability to move content,
                        // so we need to remove content first and insert after
                        if (iActualIndex !== -1) {
                            oControl.iSuppressInvalidate++;
                            oPlaceHolder.removeContent(oControl);
                            oControl.iSuppressInvalidate--;
                        }

                        oControl.iSuppressInvalidate++;
                        oPlaceHolder.insertContent(oControl, oPlaceAt.index);
                        oControl.iSuppressInvalidate--;

                        bInvalidate = 'Content inserterted into control at specific position';
                        break;

                    // If control is not present then push it inside
                    // into end of stack if position is not specified
                    case iActualIndex === -1:
                        oControl.iSuppressInvalidate++;
                        oPlaceHolder.insertContent(oControl);
                        oControl.iSuppressInvalidate--;
                        bInvalidate = 'Content inserted into control';
                        break;

                    // Default:
                        // If control does not require any change
                        // e.g. already exists at required position
                        // then just resolve it.

                    }

                } else {

                    oControl.iSuppressInvalidate++;
                    oControl.placeAt(oPlaceHolder);
                    oControl.iSuppressInvalidate--;
                    bInvalidate = 'Control got a new placeholder';

                }

                break;

            case typeof(oPlaceHolder) === 'string':
            case oPlaceHolder instanceof jQuery:
                oControl.iSuppressInvalidate++;
                oControl.placeAt(oPlaceHolder);
                oControl.iSuppressInvalidate--;
                bInvalidate = 'Control got a new jQuery placeholder';
                break;

            case oPlaceHolder instanceof sap.portal.ui5.core.UI5ControlView:
                oControl.iSuppressInvalidate++;
                oControl.placeAt(oPlaceHolder.getControl());
                oControl.iSuppressInvalidate--;
                bInvalidate = 'Control got a new UI5 control placeholder';
                break;

            default:
                throw new Error('Unsupported placeholder');

            }

            if (bInvalidate) {

                // Control be invalidated, so we need to put our promise to pending (until render) stack.
                oDfd.sInvalidateReason = bInvalidate;
                //jQuery.sap.log.debug('Invalidating control of ' + sId + ': ' + bInvalidate, oControl, oDfd.uid)
                sap.portal.ui5.core.UI5ControlView.aPendingUIUpdatedPromises.push(oDfd);
                this.invalidateControl(oControl, bInvalidate);

            } else {

                // Resolve immideately if no rerender required
                //jQuery.sap.log.debug('Resolving UI5ControlView.render promise', sId, oDfd.sUid);
                oDfd.resolve(false /* indicates no rendedering */);

            }

        } catch(oException) {

            //jQuery.sap.log.debug('Rejecting UI5ControlView.render promise', sId, oDfd.sUid);
            oDfd.rejectWith(this, oException);
            throw oException;

        }

        return oDfd.oPromise;

    },

    /**
     *
     * @param {sap.portal.ui5.core.ComponentCollection} oChildComponents
     * @param {Object} oChildLayoutData
     * @param {Object} oComponentLayoutData
     * @returns {jQuery.promise}
     */
    renderChildComponents: function renderChildComponents(oChildComponents, oChildLayoutData, oComponentLayoutData) {

        var oDfd             = this.renderChildComponentsPromise,
            sId              = this.getId(),
            oControl         = this.getControl(),
            oControlDOM      = this.getControl().$(),
            oChildsControl   = this.getChildComponentsControl(),
            aChildComponents;

        switch (true) {

        case (oChildComponents instanceof sap.portal.ui5.core.ComponentCollection):
            aChildComponents = oChildComponents.getItems();
            break;

        case (jQuery.isArray(oChildComponents)):
            aChildComponents = oChildComponents;
            break;

        default:
            throw new TypeError('Child components is wrong');

        }

        //jQuery.sap.log.debug('Rendering UI5ControlView child components of', sId);

        var oConfig = {
            childComponents:     aChildComponents,
            childLayoutData:     oChildLayoutData,
            componentLayoutData: oComponentLayoutData,
            control:             oControl,
            childsControl:       oChildsControl
        };

        if (oDfd && oDfd.bInUse) {

            if (jQuery.sap.equal(oConfig, oDfd.oConfig) && oDfd.state() !== 'rejected') {
                //jQuery.sap.log.debug('Reusing UI5ControlView.renderChildComponents promise (same config)', sId, oDfd.sUid);
                return oDfd.oPromise;
            }

            switch (oDfd.state()) {

            case 'pending':
                //jQuery.sap.log.debug('Rejecting UI5ControlView.renderChildComponents promise', sId, oDfd.sUid);
                oDfd.reject();
                oDfd = jQuery.Deferred();
                break;

            default:
                oDfd = jQuery.Deferred();
                break;

            }

        } else if (!oDfd) {

            oDfd = jQuery.Deferred();

        }

        this.renderChildComponentsPromise = oDfd;

        oDfd.sUid     = 'render-child-components-' + jQuery.sap.uid();
        oDfd.bInUse   = true;
        oDfd.oConfig  = oConfig;
        oDfd.oPromise = oDfd.promise();
        oDfd.oPromise.oDeferred = oDfd;
        oDfd.oDependencies = {
            childPromises: [],
            preprocessPromises: [],
            renderChildComponentEventSubscribers: []
        };

        if (!oComponentLayoutData && !aChildComponents.length) {
            //jQuery.sap.log.debug('Resolving UI5ControlView.renderChildComponents promise (no change required)', sId, oDfd.sUid);
            oDfd.resolve();
            return oDfd.oPromise;
        }

        if (this.isDestroyed() || !oChildsControl) {
            //jQuery.sap.log.debug('Rejecting UI5ControlView.renderChildComponents promise', sId, oDfd.sUid);
            oDfd.reject();
            return oDfd.oPromise;
        }

        if (oComponentLayoutData) {

            if (oComponentLayoutData.animation) {

                var oAnimationPromise = jQuery.Deferred(),
                    oAnimationCSS     = {},
                    bReflow           = false;

                jQuery.each(['top', 'left', 'right', 'bottom'], function(iIndex, sProperty) {

                    if (typeof(oComponentLayoutData[sProperty]) !== 'undefined') {

                        var sValue = oControlDOM.css(sProperty);

                        // Cast to px if required
                        if (typeof(oComponentLayoutData[sProperty]) === 'number') {
                            oComponentLayoutData[sProperty] = String(oComponentLayoutData[sProperty]) + 'px';
                        }

                        // Compare properties
                        if (oComponentLayoutData[sProperty] !== sValue) {
                            oAnimationCSS[sProperty] = oComponentLayoutData[sProperty];
                        }

                    }

                });

                jQuery.each([
                    'width', 'height',
                    'minWidth', 'minHeight',
                    'maxWidth', 'maxHeight'
                ], function(iIndex, sProperty) {

                    if (typeof(oComponentLayoutData[sProperty]) !== 'undefined') {

                        var sActualValue = oControlDOM.css(sProperty),
                            sValue = oComponentLayoutData[sProperty];

                        // Cast to px if required
                        if (typeof(sValue) === 'number') {
                            sValue = String(sValue) + 'px';
                        }

                        // Compare properties
                        if (sValue !== sActualValue) {
                            oAnimationCSS[sProperty] = sValue;
                            bReflow = true;
                        }

                    }

                });

                // If nothing should be changed -> immideately resolve
                if (jQuery.sap.equal(oAnimationCSS, {})) {

                    oAnimationPromise.resolve();

                } else {

                    oControlDOM.stop(true, true).animate(
                        oAnimationCSS,
                        jQuery.extend(
                            {
                                complete: function onAnimationComplete() {

                                    if (bReflow && this.hasListeners('reflow')) {

                                        this.fireEvent('reflow', {
                                            reason: 'Animation completed: ' + JSON.stringify(oAnimationCSS)
                                        });
                                    }

                                    oAnimationPromise.resolve();

                                }.bind(this)
                            },
                            oComponentLayoutData.animation
                        )
                    );

                }

                oDfd.oDependencies.preprocessPromises.push(oAnimationPromise);

            } else {

                //
                // TODO: Detect parent position container?
                //

                oControlDOM
                    .css({
                        top:       oComponentLayoutData.top,
                        left:      oComponentLayoutData.left,
                        right:     oComponentLayoutData.right,
                        bottom:    oComponentLayoutData.bottom
                    });

                //
                // TODO: Fire reflow if top/left/right/bottom has changed
                //

                jQuery.each([
                    'width',  'minWidth',  'maxWidth',
                    'height', 'minHeight', 'maxHeight'
                ], function (iIndex, sProperty) {

                    if (typeof(oComponentLayoutData[sProperty]) !== 'undefined') {
                        this.setProperty(sProperty, oComponentLayoutData[sProperty]);
                    }

                }.bind(this));

            }

        }

        // We need to invalidate control only in case
        // when no content present, else we need to invalidate
        // only new content controls and not the whole layout control
        var bInvalidateChildsControl = !oChildsControl.getContent().length;

        if (bInvalidateChildsControl) {
            oChildsControl.iSuppressInvalidate++;
        }

        // Iterate over all child components
        jQuery.each(aChildComponents, function renderChildComponent(iIndex, oChild) {

            // Ignore destroyed childs
            if (oChild.isDestroyed()) {
                return;
            }

            var sChildId    = oChild.getComponentId();
            var oLayoutData = oChildLayoutData ? oChildLayoutData[sChildId] || {} : {};
            var oPlaceAt    = jQuery.extend({}, oLayoutData, {
                target: oChildsControl,
                index:  (typeof(oLayoutData.index) !== 'undefined' ? oLayoutData.index : iIndex)
            });

            switch(true) {

            // For absolute layout we need create position container and set as target
            // for content rendering
            case (oChildsControl instanceof sap.ui.commons.layout.AbsoluteLayout):

                var oControlPositions = oChildsControl.getPositions(),
                    oChildPlaceAt     = oChild.getPlaceAt(),
                    oPositionCSS      = {
                        top:    typeof(oLayoutData.top)    === 'number' ? oLayoutData.top    + 'px' : oLayoutData.top,
                        left:   typeof(oLayoutData.left)   === 'number' ? oLayoutData.left   + 'px' : oLayoutData.left,
                        right:  typeof(oLayoutData.right)  === 'number' ? oLayoutData.right  + 'px' : oLayoutData.right,
                        bottom: typeof(oLayoutData.bottom) === 'number' ? oLayoutData.bottom + 'px' : oLayoutData.bottom
                    },
                    oPositionContainer,
                    oPositionDOM,
                    iPositionIndex;

                // If no positions, how we can layout it?
                if (jQuery.sap.equal(oPositionCSS, {})) {
                    //jQuery.sap.log.warning('Component ' + sChildId + ' does not exists in layout data. The positioning of that component be skipped.');
                    return;
                }

                if (jQuery.isPlainObject(oChildPlaceAt) && oChildPlaceAt.target) {
                    oChildPlaceAt = oChildPlaceAt.target;
                }

                iPositionIndex = oControlPositions.indexOf(oChildPlaceAt);

                if (iPositionIndex !== -1) {

                    oPositionContainer = oControlPositions[iPositionIndex];
                    oPositionDOM = oPositionContainer.$();

                    var fnUpdatePositions = function updatePositions(bForce) {

                        var oActual = oPositionContainer.mProperties;

                        jQuery.each(['top', 'left', 'right', 'bottom'], function (iIndex, sProperty) {

                            switch (true) {

                            // If update forced
                            case bForce:

                            // (or) It's not a junk values when both actual top value and ld.top are missing
                            case (oActual[sProperty] || oPositionCSS[sProperty]) && (oActual[sProperty] !== oPositionCSS[sProperty]):
                                oChildsControl.iSuppressInvalidate++;
                                oPositionContainer.setProperty(sProperty, oPositionCSS[sProperty]);
                                oChildsControl.iSuppressInvalidate--;
                                break;

                            }

                        });

                        // For optimization set outside loop
                        if (bForce) {
                            oPositionDOM.css(oPositionCSS);
                        }

                    };

                    var oAnimation = oLayoutData.animation || false,
                        oCallbacks = {};

                    if (oAnimation) {

                        var oAnimationPromise = jQuery.Deferred(),
                            oAnimationQueue = oPositionDOM.queue();

                        if (oAnimationQueue && oAnimationQueue.length) {
                            oPositionDOM.stop(true, true);
                        }

                        oCallbacks.complete = function onAnimationComplete() {

                            if (oLayoutData.force) {
                                oPositionDOM.css(oPositionCSS);
                            }

                            fnUpdatePositions(oLayoutData.force);

                            // Update animation promise state according
                            // to main deferred state
                            switch (oDfd.state()) {

                            case 'rejected':
                                oAnimationPromise.reject();
                                break;

                            default:
                                oAnimationPromise.resolve();
                                break;

                            }

                        };

                        // If dom element is present - do animation and execute callbacks on end of animation
                        if (oPositionDOM.length) {
                            oPositionDOM.stop(true, true).animate(oPositionCSS, jQuery.extend(oCallbacks, oAnimation));
                        } else { // Immideately execute callback
                            oCallbacks.complete();
                        }

                        oDfd.oDependencies.preprocessPromises.push( oAnimationPromise.promise() );

                    } else {

                        fnUpdatePositions(oLayoutData.force);
                        //jQuery.sap.log.debug('Invalidating position container: updated positions', oPositionContainer);
                        this.invalidateControl(oPositionContainer, 'Updated positions: ' + JSON.stringify(oPositionCSS));

                    }

                } else {

                    // TODO: isNaN?
                    oPositionContainer = new sap.ui.commons.layout.PositionContainer({
                        top:    typeof(oLayoutData.top)    === 'number' ? oLayoutData.top   + 'px' : oLayoutData.top,
                        left:   typeof(oLayoutData.left)   === 'number' ? oLayoutData.left  + 'px' : oLayoutData.left,
                        right:  typeof(oLayoutData.right)  === 'number' ? oLayoutData.right + 'px' : oLayoutData.right,
                        bottom: typeof(oLayoutData.bottom) === 'number' ? oLayoutData.top   + 'px' : oLayoutData.bottom
                    });

                }

                oPlaceAt.target = oPositionContainer;

                break;

            /// ... support for another engines here...

            }

            // Process child component unrender lifecycle:
            // We need to suppress layout control invalidation
            // when child beign unrendered.
            oChild.attachEvent('beforeUnrender', {}, function onBeforeUnrender(oEvent) {

                var oLayout = this.getChildComponentsControl();

                // If no layout control object - do nothing
                if (!oLayout) {
                    return;
                }

                var fnReleaseSuspend = function releaseSuspend() {

                    oLayout.iSuppressInvalidate--;

                }.bind(this);

                // TODO: Solution for error/exceptional cases like:
                // a) unrender is failed, so layout is stuck in suppresion
                // b) component is destroyed or whatever
                oChild.attachEvent('unrender', {}, fnReleaseSuspend);
                oLayout.iSuppressInvalidate++;

            }.bind(this));

            // Render child component inside itself
            var oChildPromise = oChild.setPlaceAt(oPlaceAt);

            if (iPositionIndex === -1) {
                oChildsControl.addPosition(oPositionContainer);
                // Position Container doesn't fire the UI_UPDATED event.
                // Therefore, we need to release the promises manually.
                // This fixes a bug that sometimes the widgets' content is not rendered.
                sap.portal.ui5.core.UI5ControlView.resolvePendingUIUpdatedPromises();
            }

            // Resolve child promise when child is done
            // Place at returns promise
            oDfd.oDependencies.childPromises.push(oChildPromise);

        }.bind(this));

        jQuery

            // Wait until preprocess/animations are done
            .when.apply(jQuery, oDfd.oDependencies.preprocessPromises)

            .always( function releaseSupress() {

                if (bInvalidateChildsControl) {
                    oChildsControl.iSuppressInvalidate--;
                }

            })

            // Then resume control re-rendering and reflow it
            .pipe( function onAfterPreprocess() {

                // Do not re-render control if all childs are already resolved
                if (bInvalidateChildsControl) {
                    this.invalidateControl(oChildsControl);
                }

                return oDfd.oDependencies.childPromises;

            }.bind(this))

            // After reflow, the childs are already re-rendedered
            // We need to notify about it and resolve main promise.
            .pipe( function onAfterRerendering() {

                this.fireEvent('renderChildComponents', {
                    view:            this,
                    promises:        oDfd.oDependencies.renderChildComponentEventSubscribers,
                    childComponents: oChildComponents,
                    childLayout:     oChildLayoutData,
                    componentLayout: oComponentLayoutData
                });

                return jQuery.when.apply(jQuery, oDfd.oDependencies.renderChildComponentEventSubscribers);

            }.bind(this))

            .then( function() {

                var oCore = sap.ui.getCore();

                if (bInvalidateChildsControl) {

                    sap.portal.ui5.core.UI5ControlView.aPendingUIUpdatedPromises.push(oDfd);

                } else {

                    //jQuery.sap.log.debug('Resolving UI5ControlView.renderChildComponents promise', sId, oDfd.sUid);
                    oDfd.resolve();

                }

            });

        return oDfd.oPromise;

    },

    /**
     * Returns reference to control where child components should be injected
     * @protected
     * @return {sap.ui.core.Control}
     */
    getChildComponentsControl: function getChildComponentsControl() {

        return this.getLayoutControl() || this.getControl();

    },

    /**
     *
     * @returns {boolean}
     */
    isRendered: function isRendered() {

        var oControl = this.getLayoutControl() || this.getControl();

        if (!oControl) {
            return false;
        }

        return Boolean(oControl.$().length);

    },

    /**
     *
     * @returns {string|undefined}
     */
    getWidth: function getWidth(sUnit) {

        return this.getSizeProperty('width', '', sUnit);

    },

    /**
     *
     * @returns {string|undefined}
     */
    getInnerWidth: function getInnerWidth(sUnit) {

        return this.getSizeProperty('width', 'inner', sUnit);

    },

    /**
     *
     * @returns {string|undefined}
     */
    getHeight: function getHeight(sUnit) {

        return this.getSizeProperty('height', '', sUnit);

    },

    /**
     *
     * @returns {string|undefined}
     */
    getInnerHeight: function getInnerHeight(sUnit) {

        return this.getSizeProperty('height', 'inner', sUnit);

    },

    /**
     *
     * @param sProperty
     * @param sContext
     * @param sUnit
     * @returns {*}
     */
    getSizeProperty: function getSizeProperty(sProperty, sContext, sUnit) {

        var sValue, oControl,
            sUnit    = sUnit ? String(sUnit).toLowerCase() : '',
            sContext = sContext || '';

        switch(sContext) {

        case 'inner':
            oControl = this.getLayoutControl() || this.getControl();
            break;

        default:
            oControl = this.getControl();
            break;

        }

        if (oControl) {

            var vControlValue = oControl.mProperties[sProperty];

            // Trying to do "fast" read
            if (vControlValue && sUnit && typeof(vControlValue) === 'string' && vControlValue.indexOf(sUnit) !== -1) {

                sValue = vControlValue;

            } else {

                var sjQueryGetter = sContext.toLowerCase() +
                                    (sContext ? sProperty.charAt(0).toUpperCase() + sProperty.substr(1) :
                                                sProperty);

                var sUi5Getter = 'get' + sjQueryGetter.charAt(0).toUpperCase() + sjQueryGetter.substr(1);

                var oDOM = oControl.$();

                // Layout does not have own size
                // So we need to use parent DOM element
                if (this.getLayoutControl()) {
                   oDOM = oControl.$().parent();
                }

                if (typeof(oDOM[sjQueryGetter]) === 'function') {
                    sValue = oDOM[sjQueryGetter]();
                } else if (typeof(oControl[sUi5Getter]) === 'function') {
                    sValue = oControl[sUi5Getter]();
                } else {
                    throw new Error('Unsupported property');
                }

            }

        }

        switch (true) {

        // Convert empty value to zero + unit
        case (sValue === null || typeof(sValue) === 'undefined'):
            sValue = '0' + sUnit;
            break;

        // Ignore values with unit within
        case (sUnit && typeof(sValue) === 'string' && sValue.indexOf(sUnit) !== -1):
            break;

        // Any value convert to value + unit (if unit present)
        case Boolean(sUnit):
            sValue = String(sValue) + sUnit;
            break;

        }

        return sValue;

    },

    /**
     * Assign css classes to control
     * @protected
     * @method
     */
    processControlStyleClass: sap.portal.ui5.core.PropertyObserver(
        ['controlStyleClass', 'control'],
        /**
         * @param sKey
         * @param sNewValue
         * @param sOldValue
         */
        function processControlStyleClass(sKey, sNewValue, sOldValue) {

            var oControl = this.getControl();

            if (!oControl) {
                return;
            }

            var sStyleClass = this.getControlStyleClass();

            if (jQuery.isArray(sStyleClass)) {
                sStyleClass = sStyleClass.join(' ');
            }

            // Don't process empty classes
            if (!sStyleClass) {
                return;
            }

            // Remove old css classes
            if (sKey === 'controlStyleClass' && sOldValue) {
                oControl.removeStyleClass(sOldValue);
            }

            oControl.addStyleClass(sStyleClass);

        }
    ),

    /**
     * Assign css classes to layout control
     * @protected
     * @method
     */
    processLayoutStyleClass: sap.portal.ui5.core.PropertyObserver(
        ['layoutStyleClass', 'layoutControl'],
        /**
         * @param sKey
         * @param sNewValue
         * @param sOldValue
         */
        function processLayoutControlStyleClass(sKey, sNewValue, sOldValue) {

            var oControl = this.getLayoutControl();

            if (!oControl) {
                return;
            }

            var sStyleClass = this.getLayoutStyleClass();

            if (jQuery.isArray(sStyleClass)) {
                sStyleClass = sStyleClass.join(' ');
            }

            // Don't process empty classes
            if (!sStyleClass) {
                return;
            }

            // Remove old css classes
            if (sKey === 'layoutStyleClass' && sOldValue) {
                oControl.removeStyleClass(sOldValue);
            }

            oControl.addStyleClass(sStyleClass);

        }
    ),

    /**
     * @protected
     */
    processDimensions: sap.portal.ui5.core.PropertyObserver(
        ['width', 'height', 'minWidth', 'minHeight', 'maxWidth', 'maxHeight', 'control'],
        /**
         *
         * @param sKey
         * @param sValue
         */
        function processDimensions(sKey, sValue) {

            var oControl = this.getControl();

            if (!oControl) {
                return;
            }

            var sId         = this.getId(),
                sWidth      = this.getProperty('width'),
                sHeight     = this.getProperty('height'),
                oDOM        = oControl.$(),
                oDfd        = this.processDimensionsPromise,
                bInvalidate = false,
                bReflow     = false;

            if (oDfd && oDfd.bInUse) {

                switch (oDfd.state()) {

                case 'pending':
                    //jQuery.sap.log.debug('Rejecting UI5ControlView.processDimensions promise', sId, oDfd.sUid);
                    oDfd.reject();
                    oDfd = jQuery.Deferred();
                    break;

                default:
                    oDfd = jQuery.Deferred();
                    break;

                }

            } else if (!oDfd) {

                oDfd = jQuery.Deferred();

            }

            this.processDimensionsPromise = oDfd;

            oDfd.sUid     = 'process-dimensions-' + jQuery.sap.uid();
            oDfd.bInUse   = true;
            oDfd.oPromise = oDfd.promise();
            oDfd.oPromise.oDeferred = oDfd;

            oControl.iSuppressInvalidate++;

            if (sWidth !== '' && !isNaN(sWidth)) {
                sWidth = sWidth + 'px';
            }

            if (sWidth !== '' && oControl.getWidth() !== sWidth) {

                bReflow = 'Width updated from ' + oControl.getWidth() + ' to ' + sWidth;

                if (oDOM.length) {
                    oDOM.width(sWidth);
                    oControl.mProperties.width = sWidth;
                } else {
                    bInvalidate = true;
                    oControl.setWidth(sWidth);
                }

            }

            if (sHeight !== '' && !isNaN(sHeight)) {
                sHeight = sHeight + 'px';
            }

            if (sHeight !== '' && oControl.getHeight() !== sHeight) {

                bReflow = 'Height updated from ' + oControl.getHeight() + ' to ' + sHeight;

                if (oDOM.length) {
                    oDOM.height(sHeight);
                    oControl.mProperties.height = sHeight;
                } else {
                    bInvalidate = true;
                    oControl.setHeight(sHeight);
                }

            }

            if (oDOM.length) {

                //
                // TODO: bReflow = true;
                //

                var sMinWidth  = this.getProperty('minWidth'),
                    sMaxWidth  = this.getProperty('maxWidth'),
                    sMinHeight = this.getProperty('minHeight'),
                    sMaxHeight = this.getProperty('maxHeight');

                if (sMinWidth !== '' && !isNaN(sMinWidth)) {
                    sMinWidth = sMinWidth + 'px';
                }

                if (sMaxWidth !== '' && !isNaN(sMaxWidth)) {
                    sMaxWidth = sMaxWidth + 'px';
                }

                if (sMinHeight !== '' && !isNaN(sMinHeight)) {
                    sMinHeight = sMinHeight + 'px';
                }

                if (sMaxHeight !== '' && !isNaN(sMaxHeight)) {
                    sMaxHeight = sMaxHeight + 'px';
                }

                oDOM.css({
                    minWidth:  sMinWidth,
                    maxWidth:  sMaxWidth,
                    minHeight: sMinHeight,
                    maxHeight: sMaxHeight
                });

            }

            oControl.iSuppressInvalidate--;

            oDfd.sReason = bReflow;

            if (bInvalidate) {

                if (bReflow) {

                    var fnNotifyReflow = function notify() {

                        sap.ui.getCore().detachEvent(
                            sap.ui.core.Core.M_EVENTS.UIUpdated,
                            fnNotifyReflow
                        );

                        //jQuery.sap.log.debug('Resolving UI5ControlView.processDimensions promise', sId, oDfd.sUid);
                        oDfd.resolve();

                        if (this.hasListeners('reflow')) {
                            //jQuery.sap.log.warning((this.getController() ? this.getController().getComponentId() : this.getId()) + ', firing reflow event: ' + bReflow);
                        }

                        this.fireEvent('reflow', {
                            reason: bReflow
                        });

                    }.bind(this);

                    if (!oControl.iSuppressInvalidate) {

                        // Unsubscribe if promise be rejected
                        oDfd.fail( function() {

                            sap.ui.getCore().detachEvent(
                                sap.ui.core.Core.M_EVENTS.UIUpdated,
                                fnNotifyReflow
                            );

                        });

                        sap.ui.getCore().attachEvent(
                            sap.ui.core.Core.M_EVENTS.UIUpdated,
                            fnNotifyReflow
                        );

                    }

                }

                this.invalidateControl(oControl, bReflow);

            } else if (bReflow) {

                //jQuery.sap.log.debug('Resolving UI5ControlView.processDimensions promise', sId, oDfd.sUid);
                oDfd.resolve();

                if (this.hasListeners('reflow')) {
                    //jQuery.sap.log.warning((this.getController() ? this.getController().getComponentId() : this.getId())+ ', firing reflow event: ' + bReflow);
                }

                this.fireEvent('reflow', {
                    reason: bReflow
                });

            } else {

                //jQuery.sap.log.debug('Resolving UI5ControlView.processDimensions promise (nothing changed)', sId, oDfd.sUid);
                oDfd.resolve();

            }

        }

    ),

    /**
     * @protected
     */
    processInnerDimensions: sap.portal.ui5.core.PropertyObserver(
        ['innerWidth', 'innerHeight', 'control', 'layoutControl'],
        /**
         *
         * @param sKey
         * @param sValue
         */
        function processInnerDimensions(sKey, sValue) {

            var oControl = this.getChildComponentsControl();

            if (!oControl) {
                return;
            }

            var sId         = this.getId(),
                sWidth      = this.getProperty('innerWidth'),
                sHeight     = this.getProperty('innerHeight'),
                oDOM        = oControl.$(),
                oDfd        = this.processInnerDimensionsPromise,
                bInvalidate = false,
                bReflow     = false;

            if (oDfd && oDfd.bInUse) {

                switch (oDfd.state()) {

                case 'pending':
                    //jQuery.sap.log.debug('Rejecting UI5ControlView.processInnerDimensions promise', sId, oDfd.sUid);
                    oDfd.reject();
                    oDfd = jQuery.Deferred();
                    break;

                default:
                    oDfd = jQuery.Deferred();
                    break;

                }

            } else if (!oDfd) {

                oDfd = jQuery.Deferred();

            }

            this.processInnerDimensionsPromise = oDfd;

            oDfd.sUid     = 'process-inner-dimensions-' + jQuery.sap.uid();
            oDfd.bInUse   = true;
            oDfd.oPromise = oDfd.promise();
            oDfd.oPromise.oDeferred = oDfd;

            oControl.iSuppressInvalidate++;

            if (sWidth !== '' && oControl.getWidth() !== sWidth) {

                if (!isNaN(sWidth)) {
                    sWidth = sWidth + 'px';
                }

                bReflow = 'Inner width updated from ' + oControl.getWidth() + ' to ' + sWidth;

                if (oDOM.length) {
                    oDOM.width(sWidth);
                    oControl.mProperties.width = sWidth;
                } else {
                    bInvalidate = true;
                    oControl.setWidth(sWidth);
                }

            }

            if (sHeight !== '' && oControl.getHeight() !== sHeight) {

                if (!isNaN(sHeight)) {
                    sHeight = sHeight + 'px';
                }

                bReflow = 'Inner height updated from ' + oControl.getHeight() + ' to ' + sHeight;

                if (oDOM.length) {
                    oDOM.height(sHeight);
                    oControl.mProperties.height = sHeight;
                } else {
                    bInvalidate = true;
                    oControl.setHeight(sHeight);
                }

            }

            oControl.iSuppressInvalidate--;

            if (bInvalidate) {

                if (bReflow) {

                    var fnNotifyReflow = function notify() {

                        sap.ui.getCore().detachEvent(
                            sap.ui.core.Core.M_EVENTS.UIUpdated,
                            fnNotifyReflow
                        );

                        //jQuery.sap.log.debug('Resolving UI5ControlView.processInnerDimensions promise', sId, oDfd.sUid);
                        oDfd.resolve();

                        this.fireEvent('innerReflow', {
                            reason: bReflow
                        });

                    }.bind(this);

                    // Unsubscribe if promise be rejected
                    oDfd.fail( function() {

                        sap.ui.getCore().detachEvent(
                            sap.ui.core.Core.M_EVENTS.UIUpdated,
                            fnNotifyReflow
                        );

                    });

                    sap.ui.getCore().attachEvent(
                        sap.ui.core.Core.M_EVENTS.UIUpdated,
                        fnNotifyReflow
                    );

                }

                this.invalidateControl(oControl, bReflow);

            } else if (bReflow) {

                //jQuery.sap.log.debug('Resolving UI5ControlView.processInnerDimensions promise', sId, oDfd.sUid);
                oDfd.resolve();

                this.fireEvent('innerReflow', {
                    reason: bReflow
                });

            } else {

                //jQuery.sap.log.debug('Resolving UI5ControlView.processInnerDimensions promise', sId, oDfd.sUid);
                oDfd.resolve();

            }

        }
    ),

    /**
     *
     * @param oChild
     * @returns {Object}
     */
    getChildComponentPositions: function getChildComponentPositions(oChild) {

        var oChildsControl   = this.getChildComponentsControl(),
            oPositions       = {};

        switch(true) {

        // For absolute layout we need create position container and set as target
        // for content rendering
        case (oChildsControl instanceof sap.ui.commons.layout.AbsoluteLayout):

            var oControlPositions = oChildsControl.getPositions(),
                oChildPlaceAt     = oChild.getPlaceAt(),
                oPositionContainer,
                iPositionIndex;

            if (jQuery.isPlainObject(oChildPlaceAt) && oChildPlaceAt.target) {
                oChildPlaceAt = oChildPlaceAt.target;
            }

            iPositionIndex = oControlPositions.indexOf(oChildPlaceAt);

            if (iPositionIndex === -1) {
                break;
            }

            oPositionContainer = oControlPositions[iPositionIndex];
            oPositions.index   = oControlPositions.indexOf(oChildPlaceAt);
            oPositions.top     = oPositionContainer.getTop();
            oPositions.left    = oPositionContainer.getLeft();
            oPositions.right   = oPositionContainer.getRight();
            oPositions.bottom  = oPositionContainer.getBottom();

            break;

        default:
            oPositions.index   = oControlPositions.indexOf(oChildPlaceAt);
            break;

        }

        return oPositions;

    }

});

(function() {

    var oNS = sap.portal.ui5.core.UI5ControlView;

    /**
     * @static
     * @type {Array}
     */
    oNS.aPendingInvalidationControls = [];

    /**
     * @static
     * @type {Array}
     */
    oNS.aPendingUIUpdatedPromises = [];

    /**
     * @method
     * @static
     */
    oNS.resolvePendingUIUpdatedPromises = function resolvePendingUIUpdatedPromises() {

        var aPromises = oNS.aPendingUIUpdatedPromises;
        var iIndex, iLength = aPromises.length;

        if (!iLength) {
            return;
        }

        // Important, clean array by assigning new empty array
        // to prepare it for next rendering cycle
        oNS.aPendingUIUpdatedPromises    = [];
        oNS.aPendingInvalidationControls = [];

        for (iIndex =  0; iIndex < iLength; iIndex++) {
            //jQuery.sap.log.debug('Resolving pending UIUpdated promise #', iIndex, aPromises[iIndex].sUid);
            aPromises[iIndex].resolve();
        }

        //jQuery.sap.log.debug('Resolved ', iLength,' pending UIUpdated promises');

    };

    // Subscribe to UI Update event
    sap.ui.getCore().attachEvent(
        sap.ui.core.Core.M_EVENTS.UIUpdated,
        oNS.resolvePendingUIUpdatedPromises
    );

}());
}; // end of sap/portal/ui5/core/UI5ControlView.js
if ( !jQuery.sap.isDeclared('sap.portal.ui5.core.Component') ) {
"use strict";






jQuery.sap.declare('sap.portal.ui5.core.Component');


/**
 * @experimental
 * @class sap.portal.ui5.core.Component
 * @extends sap.portal.ui5.core.Object
 */
sap.portal.ui5.core.Object.extend('sap.portal.ui5.core.Component', {

    metadata: {
        properties: {

            /**
             * @cfg {string}
             * @accessor
             */
            componentId: {
                type: 'any',
                defaultValue: null
            },

            /**
             * @cfg {string}
             * @accessor
             */
            placeAt: {
                type: 'any',
                defaultValue: null
            },

            /**
             * @cfg {sap.portal.ui5.core.LayoutInterface}
             * @accessor
             */
            layout: {
                type: 'any',
                defaultValue: null
            },

            /**
             * @cfg {sap.portal.ui5.core.LayoutData}
             * @accessor
             */
            layoutData: {
                type: 'any',
                defaultValue: null
            },

            /**
             * @cfg {sap.portal.ui5.core.View}
             * @accessor
             */
            view: {
                type: 'any',
                defaultValue: null
            },

            /**
             * @cfg {sap.portal.ui5.core.Object}
             * @accessor
             */
            componentModel: {
                type: 'any',
                defaultValue: null
            },

            /**
             * @cfg {sap.portal.ui5.core.ComponentCollection}
             * @accessor
             */
            childComponents: {
                type: 'any',
                defaultValue: {}
            },

            /**
             * @private
             * @cfg {string}
             * @accessor
             */
            componentModelClass: {
                type: 'string',
                defaultValue: 'Object'
            },

            /**
             * @private
             * @cfg {string}
             * @accessor
             */
            childComponentsClass: {
                type: 'string',
                defaultValue: 'sap.portal.ui5.core.ComponentCollection'
            },

            /**
             * @private
             * @cfg {string}
             * @accessor
             */
            layoutClass: {
                type: 'string',
                defaultValue: 'sap.portal.ui5.core.LayoutInterface'
            },

            /**
             * @private
             * @cfg {string}
             * @accessor
             */
            layoutDataClass: {
                type: 'string',
                defaultValue: 'sap.portal.ui5.core.LayoutData'
            },

            /**
             * @private
             * @cfg {string}
             * @accessor
             */
            viewClass: {
                type: 'string',
                defaultValue: 'sap.portal.ui5.core.View'
            }

        },

        events: {

            /**
             * Before component became unrendered
             * @event
             */
            beforeUnrender: {},

            /**
             * Component became unrendered
             * @event
             */
            unrender: {},

            /**
             * Before component became rendered
             * @event
             */
            beforeRender: {},

            /**
             * Component is rendered
             * @event
             */
            render: {},

            /**
             * Before component layout process
             * @event
             */
            beforeLayout: {},

            /**
             * Component's content is layouted
             * @event
             */
            layout: {},

            /**
             * Before component repaint/dimension change
             * @event
             */
            beforeReflow: {},

            /**
             * Component repainted/dimension changed
             * @event
             */
            reflow: {}

        }

    },

    /**
     * Promise placeholder
     * @protected
     */
    renderViewPromise: null,

    /**
     * Promise placeholder
     * @protected
     */
    layoutChildComponentsPromise: null,

    /**
     * @protected
     */
    layoutChildComponentsSuspended: 0,

    /**
     * @private
     */
    _oOldPlaceAt: null,
    /**
     * @protected
     */
    unrenderViewPromise: null,

    /**
     * @public
     * @param oValue
     * @returns {jQuery.Promise|null}
     */
    setPlaceAt: function setPlaceAt(oValue) {

        this.setProperty('placeAt', oValue);

        if (oValue === null) {
            return this.unrenderViewPromise ?
                this.unrenderViewPromise.oPromise :
                null;
        } else {
            return this.renderViewPromise ?
                this.renderViewPromise.oPromise :
                null;
        }

    },

    /**
     * @public
     * @param oView
     * @returns {jQuery.Promise|null}
     */
    setView: function setView(oView) {

        var oRenderViewPromise = this.renderViewPromise,
            oLayoutChildComponentsPromise = this.layoutChildComponentsPromise;

        // Reject any already existing view rendering promise
        if (oRenderViewPromise
        &&  oRenderViewPromise.bInUse
        &&  oRenderViewPromise.state() === 'pending') {
            oRenderViewPromise.reject();
        }

        // Reject any already existing view rendering promise
        if (oLayoutChildComponentsPromise
        &&  oLayoutChildComponentsPromise.bInUse
        &&  oLayoutChildComponentsPromise.state() === 'pending') {
            oLayoutChildComponentsPromise.reject();
        }

        this.setProperty('view', oView);

        // It's a new object, not an actual oRenderViewPromise
        return this.renderViewPromise ?
            this.renderViewPromise.oPromise :
            null;

    },

    /**
     * @private
     * @method
     */
    _registerInComponentManager: sap.portal.ui5.core.PropertyObserver(
        ['componentId'],
        /**
         * @private
         * @member sap.portal.ui5.core.Component
         * @param sKey
         * @param sComponentId
         * @param sOldComponentId
         * @param oObserver
         */
        function registerInComponentManager(sKey, sComponentId, sOldComponentId, oObserver) {

            // Generating default value based on actual id
            if (sOldComponentId === null) {

                // Update view property in object without triggering observervation again
                if (sComponentId === null || sComponentId === '') {
                    sComponentId = this.getId();
                }

                oObserver.updatePropertyValue(sComponentId);

            } else {

                this.unregisterInComponentManager(sOldComponentId);

            }

            // TODO: Check for immutable?
            sap.portal.ui5.core.ComponentManager.registerComponent(sComponentId, this);

        }
    ).callOnInit(),

    /**
     * @private
     * @method
     */
    _processViewClass: sap.portal.ui5.core.PropertyObserver(
        ['viewClass', 'view'],
        /**
         * @private
         * @member sap.portal.ui5.core.Component
         * @param sKey
         * @param oValue
         * @param oOldValue
         * @param oObserver
         */
        function processViewClass(sKey, oValue, oOldValue, oObserver) {

            var sProperty       = 'view';
            var oObject         = this.getProperty(sProperty),
                sInterfaceClass = this.getProperty(sProperty + 'Class');

            if (oObject === null) {
                return;
            }

            if (jQuery.isPlainObject(oObject)) {

                oObject = sap.portal.ui5.core.Object.factoryUCTypeObject(oObject, sInterfaceClass);

                // Update property in object without triggering observervation again
                oObserver.updatePropertyValue(oObject, sProperty);

            } else if (sInterfaceClass && !sap.portal.ui5.core.Object.isInstanceOf(oObject, sInterfaceClass)) {

                throw new Error('Interface mismatch');

            }

        }
    ).callOnInit(),

    /**
     * @private
     * @method
     */
    _processChildComponentsClass: sap.portal.ui5.core.PropertyObserver(
        ['childComponentsClass', 'childComponents'],
        /**
         * @private
         * @member sap.portal.ui5.core.Component
         * @param sKey
         * @param oValue
         * @param oOldValue
         * @param oObserver
         */
        function processChildComponentsClass(sKey, oValue, oOldValue, oObserver) {

            var sProperty = 'childComponents';
            var oObject = this.getProperty(sProperty),
                sInterfaceClass = this.getProperty(sProperty + 'Class');

            // Convert child components array to hash with items
            if (jQuery.isArray(oObject)) {
                oObject = { items: oObject };
            }

            if (jQuery.isPlainObject(oObject)) {

                oObject = sap.portal.ui5.core.Object.factoryUCTypeObject(oObject, sInterfaceClass);

                // Update property in object without triggering observervation again
                oObserver.updatePropertyValue(oObject, sProperty);

            } else if (sInterfaceClass && !sap.portal.ui5.core.Object.isInstanceOf(oObject, sInterfaceClass)) {

                throw new Error('Interface mismatch');

            }

        }
    ).callOnInit(),

    /**
     * @private
     * @method
     */
    _processComponentModelClass: sap.portal.ui5.core.PropertyObserver(
        ['componentModelClass', 'componentModel'],
        /**
         * @private
         * @member sap.portal.ui5.core.Component
         * @param sKey
         * @param oValue
         * @param oOldValue
         * @param oObserver
         */
        function processComponentModelClass(sKey, oValue, oOldValue, oObserver) {

            var sProperty = 'componentModel';
            var oObject = this.getProperty(sProperty),
                sInterfaceClass  = this.getProperty(sProperty + 'Class');

            if (oObject === null) {
                return;
            }

            if (jQuery.isPlainObject(oObject)) {

                oObject = sap.portal.ui5.core.Object.factoryUCTypeObject(oObject, sInterfaceClass);

                // Update property in object without triggering observervation again
                oObserver.updatePropertyValue(oObject, sProperty);

            } else if (sInterfaceClass && !sap.portal.ui5.core.Object.isInstanceOf(oObject, sInterfaceClass)) {

                throw new Error('Interface mismatch');

            }

        }
    ).callOnInit(),

    /**
     * @private
     * @method
     */
    _processChildComponentsBinding: sap.portal.ui5.core.PropertyObserver(
        ['childComponents'],
        /**
         * @private
         * @member sap.portal.ui5.core.Component
         * @param sKey
         * @param oChildComponents
         * @param oOldChildComponents
         * @param oObserver
         */
        function processChildComponentsBinding(sKey, oChildComponents, oOldChildComponents, oObserver) {

            if (oOldChildComponents) {
                this.unbindChildComponents(oOldChildComponents);
            }

            if (oChildComponents) {
                this.bindChildComponents(oChildComponents);
            }

        }
    ).callOnInit(),

    /**
     * @protected
     * @param {sap.portal.ui5.core.ComponentCollection} oChildComponents
     */
    bindChildComponents: function bindChildComponents(oChildComponents) {

        this.bindChildComponentsObservation(oChildComponents);
        this.bindChildComponentsRelayoutObservation(oChildComponents);

    },

    /**
     * Hook method to do operations over new items in component collection
     * @protected
     * @param {sap.portal.ui5.core.Component} oChildComponent
     */
    bindChildComponent: function bindChildComponent(oChildComponent) {

        this.bindChildComponentRelayoutObservation(oChildComponent);

    },

    /**
     * Observe changes in component collection
     * @protected
     * @param {sap.portal.ui5.core.ComponentCollection} oChildComponents
     */
    bindChildComponentsObservation: function bindChildComponentsObservation(oChildComponents) {

        var fnBindItem = function bindItem(oEvent) {

            var oChild = oEvent.getParameter('item');
            this.bindChildComponent(oChild);

        }.bind(this);

        var fnBindAllItems = function bindAllItems() {

            this.getChildComponents().forEach( function bindItem(oChild) {

                this.bindChildComponent(oChild);

            }.bind(this));

        }.bind(this);

        oChildComponents.attachEvent('itemAdded',          {}, fnBindItem);
        oChildComponents.attachEvent('itemReplaced',       {}, fnBindItem);
        oChildComponents.attachEvent('collectionReplaced', {}, fnBindAllItems);

        fnBindAllItems();

    },

    /**
     * Observe changes in child component object
     * and trigger relayout when it is required
     * @protected
     * @param {sap.portal.ui5.core.Component} oChildComponent
     */
    bindChildComponentRelayoutObservation: function bindChildComponentRelayoutObservation(oChildComponent) {

        // We want to prevent additional relayout if relayout is already pending
        var bPendingRelayout = false;

        oChildComponent.attachEvent('reflow', {}, function onChildReflow(oEvent) {

            // If pending relayout exists -> further relayout are not relevant
            if (bPendingRelayout) {
                return;
            }

            var oRenderViewPromise = this.renderViewPromise,
                oLayoutChildComponentsPromise = this.layoutChildComponentsPromise;

            // Skip if already existing view rendering promise
            if (oRenderViewPromise
            && oRenderViewPromise.bInUse
            && oRenderViewPromise.state() === 'pending') {
                bPendingRelayout = true;
                oRenderViewPromise.always(function () {
                    bPendingRelayout = false;
                    this.layoutChildComponents();
                }.bind(this));
                return;
            }

            // Skip if already existing view rendering promise
            if (oLayoutChildComponentsPromise
            && oLayoutChildComponentsPromise.bInUse
            && oLayoutChildComponentsPromise.state() === 'pending') {
                bPendingRelayout = true;
                oLayoutChildComponentsPromise.always(function () {
                    bPendingRelayout = false;
                    this.layoutChildComponents();
                }.bind(this));
                return;
            }

            //jQuery.sap.log.warning('Relayouting ' + this.getComponentId() + ' due reflow event from ' + oChildComponent.getComponentId() + ': ' + oEvent.getParameter('reason'));
            this.layoutChildComponents();

        }.bind(this));

    },

    /**
     * Observe changes in child components collection
     * and trigger relayout when it is required
     * @protected
     * @param {sap.portal.ui5.core.ComponentCollection} oChildComponents
     */
    bindChildComponentsRelayoutObservation: function bindChildComponentsRelayoutObservation(oChildComponents) {

        // Do relayout if in collection item changed view or componentId property
        oChildComponents.attachEvent('itemModified', {}, function onItemModification(oEvent) {

            switch (oEvent.getParameter('property')) {

            case 'view':
            case 'componentId':
                this.layoutChildComponents();
                break;

            }

        }.bind(this));

        var activeEvents = {
            itemAdded:    true,
            itemRemoved:  true,
            itemReplaced: true
        };

        // Suspend listening for atomic changes
        oChildComponents.attachEvent('beforeCollectionReplaced', {}, function onBeforeCollectionReplaced() {

            activeEvents.itemAdded   = false;
            activeEvents.itemRemoved = false;

        }.bind(this));

        // Do relayout if whole collection changed
        oChildComponents.attachEvent('collectionReplaced', {}, function onCollectionReplaced() {

            activeEvents.itemAdded   = false;
            activeEvents.itemRemoved = false;
            this.layoutChildComponents();
            activeEvents.itemAdded   = true;
            activeEvents.itemRemoved = true;

        }.bind(this));

        for (var eventName in activeEvents) {
            oChildComponents.attachEvent(eventName, {}, function onCollectionEvent(oEvent) {

                // Exit if suspended
                if (!activeEvents[oEvent.sId]) {
                    return;
                }

                this.layoutChildComponents();

            }.bind(this));
        }

    },

    /**
     * @protected
     * @param oChildComponents
     */
    unbindChildComponents: function unbindChildComponents(oChildComponents) {

        // TBD

    },

    /**
     * @protected
     * @param oLayoutData
     */
    bindLayoutData: function bindLayoutData(oLayoutData) {

        // Do relayout if in collection change occured
        oLayoutData.attachEvent('itemModified', {}, function onItemModification(oEvent) {

             this.layoutChildComponents();

        }.bind(this));

        var activeEvents = {
            itemAdded:    true,
            itemRemoved:  true,
            itemReplaced: true
        };

        // Suspend listening for atomic changes
        oLayoutData.attachEvent('beforeCollectionReplaced', {}, function onBeforeCollectionReplaced() {

            activeEvents.itemAdded   = false;
            activeEvents.itemRemoved = false;

        }.bind(this));

        // Do relayout if whole collection changed
        oLayoutData.attachEvent('collectionReplaced', {}, function onCollectionReplaced() {

            this.layoutChildComponents();
            activeEvents.itemAdded   = true;
            activeEvents.itemRemoved = true;

        }.bind(this));

        for (var eventName in activeEvents) {
            oLayoutData.attachEvent(eventName, {}, function onCollectionEvent(oEvent) {

                // Exit if suspended
                if (!activeEvents[oEvent.sId]) {
                    return;
                }

                this.layoutChildComponents();

            }.bind(this));
        }

    },

    /**
     * @protected
     * @param oChildComponents
     */
    unbindLayoutData: function unbindLayoutData(oLayoutData) {

        // TBD

    },

    /**
     * @method
     * @private
     */
    _processLayoutClass: sap.portal.ui5.core.PropertyObserver(
        ['layoutClass', 'layout'],
        /**
         * @private
         * @member sap.portal.ui5.core.Component
         * @param sKey
         * @param oValue
         * @param oOldValue
         * @param oObserver
         */
        function processLayoutClass(sKey, oValue, oOldValue, oObserver) {

            var sProperty = 'layout';
            var oObject = this.getProperty(sProperty),
                sInterfaceClass  = this.getProperty(sProperty + 'Class');

            if (oObject === null) {
                return;
            }

            if (jQuery.isPlainObject(oObject)) {

                oObject = sap.portal.ui5.core.Object.factoryUCTypeObject(oObject, sInterfaceClass);

                // Update property in object without triggering observervation again
                oObserver.updatePropertyValue(oObject, sProperty);

            } else if (sInterfaceClass && !sap.portal.ui5.core.Object.isInstanceOf(oObject, sInterfaceClass)) {

                throw new Error('Interface mismatch');

            }

        }
    ).callOnInit(),

    /**
     * @method
     * @private
     */
    _processLayoutDataClass: sap.portal.ui5.core.PropertyObserver(
        ['layoutDataClass', 'layoutData'],
        /**
         * @member sap.portal.ui5.core.Component
         * @param sKey
         * @param oValue
         * @param oOldValue
         * @param oObserver
         */
        function processLayoutDataClass(sKey, oValue, oOldValue, oObserver) {

            var sProperty = 'layoutData';
            var oObject = this.getProperty(sProperty),
                sInterfaceClass = this.getProperty(sProperty + 'Class');

            if (oObject === null) {
                return;
            }

            // Convert data array to hash with items
            if (jQuery.isArray(oObject)) {
                oObject = { items: oObject };
            }

            if (jQuery.isPlainObject(oObject)) {

                oObject = sap.portal.ui5.core.Object.factoryUCTypeObject(oObject, sInterfaceClass);

                // Update property in object without triggering observervation again
                oObserver.updatePropertyValue(oObject, sProperty);

            } else if (sInterfaceClass && !sap.portal.ui5.core.Object.isInstanceOf(oObject, sInterfaceClass)) {

                throw new Error('Interface mismatch');

            }

        }
    ).callOnInit(),

    /**
     * @private
     * @method
     */
    _processLayoutDataBinding: sap.portal.ui5.core.PropertyObserver(
        ['layoutData'],
        /**
         * @private
         * @member sap.portal.ui5.core.Component
         * @param sKey
         * @param oLayoutData
         * @param oOldLayoutData
         * @param oObserver
         */
        function processLayoutDataBinding(sKey, oLayoutData, oOldLayoutData, oObserver) {

            if (oOldLayoutData) {
                this.unbindLayoutData(oOldLayoutData);
            }

            if (oLayoutData) {
                this.bindLayoutData(oLayoutData);
            }

        }
    ).callOnInit(),

    /**
     * @method
     * @protected
     */
    bindView: sap.portal.ui5.core.PropertyObserver(
        ['view'],
        /**
         * @private
         * @member sap.portal.ui5.core.Component
         * @method
         * @param sKey
         * @param oView
         * @param oOldView
         */
        function bindView(sKey, oView, oOldView) {

            if (oOldView) {
                this.unbindView(oOldView);
            }

            if (!oView || jQuery.isPlainObject(oView)) {
                return;
            }

            oView.attachController(this);

            var aForwardEvents = [
                'reflow',
                'unrender',
                'beforeReflow',
                'beforeUnrender'
            ];

            jQuery.each(aForwardEvents, function(iIndex, sEventName) {
                oView.attachEvent(sEventName, {}, function(oEvent) {
                    this.fireEvent(sEventName, oEvent.getParameters());
                }.bind(this));
            }.bind(this));

        }
    ).callOnInit(),

    /**
     * @method
     * @private
     */
    _bindComponentModelToView: sap.portal.ui5.core.PropertyObserver(
        ['view', 'componentModel'],
        /**
         * @member sap.portal.ui5.core.Component
         * @private
         */
        function bindComponentModelToView() {

            var oView  = this.getView(),
                oModel = this.getComponentModel();

            if (!oView || !oModel
            ||  jQuery.isPlainObject(oView)
            ||  jQuery.isPlainObject(oModel)) {
                return;
            }

            oView.setComponentModel(oModel);

        }
    ).callOnInit(),

    /**
     * @method
     * @private
     */
    _processPlaceAt: sap.portal.ui5.core.PropertyObserver(
        ['placeAt', 'view'],
        /**
         * @member sap.portal.ui5.core.Component
         * @private
         * @returns jQuery.promise
         */
        function processPlaceAt(sKey, oValue, oOldValue) {

            if (sKey === 'placeAt') {
                this._oOldPlaceAt = oOldValue;
            }

            if (oValue === null) {
                return this.unrender();
            } else {
                return this.render();
            }
        }
    ),

    /**
     * Unrender component
     * @returns {jQuery.Promise}
     */
    unrender: function unrender() {

        var oDfd = this.unrenderViewPromise,
            oView = this.getView(),
            sId = this.getId(),
            oRenderPromise = this.renderViewPromise,
            oLayoutChildComponentsPromise = this.layoutChildComponentsPromise;

        if (oRenderPromise
            && oRenderPromise.bInUse
            && oRenderPromise.state() === 'pending') {
            ////jQuery.sap.log.debug('Rejecting UI5ControlView.render promise', sId, oRenderPromise.sUid);
            oRenderPromise.reject();
        }

        if (oLayoutChildComponentsPromise
            && oLayoutChildComponentsPromise.bInUse
            && oLayoutChildComponentsPromise.state() === 'pending') {
            //jQuery.sap.log.debug('Rejecting UI5ControlView.renderChildComponents promise', sId, oLayoutChildComponentsPromise.sUid);
            oLayoutChildComponentsPromise.reject();
        }

        this.renderViewPromise = null;
        this.layoutChildComponentsPromise = null;

        if (oDfd && oDfd.bInUse) {

            switch (oDfd.state()) {

                case 'pending':

                    //jQuery.sap.log.debug('Rejecting Component.unrender promise', sId, oDfd.sUid);
                    oDfd.reject();
                    oDfd = jQuery.Deferred();
                    break;

                default:
                    oDfd = jQuery.Deferred();
                    break;

            }

        } else if (!oDfd) {

            oDfd = jQuery.Deferred();

        }

        oDfd.oPromise = oDfd.promise();

        // For debug purposes only
        oDfd.oPromise.oDeferred = oDfd;

        oDfd.sUid = 'unrender-component-' + jQuery.sap.uid();
        //jQuery.sap.log.debug('Setting Component.unrender promise', sId, oDfd.sUid);

        this.unrenderViewPromise = oDfd;

        if (!oView || jQuery.isPlainObject(oView)) {
            return oDfd.oPromise;
        }

        // Keep dependendent promises for futher debug purposes
        oDfd.oDependencies = {
            beforeUnrenderEventSubscribers: [],
            unrenderEventSubscribers: [],
            unrender: null
        };

        oDfd.bInUse = true;

        //jQuery.sap.log.debug('Firing Component.beforeRender event', sId, oDfd.sUid);

        this.fireEvent('beforeUnrender', {
            view: oView,
            promises: oDfd.oDependencies.beforeUnrenderEventSubscribers
        });

        jQuery

            // When all before render promises be done (completed)
            // (empty array - means it's already done)
            .when.apply(jQuery, oDfd.oDependencies.beforeUnrenderEventSubscribers)

            // Then Unrender view
            .pipe(function () {

                oView.setPlaceAt(null);

                var oPromise = oView.unrender();

                // Reject main flow if render failed
                if (oPromise) {
                    oPromise.fail(function () {
                        oDfd.reject();
                    });
                }

                return oDfd.oDependencies.unrender = oPromise;

            })

            // When child components is unrendered, then notify that unrender is done
            .pipe(function () {

                //jQuery.sap.log.debug('Firing Component.unrender event', sId, oDfd.sUid);

                this.fireEvent('unrender', {
                    view: oView,
                    promises: oDfd.oDependencies.unrenderEventSubscribers
                });

                return jQuery.when.apply(jQuery, oDfd.oDependencies.unrenderEventSubscribers);

            }.bind(this))

            .then(function () {

                //jQuery.sap.log.debug('Resolving Component.unrender promise', sId, oDfd.sUid);
                oDfd.resolve();

            });

        return oDfd.oPromise;

    },

    /**
     * @protected
     * @param oView
     * @return {jQuery.Promise}
     */
    unbindView: function unbindView(oView) {

        oView = oView || this.getView();

        if (!oView || jQuery.isPlainObject(oView)) {
            return;
        }

        return oView.detachController(this);

    },

    /**
     * @protected
     * @returns {jQuery.Promise}
     */
    calculateChildComponentsLayout: function calculateChildComponentsLayout(oLayoutData) {

        var oLayoutEngine    = this.getLayout(),
            oView            = this.getView(),
            oChildComponents = this.getChildComponents();

        switch (true) {

        case jQuery.isPlainObject(oLayoutEngine):
            //jQuery.sap.log.warning('Component ' + this.getComponentId() + ' layout engine is not fully initialized yet');
            return {};

        case !oLayoutEngine:

            if (oChildComponents && oChildComponents.getLength()) {
                //jQuery.sap.log.warning('Component ' + this.getComponentId() + ' have no layout engine: childs layouting is not possible');
            }

            return {};

        }

        oLayoutData = oLayoutData || this.getLayoutData();

        var oCalculatedLayout = oLayoutEngine.processLayout(
            oChildComponents,
            oLayoutData,
            oView,
            this /* oComponent */
        );

        if (!oCalculatedLayout) {
            //jQuery.sap.log.warning('Component ' + this.getComponentId() + ' returns wrong (empty) layout data');
            return {};
        }

        return oCalculatedLayout;

    },

    /**
     * Render component
     * @returns {jQuery.Promise}
     */
    render: function render() {

        var oDfd     = this.renderViewPromise,
            oView    = this.getView(),
            oPlaceAt = this.getPlaceAt(),
            sId      = this.getId();

        var oConfig = {
            placeAt: oPlaceAt,
            view:    oView
        };

        if (this.unrenderViewPromise && this.unrenderViewPromise.state() === "pending") {
            this.unrenderViewPromise.reject();
        }

        this.unrenderViewPromise = null;

        if (oDfd && oDfd.bInUse) {

            if (jQuery.sap.equal(oConfig, oDfd.oConfig) && oDfd.state() !== 'rejected') {
                //jQuery.sap.log.debug('Reusing Component.render promise (same config)', sId, oDfd.sUid);
                return oDfd.oPromise;
            }

            switch (oDfd.state()) {

            case 'pending':

                if (jQuery.sap.equal(oConfig, oDfd.oConfig)) {

                    //jQuery.sap.log.debug('Reusing Component.render promise (same config)', sId, oDfd.sUid);
                    return oDfd.oPromise;

                } else {
                    //jQuery.sap.log.debug('Rejecting Component.render promise', sId, oDfd.sUid);
                    oDfd.reject();
                    oDfd = jQuery.Deferred();
                }

                break;

            default:
                oDfd = jQuery.Deferred();
                break;

            }

        } else if (!oDfd) {

            oDfd = jQuery.Deferred();

        }

        oDfd.oPromise = oDfd.promise();

        // For debug purposes only
        oDfd.oPromise.oDeferred = oDfd;

        oDfd.sUid = 'render-component-' + jQuery.sap.uid();
        //jQuery.sap.log.debug('Setting Component.render promise', sId, oDfd.sUid);

        this.renderViewPromise = oDfd;

        if (!oPlaceAt || !oView || jQuery.isPlainObject(oView)) {
            return oDfd.oPromise;
        }

        oDfd.oConfig = oConfig;

        // Keep dependendent promises for futher debug purposes
        oDfd.oDependencies = {
            beforeRenderEventSubscribers: [],
            renderEventSubscribers:       [],
            render:                       null,
            layoutChildComponents:        null
        };

        oDfd.bInUse = true;

        //jQuery.sap.log.debug('Firing Component.beforeRender event', sId, oDfd.sUid);

        this.fireEvent('beforeRender', {
            oldPlaceAt: this._oOldPlaceAt,
            placeAt:    oPlaceAt,
            view:       oView,
            promises:   oDfd.oDependencies.beforeRenderEventSubscribers
        });

        jQuery

            // When all before render promises be done (completed)
            // (empty array - means it's already done)
            .when.apply(jQuery, oDfd.oDependencies.beforeRenderEventSubscribers)

            // Then render view
            .pipe( function() {

                //jQuery.sap.log.debug('Placing Component.view at place', sId, oDfd.sUid);
                oView.setPlaceAt(oPlaceAt);

                var oPromise = oView.render();

                // Reject main flow if render failed
                if (oPromise) {
                    oPromise.fail( function() {
                        oDfd.reject();
                    });
                }

                return oDfd.oDependencies.render = oPromise;

            })

            // When view be rendered, then render child components
            .pipe( function() {

                if (!this.layoutChildComponentsSuspended) {

                    //jQuery.sap.log.debug('Layouting Component.childs', sId, oDfd.sUid);
                    var oPromise = this.layoutChildComponents();

                    // Reject main flow if layout child components failed
                    if (oPromise) {
                        oPromise.fail( function() {
                            oDfd.reject();
                        });
                    }

                    return oDfd.oDependencies.layoutChildComponents = oPromise;

                } else {

                    //jQuery.sap.log.debug('Skipping layouting Component.childs', sId, oDfd.sUid);

                }

            }.bind(this))

            // When child components be rendered, then notify that render is done
            .pipe( function() {

                //jQuery.sap.log.debug('Firing Component.render event', sId, oDfd.sUid);

                this.fireEvent('render', {
                    oldPlaceAt: this._oOldPlaceAt,
                    view:     oView,
                    placeAt:  oPlaceAt,
                    promises: oDfd.oDependencies.renderEventSubscribers
                });

                return jQuery.when.apply(jQuery, oDfd.oDependencies.renderEventSubscribers);

            }.bind(this))

            .then( function() {

                //jQuery.sap.log.debug('Resolving Component.render promise', sId, oDfd.sUid);
                oDfd.resolve();

            });

        return oDfd.oPromise;

    },

    /**
     * @protected
     * @param {Object|sap.portal.ui5.core.LayoutData} oCalculatedLayout
     * @param {Object} oParams (object used to provide additional parameters)
     * @returns {jQuery.promise}
     */
    layoutChildComponents: function layoutChildComponents(oCalculatedLayout, oParams) {

        var oDfd               = this.layoutChildComponentsPromise,
            oView              = this.getView(),
            oChildComponents   = this.getChildComponents(),
            oLayout            = this.getLayout(),
            sId                = this.getId(),
            oParams            = oParams || {};

        // If layout child components is force while already running layout flow present
        // then reject running flow and begin from scratch
        if (oParams && oDfd && oParams.force && oDfd.bInUse && oDfd.state() === 'pending') {
            oDfd.reject();
        }

        if (this.layoutChildComponentsSuspended > 0) {
            //jQuery.sap.log.debug('Skipping layouting Component.childs (suspended)', sId, oDfd ? oDfd.sUid : null);
            return oDfd ? oDfd.oPromise : null;
        }

        // Do not layout if not fully instantiated
        if (jQuery.isPlainObject(oChildComponents) ||
            jQuery.isPlainObject(oView)) {
            return oDfd ? oDfd.oPromise : null;
        }

        // Do not layout if view is not rendered
        if (!oView || !oView.isRendered()) {
            return oDfd ? oDfd.oPromise : null;
        }

        switch (true) {

        // If no calculated layout - calculate it
        case (!oCalculatedLayout):
            oCalculatedLayout = this.calculateChildComponentsLayout();
            break;

        // If given layout data instead of calculated layout then calculate layout
        // using given data
        case (oCalculatedLayout && oCalculatedLayout instanceof sap.portal.ui5.core.LayoutData):
            oCalculatedLayout = this.calculateChildComponentsLayout(oCalculatedLayout);
            break;

        //default: Calculated layout is ok

        }

        var oLayoutDfd      = jQuery.Deferred();
        oLayoutDfd.sUid     = 'layout-child-components-' + jQuery.sap.uid();
        oLayoutDfd.oPromise = oLayoutDfd.promise();
        oLayoutDfd.oPromise.oDeferred = oLayoutDfd;

        jQuery
            .when(oCalculatedLayout)
            .pipe( function doLayout(oCalculatedLayout) {

                var oConfig = {
                    layout: oLayout,
                    params: oParams,
                    calculatedLayout: oCalculatedLayout
                };

                if (oDfd && oDfd.bInUse) {

                    if (oLayout && jQuery.sap.equal(oConfig, oDfd.oConfig) && oDfd.state() !== 'rejected') {
                        //jQuery.sap.log.debug('Reusing Component.layoutChildComponents promise (same config)', sId, oDfd.sUid);
                        this.layoutChildComponentsPromise = oDfd;

                        if (oDfd.state() === 'rejected') {
                            //jQuery.sap.log.debug('Rejecting Component.layoutChildComponents promise', sId, oLayoutDfd.sUid);
                            oLayoutDfd.reject();
                        } else {
                            //jQuery.sap.log.debug('Resolving Component.layoutChildComponents promise', sId, oLayoutDfd.sUid);
                            oLayoutDfd.resolve();
                        }

                        return oDfd.oPromise;
                    }

                    switch (oDfd.state()) {

                    case 'pending':

                        if (jQuery.sap.equal(oConfig, oDfd.oConfig)) {

                            //jQuery.sap.log.debug('Reusing Component.layoutChildComponents promise (same config)', sId, oDfd.sUid);
                            this.layoutChildComponentsPromise = oDfd;
                            return oDfd.oPromise;

                        } else {

                            //jQuery.sap.log.debug('Rejecting Component.layoutChildComponents promise', sId, oDfd.sUid);
                            oDfd.reject();
                            oDfd = oLayoutDfd;

                        }

                        break;

                    default:
                        oDfd = oLayoutDfd;
                        break;

                    }

                } else if (!oDfd) {

                    oDfd = oLayoutDfd;

                }

                oDfd.bInUse  = true;
                oDfd.oConfig = oConfig;
                oDfd.oDependencies = {
                    beforeLayoutEventSubscribers: [],
                    layoutEventSubscribers: [],
                    renderChildComponents: null
                };

                this.layoutChildComponentsPromise = oDfd;

                //jQuery.sap.log.debug('Firing Component.beforeLayout event', sId, oDfd.sUid);

                this.fireEvent('beforeLayout', {
                    layout:   oCalculatedLayout,
                    promises: oDfd.oDependencies.beforeLayoutEventSubscribers
                });

                jQuery

                    // When all before layout promises be done (completed)
                    // (empty array - means it's already done)
                    .when.apply(jQuery, oDfd.oDependencies.beforeLayoutEventSubscribers)

                    // Then let to view render child components
                    // using calculated data
                    .pipe( function renderChildComponents() {

                        //jQuery.sap.log.debug('Rendering Component.view child components', sId, oDfd.sUid);

                        // Check if further layout should be suspended by reading property from
                        // calculated layout
                        var bSuspendRelayout = (typeof(oCalculatedLayout.component) === 'object') ?
                            Boolean(oCalculatedLayout.component.suspendRelayout) :
                            false;

                        // Boolean which keep state if relayout was resumed
                        var bRelayoutResumed = bSuspendRelayout ? false : true;

                        var fnResumeRelayout = function() {

                            if (!bRelayoutResumed) {
                                this.resumeLayoutChildComponents();
                                bRelayoutResumed = true;
                            }

                        }.bind(this);

                        if (bSuspendRelayout) {
                            this.suspendLayoutChildComponents();
                        }

                        oDfd.oDependencies.renderChildComponents = oView.renderChildComponents(
                            oChildComponents,
                            oCalculatedLayout.childComponents,
                            oCalculatedLayout.component
                        );

                        if (bSuspendRelayout) {

                            // Restore state of relayout on end of the actual layout process
                            oDfd.oDependencies.renderChildComponents.always(fnResumeRelayout);

                            // Ensure that the state of relayout has been restored anyway
                            oDfd.always(fnResumeRelayout);

                        }

                        return oDfd.oDependencies.renderChildComponents;

                    }.bind(this))

                    // When relayout be done
                    // Then notify that layout is done
                    .pipe( function notify() {

                        //jQuery.sap.log.debug('Firing Component.layout event', sId, oDfd.sUid);
                        this.fireEvent('layout', {
                            layout:   oCalculatedLayout,
                            promises: oDfd.oDependencies.layoutEventSubscribers
                        });

                        return jQuery.when.apply(jQuery, oDfd.oDependencies.layoutEventSubscribers);

                    }.bind(this))

                    .fail( function fail() {

                        //jQuery.sap.log.debug('Rejecting Component.layoutChildComponents promise', sId, oDfd.sUid);
                        oDfd.reject();

                        //jQuery.sap.log.debug('Rejecting Component.layoutChildComponents promise', sId, oLayoutDfd.sUid);
                        oLayoutDfd.reject();

                    })

                    .done( function resolve() {

                        //jQuery.sap.log.debug('Resolving Component.layoutChildComponents promise', sId, oDfd.sUid);
                        oDfd.resolve();

                        //jQuery.sap.log.debug('Resolving Component.layoutChildComponents promise', sId, oLayoutDfd.sUid);
                        oLayoutDfd.resolve();

                    });

                return oDfd.oPromise;

            }.bind(this));

        return oLayoutDfd.oPromise;

    },

    /**
     * @protected
     * @method
     */
    renderChildComponents: sap.portal.ui5.core.PropertyObserver(
        ['layout', 'layoutData', 'childComponents'],
        /**
         * @private
         * @member sap.portal.ui5.core.Component
         * @returns jQuery.promise
         */
        function renderChildComponents() {

            return this.layoutChildComponents();

        }
    ),

    /**
     * @protected
     * @param sComponentId
     */
    unregisterInComponentManager: function unregisterInComponentManager(sComponentId) {

        sComponentId = sComponentId || this.getComponentId();
        sap.portal.ui5.core.ComponentManager.unregisterComponent(sComponentId);

    },

    /**
     * @protected
     * @returns {jQuery.Promise}
     */
    destroyChildComponents: function destroyChildComponents() {

        var oChildComponents = this.getChildComponents();

        if (!oChildComponents) {
            return;
        }

        return oChildComponents.destroy();

    },

    /**
     * @protected
     * @returns {jQuery.Promise}
     */
    destroyView: function destroyView() {

        var oView = this.getView(),
            oRenderViewPromise = this.renderViewPromise,
            oLayoutChildComponentsPromise = this.layoutChildComponentsPromise;

        if (!oView) {
            return;
        }

        // Reject any already existing view rendering promise
        if (oRenderViewPromise
        &&  oRenderViewPromise.bInUse
        &&  oRenderViewPromise.state() === 'pending') {
            oRenderViewPromise.reject();
        }

        // Reject any already existing view rendering promise
        if (oLayoutChildComponentsPromise
        &&  oLayoutChildComponentsPromise.bInUse
        &&  oLayoutChildComponentsPromise.state() === 'pending') {
            oLayoutChildComponentsPromise.reject();
        }

        return oView.destroy();

    },

    /**
     * @public
     * @return {jQuery.Promise}
     */
    destroy: function destroy() {

        var aPromises = [],
            fnSuper   = this._super.bind(this, arguments),
            sId       = this.getId(),
            oDfd      = jQuery.Deferred();

        aPromises.push( this.destroyChildComponents() );
        aPromises.push( this.destroyView() );
        aPromises.push( this.unregisterInComponentManager() );

        // Make promise which will be resolved
        // only when all operations be resolved
        jQuery
            .when.apply(jQuery, aPromises)
            .always( function() {

                jQuery
                    .when(fnSuper())
                    .always( function() {

                        //jQuery.sap.log.debug('Resolving Component.destroy promise', sId, oDfd.sUid);
                        oDfd.resolve();

                    });

            });

        return oDfd.promise();

    },

    /**
     *
     * @param sId
     * @param bRecursive
     * @returns {*}
     */
    getChildByComponentId: function getChildByComponentId(sId, bRecursive) {

        return this.getChildComponents().getByComponentId(sId, bRecursive);

    },

    /**
     * @param {Array} aComponents
     * @param {Array} aLayoutDataRecords (optional)
     * @returns {jQuery.promise}
     */
    addChildComponents: function addChildComponents(aComponents, aLayoutDataRecords) {

        if (!jQuery.isArray(aComponents)) {
            throw new TypeError('Components are not array');
        }

        var oLayoutChildComponentsPromise = this.layoutChildComponentsPromise;

        // Reject any already existing view rendering promise
        if (oLayoutChildComponentsPromise
        &&  oLayoutChildComponentsPromise.bInUse
        &&  oLayoutChildComponentsPromise.state() === 'pending') {
            oLayoutChildComponentsPromise.reject();
        }

        this.suspendLayoutChildComponents();

        var oDfd             = jQuery.Deferred(),
            oChildComponents = this.getChildComponents(),
            oLayoutData      = this.getLayoutData(),
            sId              = this.getId(),
            aPromises        = [];

        if (aLayoutDataRecords) {

            if (!oLayoutData) {
                // create layout data
                aPromises.push( this.setLayoutData({ items: aLayoutDataRecords }) );
            } else {
                aPromises.push( oLayoutData.addItems(aLayoutDataRecords) );
            }

        }

        if (oChildComponents && aComponents) {
            aPromises.push( oChildComponents.addItems(aComponents) );
        }

        this.resumeLayoutChildComponents();

        jQuery
            .when.apply(jQuery, aPromises)

            .pipe( function() {

                return this.layoutChildComponents();

            }.bind(this))

            .always( function() {

                //jQuery.sap.log.debug('Resolving Component.addChildComponents promise', sId, oDfd.sUid);
                oDfd.resolve();

            });

        return oDfd.promise();

    },

    /**
     * @param {sap.portal.ui5.core.Component} oComponents
     * @param {Object} oLayoutDataRecord (optional)
     * @returns {jQuery.promise}
     */
    addChildComponent: function addChildComponent(oComponent, oLayoutDataRecord) {

        if (!oLayoutDataRecord) {
            //jQuery.sap.log.warning('Adding component without layout data');
        }

        if (typeof(oLayoutDataRecord) === 'object') {

            var sComponentId = oComponent instanceof sap.portal.ui5.core.Component ?
                oComponent.getComponentId() :
                oComponent.componentId;

            // Completing component id if it missing in layout data record .
            if (typeof(oLayoutDataRecord.componentId) === 'undefined') {
                oLayoutDataRecord.componentId = sComponentId;
            }

            if (oLayoutDataRecord.componentId !== sComponentId) {
                throw new Error('Component id in layout data mismatch');
            }

        }

        return this.addChildComponents([oComponent], [oLayoutDataRecord]);

    },

    /**
     *
     * @param {Array} aComponents
     * @param {boolean|Array} aRemoveLayoutData
     * @param {boolean} bDestroyComponents
     * @returns {jQuery.promise}
     */
    removeChildComponents: function removeChildComponents(aRemoveComponents, aRemoveLayoutData, bDestroyComponents) {

        if (!jQuery.isArray(aRemoveComponents)) {
            throw new TypeError;
        }

        var oLayoutChildComponentsPromise = this.layoutChildComponentsPromise;

        // Reject any already existing view rendering promise
        if (oLayoutChildComponentsPromise
        &&  oLayoutChildComponentsPromise.bInUse
        &&  oLayoutChildComponentsPromise.state() === 'pending') {
            oLayoutChildComponentsPromise.reject();
        }

        this.suspendLayoutChildComponents();

        var oDfd             = jQuery.Deferred(),
            oChildComponents = this.getChildComponents(),
            oLayoutData      = this.getLayoutData(),
            aPromises        = [],
            sId              = this.getId();

        var iComponentIndex,
            iComponentLength = aRemoveComponents.length

        if (oLayoutData && aRemoveLayoutData) {

            if (aRemoveLayoutData === true) {

                var sComponentId, oFound;

                aRemoveLayoutData = [];

                for (iComponentIndex = 0; iComponentIndex < iComponentLength; iComponentIndex++) {
                    sComponentId = aRemoveComponents[iComponentIndex].getComponentId();
                    oFound = oLayoutData.getByComponentId(sComponentId);
                    if (oFound) {
                        aRemoveLayoutData.push(oFound);
                    }
                }

            }

            if (!jQuery.isArray(aRemoveLayoutData)) {
                throw new TypeError;
            }

            aPromises.push( oLayoutData.removeItems(aRemoveLayoutData) );

        }

        if (oChildComponents) {
            aPromises.push( oChildComponents.removeItems(aRemoveComponents) );
        }

        if (bDestroyComponents) {
            for (iComponentIndex = 0; iComponentIndex < iComponentLength; iComponentIndex++) {
                //jQuery.sap.log.debug('Destroing child component #' + iComponentIndex, aRemoveComponents[iComponentIndex].getId());
                aPromises.push( aRemoveComponents[iComponentIndex].destroy() );
            }
        }

        this.resumeLayoutChildComponents();

        jQuery
            .when.apply(jQuery, aPromises)

            .pipe( function() {

                return this.layoutChildComponents();

            }.bind(this))

            .always( function() {

                //jQuery.sap.log.debug('Resolving Component.removeChildComponents promise', sId, oDfd.sUid);
                oDfd.resolve();

            });

        return oDfd.promise();

    },

    /**
     *
     * @param oComponent
     * @param bRemoveLayoutData
     * @returns {jQuery.promise}
     */
    removeChildComponent: function removeChildComponent(oComponent, bRemoveLayoutData) {

        return this.removeChildComponents([oComponent], bRemoveLayoutData);

    },

    /**
     *
     * @returns {number}
     */
    getLength: function getLength() {

        return this.getChildComponents().getLength();

    },

    /**
     *
     * @param {Array} aItems
     * @return {jQuery.promise}
     */
    setChildComponentItems: function setChildComponentItems(aItems, aLayoutDataItems) {

        var oLayoutChildComponentsPromise = this.layoutChildComponentsPromise;

        // Reject any already existing view rendering promise
        if (oLayoutChildComponentsPromise
        &&  oLayoutChildComponentsPromise.bInUse
        &&  oLayoutChildComponentsPromise.state() === 'pending') {
            oLayoutChildComponentsPromise.reject();
        }

        this.suspendLayoutChildComponents();

        var aPromises        = [],
            oChildComponents = this.getChildComponents(),
            oDfd             = jQuery.Deferred(),
            sId              = this.getId();

        aPromises.push( oChildComponents.setItems(aItems) );

        if (aLayoutDataItems) {
            aPromises.push( this.setLayoutDataItems(aLayoutDataItems) );
        }

        this.resumeLayoutChildComponents();

        jQuery
            .when.apply(jQuery, aPromises)

            .pipe( function() {

                return this.layoutChildComponents();

            }.bind(this))

            .always( function() {

                //jQuery.sap.log.debug('Resolving Component.setChildComponents promise', sId, oDfd.sUid);
                oDfd.resolve();

            });

        return oDfd.promise();

    },

    /**
     *
     * @param {Array} aItems
     * @return {jQuery.promise}
     */
    setLayoutDataItems: function setLayoutDataItems(aItems) {

        var oLayoutChildComponentsPromise = this.layoutChildComponentsPromise;

        // Reject any already existing view rendering promise
        if (oLayoutChildComponentsPromise
        &&  oLayoutChildComponentsPromise.bInUse
        &&  oLayoutChildComponentsPromise.state() === 'pending') {
            oLayoutChildComponentsPromise.reject();
        }

        this.suspendLayoutChildComponents();

        var oLayoutData = this.getLayoutData(),
            aPromises   = [],
            oDfd        = jQuery.Deferred(),
            sId         = this.getId();

        if (!oLayoutData) {
            // create layout data
            aPromises.push( this.setLayoutData({ items: aItems }) );
        } else {
            aPromises.push( oLayoutData.setItems(aItems) );
        }

        this.resumeLayoutChildComponents();

        jQuery
            .when.apply(jQuery, aPromises)

            .pipe( function() {

                return this.layoutChildComponents();

            }.bind(this))

            .always( function() {

                //jQuery.sap.log.debug('Resolving Component.setLayoutDataItems promise', sId, oDfd.sUid);
                oDfd.resolve();

            });

        return oDfd.promise();

    },

    /**
     *
     * @returns {number}
     */
    suspendLayoutChildComponents: function suspendLayoutChildComponents() {

        return (++this.layoutChildComponentsSuspended);

    },

    /**
     *
     * @returns {number}
     */
    resumeLayoutChildComponents: function resumeLayoutChildComponents() {

        return (this.layoutChildComponentsSuspended > 0) ?
            (--this.layoutChildComponentsSuspended) :
            this.layoutChildComponentsSuspended;

    },

    /**
     * @returns {boolean}
     */
    isRendered: function isRendered() {

        var oView = this.getView();

        if (!(oView instanceof sap.portal.ui5.core.View)) {
            return false;
        }

        return oView.isRendered();

    }

});

}; // end of sap/portal/ui5/core/Component.js
