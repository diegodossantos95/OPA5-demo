<core:FragmentDefinition
	xmlns:customData="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"
	xmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"
	xmlns="sap.m" xmlns:build="sap.build" xmlns:core="sap.ui.core" xmlns:smc="sap.ui.comp.smartmicrochart" xmlns:navpopover="sap.ui.comp.navpopover">
	<!-- @classdesc @name: Name: sap.suite.ui.generic.template.ListReport.view.fragments.TableColumns.fragment.xml
		@description: Visualizes one column (header and data) of a responsive table,
		as part of a list report. Reduced version of the TableColumns fragment that
		you can find under sap.suite.ui.generic.template.fragments. The reduction
		aims at a performance optimization. @param {UI.LineItem} [collection] @param
		{Edm.EntitySet} [listEntitySet] -->

	<columns>
		<template:repeat list="{collection>}" var="dataField">
			<!--  handle data field which is either semantic key, title or description -->
			<template:if test="{= ${dataField>RecordType} === 'com.sap.vocabularies.UI.v1.DataField' &amp;&amp; (${dataField>Value/Path} === ${targetColumn>} )}">
				<template:with path="dataField>Value" helper="sap.ui.model.odata.AnnotationHelper.resolvePath" var="dataFieldValue">
					<Column
					visible="{= ( ${dataField>com.sap.vocabularies.UI.v1.Hidden} || ( ${dataField>com.sap.vocabularies.Common.v1.FieldControl/EnumMember} === 'com.sap.vocabularies.Common.v1.FieldControlType/Hidden')) ? 'false' :
						( ${dataField>com.sap.vocabularies.UI.v1.Importance/EnumMember} === 'com.sap.vocabularies.UI.v1.ImportanceType/High' ? 'true' :
							  ( ${dataField>com.sap.vocabularies.UI.v1.Importance/EnumMember} === 'com.sap.vocabularies.UI.v1.ImportanceType/Medium' &amp;&amp; ( ${device>/system/tablet} || ${device>/system/desktop} ) ? 'true' : ${device>/system/desktop} ? 'true' : 'false' ) ) }"
					build:metadata="#pattern:Column;staticProp::Importance:\{dataField>com.sap.vocabularies.UI.v1.Importance/EnumMember\};condition:collection>AnnotationType:com.sap.vocabularies.UI.v1.LineItem">
						<customData>
							<core:CustomData key="p13nData" value="{parts: [{path: 'listEntitySet>'}, {path: 'dataFieldValue>'}, {path: 'dataField>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.createP13N'}" />
						</customData>
						<Text
							text="{parts: [{path: 'dataFieldValue>'}, {path: 'dataField>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getColumnHeaderText'}">
						</Text>
					</Column>
				</template:with>
			</template:if>
			<!-- handle data field with images -->
			<template:if test="{= ${dataField>RecordType} === 'com.sap.vocabularies.UI.v1.DataField'}">
				<template:with path="dataField>Value" helper="sap.ui.model.odata.AnnotationHelper.resolvePath" var="dataFieldValue">
					<template:if test="{path: 'dataFieldValue>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.isImageUrl'}">
						<Column
							visible="{= ${dataField>com.sap.vocabularies.UI.v1.Importance/EnumMember} === 'com.sap.vocabularies.UI.v1.ImportanceType/High' ? 'true' :
									  ( ${dataField>com.sap.vocabularies.UI.v1.Importance/EnumMember} === 'com.sap.vocabularies.UI.v1.ImportanceType/Medium' &amp;&amp; ( ${device>/system/tablet} || ${device>/system/desktop} ) ? 'true' : ${device>/system/desktop} ? 'true' : 'false' ) }"
							build:metadata="#pattern:Column;staticProp::Importance:\{dataField>com.sap.vocabularies.UI.v1.Importance/EnumMember\};condition:collection>AnnotationType:com.sap.vocabularies.UI.v1.LineItem">
							<customData>
								<core:CustomData key="p13nData" value="{parts: [{path: 'listEntitySet>'}, {path: 'dataFieldValue>'}, {path: 'dataField>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.createP13N'}" />
							</customData>
							<template:if test="{dataField>Label}" build:metadata="#ignore">
								<template:then build:metadata="#ignore">
									<Text
										text="{path: 'dataField>Label', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}"
										build:metadata="#pattern:Column;staticProp:text:Title;" />
								</template:then>
								<template:elseif
									test="{dataFieldValue>com.sap.vocabularies.Common.v1.Label}">
									<Text
										text="{path: 'dataFieldValue>com.sap.vocabularies.Common.v1.Label', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}" />
								</template:elseif>
							</template:if>
						</Column>
					</template:if>
				</template:with>
			</template:if>
			<!-- handle inline actions -->
			<template:if test="{= (${dataField>RecordType} === 'com.sap.vocabularies.UI.v1.DataFieldForAction' || ${dataField>RecordType} === 'com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation') &amp;&amp; ${dataField>Inline/Bool} === 'true'}">
				<Column
					visible="{= ${dataField>com.sap.vocabularies.UI.v1.Importance/EnumMember} === 'com.sap.vocabularies.UI.v1.ImportanceType/High' ? 'true' :
							  ( ${dataField>com.sap.vocabularies.UI.v1.Importance/EnumMember} === 'com.sap.vocabularies.UI.v1.ImportanceType/Medium' &amp;&amp; ( ${device>/system/tablet} || ${device>/system/desktop} ) ? 'true' : ${device>/system/desktop} ? 'true' : 'false' ) }"
					build:metadata="#pattern:Column;staticProp::Importance:\{dataField>com.sap.vocabularies.UI.v1.Importance/EnumMember\};condition:collection>AnnotationType:com.sap.vocabularies.UI.v1.LineItem">
					<customData>
						<core:CustomData key="p13nData" value="{path: 'dataField>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.createP13NColumnForAction'}" />
					</customData>
					<template:if test="{dataField>Inline/Bool} === 'true'">
						<template:then>
							<template:if test="{dataField>Label}" build:metadata="#ignore">
								<template:then build:metadata="#ignore">
									<core:InvisibleText
										text="{path: 'dataField>Label', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}"/>
								</template:then>
							</template:if>
						</template:then>
						<template:else>
							<template:if test="{dataField>Label}" build:metadata="#ignore">
								<template:then build:metadata="#ignore">
									<Text
										text="{path: 'dataField>Label', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}"
										visible="true"
										build:metadata="#pattern:Column;staticProp:text:Title;" />
								</template:then>
							</template:if>
						</template:else>
					</template:if>
				</Column>
			</template:if>
            <!-- handle DataFieldWithIntentBasedNavigation -->
			<template:if
				test="{= (${dataField>RecordType} === 'com.sap.vocabularies.UI.v1.DataFieldWithIntentBasedNavigation') }">
				<Column
					visible="{= ${dataField>com.sap.vocabularies.UI.v1.Importance/EnumMember} === 'com.sap.vocabularies.UI.v1.ImportanceType/High' ? 'true' :
		                              ( ${dataField>com.sap.vocabularies.UI.v1.Importance/EnumMember} === 'com.sap.vocabularies.UI.v1.ImportanceType/Medium' &amp;&amp; ( ${device>/system/tablet} || ${device>/system/desktop} ) ? 'true' : ${device>/system/desktop} ? 'true' : 'false' ) }"
					build:metadata="#pattern:Column;staticProp::Importance:\{dataField>com.sap.vocabularies.UI.v1.Importance/EnumMember\};condition:collection>AnnotationType:com.sap.vocabularies.UI.v1.LineItem">
					<customData>
						<core:CustomData key="p13nData"
							value="{path: 'dataField>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.createP13NColumnForAction'}" />
					</customData>
					<Text
						text="{parts: [{path: 'dataField>'}, {path: 'listEntitySet>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getLabelForDFwithIBN'}"
						build:metadata="#pattern:Column;staticProp:text:Title;" />
				</Column>
			</template:if>

			<template:if
				test="{= ${dataField>RecordType} === 'com.sap.vocabularies.UI.v1.DataFieldForAnnotation'}">
				<template:then>
			<!-- Handle ContactPopUp Over -->
					<template:if test="{= ${dataField>Target/AnnotationPath}.indexOf('com.sap.vocabularies.Communication.v1.Contact') >= 0}">
						<template:then>
							<template:with path="dataField>Target" helper="sap.ui.model.odata.AnnotationHelper.resolvePath" var="dataFieldTarget">
								<Column
									visible="{= ${dataField>com.sap.vocabularies.UI.v1.Importance/EnumMember} === 'com.sap.vocabularies.UI.v1.ImportanceType/High' ? 'true' :
											( ${dataField>com.sap.vocabularies.UI.v1.Importance/EnumMember} === 'com.sap.vocabularies.UI.v1.ImportanceType/Medium' &amp;&amp; ( ${device>/system/tablet} || ${device>/system/desktop} ) ? 'true' : ${device>/system/desktop} ? 'true' : 'false' ) }">
									<customData>
										<core:CustomData key="p13nData" value="{parts: [{path: 'listEntitySet>'}, {path: 'dataField>'}, {path: 'dataFieldTarget>'}, {path: 'dataField>Target/AnnotationPath'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.createP13NColumnForContactPopUp'}" />
									</customData>
									<template:if test="{dataField>Label}">
										<template:then>
											<Text
												text="{path: 'dataField>Label', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}"
												visible="true" />
										</template:then>
									</template:if>
								</Column>
							</template:with>
						</template:then>
					</template:if>
			<!-- handle smart micro chart -->
					<template:if test="{= ${dataField>Target/AnnotationPath}.indexOf('com.sap.vocabularies.UI.v1.Chart') >= 0}">
						<template:then>
							<Column visible="{= ${dataField>com.sap.vocabularies.UI.v1.Importance/EnumMember} === 'com.sap.vocabularies.UI.v1.ImportanceType/High' ? 'true' :
	                                         ( ${dataField>com.sap.vocabularies.UI.v1.Importance/EnumMember} === 'com.sap.vocabularies.UI.v1.ImportanceType/Medium' &amp;&amp; ( ${device>/system/tablet} || ${device>/system/desktop} ) ? 'true' : ${device>/system/desktop} ? 'true' : 'false' ) }">

								<template:with path="dataField>Target" helper="sap.ui.model.odata.AnnotationHelper.resolvePath" var="dataFieldTarget">
									<customData>
										<core:CustomData key="p13nData" value="{parts: [{path: 'listEntitySet>'}, {path: 'dataField>'}, {path: 'dataFieldTarget>'}, {path: 'dataField>Target/AnnotationPath'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.createP13NColumnForChart'}" />
									</customData>
								</template:with>
                                <template:if test="{dataField>Label}">
                                     <template:then build:metadata="#ignore">
                                         <Text text="{path: 'dataField>Label', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}"/>
                                     </template:then>
                                 </template:if>
                             </Column>
						</template:then>
						<template:else>
			<!-- handle rating and progress indicators -->
							<template:with path="dataField>Target" helper="sap.ui.model.odata.AnnotationHelper.resolvePath" var="dataFieldTarget">
								<template:if test="{= ${dataFieldTarget>Visualization}}">
									<template:then>
										<template:with path="dataField>Value" helper="sap.ui.model.odata.AnnotationHelper.resolvePath" var="dataFieldValue"> <!-- only needed to pass to p13n to be able to switch to old implementation (DataFieldForAnnotation does not contain Value) -->
											<template:with path="dataFieldTarget>Value" helper="sap.ui.model.odata.AnnotationHelper.resolvePath" var="dataFieldTargetValue">
												<Column
													visible="{= ${dataField>com.sap.vocabularies.UI.v1.Importance/EnumMember} === 'com.sap.vocabularies.UI.v1.ImportanceType/High' ? 'true' :
															  ( ${dataField>com.sap.vocabularies.UI.v1.Importance/EnumMember} === 'com.sap.vocabularies.UI.v1.ImportanceType/Medium' &amp;&amp; ( ${device>/system/tablet} || ${device>/system/desktop} ) ? 'true' : ${device>/system/desktop} ? 'true' : 'false' ) }"
													build:metadata="#pattern:Column;staticProp::Importance:\{dataField>com.sap.vocabularies.UI.v1.Importance/EnumMember\};condition:collection>AnnotationType:com.sap.vocabularies.UI.v1.LineItem">
													<customData>
                                                        <core:CustomData key="p13nData" value="{parts: [{path: 'listEntitySet>'}, {path: 'dataFieldValue>'}, {path: 'dataField>'}, {path: 'dataFieldTarget>'}, {path: 'dataFieldTargetValue>'}, {path: 'dataField>Target/AnnotationPath'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.createP13NColumnForIndicator'}" />
													</customData>
													<template:if test="{dataField>Label}"
														build:metadata="#ignore">
														<template:then build:metadata="#ignore">
															<Text
																text="{path: 'dataField>Label', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}"
																visible="true"
																build:metadata="#pattern:Column;staticProp:text:Title;" />
														</template:then>
														<template:elseif test="{dataFieldTarget>Title}">
															<Text
																text="{path: 'dataFieldTarget>Title', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}" />
														</template:elseif>
														<template:elseif
															test="{dataFieldTargetValue>com.sap.vocabularies.Common.v1.Label}">
															<Text
																text="{path: 'dataFieldTargetValue>com.sap.vocabularies.Common.v1.Label', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}" />
														</template:elseif>
													</template:if>
												</Column>
											</template:with>
										</template:with>
									</template:then>
								</template:if>
							</template:with>
						</template:else>
					</template:if>
				</template:then>
			</template:if>
		</template:repeat>
 		<!--  add break-out columns -->
		<template:if test="{= ${facet>Target/AnnotationPath} }">
			<template:then>
				<core:ExtensionPoint
					name="ResponsiveTableColumnsExtension|{listEntitySet>name}|{path: 'facet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}" />
			</template:then>
			<template:else>
				<core:ExtensionPoint
					name="ResponsiveTableColumnsExtension|{listEntitySet>name}" />
			</template:else>
		</template:if>
	</columns>
	<items>
		<ColumnListItem highlight="{= ${parts: [{path: 'IsActiveEntity'}, {path: 'HasActiveEntity'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.setInfoHighlight'}}"
						vAlign="{parameter>/settings/tableColumnVerticalAlignment}"
						type="{parts: [{path: 'listEntitySet>'}, {path: 'parameter>/settings/subPages/'}, {path: 'parameter>/manifest/'}, {path: 'parameter>/settings/'}, {path:'parameter>/isDraftEnabled'}, {path: 'facet>Target/AnnotationPath'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getColumnListItemTypeForDetailPage'}"
			press="._templateEventHandlers.onListNavigate">
			<customData>
				<core:CustomData key="CrossNavigation"
					value="{parts: [{path: 'listEntitySet>name'}, {path: 'parameter>/settings/subPages/'}, {path: 'facet>Target/AnnotationPath'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getDisplayNavigationIntent'}" />
			</customData>
			<cells>
				<template:repeat list="{collection>}" var="dataField">
					<!--  handle data field which is either semantic key, title or description -->
					<template:if test="{= ${dataField>RecordType} === 'com.sap.vocabularies.UI.v1.DataField' &amp;&amp; (${dataField>Value/Path} === ${targetColumn>} )}">
						<template:with path="dataField>Value" helper="sap.ui.model.odata.AnnotationHelper.resolvePath" var="dataFieldValue">
							<VBox class="sapMTableContentMargin">
								<items>
									<navpopover:SmartLink
										class="sapSmartTemplatesListReportFirstText"
										text="{parts: [{path: 'dataFieldValue>'}, {path: 'dataField>'}, {path: 'entityType>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getColumnCellFirstText'}"
										semanticObject="{path: 'dataFieldValue>com.sap.vocabularies.Common.v1.SemanticObject', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}"
									 	fieldName="{dataFieldValue>name}"
										additionalSemanticObjects="{path: 'dataFieldValue>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getAdditionalSemanticObjects'}"
										emphasized="true"
										visible="{parts: [{path: 'dataFieldValue>'}, {path: 'dataField>'}, {path: 'entityType>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getColumnCellFirstTextVisibility'}"
										navigationTargetsObtained="._templateEventHandlers.onSemanticObjectLinkNavigationTargetObtainedSmartLink">
										<navpopover:customData>
											<core:CustomData key="LinkDescr" value="{parts: [{path: 'dataFieldValue>'}, {path: 'dataField>'}, {path: 'entityType>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getColumnCellSecondText'}"/>
										</navpopover:customData>
									</navpopover:SmartLink>
									<Text class="sapUiTinyMarginTop"
										text="{parts: [{path: 'dataFieldValue>'}, {path: 'dataField>'}, {path: 'entityType>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getColumnCellSecondText'}"
										visible="{parts: [{path: 'dataFieldValue>'}, {path: 'dataField>'}, {path: 'entityType>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getColumnCellSecondTextVisibility'}">
									</Text>
									<core:Fragment fragmentName="sap.suite.ui.generic.template.ListReport.view.fragments.DraftInfoBox" type="XML"/>
								</items>
							</VBox>
						</template:with>
					</template:if>
					<!-- handle data field with images -->
					<template:if test="{= ${dataField>RecordType} === 'com.sap.vocabularies.UI.v1.DataField'}">
						<template:with path="dataField>Value" helper="sap.ui.model.odata.AnnotationHelper.resolvePath" var="dataFieldValue">
							<template:if test="{path: 'dataFieldValue>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.isImageUrl'}">
								<Image src="{parts:[{path: 'dataField>Value'}, {path: 'parameter>/appComponentName'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.formatImageUrl'}" width="3rem" height="3rem" densityAware="false" />
							</template:if>
						</template:with>
					</template:if>
					<!-- handle inline actions -->
					<template:if test="{= (${dataField>RecordType} === 'com.sap.vocabularies.UI.v1.DataFieldForAction' || ${dataField>RecordType} === 'com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation') &amp;&amp; ${dataField>Inline/Bool} === 'true'}">
						<template:then>
							<core:Fragment fragmentName="sap.suite.ui.generic.template.fragments.InlineButton" type="XML" />
						</template:then>
					</template:if>
                    <!--handle DataFieldWithIntentBasedNavigation -->
					<template:if
						test="{= (${dataField>RecordType} === 'com.sap.vocabularies.UI.v1.DataFieldWithIntentBasedNavigation')}">
						<template:then>
							<Link	text="{parts: [{path: 'dataField>'}, {path: 'listEntitySet>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getLinkTextForDFwithIBN'}"
								press="._templateEventHandlers.onDataFieldWithIntentBasedNavigation"
								wrapping="true">
								<customData>
									<core:CustomData key="SemanticObject" value="{dataField>SemanticObject/String}"/>
									<core:CustomData key="Action" value="{dataField>Action/String}"/>
								</customData>
							</Link>
						</template:then>
					</template:if>

					<template:if test="{= ${dataField>RecordType} === 'com.sap.vocabularies.UI.v1.DataFieldForAnnotation'}" build:metadata="#ignore">
						<template:then>
			<!-- Handle ContactPopUp Over  -->
							<template:if test="{= ${dataField>Target/AnnotationPath}.indexOf('com.sap.vocabularies.Communication.v1.Contact') >= 0}">
								<template:with path="dataField>Target" helper="sap.ui.model.odata.AnnotationHelper.resolvePath" var="contact">
									<VBox>
										<core:Fragment fragmentName="sap.suite.ui.generic.template.fragments.ContactDetails" type="XML"/>
												<Link binding="{= ${ path: 'dataField>Target/AnnotationPath'}.indexOf('/') > -1 ? '{' + ${path: 'dataField>Target/AnnotationPath'}.slice(0, ${ path: 'dataField>Target/AnnotationPath'}.indexOf('/')) + '}' : null}"
														text="{path: 'contact>fn', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}"
														press="._templateEventHandlers.onContactDetails">
													<customData>
														<core:CustomData key="Location" value="SmartTable"/>
													</customData>
												</Link>
									</VBox>
								</template:with>
							</template:if>
			<!-- handle smart micro chart -->
								<template:if test="{= ${dataField>Target/AnnotationPath}.indexOf('com.sap.vocabularies.UI.v1.Chart') >= 0}">
									<template:then>
										<template:with path="dataField>Target" helper="sap.ui.model.odata.AnnotationHelper.gotoEntitySet" var="annotation">
											<VBox class="sapMTableContentMargin">
												<smc:SmartMicroChart
													entitySet="{parts: [{path: 'annotation>'}, {path: 'entitySet>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getEntitySetName'}"
													chartBindingPath="{= ${ path: 'dataField>Target/AnnotationPath'}.indexOf('/') > -1 ? ${path: 'dataField>Target/AnnotationPath'}.slice(0, ${ path: 'dataField>Target/AnnotationPath'}.indexOf('/')) : null}"
													enableAutoBinding="{= ${ path: 'dataField>Target/AnnotationPath'}.indexOf('/') > -1 ? true : false}">
													<smc:customData>
														<core:CustomData key="chartQualifier" value="{= ${dataField>Target/AnnotationPath}.split('#')[1]}" />
													</smc:customData>
												</smc:SmartMicroChart>
											</VBox>
										</template:with>
									</template:then>
									<template:else>
			<!-- handle rating and progress indicators -->
										<template:with path="dataField>Target" helper="sap.ui.model.odata.AnnotationHelper.resolvePath" var="dataFieldTarget">
											<template:if test="{= ${dataFieldTarget>Visualization}}">
												<template:then>
													<template:if test="{= ${dataFieldTarget>Visualization/EnumMember} === 'com.sap.vocabularies.UI.v1.VisualizationType/Rating'}">
														<template:then>
															<template:with path="dataFieldTarget>Value" helper="sap.ui.model.odata.AnnotationHelper.resolvePath" var="value">
																<!--Due to SideEffect issues the RatingIndicator is not	editable -->
																<VBox class="sapMTableContentMargin">
																	<RatingIndicator enabled="false" maxValue="{path: 'dataFieldTarget>TargetValue', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}"
	                                                                    binding="{= ${ path: 'dataField>Target/AnnotationPath'}.indexOf('/') > -1 ? '{' + ${path: 'dataField>Target/AnnotationPath'}.slice(0, ${ path: 'dataField>Target/AnnotationPath'}.indexOf('/')) + '}' : null}"
																		value="{path: 'dataFieldTarget>Value', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}" />
																</VBox>
															</template:with>
														</template:then>
														<template:elseif test="{= ${dataFieldTarget>Visualization/EnumMember} === 'com.sap.vocabularies.UI.v1.VisualizationType/Progress'}">
															<template:with path="dataFieldTarget>Value" helper="sap.ui.model.odata.AnnotationHelper.resolvePath" var="value">
																<VBox class="sapMTableContentMargin">
																    <ProgressIndicator
																        binding="{= ${ path: 'dataField>Target/AnnotationPath'}.indexOf('/') > -1 ? '{' + ${path: 'dataField>Target/AnnotationPath'}.slice(0, ${ path: 'dataField>Target/AnnotationPath'}.indexOf('/')) + '}' : null}"
																        enabled="false"
	                                                                       percentValue="{ parts: [{path:'dataFieldTarget>'}, {path:'value>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.buildExpressionForProgressIndicatorPercentValue' }"
	                                                                       displayValue="{ parts: [{path:'dataFieldTarget>'}, {path:'value>Org.OData.Measures.V1.Unit'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.buildExpressionForProgressIndicatorDisplayValue'}"
	                                                                       state="{path:'dataFieldTarget>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.buildExpressionForProgressIndicatorCriticality'}">
	                                                                       <customData>
	                                                                           <core:CustomData key="Target" value="{= ${path: 'dataFieldTarget>TargetValue', formatter: 'sap.ui.model.odata.AnnotationHelper.format'} }" />
	                                                                           <core:CustomData key="UoM" value="{= ${path: 'value>Org.OData.Measures.V1.Unit', formatter: 'sap.ui.model.odata.AnnotationHelper.format'} }" />
	                                                                       </customData>
																    </ProgressIndicator>
																</VBox>
															</template:with>
														</template:elseif>
													</template:if>
												</template:then>
											</template:if>
										</template:with>
									</template:else>
								</template:if>
						</template:then>
					</template:if>
				</template:repeat>
				<!-- handle break-out columns -->
				<template:if test="{= ${facet>Target/AnnotationPath} }">
					<template:then>
						<core:ExtensionPoint
							name="ResponsiveTableCellsExtension|{listEntitySet>name}|{path: 'facet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}" />
					</template:then>
					<template:else>
						<core:ExtensionPoint
							name="ResponsiveTableCellsExtension|{listEntitySet>name}" />
					</template:else>
				</template:if>
			</cells>
		</ColumnListItem>
	</items>
</core:FragmentDefinition>
