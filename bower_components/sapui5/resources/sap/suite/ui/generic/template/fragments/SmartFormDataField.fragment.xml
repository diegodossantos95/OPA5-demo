<core:FragmentDefinition xmlns:sfi="sap.ui.comp.smartfield" xmlns:smartlink="sap.ui.comp.navpopover"
	xmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"
	xmlns:custom="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"
	xmlns="sap.m" xmlns:sfo="sap.ui.comp.smartform" xmlns:build="sap.build"
	xmlns:core="sap.ui.core">
	<!-- @classdesc @name: Name: sap.suite.ui.generic.template.fragments.SmartFormDataField.fragment.xml
		@description: This fragment contains label value pairs for the smart form
		derived from UI.DataFields @param {Collection(UI.DataField)} [dataField] -->

	<template:if test="{= ${facet>Target/AnnotationPath}.indexOf('com.sap.vocabularies.UI.v1.DataPoint') > -1 }">
		<template:then>
			<sfo:GroupElement>
				<sfi:SmartField value="{path: 'target>Value', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}"
								fetchValueListReadOnly="false"/>
			</sfo:GroupElement>
		</template:then>
		<template:elseif test="{= ${dataField>RecordType} === 'com.sap.vocabularies.UI.v1.DataFieldForAnnotation' &amp;&amp; ${dataField>Target/AnnotationPath}.indexOf('com.sap.vocabularies.Communication.v1.Contact') > -1}">
			<sfo:GroupElement id="{path: 'groupFacet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path: 'dataField>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataField'}::GroupElement"
							  binding="{parts: [{path: 'dataField>Target'}, {path: 'entitySet>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getNavigationPathWithExpand'}"
							  label="{= ${dataField>Label} ? ${path: 'dataField>Label', formatter: 'sap.ui.model.odata.AnnotationHelper.simplePath'} : ''}">
					<template:with path="dataField>Target"
												helper="sap.ui.model.odata.AnnotationHelper.resolvePath" var="contact">
						<core:Fragment fragmentName="sap.suite.ui.generic.template.fragments.ContactDetails" type="XML" />
						<Link
							text="{path: 'contact>fn', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}"
							press="._templateEventHandlers.onContactDetails"
							binding="{path: 'dataField>Target'}, formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getNavigationPathWithExpand'}">
							<customData>
								<core:CustomData key="Location" value="Section" />
							</customData>
						</Link>
				</template:with>
			</sfo:GroupElement>
		</template:elseif>
		<template:elseif
			test="{= ${dataField>RecordType} === 'com.sap.vocabularies.UI.v1.DataFieldWithIntentBasedNavigation' }">
			<sfo:GroupElement
				id="{path: 'groupFacet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path: 'dataField>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataField'}::GroupElement"
				label="{parts: [{path: 'dataField>'}, {path: 'entitySet>'}, {path: 'groupFacet>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getLabelForDFwithIBN'}">
					<Link
						text="{parts: [{path: 'dataField>'}, {path: 'entitySet>'}, {path: 'groupFacet>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getLinkTextForDFwithIBN'}"
						press="._templateEventHandlers.onDataFieldWithIntentBasedNavigation"
						wrapping="true">
						<customData>
							<core:CustomData key="SemanticObject"
								value="{dataField>SemanticObject/String}" />
							<core:CustomData key="Action" value="{dataField>Action/String}" />
						</customData>
					</Link>
			</sfo:GroupElement>
		</template:elseif>
		<template:else>
			<sfo:GroupElement id="{path: 'groupFacet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path: 'dataField>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataField'}::GroupElement">
				<sfi:SmartField id="{path: 'groupFacet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path: 'dataField>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataField'}::Field"
								value="{path: 'dataField>Value', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}"
								url="{= ${dataField>Url} ? ${path: 'dataField>Url', formatter: 'sap.ui.model.odata.AnnotationHelper.format'} : ''}"
								custom:multiLineSettings="{width: '100%', rows: 4}" clientSideMandatoryCheck="false"
								textLabel="{= ${dataField>Label} ? ${path: 'dataField>Label', formatter: 'sap.ui.model.odata.AnnotationHelper.simplePath'} : ''}"
								build:metadata="#pattern:FormElement;staticProp:label:Label:\{dataField>Value@@sap:label\};prop:virtualProp1:Value:\{dataField>Value\};prop:virtualProp2:Url:\{dataField>Url\};staticProp:nullable:Nullable:\{dataField>Value@@sap:nullable\};prop:currency:Currency:\{dataField>Value@@Org.OData.Measures.V1.ISOCurrency\};f4Edit:\{dataField>Value\}"
								fetchValueListReadOnly="false">
					<template:if test="${quickView>/} }">
						<sfi:semanticObjectController>
							<smartlink:SemanticObjectController ignoredFields="{parts: [{path: 'quickView>/'}, {path: 'dataField>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.disableSemanticObjectLinksOnPopups'}" />
						</sfi:semanticObjectController>
					</template:if>
					<template:if test="{= ${dataField>Criticality} }">
						<sfi:controlProposal>
							<sfi:ControlProposal>
								<sfi:objectStatus>
									<sfi:ObjectStatus criticality="{path: 'dataField>Criticality', formatter: 'sap.ui.model.odata.AnnotationHelper.simplePath'}"
													  criticalityRepresentationType="{= (${dataField>CriticalityRepresentation/EnumMember} === 'com.sap.vocabularies.UI.v1.CriticalityRepresentationType/WithoutIcon') ? 'WithoutIcon' : 'WithIcon'}"
													  build:metadata="#pattern:FormElement;prop:criticality:Criticality;" />
								</sfi:objectStatus>
							</sfi:ControlProposal>
						</sfi:controlProposal>
					</template:if>
				</sfi:SmartField>
			</sfo:GroupElement>
		</template:else>
	</template:if>
</core:FragmentDefinition>
