sap.ui.define([],function(){var G={};var F=1e-10;G.getPointsDistance=function(p,P){return Math.sqrt(Math.pow(p.x-P.x,2)+Math.pow(p.y-P.y,2));};G.getLineEquation=function(l){var s=(l.p1.y-l.p2.y)/(l.p1.x-l.p2.x),i=l.p1.y-s*l.p1.x;return{slope:s,intercept:i,verticalX:l.p1.x};};G.isPointUnderLine=function(p,l){if(!isFinite(l.slope)){if(p.x===l.verticalX){return 0;}else if(p.x>l.verticalX){return 1;}else{return-1;}}var P=p.y-l.slope*p.x;if(Math.abs(P-l.intercept)<(Number.EPSILON*1000)){return 0;}else if(P<l.intercept){return 1;}else{return-1;}};G.doLinesIntersect=function(l,L){var e=G.getLineEquation(l),E=G.getLineEquation(L);return G.isPointUnderLine(l.p1,E)!=G.isPointUnderLine(l.p2,E)&&G.isPointUnderLine(L.p1,e)!=G.isPointUnderLine(L.p2,e);};G.getLinesIntersection=function(l,L){var x=l.p1.x,y=l.p1.y,a=l.p2.x,b=l.p2.y,c=L.p1.x,d=L.p1.y,e=L.p2.x,f=L.p2.y,C=(x-a)*(d-f)-(y-b)*(c-e);if(C===0){var E=G.getLineEquation(l),o=G.getLineEquation(L);if(E.slope===o.slope&&E.intercept===o.intercept){return{x:Infinity,y:Infinity};}else{return undefined;}}return{x:((x*b-y*a)*(c-e)-(x-a)*(c*f-d*e))/C,y:((x*b-y*a)*(d-f)-(y-b)*(c*f-d*e))/C};};G.doLineRectangleIntersect=function(l,r){if((l.p1.x<r.p1.x&&l.p2.x<r.p1.x)||(l.p1.x>r.p2.x&&l.p2.x>r.p2.x)||(l.p1.y<r.p1.y&&l.p2.y<r.p1.y)||(l.p1.y>r.p2.y&&l.p2.y>r.p2.y)){return false;}var i,c=0,e=1e-10;[{p1:r.p1,p2:{x:r.p1.x,y:r.p2.y}},{p1:{x:r.p1.x,y:r.p2.y},p2:r.p2},{p1:{x:r.p2.x,y:r.p1.y},p2:r.p2},{p1:r.p1,p2:{x:r.p2.x,y:r.p1.y}}].forEach(function(R){i=G.getLinesIntersection(l,R);if(i&&i.x>=(R.p1.x-e)&&i.x<=(R.p2.x+e)&&i.y>=(R.p1.y-e)&&i.y<=(R.p2.y+e)){c++;}});return c>=2;};G.getPolygonCentroid=function(p){var a=0,b,c,t,C=0,d=0;if(p.points.length<3){throw new Error("Polygon must have three or more points.");}for(var i=0;i<p.points.length;i++){b=p.points[i];c=(i<(p.points.length-1))?p.points[i+1]:p.points[0];a+=b.x*c.y-c.x*b.y;}a=a/2;for(var j=0;j<p.points.length;j++){b=p.points[j];c=(j<(p.points.length-1))?p.points[j+1]:p.points[0];t=b.x*c.y-c.x*b.y;C+=(b.x+c.x)*t;d+=(b.y+c.y)*t;}C=C/(6*a);d=d/(6*a);return{x:C,y:d};};G.getAngleOfVector=function(v){var d=v.apex.x-v.center.x,D=v.apex.y-v.center.y,a=Math.atan(D/d);if(D>0){return(d>=0)?a:a+Math.PI;}else{return(d>=0)?a+2*Math.PI:a+Math.PI;}};G.getLengthOfVector=function(v){return Math.sqrt(Math.pow(v.apex.x-v.center.x,2)+Math.pow(v.apex.y-v.center.y,2));};G.getRotatedVector=function(v,s){var a=G.getAngleOfVector(v),l=G.getLengthOfVector(v);a+=s;var n={x:Math.cos(a)*l+v.center.x,y:Math.sin(a)*l+v.center.y};return{center:v.center,apex:n};};G.getBoundingBox=function(p){var m=Infinity,M=Infinity,f=-Infinity,a=-Infinity;p.forEach(function(P){if(P.x<m){m=P.x;}if(P.x>f){f=P.x;}if(P.y<M){M=P.y;}if(P.y>a){a=P.y;}});return{p1:{x:m,y:M},p2:{x:f,y:a}};};G.enlargeBox=function(r,m){r.p1.x=r.p1.x-m;r.p1.y=r.p1.y-m;r.p2.x+=m;r.p2.y+=m;};G.getBezierPathCorners=function(p,r,P){var R=[],B=[],d;var e=p.split(/[,\s]/).reduce(function(b,s){var a=s.match("([a-zA-Z])(.+)");if(a){b.push(a[1]);b.push(a[2]);}else{b.push(s);}return b;},[]);var S=e.reduce(function(S,a){if(parseFloat(a)==a&&S.length){S[S.length-1].push(a);}else{S.push([a]);}return S;},[]);function f(a,b,c){var i=(b.x-a.x);var s=(b.y-a.y);var Q=Math.sqrt(i*i+s*s);return g(a,b,Math.min(1,c/Q));}function g(a,b,c){return{x:a.x+(b.x-a.x)*c,y:a.y+(b.y-a.y)*c};}function A(s,a){if(s.length>2){s[s.length-2]=a.x;s[s.length-1]=a.y;}}function h(s){return{x:parseFloat(s[s.length-2]),y:parseFloat(s[s.length-1])};}function j(i){return{x:parseFloat(S[i][1]),y:parseFloat(S[i][2])};}function k(V,a){var b=a/G.getLengthOfVector(V),s=(V.apex.x-V.center.x)*b,c=(V.apex.y-V.center.y)*b;return{center:{x:0,y:0},apex:{x:s,y:c}};}function E(a,b){return Math.abs(a-b)<F;}function l(a,b){return(b-a)>F;}function m(a,b){return(a-b)>F;}function n(s){var a,c,b,Q,T=(s>0)?1:-1,U=[],i,V,W,X;if(s===0){return;}s=Math.abs(s);c=j(0);b=j(1);Q=k({center:c,apex:b},s);Q=G.getRotatedVector(Q,-T*Math.PI/2).apex;c.x+=Q.x;c.y+=Q.y;U.push(c);for(i=1;i<S.length-1;i++){a=j(i-1);c=j(i);b=j(i+1);V=E(a.x,c.x)&&l(a.y,c.y)||E(c.x,b.x)&&l(c.y,b.y);W=E(a.y,c.y)&&m(a.x,c.x)||E(c.y,b.y)&&m(c.x,b.x);X=E(a.y,c.y)&&l(a.x,c.x)&&E(c.x,b.x)&&m(c.y,b.y)||E(a.y,c.y)&&m(a.x,c.x)&&E(c.x,b.x)&&l(c.y,b.y)||E(a.x,c.x)&&l(a.y,c.y)&&E(c.y,b.y)&&l(c.x,b.x)||E(a.x,c.x)&&m(a.y,c.y)&&E(c.y,b.y)&&m(c.x,b.x);if(T<0){X=!X;}Q.x=(V?s:-s)*T;Q.y=(W?s:-s)*T;c.x+=Q.x;c.y+=Q.y;c.inner=X;U.push(c);}c=j(S.length-1);a=j(S.length-2);Q=k({center:c,apex:a},s);Q=G.getRotatedVector(Q,T*Math.PI/2).apex;c.x+=Q.x;c.y+=Q.y;U.push(c);for(i=0;i<S.length;i++){S[i][1]=U[i].x.toFixed(0).toString();S[i][2]=U[i].y.toFixed(0).toString();B[i]=U[i].inner;}}if(P){n(P);}if(S.length>1){var o=h(S[0]),C=null;if(S[S.length-1][0]=="Z"&&S[0].length>2){C=["L",o.x,o.y];S[S.length-1]=C;}R.push(S[0]);for(var q=1;q<S.length;q++){var t=R[R.length-1],u=S[q],N=(u==C)?S[1]:S[q+1],v;if(B[q]===true){v=r*0.65;}else if(B[q]===false){v=r*1.35;}else{v=r;}if(N&&t&&(t.length>2)&&u[0]=="L"&&N.length>2&&N[0]=="L"){var w=h(t),x=h(u),y=h(N),z,D,H=Math.abs(w.x-x.x)+Math.abs(w.y-x.y),I=Math.abs(y.x-x.x)+Math.abs(y.y-x.y),J=Math.max(Math.min(v,H,I/2),1);z=f(x,w,J);D=f(x,y,J);A(u,z);u.origPoint=x;R.push(u);var K=g(z,x,0.5),L=g(x,D,0.5),M=["C",K.x,K.y,L.x,L.y,D.x,D.y];M.origPoint=x;R.push(M);}else{R.push(u);}}if(C){var O=h(R[R.length-1]);R.push(["Z"]);A(R[0],O);}}else{R=S;}d=R.reduce(function(s,c){return s+c.join(" ")+" ";},"");return d;};return G;},true);
