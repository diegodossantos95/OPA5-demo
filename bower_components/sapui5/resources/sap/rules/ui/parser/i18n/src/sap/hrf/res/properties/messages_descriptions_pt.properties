
# This file contains messages descriptions arranged in sections according to HRF APIs
# These descriptions are translated.
# Adding a new message requires also update of message.xsjslib file by the new ID

#############################
# common
#############################
# 10 - 999 - common messages

# YMSG: return from resource activation, in case of a resource does not exist in repository
10=A ativa\u00E7\u00E3o de recurso n\u00E3o \u00E9 poss\u00EDvel; o recurso n\u00E3o existe.
# YMSG: return from resource activation, in case of a resource suffix is not one of HRF resources
11=A ativa\u00E7\u00E3o de recurso n\u00E3o \u00E9 poss\u00EDvel; o sufixo '{0}' n\u00E3o \u00E9 suportado.
# YMSG: return from resource activation, in case of a resource package does not exist in repository
12=A ativa\u00E7\u00E3o de recurso n\u00E3o \u00E9 poss\u00EDvel; o pacote '{0}' n\u00E3o existe.
# YMSG: return from runtime plug in, in case of invalid attribute
13=A ativa\u00E7\u00E3o de recurso n\u00E3o \u00E9 poss\u00EDvel; o atributo '{0}' n\u00E3o est\u00E1 contido no esquema.
# YMSG: return from  runtime plug in, in case of invalid attribute
14=A ativa\u00E7\u00E3o de recurso n\u00E3o \u00E9 poss\u00EDvel; o valor de atributo obrigat\u00F3rio '{0}' est\u00E1 em falta.
# YMSG: return from  runtime plug in, in case none of a predefined set of fields is specified
15=A ativa\u00E7\u00E3o de recurso n\u00E3o \u00E9 poss\u00EDvel; falta pelo menos um dos atributos opcionais {0}
# YMSG: return from  runtime plug in, in case of invalid field (e.g vocabulary doesn't exist)
16=A ativa\u00E7\u00E3o de recurso n\u00E3o \u00E9 poss\u00EDvel; o valor do atributo {0} n\u00E3o \u00E9 v\u00E1lido
# YMSG: return from runtime plug in, in case of inconsistent fields combination(e.g. vocabulary and output names doesn't match)
17=A ativa\u00E7\u00E3o de recurso n\u00E3o \u00E9 poss\u00EDvel; a combina\u00E7\u00E3o de {0} e {1} n\u00E3o \u00E9 v\u00E1lida
# YMSG: return from  runtime plug in, in case of invalid resource id (e.g. package / file name is missing)
23=A ativa\u00E7\u00E3o de recurso n\u00E3o \u00E9 poss\u00EDvel; o recurso n\u00E3o existe
# YMSG: return from  runtime plug in, in case of error from REL validation
24=Erro no campo {0}\: {1}
# YMSG: return from  REST service, in case of http request contains non supported method
25=O m\u00E9todo falhou; o m\u00E9todo \#{0} n\u00E3o \u00E9 suportado
# YMSG:  technical error from platform
26=Ocorreu um erro t\u00E9cnico - {0}
# YMSG: return from resource activation, in case of a resource does not exist in repository
27=O recurso n\u00E3o existe.

# 100 - 200 - Authorization

# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
100=Voc\u00EA n\u00E3o est\u00E1 autorizado a executar essa a\u00E7\u00E3o.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
101=Voc\u00EA n\u00E3o est\u00E1 autorizado a atualizar regras.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
102=Voc\u00EA n\u00E3o est\u00E1 autorizado a eliminar regras.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
103=Voc\u00EA n\u00E3o est\u00E1 autorizado a criar regras.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
104=Voc\u00EA n\u00E3o est\u00E1 autorizado a ler regras.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
105=Voc\u00EA n\u00E3o est\u00E1 autorizado a atualizar servi\u00E7os de regras
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
106=Voc\u00EA n\u00E3o est\u00E1 autorizado a eliminar servi\u00E7os de regras.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
107=Voc\u00EA n\u00E3o est\u00E1 autorizado a criar servi\u00E7os de regras.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
108=Voc\u00EA n\u00E3o est\u00E1 autorizado a ler servi\u00E7os de regras.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
109=Voc\u00EA n\u00E3o est\u00E1 autorizado a executar servi\u00E7os de regras.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
110=Voc\u00EA n\u00E3o est\u00E1 autorizado a atualizar vocabul\u00E1rios.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
111=Voc\u00EA n\u00E3o est\u00E1 autorizado a eliminar vocabul\u00E1rios.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
112=Voc\u00EA n\u00E3o est\u00E1 autorizado a criar vocabul\u00E1rios.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
113=Voc\u00EA n\u00E3o est\u00E1 autorizado a ler vocabul\u00E1rios.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
114=Voc\u00EA n\u00E3o est\u00E1 autorizado a atualizar modelos de regra.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
115=Voc\u00EA n\u00E3o est\u00E1 autorizado a eliminar modelos de regra.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
116=Voc\u00EA n\u00E3o est\u00E1 autorizado a criar modelos de regra.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
117=Voc\u00EA n\u00E3o est\u00E1 autorizado a ler modelos de regra.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
118=Voc\u00EA n\u00E3o est\u00E1 autorizado a criar ou atualizar servi\u00E7os de regra.
#############################
# API: Validate
#############################
# 1100 - 1199 - REL validation messages

# YMSG: return from REL, the beginning of any REL validation error - in case of a wrong statement 
1100=Erro na express\u00E3o
# YMSG: return from REL parser, in case of a wrong entry (syntax) and maximum 3 option are optional instead 
1101=Erro na express\u00E3o; insira {0} em vez de {1}
# YMSG: return from REL parser, in case of a wrong entry (syntax) and more than 3 option are optional instead  
1102=Erro na express\u00E3o; {0} n\u00E3o \u00E9 uma entrada v\u00E1lida
# YMSG: return from REL parser, in case of a wrong input
1103=Erro na express\u00E3o; remova {0}
# YMSG: return from REL model, in case of collection OM when single value in needed
1104=Erro na express\u00E3o; {0} \u00E9 uma lista de valores. Modifique para uma express\u00E3o que representa um valor individual.
# YMSG: return from REL model, in case of a wrong input
1105=Erro na express\u00E3o; insira um operando v\u00E1lido em vez de {0}
# YMSG: return from REL parser, in case of an incomplete expression
1106=Express\u00E3o incompleta
# YMSG: return from REL lexer, in case of missing token at EOF
1107=Erro na express\u00E3o; insira {0} no fim da express\u00E3o
# YMSG: return from REL lexer, in case of wrong token
1108=Erro na express\u00E3o; insira {0} em vez de '{'1}
# YMSG: return from REL entity, in case of missing current
1109=Erro na express\u00E3o; falta 'atual' na condi\u00E7\u00E3o 'where'
# YMSG: return from REL entity, in case of redundant 'current'
1110=Erro na express\u00E3o; 'atual' redundante; remover um 'atual'
# YMSG: return from REL vocabulary utils, in case of invalid root object
1111=Objeto raiz inv\u00E1lido
# YMSG: return from REL vocabulary utils, in case of invalid association
1112=Associa\u00E7\u00E3o inv\u00E1lida
# YMSG: return from REL vocabulary utils, in case of invalid association or attribute
1113=Associa\u00E7\u00E3o ou atributo inv\u00E1lido
# YMSG: return from REL vocabulary utils, in case of root is simple attribute
1114=A raiz n\u00E3o pode ser um atributo simples
# YMSG: return from REL vocabulary utils, in case of attribute not found
1115=Caminho incompleto, atributo n\u00E3o encontrado
# YMSG: return from REL entity, in case of using 'current' outside of 'where'
1116=Erro na express\u00E3o; a palavra-chave 'atual' s\u00F3 pode ser utilizada em uma cl\u00E1usula 'where'.
# YMSG: return from REL entity, in case of using 'current' incorrectly with arithmetic
1117=Erro na express\u00E3o; a palavra-chave 'Atual' deve ser aplicada a todos os operandos de um lado do operador comparativo na condi\u00E7\u00E3o 'Where'.
# YMSG: return from REL parser utils, in case of using value that doen't exist in closed value list
1118=Erro na express\u00E3o. '{0}' n\u00E3o \u00E9 um valor v\u00E1lido da lista de valores '{1}'.
# YMSG: return from REL parser utils, in case of using value that doen't exist in closed value list
1119=Erro na express\u00E3o. O operador '{0}' n\u00E3o pode ser utilizado com um atributo de lista de valores ('{1}').
# YMSG: return from REL parser utils, in case of using value that doen't exist in closed value list
1120=Erro na express\u00E3o. A palavra-chave 'todos' n\u00E3o pode seguir um operando que contenha a palavra-chave 'atual'.
# YMSG: return from REL parser utils, in case of using value that doen't exist in closed value list
1121=Erro na express\u00E3o. A palavra-chave 'todos' n\u00E3o pode ser utilizada mais do que uma vez na mesma instru\u00E7\u00E3o.


# 1200 - 1999 - validation messages

#############################
# API : resource CRUD
#############################
# 2100 - 2299 - vocabulary messages

# YMSG: return from vocabulary runtime plug in, in case of error in expression
2100=Em '{0}'- Erro na express\u00E3o de an\u00E1lise sint\u00E1tica\: '{1}', '{2}'
# YMSG: return from vocabulary runtime plug in, in case of error in rule
2101=Em '{0}' - Erro na regra\: '{1}', '{2}'
# YMSG: return from vocabulary runtime plug in, in case the parameter type already exists
2102=Em '{0}' \: '{1}', nome\: '{2}' j\u00E1 existe
# YMSG: return from vocabulary runtime plug in, in case parameter name isn't valid
2103=Em '{0}' \: '{1}', nome inv\u00E1lido\: '{2}'
# YMSG: return from vocabulary runtime plug in, in case one of action/output names aren't valid
2104=Em '{0}', nome inv\u00E1lido\: '{1}'
# YMSG: return from vocabulary runtime plug in, in case name already exists
2105=O nome '{0}' est\u00E1 definido mais do que uma vez em '{1)'.
# YMSG : return from vocabulary runtime plug in, in case the output has no parameters
2106=Par\u00E2metros em falta na sa\u00EDda
# YMSG: return from vocabulary runtime plug in, in case one of the attributes has an invalid name
2107=Nome de atributo inv\u00E1lido '{0}'
# YMSG: return from vocabulary runtime plug in, in case object name of declare more than once
2108={0}\: '{'1} j\u00E1 existe. 
# YMSG: return from vocabulary runtime plug in, in case attribute name of declare more than once
2109=O atributo j\u00E1 existe\: objeto\= '{0}' atributo\= '{1}'
# YMSG: return from vocabulary runtime plug in, in case attribute name of declare more than once
2110=A associa\u00E7\u00E3o j\u00E1 existe\: objeto\= '{0}' associa\u00E7\u00E3o\= '{1}'
# YMSG : return from vocabulary runtime plug in, in case the source table isn't exists
2111=Tabela original inv\u00E1lida '{0}'
# YMSG : return from vocabulary runtime plug in, in case of one the association is invalid
2112=Associa\u00E7\u00E3o inv\u00E1lida no objeto \='{0}' + associa\u00E7\u00E3o\='{1}'
# YMSG : return from vocabulary runtime plug in, in case of one the association's attributes are invalid
2113=Atributo inv\u00E1lido para associa\u00E7\u00E3o\= '{0}' atributo\= '{1}'
# YMSG: return from rule utils, in case of invalid vocabulary assignment
2114=O vocabul\u00E1rio '{0}' n\u00E3o \u00E9 v\u00E1lido
# YMSG: return from vocabulary runtime plug in, in case invalid alias content
2115=Conte\u00FAdo inv\u00E1lido no alias '{0}'. Motivo\: '{1}'
# YMSG: return from vocabulary runtime plug in, in case invalid alias name
2116=O nome do alias '{0}' \u00E9 inv\u00E1lido. O nome do alias s\u00F3 pode conter caracteres alfanum\u00E9ricos e de sublinhado, tem que come\u00E7ar com um caractere alfab\u00E9tico e n\u00E3o pode ser uma palavra reservada de Rule Expression Language.
# YMSG: return from vocabulary runtime plug in, in case alias name collide with an data object name
2117=Nome inv\u00E1lido para alias '{0}'. O alias j\u00E1 existe como um nome de objeto de dados.
# YMSG: return from vocabulary runtime plug in, in case o alias dependency to itself
2118=Conte\u00FAdo inv\u00E1lido no alias '{0}'. A resolu\u00E7\u00E3o do alias ir\u00E1 resultar em um loop infinito.
# YMSG: return from vocabulary runtime plug in, when name already exists in another vocabulary in the DB. Example: In 'dataObjects', name 'player' already exists in 'aliases' vocabulary 'voca2'
2120=Em '{0}', nome '{1}' j\u00E1 existe em '{2}' no vocabul\u00E1rio '{3}'.
# YMSG: return from vocabulary runtime plug in, scope name can't be Public or Private
2121=Nome do escopo inv\u00E1lido. O nome do escopo n\u00E3o pode ser 'P\u00FAblico' ou 'Privado'.
# YMSG: return from vocabulary runtime plug in, embedded vocabulary can't be with scope Global
2122=Tipo de escopo inv\u00E1lido. O vocabul\u00E1rio incorporado n\u00E3o pode ser do tipo 'Global'.
# YMSG: Object does not exist
2125=O objeto '{0}' n\u00E3o existe
# YMSG: return from vocabulary runtime plug in, in case of a wrong data object name 
2126=Nome inv\u00E1lido para dataObject '{0}'. O nome de dataObject n\u00E3o pode ser um nome do modelo da regra existente das seguintes palavras reservadas (s\u00F3 considerando mai\u00FAsculas/min\u00FAsculas). regra, ruleTemplate
# YMSG: return from vocabulary runtime plug in, in case of a wrong alias name
2127=O nome do alias '{0}' \u00E9 inv\u00E1lido. O nome do alias n\u00E3o pode ser um nome do modelo da regra existente ou uma das seguintes palavras reservadas (s\u00F3 considerando mai\u00FAsculas min\u00FAsculas)\: regra, ruleTemplate
# YMSG: return from vocabulary runtime plug in, in case invalid data object name
2128=Nome inv\u00E1lido para dataObject '{0}'. O nome do dataObject s\u00F3 pode conter caracteres alfanum\u00E9ricos e de sublinhado, tem que come\u00E7ar com um caractere alfab\u00E9tico e n\u00E3o pode ser uma palavra reservada de Rule Expression Language.
# YMSG: return from vocabulary runtime plug in, in case of duplicate alias names
2129=O alias '{0}' j\u00E1 existe como nome do alias.
# YMSG: return from vocabulary runtime plug in, in case alias content is empty
2130=O par\u00E2metro de conte\u00FAdo no alias '{0}' est\u00E1 em branco.
# YMSG: return from vocabulary runtime plug in, in case alias name exists as as an attribute name
2131=O nome do alias '{0}' \u00E9 inv\u00E1lido. O alias j\u00E1 existe como nome do atributo.
# YMSG: return from vocabulary runtime plug in, in case alias name exists in other vocabulary with the same scope
2132=O nome do alias '{0}' \u00E9 inv\u00E1lido. O nome j\u00E1 existe como um atributo para o objeto '{1}' no vocabul\u00E1rio '{2}'.
# YMSG: return from vocabulary runtime plug in, in case alias name exists in objects rule or ruleTemplate
2133=O nome do alias '{0}' \u00E9 inv\u00E1lido. O nome j\u00E1 existe no objeto '{1}'.
# YMSG: return from vocabulary runtime plug in, in case attribute name already exists as alias in other vocabulary
2134=Nome inv\u00E1lido para o atributo '{0}'. O nome j\u00E1 existe como alias no vocabul\u00E1rio '{1}'.
# YMSG: return from vocabulary runtime plug in, in case vocabulary declares it depends on a vocabulary which doesn't exists
2135=O vocabul\u00E1rio indica uma depend\u00EAncia do vocabu\u00E1rio '{0}' que n\u00E3o existe.
# YMSG: return from vocabulary runtime plug in, in case implementor declare global vocabulary with dependencies
2136=Um vocabul\u00E1rio global n\u00E3o pode conter depend\u00EAncias para outros vocabul\u00E1rios.
# YMSG: return from vocabulary runtime plug in, in case, in the same data object, there is association and attribute with the same name
2137=No objeto de dados '{0}', o nome '{1}' \u00E9 utilizado para uma associa\u00E7\u00E3o e um atributo. O mesmo nome n\u00E3o pode ser utilizado para as duas caracter\u00EDsticas.
# YMSG: return from vocabulary runtime plug in, in case invalid alias name
2138=O nome da lista de valores '{0}' \u00E9 inv\u00E1lido. O nome da lista de valores pode conter caracteres alfanum\u00E9ricos e de sublinhado, tem que come\u00E7ar com um caractere alfab\u00E9tico e n\u00E3o pode ser uma palavra reservada de Rule Expression Language.
# YMSG: return from vocabulary runtime plug in, in case alias content is empty
2139=Conte\u00FAdo da lista de valores '{0}' em branco.
# YMSG: return from vocabulary runtime plug in, in case alias content is empty
2140=Lista de valores '{0}' dsefinido no atributo '{1}' no objeto de dados '{2}' n\u00E3o existe.
# YMSG: return from vocabulary runtime plug in, in case parameter size isn't valid
2141=Em '{'0}, o tamanho ({1}) do par\u00E2metro '{'2} em '{'3} n\u00E3o \u00E9 v\u00E1lido para o tipo de dados especificado.
# YMSG: return from vocabulary - in case parameter content cannot be a collection 
2142=Defini\u00E7\u00E3o de par\u00E2metro inv\u00E1lida para a\u00E7\u00E3o '{0}' no par\u00E2metro de a\u00E7\u00E3o '{1}'. Os par\u00E2metros da cole\u00E7\u00E3o de tipo n\u00E3o s\u00E3o permitidos em a\u00E7\u00F5es.                                                                                                                                                                   .




# 2300 - 2499 rule template messages

# YMSG: return from Rule Template runtime plug in, in case of rule template name starts with a number
2300=A cria\u00E7\u00E3o ou atualiza\u00E7\u00E3o do modelo de regra n\u00E3o \u00E9 poss\u00EDvel; o nome do modelo de regra n\u00E3o pode come\u00E7ar com um n\u00FAmero
# YMSG: return from Rule Template runtime plug in, in case of illegal change in rule template attributes
2301=Ativa\u00E7\u00E3o de modelo de regra cont\u00E9m uma modifica\u00E7\u00E3o incompat\u00EDvel;
# YMSG: return from Rule Template runtime plug in, in case of rule template update contains condition change
2302=A cria\u00E7\u00E3o ou atualiza\u00E7\u00E3o do modelo de regra n\u00E3o \u00E9 poss\u00EDvel; a condi\u00E7\u00E3o de modelo de regra n\u00E3o pode ser modificada
# YMSG: return from Rule Template runtime plug in, in case of rule template contains invalid condition 
2303=A cria\u00E7\u00E3o ou atualiza\u00E7\u00E3o do modelo de regra n\u00E3o \u00E9 poss\u00EDvel; a condi\u00E7\u00E3o '{0}' n\u00E3o \u00E9 v\u00E1lida
# YMSG: return from Rule Template runtime plug in, in case of rule template deletion when there are rules assigned to the rule template  
2304=N\u00E3o \u00E9 poss\u00EDvel eliminar o modelo de regra {0}. Existem regras para este modelo de regra
# YMSG: return from Rule Template runtime plug in, in case of duplicate rule template name  
2305=A cria\u00E7\u00E3o do modelo de regra n\u00E3o \u00E9 poss\u00EDvel; o modelo de regra '{0}' j\u00E1 existe no pacote '{1}'
# YMSG: return from Rule Template runtime plug in, in case that rule template name starts with a number  
2306=O nome do modelo de regra - '{0}' n\u00E3o pode come\u00E7ar com um n\u00FAmero
# YMSG: return from Rule Template runtime plug in, in case that rule template name already exist as data object  
2307=Imposs\u00EDvel criar modelo de regra '{0}'. O nome do modelo de regra j\u00E1 \u00E9 utilizado como um objeto de dados no vocabul\u00E1rio '{1}'
# YMSG: return from Rule Template runtime plug in, in case that rule template name already exist as alias
2308=Imposs\u00EDvel criar modelo da regra '{0}'. O nome de modelo da regra j\u00E1 \u00E9 utilizado como um alias no vocabul\u00E1rio '{1}'.


# 2500 - 2699 - rule messages

# YMSG: return from Rule runtime plug in, in case of resource contains additional attributes but not assigned to rule template   
2500=A cria\u00E7\u00E3o de regra n\u00E3o \u00E9 poss\u00EDvel; atributos inseridos embora a regra n\u00E3o seja baseada no modelo.
# YMSG: return from Rule runtime plug in, in case of rule template assignment change   
2501=A atualiza\u00E7\u00E3o de regra n\u00E3o \u00E9 poss\u00EDvel; n\u00E3o \u00E9 poss\u00EDvel modificar a atribui\u00E7\u00E3o do modelo de regra ap\u00F3s a cria\u00E7\u00E3o da regra.
# YMSG: return from Rule runtime plug in, in case of vocabulary change  
2502=A atualiza\u00E7\u00E3o de regra n\u00E3o \u00E9 poss\u00EDvel; n\u00E3o \u00E9 poss\u00EDvel modificar a atribui\u00E7\u00E3o de vocabul\u00E1rio ap\u00F3s a cria\u00E7\u00E3o da regra.
# YMSG: return from Rule runtime plug in, in case of output change   
2503=A atualiza\u00E7\u00E3o de regra n\u00E3o \u00E9 poss\u00EDvel; n\u00E3o \u00E9 poss\u00EDvel modificar a atribui\u00E7\u00E3o de sa\u00EDda ap\u00F3s a cria\u00E7\u00E3o da regra.
# YMSG: return from Rule runtime plug in, in case of rule contains additional attributes where assigned rule template does not contains additional attributes
2504=A cria\u00E7\u00E3o de regra n\u00E3o \u00E9 poss\u00EDvel; atributos adicionais inseridos que n\u00E3o pertencem ao modelo de regra atribu\u00EDdo.
# YMSG: return from Rule runtime plug in, in case of execution context change
2505=A atualiza\u00E7\u00E3o de regra n\u00E3o \u00E9 poss\u00EDvel; n\u00E3o \u00E9 poss\u00EDvel modificar a atribui\u00E7\u00E3o de contexto de execu\u00E7\u00E3o ap\u00F3s a cria\u00E7\u00E3o da regra.
# YMSG: return from Rule runtime plug in, in case of invalid rule template assignment
2506=O modelo de regra '{0}' n\u00E3o \u00E9 v\u00E1lido
# YMSG: return from Rule runtime plug in, in case of invalid status transition
2507=A atualiza\u00E7\u00E3o de regra n\u00E3o \u00E9 poss\u00EDvel; n\u00E3o \u00E9 poss\u00EDvel modificar do status '{0}' para '{1}'.
# YMSG: return from Rule runtime plug in, in case of updating single consumption to non single consumption Rule
2510=N\u00E3o \u00E9 permitido remover os servi\u00E7os incorporados.
# YMSG: return from Rule runtime plug in, in case of updating single embedded service in Rule
2511=N\u00E3o \u00E9 permitido remover ou modificar os servi\u00E7os incorporados.
# YMSG: return from Rule runtime plug in, in case of more than one embedded services with the same name
2512=Nome do servi\u00E7o incorporado - '{0}', existe mais do que uma vez.
# YMSG: return from Rule runtime plug in - update/create, in case the rule body is not valid
2513=A cria\u00E7\u00E3o ou atualiza\u00E7\u00E3o de regra n\u00E3o \u00E9 poss\u00EDvel; o corpo da regra n\u00E3o \u00E9 v\u00E1lido.
# YMSG: return from Rule body validator - in case parameter is referenced to an unknown action
2514=Defini\u00E7\u00E3o de par\u00E2metro inv\u00E1lida. O par\u00E2metro referencia uma a\u00E7\u00E3o '{0}' que n\u00E3o existe no vocabul\u00E1rio.
# YMSG: return from Rule body validator - in case parameter name isn't a valid parameter for action
2515=Defini\u00E7\u00E3o de par\u00E2metro inv\u00E1lida. O nome do par\u00E2metro '{0}' n\u00E3o existe para a a\u00E7\u00E3o '{1}' no vocabul\u00E1rio.
# YMSG: return from Rule body validator - in case action doesn't exist in the vocabulary
2516=A a\u00E7\u00E3o '{0}' n\u00E3o existe no vocabul\u00E1rio.
# YMSG: return from Rule body validator - when the sent parameter isn't a required parameter in the sent output 
2517=Defini\u00E7\u00E3o de par\u00E2metro inv\u00E1lida. O nome do par\u00E2metro '{0}' n\u00E3o existe para a sa\u00EDda '{1}' no vocabul\u00E1rio.
# YMSG: return from Rule body validator - when the sent output doesn't exists in the vocabulary
2518=A sa\u00EDda '{0}' n\u00E3o existe no vocabul\u00E1rio.
# YMSG: return from Rule body validator - when alias has more than one output parameter column
2519=O alias tem mais que um par\u00E2metro de sa\u00EDda.
# YMSG: return from Rule body validator - when the alias output parameters values do not have the same type X
2520=Todos os valores do par\u00E2metro de sa\u00EDda '{0}'devem ser do mesmo tipo.
# YMSG: return from Rule runtime plug in, in case of assign rule to rule service that does not exist.
2521=N\u00E3o foi poss\u00EDvel atribuir a regra '{0}' ao servi\u00E7o de regras '{1}'. O servi\u00E7o de regras n\u00E3o existe.
# YMSG: return from Rule runtime plug in, in case of assign rule to rule service with different vocabulary.
2522=N\u00E3o foi poss\u00EDvel atribuir a regra '{0}' ao servi\u00E7o de regras '{1}'. O servi\u00E7o de regras e a regra devem ter o mesmo vocabul\u00E1rio definido.
# YMSG: return from Rule runtime plug in, in case of assign rule to rule service with different output.
2523=N\u00E3o foi poss\u00EDvel atribuir a regra '{0}' ao servi\u00E7o de regras '{1}'. O servi\u00E7o de regras e a regra devem ter o mesmo resultado definido.
# YMSG: return from Rule runtime plug in, in case of assign rule to rule service that is not indicated as manually assigned.
2524=N\u00E3o foi poss\u00EDvel atribuir a regra '{0}' ao servi\u00E7o de regras '{1}'. O servi\u00E7o de regras \u00E9 definido automaticamente para atribui\u00E7\u00F5es autom\u00E1ticas de regra e, por isso, n\u00E3o permite atribui\u00E7\u00F5es manuais.
# YMSG: return from Rule runtime plug in - update/create, in case a custom condition is not valid
2525=N\u00E3o \u00E9 poss\u00EDvel criar ou atualizar a regra; '{0}' n\u00E3o \u00E9 uma condi\u00E7\u00E3o v\u00E1lida.
# YMSG: return from Rule body validator - when ruleBody of type ruleSet has more than one condition column
2526=Conjunto de regars inv\u00E1lido. Uma regra dentro do conjunto de regras tem mais do que uma condi\u00E7\u00E3o.


# 2700 - 2899 - rule service messages

# YMSG: return from Rule service plug in, in case of wrong data object filter
2700=Erro no filtro de servi\u00E7o de regras
# YMSG: return from Rule service plug in, in case of different data objects in execution context and filter
2701=Objeto de dados - '{0}' no contexto de execu\u00E7\u00E3o \u00E9 diferente do dataObject - '{1}' no filtro
# YMSG: return from  runtime plug in, in case of specified data object does not have the specified attribute (e.g. data object keys in rule service definition).
2704=A cria\u00E7\u00E3o ou atualiza\u00E7\u00E3o do servi\u00E7o de regras n\u00E3o \u00E9 poss\u00EDvel; o objeto de dados {0} do vocabul\u00E1rio {1} n\u00E3o cont\u00E9m o atributo {2}
# YMSG: return from runtime plug in, in case of parameter mapping path contains a collection
2705=O caminho com cole\u00E7\u00E3o n\u00E3o \u00E9 permitido. Caminho\: {0};
# YMSG: return from runtime plug in, in case of data object mapping entry is not unique within an execution context .
2706=objeto de dados - {0} tem mapeamentos duplicados;
# YMSG: return from  runtime plug in, in case of parameter definition entry is not unique within an execution context .
2707=A cria\u00E7\u00E3o do servi\u00E7o de regras n\u00E3o \u00E9 poss\u00EDvel; o par\u00E2metro {0} est\u00E1 duplicado
# YMSG: return from  runtime plug in, in case of parameter mapping entry doesn't have a match parameter definition entry with in an execution context
2708=A cria\u00E7\u00E3o do servi\u00E7o de regras n\u00E3o \u00E9 poss\u00EDvel; o par\u00E2metro {0} n\u00E3o existe e est\u00E1 associado ao objeto de dados
# YMSG: return from  runtime plug in, in case of ifentifiers in dataObject type parameter do not exist in data object from vocabulary
2709=Defini\u00E7\u00E3o de par\u00E2metro inv\u00E1lida no servi\u00E7o de regras '{0}'. No par\u00E2metro '{1}', '{2}' n\u00E3o se encontra um atributo v\u00E1lido do objeto de dados '{3}' no escopo do vocabul\u00E1rio '{4}'.
# YMSG: return from runtime plug in, in case of data object definition entry is not unique within parameter definition if service.
2710=Defini\u00E7\u00E3o de par\u00E2metro inv\u00E1lida no servi\u00E7o de regras '{0}'. O objeto de dados '{1}' \u00E9 referenciado por mais de um par\u00E2metro.
# YMSG: return from runtime plug in, only read-only rule services can be indicated to be created with result view
2711=Foi imposs\u00EDvel criar servi\u00E7o de regras '{0}'. O servi\u00E7o de regras com vis\u00E3o de resultados deve ser indicado como protegido contra grava\u00E7\u00E3o.
# YMSG: return from runtime plug in, only explicit output rule services can be indicated to be created with result view
2712=Imposs\u00EDvel criar servi\u00E7o de regras '{0}'. O servi\u00E7os de regras com uma vis\u00E3o de resultados deve ter uma sa\u00EDda expl\u00EDcita definida.
# YMSG: returned from request handler. Rule requested to be removed from rule service but the rule is not assigned to it
2713=NN\u00E3o foi poss\u00EDvel remover atribui\u00E7\u00E3o de regras. A regra '{0}' n\u00E3o est\u00E1 atribu\u00EDda ao servi\u00E7o de regras.
# YMSG: return from  runtime plug in, in case of output contains collection parameter in event mode scenario
2714=N\u00E3o foi poss\u00EDvel criar o servi\u00E7o de regras '{0}'. Voc\u00EA n\u00E3o pode definir uma sa\u00EDda com par\u00E2metros da cole\u00E7\u00E3o de tipo para um servi\u00E7o de regras que n\u00E3o t\u00EAm um objeto de dados definido no seu contexto de execu\u00E7\u00E3o.
# 2900 - 2949 - post activation / completeActivation

# 2950 - 2999 - common resource CRUD


# YMSG: return from Request Handler, in case of url parameter that isn't valid
2955=par\u00E2metro URL\: {0} \u00E9 inv\u00E1lido
# YMSG: return from Request Handler, in case of unsupported request mode
2956=O modo \#{0} n\u00E3o \u00E9 suportado
# YMSG: return from Request Handler, in case of unsupported metadata
2957=Metadados n\u00E3o suportados
# YMSG: return from Request Handler, in case of unsupported metadata for method
2958=Chamar os metadados s\u00F3 \u00E9 v\u00E1lido com o m\u00E9todo de solicita\u00E7\u00E3o GET


# YMSG: returned when wrong query is generated (during procedure generation). 2 causes: Bug in process or there is no mapping from vocabulary to real table / column
2970=Erro na gera\u00E7\u00E3o de query ou mapeamento inv\u00E1lido
# YMSG: returned if for some reason the parser returned undefined parse model. Can be bad rule syntax or a bug
2971=Modelo de an\u00E1lise sint\u00E1tica n\u00E3o definido
# YMSG: query generation needs either leading object and at least one key or a mapping to parameters. The error is returned if something is missing 
2972=Combina\u00E7\u00E3o inv\u00E1lida de objeto principal, chaves e mapeamento
# YMSG: returned when there is no association between 2 objects in vocabulary
2973=Associa\u00E7\u00E3o inv\u00E1lida - nenhum atributo
# YMSG: returned when there is a use of attribute based on predictive model but the procedure for the predictive model is not defined
2974=Procedimento de m\u00F3dulo preditivo {0} n\u00E3o encontrado
# YMSG: outputs tanle type is mandatory. error when missing 
2975=Dados de resultado inv\u00E1lidos
# YMSG: error when is out name is missing in vocabulary output names 
2976=Nome de sa\u00EDda inv\u00E1lido
# YMSG: error when rule body type is different from text or decisionTable 
2977=tipo de corpo de regra inv\u00E1lido
# YMSG: return from Runtime plugins, in case of unsupported change mode
2978=O modo de modifica\u00E7\u00E3o '{0}' n\u00E3o \u00E9 suportado para o recurso
# YMSG: return from Runtime plugin - generate, for informing on the change mode for current resource
2979=Gera\u00E7\u00E3o de recurso, no modo de modifica\u00E7\u00E3o\: '{0}'
# YMSG: return when expression  
2980=Erro ao analisar sintaticamente a express\u00E3o\: \: '{0}'
# YMSG: return when expression  
2981=A cria\u00E7\u00E3o do modelo de regras '{0}' n\u00E3o \u00E9 poss\u00EDvel. O nome j\u00E1 est\u00E1 sendo utilizado por um dos objetos de dados no vocabul\u00E1rio '{1}'.



#############################
# API: Get params
#############################

# 3100 - 3999 - get params messages

# YMSG: return from  ruleBodyAnalyzer, in case of businessRule.type is not text
3100=O tipo de regra comercial deve ser texto
# YMSG: return from  ruleBodyAnalyzer, in case of Vocabulary is missing
3101=O vocabul\u00E1rio est\u00E1 em falta

#############################/
# API: Rule service consumption
#############################/
# 4100 - 4999 messages

# YMSG: return message in case the output is partial
4100={0} itens exibidos. Tenha em conta que isso \u00E9 s\u00F3 um conjunto parcial dos resultados. Se o c\u00F3digo saveResult estiver definido como VERDADEIRO, o conjunto completo de resultados pode ser encontrado na tabela de sa\u00EDda '{'1}.

#############################/
# Halm and Installation
#############################/

# YMSG: Post Activation API success
10000=Script de configura\u00E7\u00E3o para SAP HANA Rules Framework conclu\u00EDdo com \u00EAxito.
# YMSG: Post Activation API failed
10001=Ocorreu um erro no script de configura\u00E7\u00E3o do framework de regras SAP HANA. {0}
# YMSG: Post Activation API failed
10002=Foi detectada uma configura\u00E7\u00E3o existente para a aplica\u00E7\u00E3o da Web do framework de regras SAP HANA. Por isso, n\u00E3o \u00E9 permitida a defini\u00E7\u00E3o da configura\u00E7\u00E3o padr\u00E3o para a aplica\u00E7\u00E3o da Web.
# YMSG: Post Activation API failed
10003=A configura\u00E7\u00E3o da aplica\u00E7\u00E3o da Web para o framework de regras SAP HANA falhou devido a um erro t\u00E9cnico. Motivo\: {0}
# YMSG: Post Activation API failed
10004=Um servi\u00E7o de regras ou uma regra com um servi\u00E7o integrado j\u00E1 existe no sistema. Por isso, n\u00E3o \u00E9 permitido atualizar o fuso hor\u00E1rio.
# YMSG: Post Activation API failed
10005=Um servi\u00E7o de regras ou uma regra com um servi\u00E7o integrado j\u00E1 existe no sistema. Por isso, n\u00E3o \u00E9 permitido atualizar o esquema de tempo de execu\u00E7\u00E3o.
