
# This file contains messages descriptions arranged in sections according to HRF APIs
# These descriptions are translated.
# Adding a new message requires also update of message.xsjslib file by the new ID

#############################
# common
#############################
# 10 - 999 - common messages

# YMSG: return from resource activation, in case of a resource does not exist in repository
10=Az er\u0151forr\u00E1s nem aktiv\u00E1lhat\u00F3; az er\u0151forr\u00E1s nem l\u00E9tezik.
# YMSG: return from resource activation, in case of a resource suffix is not one of HRF resources
11=Az er\u0151forr\u00E1s nem aktiv\u00E1lhat\u00F3; a(z) '{0}' ut\u00F3tag nem t\u00E1mogatott.
# YMSG: return from resource activation, in case of a resource package does not exist in repository
12=Az er\u0151forr\u00E1s nem aktiv\u00E1lhat\u00F3; a(z) '{0}' csomag nem l\u00E9tezik.
# YMSG: return from runtime plug in, in case of invalid attribute
13=Az er\u0151forr\u00E1s nem aktiv\u00E1lhat\u00F3; a(z) '{0}' attrib\u00FAtum nem szerepel a s\u00E9m\u00E1ban.
# YMSG: return from  runtime plug in, in case of invalid attribute
14=Az er\u0151forr\u00E1s nem aktiv\u00E1lhat\u00F3; a(z) '{0}' k\u00F6telez\u0151 attrib\u00FAtum\u00E9rt\u00E9k hi\u00E1nyzik.
# YMSG: return from  runtime plug in, in case none of a predefined set of fields is specified
15=Az er\u0151forr\u00E1s nem aktiv\u00E1lhat\u00F3; {0} opcion\u00E1lis attrib\u00FAtumok k\u00F6z\u00FCl legal\u00E1bb egy hi\u00E1nyzik
# YMSG: return from  runtime plug in, in case of invalid field (e.g vocabulary doesn't exist)
16=Az er\u0151forr\u00E1s nem aktiv\u00E1lhat\u00F3; {0} attrib\u00FAtum \u00E9rt\u00E9ke \u00E9rv\u00E9nytelen
# YMSG: return from runtime plug in, in case of inconsistent fields combination(e.g. vocabulary and output names doesn't match)
17=Az er\u0151forr\u00E1s nem aktiv\u00E1lhat\u00F3; {0} \u00E9s {1} kombin\u00E1ci\u00F3ja \u00E9rv\u00E9nytelen
# YMSG: return from  runtime plug in, in case of invalid resource id (e.g. package / file name is missing)
23=Az er\u0151forr\u00E1s nem aktiv\u00E1lhat\u00F3; a megadott er\u0151forr\u00E1s nem l\u00E9tezik
# YMSG: return from  runtime plug in, in case of error from REL validation
24=Hiba a(z) {0} mez\u0151ben\: {1}
# YMSG: return from  REST service, in case of http request contains non supported method
25=A met\u00F3dus sikertelen; a(z) {0} sz\u00E1m\u00FA met\u00F3dus nem t\u00E1mogatott
# YMSG:  technical error from platform
26=M\u0171szaki hiba t\u00F6rt\u00E9nt - {0}
# YMSG: return from resource activation, in case of a resource does not exist in repository
27=Az er\u0151forr\u00E1s nem l\u00E9tezik.

# 100 - 200 - Authorization

# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
100=Nincs jogosults\u00E1ga ehhez a m\u0171velethez
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
101=Nincs jogosults\u00E1ga a szab\u00E1lyok aktualiz\u00E1l\u00E1s\u00E1hoz.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
102=Nincs jogosults\u00E1ga a szab\u00E1lyok t\u00F6rl\u00E9s\u00E9hez.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
103=Nincs jogosults\u00E1ga a szab\u00E1lyok l\u00E9trehoz\u00E1s\u00E1hoz.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
104=Nincs jogosults\u00E1ga a szab\u00E1lyok olvas\u00E1s\u00E1hoz.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
105=Nincs jogosults\u00E1ga a szab\u00E1lyszolg\u00E1ltat\u00E1sok aktualiz\u00E1l\u00E1s\u00E1hoz.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
106=Nincs jogosults\u00E1ga a szab\u00E1lyszolg\u00E1ltat\u00E1sok t\u00F6rl\u00E9s\u00E9hez.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
107=Nincs jogosults\u00E1ga a szab\u00E1lyszolg\u00E1ltat\u00E1sok l\u00E9trehoz\u00E1s\u00E1hoz.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
108=Nincs jogosults\u00E1ga a szab\u00E1lyszolg\u00E1ltat\u00E1sok olvas\u00E1s\u00E1hoz.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
109=Nincs jogosults\u00E1ga a szab\u00E1lyszolg\u00E1ltat\u00E1sok futtat\u00E1s\u00E1hoz.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
110=Nincs jogosults\u00E1ga a sz\u00F3k\u00E9szletek aktualiz\u00E1l\u00E1s\u00E1hoz.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
111=Nincs jogosults\u00E1ga a sz\u00F3k\u00E9szletek t\u00F6rl\u00E9s\u00E9hez.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
112=Nincs jogosults\u00E1ga a sz\u00F3k\u00E9szletek l\u00E9trehoz\u00E1s\u00E1hoz.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
113=Nincs jogosults\u00E1ga a sz\u00F3k\u00E9szletek olvas\u00E1s\u00E1hoz.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
114=Nincs jogosults\u00E1ga a szab\u00E1lysablonok aktualiz\u00E1l\u00E1s\u00E1hoz.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
115=Nincs jogosults\u00E1ga a szab\u00E1lysablonok t\u00F6rl\u00E9s\u00E9hez.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
116=Nincs jogosults\u00E1ga a szab\u00E1lysablonok l\u00E9trehoz\u00E1s\u00E1hoz.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
117=Nincs jogosults\u00E1ga a szab\u00E1lysablonok olvas\u00E1s\u00E1hoz.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
118=Nincs jogosults\u00E1ga a szab\u00E1lyszolg\u00E1ltat\u00E1sok l\u00E9trehoz\u00E1s\u00E1hoz vagy aktualiz\u00E1l\u00E1s\u00E1hoz.
#############################
# API: Validate
#############################
# 1100 - 1199 - REL validation messages

# YMSG: return from REL, the beginning of any REL validation error - in case of a wrong statement 
1100=Hiba a kifejez\u00E9sben;
# YMSG: return from REL parser, in case of a wrong entry (syntax) and maximum 3 option are optional instead 
1101=Hiba a kifejez\u00E9sben; adja meg a(z) {0} \u00E9rt\u00E9ket a(z) {1} helyett
# YMSG: return from REL parser, in case of a wrong entry (syntax) and more than 3 option are optional instead  
1102=Hiba a kifejez\u00E9sben; a(z) {0} nem \u00E9rv\u00E9nyes bejegyz\u00E9s
# YMSG: return from REL parser, in case of a wrong input
1103=Hiba a kifejez\u00E9sben; t\u00E1vol\u00EDtsa el a(z) {0} \u00E9rt\u00E9ket
# YMSG: return from REL model, in case of collection OM when single value in needed
1104=Hiba a kifejez\u00E9sben; a(z) {0} \u00E9rt\u00E9klista. M\u00F3dos\u00EDtsa a kifejez\u00E9st egyetlen \u00E9rt\u00E9kre.
# YMSG: return from REL model, in case of a wrong input
1105=Hiba a kifejez\u00E9sben; adjon meg \u00E9rv\u00E9nyes operandust a(z) {0} helyett
# YMSG: return from REL parser, in case of an incomplete expression
1106=Hi\u00E1nyos kifejez\u00E9s;
# YMSG: return from REL lexer, in case of missing token at EOF
1107=Hiba a kifejez\u00E9sben; a kifejez\u00E9s v\u00E9g\u00E9n v\u00E9g\u00E9n adja meg a(z) {0} \u00E9rt\u00E9ket
# YMSG: return from REL lexer, in case of wrong token
1108=Hiba a kifejez\u00E9sben; adja meg a(z) {0} \u00E9rt\u00E9ket a(z) '{'1} helyett
# YMSG: return from REL entity, in case of missing current
1109=Hiba a kifejez\u00E9sben; hi\u00E1nyzik a 'CURRENT' a 'WHERE' felt\u00E9telb\u0151l
# YMSG: return from REL entity, in case of redundant 'current'
1110=Hiba a kifejez\u00E9sben; felesleges 'CURRENT'; t\u00E1vol\u00EDtsa el a 'CURRENT' elemet
# YMSG: return from REL vocabulary utils, in case of invalid root object
1111=\u00C9rv\u00E9nytelen gy\u00F6k\u00E9robjektum
# YMSG: return from REL vocabulary utils, in case of invalid association
1112=\u00C9rv\u00E9nytelen t\u00E1rs\u00EDt\u00E1s
# YMSG: return from REL vocabulary utils, in case of invalid association or attribute
1113=\u00C9rv\u00E9nytelen t\u00E1rs\u00EDt\u00E1s vagy attrib\u00FAtum
# YMSG: return from REL vocabulary utils, in case of root is simple attribute
1114=A gy\u00F6k\u00E9r nem lehet egyszer\u0171 attrib\u00FAtum
# YMSG: return from REL vocabulary utils, in case of attribute not found
1115=Hi\u00E1nyos \u00FAtvonal
# YMSG: return from REL entity, in case of using 'current' outside of 'where'
1116=Hiba a kifejez\u00E9sben; a 'current' kulcssz\u00F3 nem haszn\u00E1lhat\u00F3 'where' z\u00E1rad\u00E9kban.
# YMSG: return from REL entity, in case of using 'current' incorrectly with arithmetic
1117=Hiba a kifejez\u00E9sben; a 'current' kulcssz\u00F3t az \u00F6sszehasonl\u00EDt\u00E1si oper\u00E1tor egyik oldal\u00E1nak minden operandus\u00E1ra alkalmazni kell a 'where' z\u00E1rad\u00E9kban.
# YMSG: return from REL parser utils, in case of using value that doen't exist in closed value list
1118=Hiba a kifejez\u00E9sben. '{0}' nem \u00E9rv\u00E9nyes \u00E9rt\u00E9k a(z) '{1}' \u00E9rt\u00E9klist\u00E1b\u00F3l.
# YMSG: return from REL parser utils, in case of using value that doen't exist in closed value list
1119=Hiba a kifejez\u00E9sben. A(z) '{0}' oper\u00E1tor nem haszn\u00E1lhat\u00F3 a(z) ('{1}') \u00E9rt\u00E9klista-attrib\u00FAtummal.
# YMSG: return from REL parser utils, in case of using value that doen't exist in closed value list
1120=Hiba a kifejez\u00E9sben. Az 'all' kulcssz\u00F3 nem k\u00F6vetkezhet olyan operandus ut\u00E1n, amely tartalmazza a 'current' kulcssz\u00F3t.
# YMSG: return from REL parser utils, in case of using value that doen't exist in closed value list
1121=Hiba a kifejez\u00E9sben. Az 'all' kulcssz\u00F3 nem haszn\u00E1lhat\u00F3 t\u00F6bbsz\u00F6r egyazon utas\u00EDt\u00E1sban.


# 1200 - 1999 - validation messages

#############################
# API : resource CRUD
#############################
# 2100 - 2299 - vocabulary messages

# YMSG: return from vocabulary runtime plug in, in case of error in expression
2100=Hely\: '{0}' - hiba a kifejez\u00E9s \u00E9rtelmez\u00E9sekor\: '{1}', '{2}'
# YMSG: return from vocabulary runtime plug in, in case of error in rule
2101=Hely\: '{0}' - hiba a szab\u00E1lyban\: '{1}', '{2}'
# YMSG: return from vocabulary runtime plug in, in case the parameter type already exists
2102=Hely\: '{0}' \: '{1}', n\u00E9v\: '{2}' m\u00E1r l\u00E9tezik
# YMSG: return from vocabulary runtime plug in, in case parameter name isn't valid
2103=Hely\: '{0}' \: '{1}', \u00C9rv\u00E9nytelen n\u00E9v\: '{2}'
# YMSG: return from vocabulary runtime plug in, in case one of action/output names aren't valid
2104=Hely\: '{0}', \u00C9rv\u00E9nytelen n\u00E9v\: '{1}'
# YMSG: return from vocabulary runtime plug in, in case name already exists
2105='{0}' n\u00E9v t\u00F6bbsz\u00F6r van defini\u00E1lva a k\u00F6vetkez\u0151ben\: '{1}'.
# YMSG : return from vocabulary runtime plug in, in case the output has no parameters
2106=Hi\u00E1nyz\u00F3 param\u00E9terek a kimenetben
# YMSG: return from vocabulary runtime plug in, in case one of the attributes has an invalid name
2107=\u00C9rv\u00E9nytelen attrib\u00FAtumn\u00E9v\: '{0}'
# YMSG: return from vocabulary runtime plug in, in case object name of declare more than once
2108={0}\: '{'1} m\u00E1r l\u00E9tezik. 
# YMSG: return from vocabulary runtime plug in, in case attribute name of declare more than once
2109=M\u00E1r van ilyen attrib\u00FAtum\: objektum\= '{0}' attrib\u00FAtum\= '{1}'
# YMSG: return from vocabulary runtime plug in, in case attribute name of declare more than once
2110=M\u00E1r van ilyen t\u00E1rs\u00EDt\u00E1s\: objektum\= '{0}' t\u00E1rs\u00EDt\u00E1s\= '{1}'
# YMSG : return from vocabulary runtime plug in, in case the source table isn't exists
2111=\u00C9rv\u00E9nytelen forr\u00E1st\u00E1bla\: '{0}'
# YMSG : return from vocabulary runtime plug in, in case of one the association is invalid
2112=\u00C9rv\u00E9nytelen t\u00E1rs\u00EDt\u00E1s. Objektum\='{0}' + t\u00E1rs\u00EDt\u00E1s\='{1}'
# YMSG : return from vocabulary runtime plug in, in case of one the association's attributes are invalid
2113=\u00C9rv\u00E9nytelen attrib\u00FAtum a t\u00E1rs\u00EDt\u00E1sn\u00E1l\= '{0}' attrib\u00FAtum\= '{1}'
# YMSG: return from rule utils, in case of invalid vocabulary assignment
2114=A(z) '{0}' sz\u00F3k\u00E9szlet nem \u00E9rv\u00E9nyes
# YMSG: return from vocabulary runtime plug in, in case invalid alias content
2115='{0}' alias tartalma \u00E9rv\u00E9nytelen. ok\: '{1}'
# YMSG: return from vocabulary runtime plug in, in case invalid alias name
2116=A(z) '{0}' aliasn\u00E9v \u00E9rv\u00E9nytelen. Az aliasn\u00E9v csak alfanumerikus karaktereket \u00E9s al\u00E1h\u00FAz\u00E1s karaktert tartalmazhat, bet\u0171vel kell kezd\u0151dnie, \u00E9s nem lehet a szab\u00E1lykifejez\u00E9s-nyelv \u00E1ltal fenntartott sz\u00F3.
# YMSG: return from vocabulary runtime plug in, in case alias name collide with an data object name
2117='{0}' alias neve \u00E9rv\u00E9nytelen. Az alias m\u00E1r l\u00E9tezik adatobjektumn\u00E9vk\u00E9nt.
# YMSG: return from vocabulary runtime plug in, in case o alias dependency to itself
2118='{0}' alias tartalma \u00E9rv\u00E9nytelen. Az alias felold\u00E1sa v\u00E9gtelen ciklust okoz.
# YMSG: return from vocabulary runtime plug in, when name already exists in another vocabulary in the DB. Example: In 'dataObjects', name 'player' already exists in 'aliases' vocabulary 'voca2'
2120='{0}' elemben '{1}' n\u00E9v m\u00E1r l\u00E9tezik a k\u00F6vetkez\u0151ben\: '{2}', sz\u00F3k\u00E9szlet\: '{3}'.
# YMSG: return from vocabulary runtime plug in, scope name can't be Public or Private
2121=A hat\u00F3k\u00F6r neve \u00E9rv\u00E9nytelen. A hat\u00F3k\u00F6r neve nem lehet 'Public' vagy 'Private'.
# YMSG: return from vocabulary runtime plug in, embedded vocabulary can't be with scope Global
2122=A hat\u00F3k\u00F6r t\u00EDpusa \u00E9rv\u00E9nytelen. A be\u00E1gyazott sz\u00F3k\u00E9szlet nem lehet Glob\u00E1lis t\u00EDpus\u00FA.
# YMSG: Object does not exist
2125='{0}' objektum nem l\u00E9tezik
# YMSG: return from vocabulary runtime plug in, in case of a wrong data object name 
2126=A(z) '{0}' dataObject neve \u00E9rv\u00E9nytelen. A dataObject neve nem lehet megl\u00E9v\u0151 szab\u00E1lysablon neve vagy az al\u00E1bbi fenntartott szavak valamelyike (csak kis- \u00E9s nagybet\u0171ket megk\u00FCl\u00F6nb\u00F6ztet\u0151)\: rule, ruleTemplate
# YMSG: return from vocabulary runtime plug in, in case of a wrong alias name
2127=A(z) '{0}' aliasn\u00E9v \u00E9rv\u00E9nytelen. Az aliasn\u00E9v nem lehet megl\u00E9v\u0151 szab\u00E1lysablon neve vagy az al\u00E1bbi fenntartott szavak valamelyike (csak kis- \u00E9s nagybet\u0171ket megk\u00FCl\u00F6nb\u00F6ztet\u0151)\: rule, ruleTemplate
# YMSG: return from vocabulary runtime plug in, in case invalid data object name
2128=A(z) '{0}' dataObject neve \u00E9rv\u00E9nytelen. A dataObject neve csak alfanumerikus karaktereket \u00E9s al\u00E1h\u00FAz\u00E1s karaktert tartalmazhat, bet\u0171vel kell kezd\u0151dnie, \u00E9s nem lehet a szab\u00E1lykifejez\u00E9s-nyelv \u00E1ltal fenntartott sz\u00F3.
# YMSG: return from vocabulary runtime plug in, in case of duplicate alias names
2129='{0}' alias m\u00E1r l\u00E9tezik aliasn\u00E9vk\u00E9nt.
# YMSG: return from vocabulary runtime plug in, in case alias content is empty
2130=A tartalomparam\u00E9ter \u00FCres a(z) '{0}' aliasban.
# YMSG: return from vocabulary runtime plug in, in case alias name exists as as an attribute name
2131=A(z) '{0}' aliasn\u00E9v \u00E9rv\u00E9nytelen. Az alias m\u00E1r l\u00E9tezik attrib\u00FAtumn\u00E9vk\u00E9nt.
# YMSG: return from vocabulary runtime plug in, in case alias name exists in other vocabulary with the same scope
2132=A(z) '{0}' aliasn\u00E9v \u00E9rv\u00E9nytelen. A n\u00E9v m\u00E1r l\u00E9tezik a(z) '{1}' objektum attrib\u00FAtumak\u00E9nt a(z) '{2}' sz\u00F3k\u00E9szletben.
# YMSG: return from vocabulary runtime plug in, in case alias name exists in objects rule or ruleTemplate
2133=A(z) '{0}' aliasn\u00E9v \u00E9rv\u00E9nytelen. A n\u00E9v m\u00E1r l\u00E9tezik a(z) '{1}' objektumban.
# YMSG: return from vocabulary runtime plug in, in case attribute name already exists as alias in other vocabulary
2134=A(z) '{0}' attrib\u00FAtum neve \u00E9rv\u00E9nytelen. A n\u00E9v m\u00E1r szerepel aliask\u00E9nt a(z) '{1}' sz\u00F3k\u00E9szletben.
# YMSG: return from vocabulary runtime plug in, in case vocabulary declares it depends on a vocabulary which doesn't exists
2135=A sz\u00F3k\u00E9szlet f\u00FCgg\u0151s\u00E9get hat\u00E1roz meg a(z) '{0}' sz\u00F3k\u00E9szlett\u0151l, amely nem l\u00E9tezik.
# YMSG: return from vocabulary runtime plug in, in case implementor declare global vocabulary with dependencies
2136=Glob\u00E1lis sz\u00F3k\u00E9szlet nem tartalmazhat f\u00FCgg\u0151s\u00E9get m\u00E1s sz\u00F3k\u00E9szletekt\u0151l.
# YMSG: return from vocabulary runtime plug in, in case, in the same data object, there is association and attribute with the same name
2137=A(z) '{0}' adatobjektumban a(z) '{1}' n\u00E9v t\u00E1rs\u00EDt\u00E1shoz \u00E9s attrib\u00FAtumhoz is haszn\u00E1latos. Nem lehet ugyanazt a nevet haszn\u00E1lni mindk\u00E9t tulajdons\u00E1ghoz.
# YMSG: return from vocabulary runtime plug in, in case invalid alias name
2138=A(z) '{0}' \u00E9rt\u00E9klistan\u00E9v \u00E9rv\u00E9nytelen. Az \u00E9rt\u00E9klistan\u00E9v csak alfanumerikus karaktereket \u00E9s al\u00E1h\u00FAz\u00E1s karaktert tartalmazhat, bet\u0171vel kell kezd\u0151dnie, \u00E9s nem lehet a szab\u00E1lykifejez\u00E9s-nyelv \u00E1ltal fenntartott sz\u00F3.
# YMSG: return from vocabulary runtime plug in, in case alias content is empty
2139=A(z) '{0}' \u00E9rt\u00E9klista tartalma \u00FCres.
# YMSG: return from vocabulary runtime plug in, in case alias content is empty
2140=A(z) '{2}' adatobjektum '{1}' attrib\u00FAtum\u00E1ban defini\u00E1lt '{0}' \u00E9rt\u00E9klista nem l\u00E9tezik.
# YMSG: return from vocabulary runtime plug in, in case parameter size isn't valid
2141='{'0} helyen '{'2} param\u00E9ter (helye\: '{'3}) m\u00E9rete ({1}) nem \u00E9rv\u00E9nyes a megadott adatt\u00EDpushoz.
# YMSG: return from vocabulary - in case parameter content cannot be a collection 
2142='{0}' m\u0171velet param\u00E9terdefin\u00EDci\u00F3ja \u00E9rv\u00E9nytelen '{1}' m\u0171veletparam\u00E9terben. A kollekci\u00F3 t\u00EDpus\u00FA param\u00E9terek nem enged\u00E9lyezettek m\u0171veletekben.                                                                                                                                                                   .




# 2300 - 2499 rule template messages

# YMSG: return from Rule Template runtime plug in, in case of rule template name starts with a number
2300=A szab\u00E1lysablon nem hozhat\u00F3 l\u00E9tre vagy nem friss\u00EDthet\u0151; a szab\u00E1lysablon neve nem kezd\u0151dhet sz\u00E1mmal
# YMSG: return from Rule Template runtime plug in, in case of illegal change in rule template attributes
2301=A szab\u00E1lysablon-aktiv\u00E1l\u00E1s inkompatibilis m\u00F3dos\u00EDt\u00E1st tartalmaz;
# YMSG: return from Rule Template runtime plug in, in case of rule template update contains condition change
2302=A szab\u00E1lysablon nem hozhat\u00F3 l\u00E9tre vagy nem friss\u00EDthet\u0151; a szab\u00E1lysablon felt\u00E9tele nem m\u00F3dos\u00EDthat\u00F3
# YMSG: return from Rule Template runtime plug in, in case of rule template contains invalid condition 
2303=A szab\u00E1lysablon nem hozhat\u00F3 l\u00E9tre vagy nem friss\u00EDthet\u0151; a(z) '{0}' felt\u00E9tel nem \u00E9rv\u00E9nyes
# YMSG: return from Rule Template runtime plug in, in case of rule template deletion when there are rules assigned to the rule template  
2304=A(z) {0} szab\u00E1lysablon nem t\u00F6r\u00F6lhet\u0151. A szab\u00E1lysablonhoz szab\u00E1lyok tartoznak;
# YMSG: return from Rule Template runtime plug in, in case of duplicate rule template name  
2305=A szab\u00E1lysablon nem hozhat\u00F3 l\u00E9tre; a(z) '{0}' szab\u00E1lysablon m\u00E1r l\u00E9tezik a(z) '{1}' csomagban
# YMSG: return from Rule Template runtime plug in, in case that rule template name starts with a number  
2306=A szab\u00E1lysablon neve ('{0}') nem kezd\u0151dhet sz\u00E1mmal;
# YMSG: return from Rule Template runtime plug in, in case that rule template name already exist as data object  
2307=A(z) '{0}' szab\u00E1lysablon l\u00E9trehoz\u00E1sa nem siker\u00FClt. A szab\u00E1lysablon m\u00E1r haszn\u00E1latban van adatobjektumk\u00E9nt a(z) '{1}' sz\u00F3k\u00E9szletben.
# YMSG: return from Rule Template runtime plug in, in case that rule template name already exist as alias
2308=A(z) '{0}' szab\u00E1lysablon l\u00E9trehoz\u00E1sa nem siker\u00FClt. A szab\u00E1lysablon neve m\u00E1r haszn\u00E1latban van aliask\u00E9nt a(z) '{1}' sz\u00F3k\u00E9szletben.


# 2500 - 2699 - rule messages

# YMSG: return from Rule runtime plug in, in case of resource contains additional attributes but not assigned to rule template   
2500=A szab\u00E1ly nem hozhat\u00F3 l\u00E9tre; tov\u00E1bbi attrib\u00FAtumok vannak megadva, pedig a szab\u00E1ly nem sablonon alapul.
# YMSG: return from Rule runtime plug in, in case of rule template assignment change   
2501=A szab\u00E1ly nem friss\u00EDthet\u0151; a szab\u00E1lysablon-hozz\u00E1rendel\u00E9s nem m\u00F3dos\u00EDthat\u00F3 a szab\u00E1ly l\u00E9trehoz\u00E1sa ut\u00E1n.
# YMSG: return from Rule runtime plug in, in case of vocabulary change  
2502=A szab\u00E1ly nem friss\u00EDthet\u0151; a sz\u00F3k\u00E9szlet-hozz\u00E1rendel\u00E9s a szab\u00E1ly l\u00E9trehoz\u00E1sa ut\u00E1n nem m\u00F3dos\u00EDthat\u00F3.
# YMSG: return from Rule runtime plug in, in case of output change   
2503=A szab\u00E1ly nem friss\u00EDthet\u0151; a kimenet-hozz\u00E1rendel\u00E9s a szab\u00E1ly l\u00E9trehoz\u00E1sa ut\u00E1n nem m\u00F3dos\u00EDthat\u00F3.
# YMSG: return from Rule runtime plug in, in case of rule contains additional attributes where assigned rule template does not contains additional attributes
2504=A szab\u00E1ly nem hozhat\u00F3 l\u00E9tre; olyan tov\u00E1bbi attrib\u00FAtumok vannak megadva, amelyek nem a hozz\u00E1rendelt szab\u00E1lysablonhoz tartoznak.
# YMSG: return from Rule runtime plug in, in case of execution context change
2505=A szab\u00E1ly nem friss\u00EDthet\u0151; a v\u00E9grehajt\u00E1si kontextus hozz\u00E1rendel\u00E9se a szab\u00E1ly l\u00E9trehoz\u00E1sa ut\u00E1n nem m\u00F3dos\u00EDthat\u00F3.
# YMSG: return from Rule runtime plug in, in case of invalid rule template assignment
2506=A(z) {0} szab\u00E1lysablon nem \u00E9rv\u00E9nyes;
# YMSG: return from Rule runtime plug in, in case of invalid status transition
2507=A szab\u00E1ly nem friss\u00EDthet\u0151; a(z) '{0}' st\u00E1tus nem m\u00F3dos\u00EDthat\u00F3 a k\u00F6vetkez\u0151re\: '{1}'.
# YMSG: return from Rule runtime plug in, in case of updating single consumption to non single consumption Rule
2510=A be\u00E1gyazott szolg\u00E1ltat\u00E1sok elt\u00E1vol\u00EDt\u00E1sa nem enged\u00E9lyezett.
# YMSG: return from Rule runtime plug in, in case of updating single embedded service in Rule
2511=A be\u00E1gyazott szolg\u00E1ltat\u00E1sok elt\u00E1vol\u00EDt\u00E1sa vagy m\u00F3dos\u00EDt\u00E1sa nem enged\u00E9lyezett.
# YMSG: return from Rule runtime plug in, in case of more than one embedded services with the same name
2512=A be\u00E1gyazott szolg\u00E1ltat\u00E1s neve ('{0}') t\u00F6bbsz\u00F6r l\u00E9tezik.
# YMSG: return from Rule runtime plug in - update/create, in case the rule body is not valid
2513=A szab\u00E1ly nem hozhat\u00F3 l\u00E9tre vagy nem friss\u00EDthet\u0151; a szab\u00E1ly t\u00F6rzse \u00E9rv\u00E9nytelen.
# YMSG: return from Rule body validator - in case parameter is referenced to an unknown action
2514=\u00C9rv\u00E9nytelen param\u00E9terdefin\u00EDci\u00F3. A param\u00E9ter olyan m\u0171veletre hivatkozik ('{0}'), amely nem l\u00E9tezik a sz\u00F3k\u00E9szletben.
# YMSG: return from Rule body validator - in case parameter name isn't a valid parameter for action
2515=\u00C9rv\u00E9nytelen param\u00E9terdefin\u00EDci\u00F3. A(z) '{0}' param\u00E9tern\u00E9v nem l\u00E9tezik a(z) '{1}' m\u0171velethez a sz\u00F3k\u00E9szletben.
# YMSG: return from Rule body validator - in case action doesn't exist in the vocabulary
2516=A(z) '{0}' m\u0171velet nem l\u00E9tezik a sz\u00F3k\u00E9szletben.
# YMSG: return from Rule body validator - when the sent parameter isn't a required parameter in the sent output 
2517=\u00C9rv\u00E9nytelen param\u00E9terdefin\u00EDci\u00F3. A(z) '{0}' param\u00E9tern\u00E9v nem l\u00E9tezik a(z) '{1}' kimenethez a sz\u00F3k\u00E9szletben.
# YMSG: return from Rule body validator - when the sent output doesn't exists in the vocabulary
2518=A(z) '{0}' kimenet nem szerepel a sz\u00F3k\u00E9szletben.
# YMSG: return from Rule body validator - when alias has more than one output parameter column
2519=Az aliasnak t\u00F6bb kimeneti param\u00E9tere van.
# YMSG: return from Rule body validator - when the alias output parameters values do not have the same type X
2520=A(z) '{0}' kimeneti param\u00E9ter minden \u00E9rt\u00E9k\u00E9nek azonos t\u00EDpus\u00FAnak kell lennie.
# YMSG: return from Rule runtime plug in, in case of assign rule to rule service that does not exist.
2521=A(z) '{0}' szab\u00E1lyt nem siker\u00FClt hozz\u00E1rendelni a(z) '{1}' szab\u00E1lyszolg\u00E1ltat\u00E1shoz. A szab\u00E1lyszolg\u00E1ltat\u00E1s nem l\u00E9tezik.
# YMSG: return from Rule runtime plug in, in case of assign rule to rule service with different vocabulary.
2522=A(z) '{0}' szab\u00E1lyt nem siker\u00FClt hozz\u00E1rendelni a(z) '{1}' szab\u00E1lyszolg\u00E1ltat\u00E1shoz. A szab\u00E1lyszolg\u00E1ltat\u00E1shoz \u00E9s a szab\u00E1lyhoz ugyanazt a sz\u00F3k\u00E9szletet kell defini\u00E1lni.
# YMSG: return from Rule runtime plug in, in case of assign rule to rule service with different output.
2523=A(z) '{0}' szab\u00E1lyt nem siker\u00FClt hozz\u00E1rendelni a(z) '{1}' szab\u00E1lyszolg\u00E1ltat\u00E1shoz. A szab\u00E1lyszolg\u00E1ltat\u00E1shoz \u00E9s a szab\u00E1lyhoz ugyanazt a kimenetet kell defini\u00E1lni.
# YMSG: return from Rule runtime plug in, in case of assign rule to rule service that is not indicated as manually assigned.
2524=Nem siker\u00FClt hozz\u00E1rendelni a(z) '{0}' szab\u00E1lyt a(z) '{1}' szab\u00E1lyszolg\u00E1ltat\u00E1shoz. A szab\u00E1lyszolg\u00E1ltat\u00E1s automatikus szab\u00E1ly-hozz\u00E1rendel\u00E9sekre van be\u00E1ll\u00EDtva, ez\u00E9rt nem enged\u00E9lyezi a manu\u00E1lis hozz\u00E1rendel\u00E9seket.
# YMSG: return from Rule runtime plug in - update/create, in case a custom condition is not valid
2525=A szab\u00E1ly nem hozhat\u00F3 l\u00E9tre vagy nem friss\u00EDthet\u0151; '{0}' nem \u00E9rv\u00E9nyes felt\u00E9tel.
# YMSG: return from Rule body validator - when ruleBody of type ruleSet has more than one condition column
2526=\u00C9rv\u00E9nytelen szab\u00E1lyk\u00E9szlet. A szab\u00E1lyk\u00E9szlet egyik szab\u00E1ly\u00E1nak egyn\u00E9l t\u00F6bb felt\u00E9tele van.


# 2700 - 2899 - rule service messages

# YMSG: return from Rule service plug in, in case of wrong data object filter
2700=Hiba a szab\u00E1lyszolg\u00E1ltat\u00E1s sz\u0171r\u0151j\u00E9ben
# YMSG: return from Rule service plug in, in case of different data objects in execution context and filter
2701='{0}' adatobjektum a v\u00E9grehajt\u00E1si kontextusban elt\u00E9r '{1}' dataObject elemt\u0151l a sz\u0171r\u0151ben
# YMSG: return from  runtime plug in, in case of specified data object does not have the specified attribute (e.g. data object keys in rule service definition).
2704=A szab\u00E1lyszolg\u00E1ltat\u00E1s nem hozhat\u00F3 l\u00E9tre vagy nem friss\u00EDthet\u0151; {1} sz\u00F3k\u00E9szlet {0} adatobjektuma nem tartalmazza a(z) {2} attrib\u00FAtumot
# YMSG: return from runtime plug in, in case of parameter mapping path contains a collection
2705=Az \u00FAtvonal a kollekci\u00F3val egy\u00FCtt nem enged\u00E9lyezett. \u00DAtvonal\: {0};
# YMSG: return from runtime plug in, in case of data object mapping entry is not unique within an execution context .
2706=A(z) {0} adatobjektum duplik\u00E1lt hozz\u00E1rendel\u00E9ssel rendelkezik;
# YMSG: return from  runtime plug in, in case of parameter definition entry is not unique within an execution context .
2707=A szab\u00E1lyszolg\u00E1ltat\u00E1s nem hozhat\u00F3 l\u00E9tre; {0} param\u00E9ter duplik\u00E1lt
# YMSG: return from  runtime plug in, in case of parameter mapping entry doesn't have a match parameter definition entry with in an execution context
2708=A szab\u00E1lyszolg\u00E1ltat\u00E1s nem hozhat\u00F3 l\u00E9tre; a(z) {0} param\u00E9ter nem l\u00E9tezik, \u00E9s az adatobjektummal van t\u00E1rs\u00EDtva
# YMSG: return from  runtime plug in, in case of ifentifiers in dataObject type parameter do not exist in data object from vocabulary
2709=\u00C9rv\u00E9nytelen param\u00E9terdefin\u00EDci\u00F3 a(z) '{0}' szab\u00E1lyszolg\u00E1ltat\u00E1sban. A(z) '{1}' param\u00E9terben '{2}' nem \u00E9rv\u00E9nyes attrib\u00FAtuma '{3}' adatobjektumnak a(z) '{4}' sz\u00F3k\u00E9szlet-terjedelemben.
# YMSG: return from runtime plug in, in case of data object definition entry is not unique within parameter definition if service.
2710=\u00C9rv\u00E9nytelen param\u00E9terdefin\u00EDci\u00F3 a(z) '{0}' szab\u00E1lyszolg\u00E1ltat\u00E1sban. A(z) '{1}' adatobjektumra t\u00F6bb param\u00E9ter hivatkozik.
# YMSG: return from runtime plug in, only read-only rule services can be indicated to be created with result view
2711=A(z) '{0}' szab\u00E1lyszolg\u00E1ltat\u00E1s l\u00E9trehoz\u00E1sa nem siker\u00FClt. Az eredm\u00E9nyn\u00E9zettel rendelkez\u0151 szab\u00E1lyszolg\u00E1ltat\u00E1st \u00EDr\u00E1sv\u00E9dettk\u00E9nt kell megjel\u00F6lni.
# YMSG: return from runtime plug in, only explicit output rule services can be indicated to be created with result view
2712=A(z) '{0}' szab\u00E1lyszolg\u00E1ltat\u00E1s l\u00E9trehoz\u00E1sa nem siker\u00FClt. Az eredm\u00E9nyn\u00E9zettel rendelkez\u0151 szab\u00E1lyszolg\u00E1ltat\u00E1soknak explicit kimenetet kell defini\u00E1lni.
# YMSG: returned from request handler. Rule requested to be removed from rule service but the rule is not assigned to it
2713=A szab\u00E1ly-hozz\u00E1rendel\u00E9s elt\u00E1vol\u00EDt\u00E1sa nem siker\u00FClt. A(z) '{0}' szab\u00E1ly nincs hozz\u00E1rendelve a szab\u00E1lyszolg\u00E1ltat\u00E1shoz.
# YMSG: return from  runtime plug in, in case of output contains collection parameter in event mode scenario
2714='{0}' szab\u00E1lyszolg\u00E1ltat\u00E1s l\u00E9trehoz\u00E1sanem siker\u00FClt. Nem defini\u00E1lhat kimenetet kollekci\u00F3 t\u00EDpus\u00FA param\u00E9terekkel olyan szab\u00E1lyszolg\u00E1ltat\u00E1shoz, amelynek v\u00E9grehajt\u00E1si kontextus\u00E1ban nicns defini\u00E1lva adatobjektum.
# 2900 - 2949 - post activation / completeActivation

# 2950 - 2999 - common resource CRUD


# YMSG: return from Request Handler, in case of url parameter that isn't valid
2955=A(z) {0} URL-param\u00E9ter nem \u00E9rv\u00E9nyes
# YMSG: return from Request Handler, in case of unsupported request mode
2956=A(z) {0} sz\u00E1m\u00FA m\u00F3dot a rendszer nem t\u00E1mogatja
# YMSG: return from Request Handler, in case of unsupported metadata
2957=A metaadatok nem t\u00E1mogatottak
# YMSG: return from Request Handler, in case of unsupported metadata for method
2958=A metaadatok leh\u00EDv\u00E1sa csak GET k\u00E9relemmet\u00F3dussal \u00E9rv\u00E9nyes


# YMSG: returned when wrong query is generated (during procedure generation). 2 causes: Bug in process or there is no mapping from vocabulary to real table / column
2970=Hiba a lek\u00E9rdez\u00E9sgener\u00E1l\u00E1skor, vagy \u00E9rv\u00E9nytelen hozz\u00E1rendel\u00E9s
# YMSG: returned if for some reason the parser returned undefined parse model. Can be bad rule syntax or a bug
2971=Az \u00E9rtelmez\u0151 modell nincs defini\u00E1lva
# YMSG: query generation needs either leading object and at least one key or a mapping to parameters. The error is returned if something is missing 
2972=\u00C9rv\u00E9nytelen a bevezet\u0151 objektum, kulcsok \u00E9s hozz\u00E1rendel\u00E9s kombin\u00E1ci\u00F3ja
# YMSG: returned when there is no association between 2 objects in vocabulary
2973=\u00C9rv\u00E9nytelen t\u00E1rs\u00EDt\u00E1s - nincs attrib\u00FAtum
# YMSG: returned when there is a use of attribute based on predictive model but the procedure for the predictive model is not defined
2974=A(z) {0} predikt\u00EDv modulelj\u00E1r\u00E1s nem tal\u00E1lhat\u00F3
# YMSG: outputs tanle type is mandatory. error when missing 
2975=\u00C9rv\u00E9nytelen eredm\u00E9nyadatok
# YMSG: error when is out name is missing in vocabulary output names 
2976=\u00C9rv\u00E9nytelen kimenetn\u00E9v
# YMSG: error when rule body type is different from text or decisionTable 
2977=\u00C9rv\u00E9nytelen a szab\u00E1lyt\u00F6rzs t\u00EDpusa
# YMSG: return from Runtime plugins, in case of unsupported change mode
2978='{0}' m\u00F3dos\u00EDt\u00E1si m\u00F3d az er\u0151forr\u00E1sn\u00E1l nem t\u00E1mogatott
# YMSG: return from Runtime plugin - generate, for informing on the change mode for current resource
2979=Er\u0151forr\u00E1s gener\u00E1l\u00E1sa, m\u00F3dos\u00EDt\u00E1si m\u00F3d\: '{0}'
# YMSG: return when expression  
2980=Hiba a kifejez\u00E9s elemz\u00E9sekor\: '{0}'
# YMSG: return when expression  
2981=A(z) '{0}' szab\u00E1lysablon nem hozhat\u00F3 l\u00E9tre. A Az egyik adatobjektum m\u00E1r haszn\u00E1lja a nevet a(z) '{1}' sz\u00F3k\u00E9szletben.



#############################
# API: Get params
#############################

# 3100 - 3999 - get params messages

# YMSG: return from  ruleBodyAnalyzer, in case of businessRule.type is not text
3100=Az \u00FCzleti szab\u00E1ly t\u00EDpusa csak sz\u00F6veg lehet
# YMSG: return from  ruleBodyAnalyzer, in case of Vocabulary is missing
3101=Hi\u00E1nyzik a sz\u00F3k\u00E9szlet

#############################/
# API: Rule service consumption
#############################/
# 4100 - 4999 messages

# YMSG: return message in case the output is partial
4100={0} elem jelenik meg. Ne feledje, hogy ez csak az eredm\u00E9ny egy r\u00E9sze. Ha a saveResult jelz\u0151 be\u00E1ll\u00EDt\u00E1sa TRUE, a teljes eredm\u00E9nyhalmaz a(z) '{'1}.output t\u00E1bl\u00E1ban tal\u00E1lhat\u00F3.

#############################/
# Halm and Installation
#############################/

# YMSG: Post Activation API success
10000=Az SAP HANA szab\u00E1lyframework konfigur\u00E1ci\u00F3s szkriptje sikeresen befejez\u0151d\u00F6tt.
# YMSG: Post Activation API failed
10001=Hiba t\u00F6rt\u00E9nt az SAP HANA szab\u00E1lyframework konfigur\u00E1ci\u00F3s szkriptj\u00E9ben. {0}
# YMSG: Post Activation API failed
10002=Az SAP HANA Rules Framework webalkalmaz\u00E1s\u00E1nak megl\u00E9v\u0151 konfigur\u00E1ci\u00F3ja \u00E9szlelhet\u0151. Ez\u00E9rt nem lehet be\u00E1ll\u00EDtani a webalkalmaz\u00E1s alap\u00E9rtelmezett konfigur\u00E1ci\u00F3j\u00E1t.
# YMSG: Post Activation API failed
10003=Az SAP HANA Rules Framework webalkalmaz\u00E1s\u00E1t m\u0171szaki hiba miatt nem siker\u00FClt konfigur\u00E1lni. Ok\: {0}
# YMSG: Post Activation API failed
10004=M\u00E1r van szab\u00E1lyszolg\u00E1ltat\u00E1s vagy be\u00E1gyazott szolg\u00E1ltat\u00E1ssal rendelkez\u0151 szab\u00E1ly a rendszerben. Ez\u00E9rt nem enged\u00E9lyezett az id\u0151z\u00F3na aktualiz\u00E1l\u00E1sa.
# YMSG: Post Activation API failed
10005=M\u00E1r van szab\u00E1lyszolg\u00E1ltat\u00E1s vagy be\u00E1gyazott szolg\u00E1ltat\u00E1ssal rendelkez\u0151 szab\u00E1ly a rendszerben. Ez\u00E9rt nem enged\u00E9lyezett a fut\u00E1sid\u0151s\u00E9ma aktualiz\u00E1l\u00E1sa.
