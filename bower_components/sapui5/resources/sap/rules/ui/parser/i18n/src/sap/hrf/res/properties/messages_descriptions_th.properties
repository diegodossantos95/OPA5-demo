
# This file contains messages descriptions arranged in sections according to HRF APIs
# These descriptions are translated.
# Adding a new message requires also update of message.xsjslib file by the new ID

#############################
# common
#############################
# 10 - 999 - common messages

# YMSG: return from resource activation, in case of a resource does not exist in repository
10=\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E40\u0E1B\u0E34\u0E14\u0E43\u0E0A\u0E49\u0E07\u0E32\u0E19\u0E17\u0E23\u0E31\u0E1E\u0E22\u0E32\u0E01\u0E23\u0E44\u0E14\u0E49; \u0E44\u0E21\u0E48\u0E21\u0E35\u0E17\u0E23\u0E31\u0E1E\u0E22\u0E32\u0E01\u0E23\u0E2D\u0E22\u0E39\u0E48
# YMSG: return from resource activation, in case of a resource suffix is not one of HRF resources
11=\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E40\u0E1B\u0E34\u0E14\u0E43\u0E0A\u0E49\u0E07\u0E32\u0E19\u0E17\u0E23\u0E31\u0E1E\u0E22\u0E32\u0E01\u0E23\u0E44\u0E14\u0E49; \u0E2A\u0E48\u0E27\u0E19\u0E15\u0E48\u0E2D\u0E17\u0E49\u0E32\u0E22 '{0}' \u0E44\u0E21\u0E48\u0E44\u0E14\u0E49\u0E23\u0E31\u0E1A\u0E01\u0E32\u0E23\u0E2A\u0E19\u0E31\u0E1A\u0E2A\u0E19\u0E38\u0E19
# YMSG: return from resource activation, in case of a resource package does not exist in repository
12=\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E40\u0E1B\u0E34\u0E14\u0E43\u0E0A\u0E49\u0E07\u0E32\u0E19\u0E17\u0E23\u0E31\u0E1E\u0E22\u0E32\u0E01\u0E23\u0E44\u0E14\u0E49; \u0E44\u0E21\u0E48\u0E21\u0E35\u0E41\u0E1E\u0E04\u0E40\u0E01\u0E08 '{0}'
# YMSG: return from runtime plug in, in case of invalid attribute
13=\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E40\u0E1B\u0E34\u0E14\u0E43\u0E0A\u0E49\u0E07\u0E32\u0E19\u0E17\u0E23\u0E31\u0E1E\u0E22\u0E32\u0E01\u0E23\u0E44\u0E14\u0E49; \u0E41\u0E2D\u0E17\u0E17\u0E23\u0E34\u0E1A\u0E34\u0E27\u0E15\u0E4C '{0}' \u0E44\u0E21\u0E48\u0E21\u0E35\u0E2D\u0E22\u0E39\u0E48\u0E43\u0E19 Schema
# YMSG: return from  runtime plug in, in case of invalid attribute
14=\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E40\u0E1B\u0E34\u0E14\u0E43\u0E0A\u0E49\u0E07\u0E32\u0E19\u0E17\u0E23\u0E31\u0E1E\u0E22\u0E32\u0E01\u0E23\u0E44\u0E14\u0E49; \u0E04\u0E48\u0E32\u0E41\u0E2D\u0E17\u0E17\u0E23\u0E34\u0E1A\u0E34\u0E27\u0E15\u0E4C\u0E41\u0E1A\u0E1A\u0E1A\u0E31\u0E07\u0E04\u0E31\u0E1A '{0}' \u0E02\u0E32\u0E14\u0E2B\u0E32\u0E22\u0E44\u0E1B
# YMSG: return from  runtime plug in, in case none of a predefined set of fields is specified
15=\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E40\u0E1B\u0E34\u0E14\u0E43\u0E0A\u0E49\u0E07\u0E32\u0E19\u0E17\u0E23\u0E31\u0E1E\u0E22\u0E32\u0E01\u0E23\u0E44\u0E14\u0E49; \u0E21\u0E35\u0E41\u0E2D\u0E17\u0E17\u0E23\u0E34\u0E1A\u0E34\u0E27\u0E15\u0E4C\u0E15\u0E31\u0E27\u0E40\u0E25\u0E37\u0E2D\u0E01 {0} \u0E2D\u0E22\u0E48\u0E32\u0E07\u0E19\u0E49\u0E2D\u0E22\u0E2B\u0E19\u0E36\u0E48\u0E07\u0E41\u0E2D\u0E17\u0E17\u0E23\u0E34\u0E1A\u0E34\u0E27\u0E15\u0E4C\u0E02\u0E32\u0E14\u0E2B\u0E32\u0E22\u0E44\u0E1B
# YMSG: return from  runtime plug in, in case of invalid field (e.g vocabulary doesn't exist)
16=\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E40\u0E1B\u0E34\u0E14\u0E43\u0E0A\u0E49\u0E07\u0E32\u0E19\u0E17\u0E23\u0E31\u0E1E\u0E22\u0E32\u0E01\u0E23\u0E44\u0E14\u0E49; \u0E04\u0E48\u0E32\u0E02\u0E2D\u0E07\u0E41\u0E2D\u0E17\u0E17\u0E23\u0E34\u0E1A\u0E34\u0E27\u0E15\u0E4C {0} \u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07
# YMSG: return from runtime plug in, in case of inconsistent fields combination(e.g. vocabulary and output names doesn't match)
17=\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E40\u0E1B\u0E34\u0E14\u0E43\u0E0A\u0E49\u0E07\u0E32\u0E19\u0E17\u0E23\u0E31\u0E1E\u0E22\u0E32\u0E01\u0E23\u0E44\u0E14\u0E49; \u0E01\u0E32\u0E23\u0E23\u0E27\u0E21 {0} \u0E01\u0E31\u0E1A {1} \u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07
# YMSG: return from  runtime plug in, in case of invalid resource id (e.g. package / file name is missing)
23=\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E40\u0E1B\u0E34\u0E14\u0E43\u0E0A\u0E49\u0E07\u0E32\u0E19\u0E17\u0E23\u0E31\u0E1E\u0E22\u0E32\u0E01\u0E23\u0E44\u0E14\u0E49; \u0E44\u0E21\u0E48\u0E21\u0E35\u0E17\u0E23\u0E31\u0E1E\u0E22\u0E32\u0E01\u0E23\u0E2D\u0E22\u0E39\u0E48
# YMSG: return from  runtime plug in, in case of error from REL validation
24=\u0E02\u0E49\u0E2D\u0E1C\u0E34\u0E14\u0E1E\u0E25\u0E32\u0E14\u0E43\u0E19\u0E1F\u0E34\u0E25\u0E14\u0E4C {0}\: {1}
# YMSG: return from  REST service, in case of http request contains non supported method
25=\u0E27\u0E34\u0E18\u0E35\u0E01\u0E32\u0E23\u0E25\u0E49\u0E21\u0E40\u0E2B\u0E25\u0E27; \u0E27\u0E34\u0E18\u0E35\u0E01\u0E32\u0E23 \#{0} \u0E44\u0E21\u0E48\u0E44\u0E14\u0E49\u0E23\u0E31\u0E1A\u0E01\u0E32\u0E23\u0E2A\u0E19\u0E31\u0E1A\u0E2A\u0E19\u0E38\u0E19
# YMSG:  technical error from platform
26=\u0E21\u0E35\u0E02\u0E49\u0E2D\u0E1C\u0E34\u0E14\u0E1E\u0E25\u0E32\u0E14\u0E17\u0E32\u0E07\u0E40\u0E17\u0E04\u0E19\u0E34\u0E04\u0E40\u0E01\u0E34\u0E14\u0E02\u0E36\u0E49\u0E19 - {0}
# YMSG: return from resource activation, in case of a resource does not exist in repository
27=\u0E44\u0E21\u0E48\u0E21\u0E35\u0E17\u0E23\u0E31\u0E1E\u0E22\u0E32\u0E01\u0E23\u0E2D\u0E22\u0E39\u0E48

# 100 - 200 - Authorization

# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
100=\u0E04\u0E38\u0E13\u0E44\u0E21\u0E48\u0E21\u0E35\u0E2A\u0E34\u0E17\u0E18\u0E34\u0E17\u0E33\u0E01\u0E32\u0E23\u0E14\u0E33\u0E40\u0E19\u0E34\u0E19\u0E01\u0E32\u0E23\u0E19\u0E35\u0E49
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
101=\u0E04\u0E38\u0E13\u0E44\u0E21\u0E48\u0E21\u0E35\u0E2A\u0E34\u0E17\u0E18\u0E34\u0E2D\u0E31\u0E1E\u0E40\u0E14\u0E17\u0E01\u0E0E
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
102=\u0E04\u0E38\u0E13\u0E44\u0E21\u0E48\u0E21\u0E35\u0E2A\u0E34\u0E17\u0E18\u0E34\u0E25\u0E1A\u0E01\u0E0E
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
103=\u0E04\u0E38\u0E13\u0E44\u0E21\u0E48\u0E21\u0E35\u0E2A\u0E34\u0E17\u0E18\u0E34\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E01\u0E0E
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
104=\u0E04\u0E38\u0E13\u0E44\u0E21\u0E48\u0E21\u0E35\u0E2A\u0E34\u0E17\u0E18\u0E34\u0E2D\u0E48\u0E32\u0E19\u0E01\u0E0E
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
105=\u0E04\u0E38\u0E13\u0E44\u0E21\u0E48\u0E21\u0E35\u0E2A\u0E34\u0E17\u0E18\u0E34\u0E2D\u0E31\u0E1E\u0E40\u0E14\u0E17\u0E1A\u0E23\u0E34\u0E01\u0E32\u0E23\u0E01\u0E0E
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
106=\u0E04\u0E38\u0E13\u0E44\u0E21\u0E48\u0E21\u0E35\u0E2A\u0E34\u0E17\u0E18\u0E34\u0E25\u0E1A\u0E1A\u0E23\u0E34\u0E01\u0E32\u0E23\u0E01\u0E0E
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
107=\u0E04\u0E38\u0E13\u0E44\u0E21\u0E48\u0E21\u0E35\u0E2A\u0E34\u0E17\u0E18\u0E34\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E1A\u0E23\u0E34\u0E01\u0E32\u0E23\u0E01\u0E0E
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
108=\u0E04\u0E38\u0E13\u0E44\u0E21\u0E48\u0E21\u0E35\u0E2A\u0E34\u0E17\u0E18\u0E34\u0E2D\u0E48\u0E32\u0E19\u0E1A\u0E23\u0E34\u0E01\u0E32\u0E23\u0E01\u0E0E
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
109=\u0E04\u0E38\u0E13\u0E44\u0E21\u0E48\u0E21\u0E35\u0E2A\u0E34\u0E17\u0E18\u0E34\u0E14\u0E33\u0E40\u0E19\u0E34\u0E19\u0E01\u0E32\u0E23\u0E1A\u0E23\u0E34\u0E01\u0E32\u0E23\u0E01\u0E0E
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
110=\u0E04\u0E38\u0E13\u0E44\u0E21\u0E48\u0E21\u0E35\u0E2A\u0E34\u0E17\u0E18\u0E34\u0E2D\u0E31\u0E1E\u0E40\u0E14\u0E17\u0E04\u0E33\u0E28\u0E31\u0E1E\u0E17\u0E4C
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
111=\u0E04\u0E38\u0E13\u0E44\u0E21\u0E48\u0E21\u0E35\u0E2A\u0E34\u0E17\u0E18\u0E34\u0E25\u0E1A\u0E04\u0E33\u0E28\u0E31\u0E1E\u0E17\u0E4C
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
112=\u0E04\u0E38\u0E13\u0E44\u0E21\u0E48\u0E21\u0E35\u0E2A\u0E34\u0E17\u0E18\u0E34\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E04\u0E33\u0E28\u0E31\u0E1E\u0E17\u0E4C
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
113=\u0E04\u0E38\u0E13\u0E44\u0E21\u0E48\u0E21\u0E35\u0E2A\u0E34\u0E17\u0E18\u0E34\u0E2D\u0E48\u0E32\u0E19\u0E04\u0E33\u0E28\u0E31\u0E1E\u0E17\u0E4C
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
114=\u0E04\u0E38\u0E13\u0E44\u0E21\u0E48\u0E21\u0E35\u0E2A\u0E34\u0E17\u0E18\u0E34\u0E2D\u0E31\u0E1E\u0E40\u0E14\u0E17\u0E41\u0E1A\u0E1A\u0E23\u0E48\u0E32\u0E07\u0E01\u0E0E
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
115=\u0E04\u0E38\u0E13\u0E44\u0E21\u0E48\u0E21\u0E35\u0E2A\u0E34\u0E17\u0E18\u0E34\u0E25\u0E1A\u0E41\u0E1A\u0E1A\u0E23\u0E48\u0E32\u0E07\u0E01\u0E0E
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
116=\u0E04\u0E38\u0E13\u0E44\u0E21\u0E48\u0E21\u0E35\u0E2A\u0E34\u0E17\u0E18\u0E34\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E41\u0E1A\u0E1A\u0E23\u0E48\u0E32\u0E07\u0E01\u0E0E
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
117=\u0E04\u0E38\u0E13\u0E44\u0E21\u0E48\u0E21\u0E35\u0E2A\u0E34\u0E17\u0E18\u0E34\u0E2D\u0E48\u0E32\u0E19\u0E41\u0E1A\u0E1A\u0E23\u0E48\u0E32\u0E07\u0E01\u0E0E
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
118=\u0E04\u0E38\u0E13\u0E44\u0E21\u0E48\u0E21\u0E35\u0E2A\u0E34\u0E17\u0E18\u0E34\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E2B\u0E23\u0E37\u0E2D\u0E2D\u0E31\u0E1E\u0E40\u0E14\u0E17\u0E1A\u0E23\u0E34\u0E01\u0E32\u0E23\u0E01\u0E0E
#############################
# API: Validate
#############################
# 1100 - 1199 - REL validation messages

# YMSG: return from REL, the beginning of any REL validation error - in case of a wrong statement 
1100=\u0E40\u0E01\u0E34\u0E14\u0E02\u0E49\u0E2D\u0E1C\u0E34\u0E14\u0E1E\u0E25\u0E32\u0E14\u0E43\u0E19\u0E19\u0E34\u0E1E\u0E08\u0E19\u0E4C;
# YMSG: return from REL parser, in case of a wrong entry (syntax) and maximum 3 option are optional instead 
1101=\u0E40\u0E01\u0E34\u0E14\u0E02\u0E49\u0E2D\u0E1C\u0E34\u0E14\u0E1E\u0E25\u0E32\u0E14\u0E43\u0E19\u0E19\u0E34\u0E1E\u0E08\u0E19\u0E4C; \u0E01\u0E23\u0E38\u0E13\u0E32\u0E1B\u0E49\u0E2D\u0E19 {0} \u0E41\u0E17\u0E19 {1}
# YMSG: return from REL parser, in case of a wrong entry (syntax) and more than 3 option are optional instead  
1102=\u0E40\u0E01\u0E34\u0E14\u0E02\u0E49\u0E2D\u0E1C\u0E34\u0E14\u0E1E\u0E25\u0E32\u0E14\u0E43\u0E19\u0E19\u0E34\u0E1E\u0E08\u0E19\u0E4C; {0} \u0E44\u0E21\u0E48\u0E43\u0E0A\u0E48\u0E23\u0E32\u0E22\u0E01\u0E32\u0E23\u0E17\u0E35\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07
# YMSG: return from REL parser, in case of a wrong input
1103=\u0E40\u0E01\u0E34\u0E14\u0E02\u0E49\u0E2D\u0E1C\u0E34\u0E14\u0E1E\u0E25\u0E32\u0E14\u0E43\u0E19\u0E19\u0E34\u0E1E\u0E08\u0E19\u0E4C; \u0E01\u0E23\u0E38\u0E13\u0E32\u0E22\u0E49\u0E32\u0E22 {0} \u0E2D\u0E2D\u0E01
# YMSG: return from REL model, in case of collection OM when single value in needed
1104=\u0E40\u0E01\u0E34\u0E14\u0E02\u0E49\u0E2D\u0E1C\u0E34\u0E14\u0E1E\u0E25\u0E32\u0E14\u0E43\u0E19\u0E19\u0E34\u0E1E\u0E08\u0E19\u0E4C; {0} \u0E40\u0E1B\u0E47\u0E19\u0E23\u0E32\u0E22\u0E01\u0E32\u0E23\u0E04\u0E48\u0E32 \u0E40\u0E1B\u0E25\u0E35\u0E48\u0E22\u0E19\u0E40\u0E1B\u0E47\u0E19\u0E19\u0E34\u0E1E\u0E08\u0E19\u0E4C\u0E17\u0E35\u0E48\u0E41\u0E2A\u0E14\u0E07\u0E04\u0E48\u0E32\u0E40\u0E14\u0E35\u0E22\u0E27
# YMSG: return from REL model, in case of a wrong input
1105=\u0E40\u0E01\u0E34\u0E14\u0E02\u0E49\u0E2D\u0E1C\u0E34\u0E14\u0E1E\u0E25\u0E32\u0E14\u0E43\u0E19\u0E19\u0E34\u0E1E\u0E08\u0E19\u0E4C; \u0E01\u0E23\u0E38\u0E13\u0E32\u0E1B\u0E49\u0E2D\u0E19\u0E15\u0E31\u0E27\u0E16\u0E39\u0E01\u0E14\u0E33\u0E40\u0E19\u0E34\u0E19\u0E01\u0E32\u0E23\u0E41\u0E17\u0E19 {0}
# YMSG: return from REL parser, in case of an incomplete expression
1106=\u0E19\u0E34\u0E1E\u0E08\u0E19\u0E4C\u0E44\u0E21\u0E48\u0E2A\u0E21\u0E1A\u0E39\u0E23\u0E13\u0E4C;
# YMSG: return from REL lexer, in case of missing token at EOF
1107=\u0E40\u0E01\u0E34\u0E14\u0E02\u0E49\u0E2D\u0E1C\u0E34\u0E14\u0E1E\u0E25\u0E32\u0E14\u0E43\u0E19\u0E19\u0E34\u0E1E\u0E08\u0E19\u0E4C; \u0E01\u0E23\u0E38\u0E13\u0E32\u0E1B\u0E49\u0E2D\u0E19 {0} \u0E17\u0E35\u0E48\u0E2A\u0E48\u0E27\u0E19\u0E17\u0E49\u0E32\u0E22\u0E02\u0E2D\u0E07\u0E19\u0E34\u0E1E\u0E08\u0E19\u0E4C
# YMSG: return from REL lexer, in case of wrong token
1108=\u0E40\u0E01\u0E34\u0E14\u0E02\u0E49\u0E2D\u0E1C\u0E34\u0E14\u0E1E\u0E25\u0E32\u0E14\u0E43\u0E19\u0E19\u0E34\u0E1E\u0E08\u0E19\u0E4C; \u0E01\u0E23\u0E38\u0E13\u0E32\u0E1B\u0E49\u0E2D\u0E19 {0} \u0E41\u0E17\u0E19 '{'1}
# YMSG: return from REL entity, in case of missing current
1109=\u0E40\u0E01\u0E34\u0E14\u0E02\u0E49\u0E2D\u0E1C\u0E34\u0E14\u0E1E\u0E25\u0E32\u0E14\u0E43\u0E19\u0E19\u0E34\u0E1E\u0E08\u0E19\u0E4C; \u0E44\u0E21\u0E48\u0E1E\u0E1A 'current' \u0E43\u0E19\u0E2A\u0E48\u0E27\u0E19\u0E04\u0E33\u0E2A\u0E31\u0E48\u0E07 'WHERE'
# YMSG: return from REL entity, in case of redundant 'current'
1110=\u0E40\u0E01\u0E34\u0E14\u0E02\u0E49\u0E2D\u0E1C\u0E34\u0E14\u0E1E\u0E25\u0E32\u0E14\u0E43\u0E19\u0E19\u0E34\u0E1E\u0E08\u0E19\u0E4C; 'current' \u0E0B\u0E49\u0E33\u0E0B\u0E49\u0E2D\u0E19; \u0E22\u0E49\u0E32\u0E22 'current' \u0E2D\u0E2D\u0E01\u0E2B\u0E19\u0E36\u0E48\u0E07\u0E23\u0E32\u0E22\u0E01\u0E32\u0E23
# YMSG: return from REL vocabulary utils, in case of invalid root object
1111=\u0E2D\u0E2D\u0E1A\u0E40\u0E08\u0E04\u0E23\u0E39\u0E17\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07
# YMSG: return from REL vocabulary utils, in case of invalid association
1112=\u0E04\u0E27\u0E32\u0E21\u0E2A\u0E31\u0E21\u0E1E\u0E31\u0E19\u0E18\u0E4C\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07
# YMSG: return from REL vocabulary utils, in case of invalid association or attribute
1113=\u0E04\u0E27\u0E32\u0E21\u0E2A\u0E31\u0E21\u0E1E\u0E31\u0E19\u0E18\u0E4C\u0E2B\u0E23\u0E37\u0E2D\u0E41\u0E2D\u0E17\u0E17\u0E23\u0E34\u0E1A\u0E34\u0E27\u0E15\u0E4C\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07
# YMSG: return from REL vocabulary utils, in case of root is simple attribute
1114=\u0E23\u0E39\u0E17\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E40\u0E1B\u0E47\u0E19\u0E41\u0E2D\u0E17\u0E17\u0E23\u0E34\u0E1A\u0E34\u0E27\u0E15\u0E4C\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E07\u0E48\u0E32\u0E22
# YMSG: return from REL vocabulary utils, in case of attribute not found
1115=\u0E1E\u0E32\u0E18\u0E44\u0E21\u0E48\u0E2A\u0E21\u0E1A\u0E39\u0E23\u0E13\u0E4C \u0E44\u0E21\u0E48\u0E1E\u0E1A\u0E41\u0E2D\u0E17\u0E17\u0E23\u0E34\u0E1A\u0E34\u0E27\u0E15\u0E4C
# YMSG: return from REL entity, in case of using 'current' outside of 'where'
1116=\u0E40\u0E01\u0E34\u0E14\u0E02\u0E49\u0E2D\u0E1C\u0E34\u0E14\u0E1E\u0E25\u0E32\u0E14\u0E43\u0E19\u0E19\u0E34\u0E1E\u0E08\u0E19\u0E4C; \u0E04\u0E33\u0E2A\u0E33\u0E04\u0E31\u0E0D 'current' \u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E43\u0E0A\u0E49\u0E44\u0E14\u0E49\u0E20\u0E32\u0E22\u0E43\u0E19\u0E2A\u0E48\u0E27\u0E19\u0E04\u0E33\u0E2A\u0E31\u0E48\u0E07 'WHERE' \u0E40\u0E17\u0E48\u0E32\u0E19\u0E31\u0E49\u0E19
# YMSG: return from REL entity, in case of using 'current' incorrectly with arithmetic
1117=\u0E40\u0E01\u0E34\u0E14\u0E02\u0E49\u0E2D\u0E1C\u0E34\u0E14\u0E1E\u0E25\u0E32\u0E14\u0E43\u0E19\u0E19\u0E34\u0E1E\u0E08\u0E19\u0E4C; \u0E04\u0E33\u0E2A\u0E33\u0E04\u0E31\u0E0D 'current' \u0E15\u0E49\u0E2D\u0E07\u0E16\u0E39\u0E01\u0E19\u0E33\u0E44\u0E1B\u0E43\u0E0A\u0E49\u0E01\u0E31\u0E1A\u0E15\u0E31\u0E27\u0E16\u0E39\u0E01\u0E14\u0E33\u0E40\u0E19\u0E34\u0E19\u0E01\u0E32\u0E23\u0E17\u0E31\u0E49\u0E07\u0E2B\u0E21\u0E14\u0E43\u0E19\u0E14\u0E49\u0E32\u0E19\u0E2B\u0E19\u0E36\u0E48\u0E07\u0E02\u0E2D\u0E07\u0E15\u0E31\u0E27\u0E14\u0E33\u0E40\u0E19\u0E34\u0E19\u0E01\u0E32\u0E23\u0E40\u0E1B\u0E23\u0E35\u0E22\u0E1A\u0E40\u0E17\u0E35\u0E22\u0E1A\u0E43\u0E19\u0E2A\u0E48\u0E27\u0E19\u0E04\u0E33\u0E2A\u0E31\u0E48\u0E07 'WHERE' 
# YMSG: return from REL parser utils, in case of using value that doen't exist in closed value list
1118=\u0E40\u0E01\u0E34\u0E14\u0E02\u0E49\u0E2D\u0E1C\u0E34\u0E14\u0E1E\u0E25\u0E32\u0E14\u0E43\u0E19\u0E19\u0E34\u0E1E\u0E08\u0E19\u0E4C '{0}' \u0E44\u0E21\u0E48\u0E43\u0E0A\u0E48\u0E04\u0E48\u0E32\u0E17\u0E35\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07\u0E08\u0E32\u0E01\u0E23\u0E32\u0E22\u0E01\u0E32\u0E23\u0E04\u0E48\u0E32 '{1}'
# YMSG: return from REL parser utils, in case of using value that doen't exist in closed value list
1119=\u0E40\u0E01\u0E34\u0E14\u0E02\u0E49\u0E2D\u0E1C\u0E34\u0E14\u0E1E\u0E25\u0E32\u0E14\u0E43\u0E19\u0E19\u0E34\u0E1E\u0E08\u0E19\u0E4C  \u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E43\u0E0A\u0E49\u0E15\u0E31\u0E27\u0E14\u0E33\u0E40\u0E19\u0E34\u0E19\u0E01\u0E32\u0E23 '{0}' \u0E01\u0E31\u0E1A\u0E41\u0E2D\u0E17\u0E17\u0E23\u0E34\u0E1A\u0E34\u0E27\u0E15\u0E4C\u0E02\u0E2D\u0E07\u0E23\u0E32\u0E22\u0E01\u0E32\u0E23\u0E04\u0E48\u0E32 ('{1}')
# YMSG: return from REL parser utils, in case of using value that doen't exist in closed value list
1120=\u0E40\u0E01\u0E34\u0E14\u0E02\u0E49\u0E2D\u0E1C\u0E34\u0E14\u0E1E\u0E25\u0E32\u0E14\u0E43\u0E19\u0E19\u0E34\u0E1E\u0E08\u0E19\u0E4C  \u0E04\u0E33\u0E2A\u0E33\u0E04\u0E31\u0E0D 'all' \u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E15\u0E32\u0E21\u0E2B\u0E25\u0E31\u0E07\u0E15\u0E31\u0E27\u0E16\u0E39\u0E01\u0E14\u0E33\u0E40\u0E19\u0E34\u0E19\u0E01\u0E32\u0E23\u0E17\u0E35\u0E48\u0E21\u0E35\u0E04\u0E33\u0E2A\u0E33\u0E04\u0E31\u0E0D 'current'
# YMSG: return from REL parser utils, in case of using value that doen't exist in closed value list
1121=\u0E40\u0E01\u0E34\u0E14\u0E02\u0E49\u0E2D\u0E1C\u0E34\u0E14\u0E1E\u0E25\u0E32\u0E14\u0E43\u0E19\u0E19\u0E34\u0E1E\u0E08\u0E19\u0E4C  \u0E04\u0E33\u0E2A\u0E33\u0E04\u0E31\u0E0D 'all' \u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E43\u0E0A\u0E49\u0E44\u0E14\u0E49\u0E21\u0E32\u0E01\u0E01\u0E27\u0E48\u0E32\u0E2B\u0E19\u0E36\u0E48\u0E07\u0E04\u0E23\u0E31\u0E49\u0E07\u0E43\u0E19\u0E04\u0E33\u0E2A\u0E31\u0E48\u0E07\u0E40\u0E14\u0E35\u0E22\u0E27\u0E01\u0E31\u0E19


# 1200 - 1999 - validation messages

#############################
# API : resource CRUD
#############################
# 2100 - 2299 - vocabulary messages

# YMSG: return from vocabulary runtime plug in, in case of error in expression
2100=\u0E43\u0E19 '{0}'- \u0E40\u0E01\u0E34\u0E14\u0E02\u0E49\u0E2D\u0E1C\u0E34\u0E14\u0E1E\u0E25\u0E32\u0E14\u0E43\u0E19\u0E01\u0E32\u0E23\u0E41\u0E22\u0E01\u0E27\u0E34\u0E40\u0E04\u0E23\u0E32\u0E30\u0E2B\u0E4C\u0E19\u0E34\u0E1E\u0E08\u0E19\u0E4C\: '{1}', '{2}'
# YMSG: return from vocabulary runtime plug in, in case of error in rule
2101=\u0E43\u0E19 '{0}' - \u0E40\u0E01\u0E34\u0E14\u0E02\u0E49\u0E2D\u0E1C\u0E34\u0E14\u0E1E\u0E25\u0E32\u0E14\u0E43\u0E19\u0E01\u0E0E\: '{1}', '{2}'
# YMSG: return from vocabulary runtime plug in, in case the parameter type already exists
2102=\u0E43\u0E19 '{0}' \: '{1}', \u0E0A\u0E37\u0E48\u0E2D\: '{2}' \u0E21\u0E35\u0E2D\u0E22\u0E39\u0E48\u0E41\u0E25\u0E49\u0E27
# YMSG: return from vocabulary runtime plug in, in case parameter name isn't valid
2103=\u0E43\u0E19 '{0}' \: '{1}', \u0E0A\u0E37\u0E48\u0E2D\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07\: '{2}'
# YMSG: return from vocabulary runtime plug in, in case one of action/output names aren't valid
2104=\u0E43\u0E19 '{0}', \u0E0A\u0E37\u0E48\u0E2D\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07\: '{1}'
# YMSG: return from vocabulary runtime plug in, in case name already exists
2105=\u0E0A\u0E37\u0E48\u0E2D '{0}' \u0E16\u0E39\u0E01\u0E01\u0E33\u0E2B\u0E19\u0E14\u0E21\u0E32\u0E01\u0E01\u0E27\u0E48\u0E32\u0E2B\u0E19\u0E36\u0E48\u0E07\u0E04\u0E23\u0E31\u0E49\u0E07\u0E43\u0E19 '{1}'
# YMSG : return from vocabulary runtime plug in, in case the output has no parameters
2106=\u0E1E\u0E32\u0E23\u0E32\u0E21\u0E34\u0E40\u0E15\u0E2D\u0E23\u0E4C\u0E43\u0E19\u0E40\u0E2D\u0E32\u0E17\u0E4C\u0E1E\u0E38\u0E17\u0E02\u0E32\u0E14\u0E2B\u0E32\u0E22\u0E44\u0E1B
# YMSG: return from vocabulary runtime plug in, in case one of the attributes has an invalid name
2107=\u0E0A\u0E37\u0E48\u0E2D\u0E41\u0E2D\u0E17\u0E17\u0E23\u0E34\u0E1A\u0E34\u0E27\u0E15\u0E4C '{0}' \u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07
# YMSG: return from vocabulary runtime plug in, in case object name of declare more than once
2108={0}\: '{'1} \u0E21\u0E35\u0E2D\u0E22\u0E39\u0E48\u0E41\u0E25\u0E49\u0E27 
# YMSG: return from vocabulary runtime plug in, in case attribute name of declare more than once
2109=\u0E21\u0E35\u0E41\u0E2D\u0E17\u0E17\u0E23\u0E34\u0E1A\u0E34\u0E27\u0E15\u0E4C\u0E2D\u0E22\u0E39\u0E48\u0E41\u0E25\u0E49\u0E27\: \u0E2D\u0E2D\u0E1A\u0E40\u0E08\u0E04\= '{0}' \u0E41\u0E2D\u0E17\u0E17\u0E23\u0E34\u0E1A\u0E34\u0E27\u0E15\u0E4C\= '{1}'
# YMSG: return from vocabulary runtime plug in, in case attribute name of declare more than once
2110=\u0E21\u0E35\u0E04\u0E27\u0E32\u0E21\u0E2A\u0E31\u0E21\u0E1E\u0E31\u0E19\u0E18\u0E4C\u0E2D\u0E22\u0E39\u0E48\u0E41\u0E25\u0E49\u0E27\: \u0E2D\u0E2D\u0E1A\u0E40\u0E08\u0E04\= '{0}' \u0E04\u0E27\u0E32\u0E21\u0E2A\u0E31\u0E21\u0E1E\u0E31\u0E19\u0E18\u0E4C\= '{1}'
# YMSG : return from vocabulary runtime plug in, in case the source table isn't exists
2111=\u0E15\u0E32\u0E23\u0E32\u0E07\u0E41\u0E2B\u0E25\u0E48\u0E07\u0E17\u0E35\u0E48\u0E21\u0E32 '{0}' \u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07
# YMSG : return from vocabulary runtime plug in, in case of one the association is invalid
2112=\u0E04\u0E27\u0E32\u0E21\u0E2A\u0E31\u0E21\u0E1E\u0E31\u0E19\u0E18\u0E4C\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07\u0E43\u0E19\u0E2D\u0E2D\u0E1A\u0E40\u0E08\u0E04\='{0}' + \u0E04\u0E27\u0E32\u0E21\u0E2A\u0E31\u0E21\u0E1E\u0E31\u0E19\u0E18\u0E4C\='{1}'
# YMSG : return from vocabulary runtime plug in, in case of one the association's attributes are invalid
2113=\u0E41\u0E2D\u0E17\u0E17\u0E23\u0E34\u0E1A\u0E34\u0E27\u0E15\u0E4C\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07\u0E2A\u0E33\u0E2B\u0E23\u0E31\u0E1A\u0E04\u0E27\u0E32\u0E21\u0E2A\u0E31\u0E21\u0E1E\u0E31\u0E19\u0E18\u0E4C\=  '{0}' \u0E41\u0E2D\u0E17\u0E17\u0E23\u0E34\u0E1A\u0E34\u0E27\u0E15\u0E4C\= '{1}'
# YMSG: return from rule utils, in case of invalid vocabulary assignment
2114=\u0E04\u0E33\u0E28\u0E31\u0E1E\u0E17\u0E4C '{0}' \u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07
# YMSG: return from vocabulary runtime plug in, in case invalid alias content
2115=\u0E40\u0E19\u0E37\u0E49\u0E2D\u0E2B\u0E32\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07\u0E43\u0E19\u0E0A\u0E37\u0E48\u0E2D\u0E41\u0E1D\u0E07 '{0}' \u0E40\u0E2B\u0E15\u0E38\u0E1C\u0E25\: '{1}'
# YMSG: return from vocabulary runtime plug in, in case invalid alias name
2116=\u0E0A\u0E37\u0E48\u0E2D\u0E41\u0E1D\u0E07 '{0}' \u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07 \u0E0A\u0E37\u0E48\u0E2D\u0E41\u0E1D\u0E07\u0E15\u0E49\u0E2D\u0E07\u0E1B\u0E23\u0E30\u0E01\u0E2D\u0E1A\u0E14\u0E49\u0E27\u0E22\u0E2D\u0E31\u0E01\u0E02\u0E23\u0E30\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23\u0E1C\u0E2A\u0E21\u0E15\u0E31\u0E27\u0E40\u0E25\u0E02\u0E41\u0E25\u0E30\u0E40\u0E04\u0E23\u0E37\u0E48\u0E2D\u0E07\u0E2B\u0E21\u0E32\u0E22\u0E02\u0E35\u0E14\u0E25\u0E48\u0E32\u0E07\u0E40\u0E17\u0E48\u0E32\u0E19\u0E31\u0E49\u0E19 \u0E41\u0E25\u0E30\u0E15\u0E49\u0E2D\u0E07\u0E02\u0E36\u0E49\u0E19\u0E15\u0E49\u0E19\u0E14\u0E49\u0E27\u0E22\u0E2D\u0E31\u0E01\u0E02\u0E23\u0E30\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23 \u0E23\u0E27\u0E21\u0E17\u0E31\u0E49\u0E07\u0E15\u0E49\u0E2D\u0E07\u0E44\u0E21\u0E48\u0E43\u0E0A\u0E48\u0E04\u0E33\u0E2A\u0E07\u0E27\u0E19\u0E08\u0E32\u0E01\u0E20\u0E32\u0E29\u0E32\u0E19\u0E34\u0E1E\u0E08\u0E19\u0E4C\u0E02\u0E2D\u0E07\u0E01\u0E0E
# YMSG: return from vocabulary runtime plug in, in case alias name collide with an data object name
2117=\u0E0A\u0E37\u0E48\u0E2D\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07\u0E2A\u0E33\u0E2B\u0E23\u0E31\u0E1A\u0E0A\u0E37\u0E48\u0E2D\u0E41\u0E1D\u0E07 '{0}' \u0E21\u0E35\u0E0A\u0E37\u0E48\u0E2D\u0E41\u0E1D\u0E07\u0E2D\u0E22\u0E39\u0E48\u0E41\u0E25\u0E49\u0E27\u0E43\u0E19\u0E23\u0E39\u0E1B\u0E02\u0E2D\u0E07\u0E0A\u0E37\u0E48\u0E2D\u0E2D\u0E2D\u0E1A\u0E40\u0E08\u0E04\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25
# YMSG: return from vocabulary runtime plug in, in case o alias dependency to itself
2118=\u0E40\u0E19\u0E37\u0E49\u0E2D\u0E2B\u0E32\u0E43\u0E19\u0E0A\u0E37\u0E48\u0E2D\u0E41\u0E1D\u0E07 '{0}' \u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07 \u0E01\u0E32\u0E23\u0E41\u0E1B\u0E25\u0E07\u0E0A\u0E37\u0E48\u0E2D\u0E41\u0E1D\u0E07\u0E08\u0E30\u0E17\u0E33\u0E43\u0E2B\u0E49\u0E40\u0E01\u0E34\u0E14\u0E25\u0E39\u0E1B\u0E41\u0E1A\u0E1A\u0E44\u0E21\u0E48\u0E2A\u0E34\u0E49\u0E19\u0E2A\u0E38\u0E14
# YMSG: return from vocabulary runtime plug in, when name already exists in another vocabulary in the DB. Example: In 'dataObjects', name 'player' already exists in 'aliases' vocabulary 'voca2'
2120=\u0E43\u0E19 '{0}', \u0E0A\u0E37\u0E48\u0E2D '{1}' \u0E21\u0E35\u0E2D\u0E22\u0E39\u0E48\u0E41\u0E25\u0E49\u0E27\u0E43\u0E19 '{2}' \u0E43\u0E19\u0E04\u0E33\u0E28\u0E31\u0E1E\u0E17\u0E4C '{3}'
# YMSG: return from vocabulary runtime plug in, scope name can't be Public or Private
2121=\u0E0A\u0E37\u0E48\u0E2D\u0E02\u0E2D\u0E1A\u0E40\u0E02\u0E15\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07 \u0E0A\u0E37\u0E48\u0E2D\u0E02\u0E2D\u0E1A\u0E40\u0E02\u0E15\u0E15\u0E49\u0E2D\u0E07\u0E44\u0E21\u0E48\u0E40\u0E1B\u0E47\u0E19 '\u0E2A\u0E32\u0E18\u0E32\u0E23\u0E13\u0E30' \u0E2B\u0E23\u0E37\u0E2D '\u0E2A\u0E48\u0E27\u0E19\u0E15\u0E31\u0E27'
# YMSG: return from vocabulary runtime plug in, embedded vocabulary can't be with scope Global
2122=\u0E1B\u0E23\u0E30\u0E40\u0E20\u0E17\u0E02\u0E2D\u0E1A\u0E40\u0E02\u0E15\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07 \u0E04\u0E33\u0E28\u0E31\u0E1E\u0E17\u0E4C\u0E17\u0E35\u0E48\u0E1D\u0E31\u0E07\u0E15\u0E31\u0E27\u0E15\u0E49\u0E2D\u0E07\u0E44\u0E21\u0E48\u0E40\u0E1B\u0E47\u0E19\u0E1B\u0E23\u0E30\u0E40\u0E20\u0E17 '\u0E2A\u0E48\u0E27\u0E19\u0E01\u0E25\u0E32\u0E07'
# YMSG: Object does not exist
2125=\u0E44\u0E21\u0E48\u0E21\u0E35\u0E2D\u0E2D\u0E1A\u0E40\u0E08\u0E04 '{0}'
# YMSG: return from vocabulary runtime plug in, in case of a wrong data object name 
2126=\u0E0A\u0E37\u0E48\u0E2D\u0E2A\u0E33\u0E2B\u0E23\u0E31\u0E1A dataObject '{0}' \u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07 \u0E0A\u0E37\u0E48\u0E2D dataObject \u0E15\u0E49\u0E2D\u0E07\u0E44\u0E21\u0E48\u0E40\u0E1B\u0E47\u0E19\u0E0A\u0E37\u0E48\u0E2D\u0E41\u0E1A\u0E1A\u0E23\u0E48\u0E32\u0E07\u0E01\u0E0E\u0E17\u0E35\u0E48\u0E21\u0E35\u0E2D\u0E22\u0E39\u0E48\u0E2B\u0E23\u0E37\u0E2D\u0E40\u0E1B\u0E47\u0E19\u0E0A\u0E37\u0E48\u0E2D\u0E43\u0E14\u0E0A\u0E37\u0E48\u0E2D\u0E2B\u0E19\u0E36\u0E48\u0E07\u0E02\u0E2D\u0E07\u0E04\u0E33\u0E2A\u0E07\u0E27\u0E19\u0E15\u0E48\u0E2D\u0E44\u0E1B\u0E19\u0E35\u0E49 (\u0E15\u0E23\u0E07\u0E15\u0E32\u0E21\u0E15\u0E31\u0E27\u0E1E\u0E34\u0E21\u0E1E\u0E4C\u0E43\u0E2B\u0E0D\u0E48-\u0E40\u0E25\u0E47\u0E01\u0E40\u0E17\u0E48\u0E32\u0E19\u0E31\u0E49\u0E19)\: \u0E01\u0E0E, \u0E41\u0E1A\u0E1A\u0E23\u0E48\u0E32\u0E07\u0E01\u0E0E
# YMSG: return from vocabulary runtime plug in, in case of a wrong alias name
2127=\u0E0A\u0E37\u0E48\u0E2D\u0E41\u0E1D\u0E07 '{0}' \u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07 \u0E0A\u0E37\u0E48\u0E2D\u0E41\u0E1D\u0E07\u0E15\u0E49\u0E2D\u0E07\u0E44\u0E21\u0E48\u0E40\u0E1B\u0E47\u0E19\u0E0A\u0E37\u0E48\u0E2D\u0E41\u0E1A\u0E1A\u0E23\u0E48\u0E32\u0E07\u0E01\u0E0E\u0E17\u0E35\u0E48\u0E21\u0E35\u0E2D\u0E22\u0E39\u0E48\u0E2B\u0E23\u0E37\u0E2D\u0E40\u0E1B\u0E47\u0E19\u0E0A\u0E37\u0E48\u0E2D\u0E43\u0E14\u0E0A\u0E37\u0E48\u0E2D\u0E2B\u0E19\u0E36\u0E48\u0E07\u0E02\u0E2D\u0E07\u0E04\u0E33\u0E2A\u0E07\u0E27\u0E19\u0E15\u0E48\u0E2D\u0E44\u0E1B\u0E19\u0E35\u0E49 (\u0E15\u0E23\u0E07\u0E15\u0E32\u0E21\u0E15\u0E31\u0E27\u0E1E\u0E34\u0E21\u0E1E\u0E4C\u0E43\u0E2B\u0E0D\u0E48-\u0E40\u0E25\u0E47\u0E01\u0E40\u0E17\u0E48\u0E32\u0E19\u0E31\u0E49\u0E19)\: \u0E01\u0E0E, \u0E41\u0E1A\u0E1A\u0E23\u0E48\u0E32\u0E07\u0E01\u0E0E
# YMSG: return from vocabulary runtime plug in, in case invalid data object name
2128=\u0E0A\u0E37\u0E48\u0E2D\u0E2A\u0E33\u0E2B\u0E23\u0E31\u0E1A dataObject '{0}' \u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07 \u0E0A\u0E37\u0E48\u0E2D dataObject \u0E15\u0E49\u0E2D\u0E07\u0E1B\u0E23\u0E30\u0E01\u0E2D\u0E1A\u0E14\u0E49\u0E27\u0E22\u0E2D\u0E31\u0E01\u0E02\u0E23\u0E30\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23\u0E1C\u0E2A\u0E21\u0E15\u0E31\u0E27\u0E40\u0E25\u0E02\u0E41\u0E25\u0E30\u0E40\u0E04\u0E23\u0E37\u0E48\u0E2D\u0E07\u0E2B\u0E21\u0E32\u0E22\u0E02\u0E35\u0E14\u0E25\u0E48\u0E32\u0E07\u0E40\u0E17\u0E48\u0E32\u0E19\u0E31\u0E49\u0E19 \u0E41\u0E25\u0E30\u0E15\u0E49\u0E2D\u0E07\u0E02\u0E36\u0E49\u0E19\u0E15\u0E49\u0E19\u0E14\u0E49\u0E27\u0E22\u0E2D\u0E31\u0E01\u0E02\u0E23\u0E30\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23 \u0E23\u0E27\u0E21\u0E17\u0E31\u0E49\u0E07\u0E15\u0E49\u0E2D\u0E07\u0E44\u0E21\u0E48\u0E43\u0E0A\u0E48\u0E04\u0E33\u0E2A\u0E07\u0E27\u0E19\u0E08\u0E32\u0E01\u0E20\u0E32\u0E29\u0E32\u0E19\u0E34\u0E1E\u0E08\u0E19\u0E4C\u0E02\u0E2D\u0E07\u0E01\u0E0E
# YMSG: return from vocabulary runtime plug in, in case of duplicate alias names
2129=\u0E0A\u0E37\u0E48\u0E2D\u0E41\u0E1D\u0E07 '{0}' \u0E21\u0E35\u0E2D\u0E22\u0E39\u0E48\u0E41\u0E25\u0E49\u0E27\u0E43\u0E19\u0E23\u0E39\u0E1B\u0E0A\u0E37\u0E48\u0E2D\u0E41\u0E1D\u0E07
# YMSG: return from vocabulary runtime plug in, in case alias content is empty
2130=\u0E1E\u0E32\u0E23\u0E32\u0E21\u0E34\u0E40\u0E15\u0E2D\u0E23\u0E4C\u0E40\u0E19\u0E37\u0E49\u0E2D\u0E2B\u0E32\u0E43\u0E19\u0E0A\u0E37\u0E48\u0E2D\u0E41\u0E1D\u0E07 '{0}' \u0E27\u0E48\u0E32\u0E07\u0E40\u0E1B\u0E25\u0E48\u0E32
# YMSG: return from vocabulary runtime plug in, in case alias name exists as as an attribute name
2131=\u0E0A\u0E37\u0E48\u0E2D\u0E41\u0E1D\u0E07 '{0}' \u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07 \u0E0A\u0E37\u0E48\u0E2D\u0E41\u0E1D\u0E07\u0E21\u0E35\u0E2D\u0E22\u0E39\u0E48\u0E41\u0E25\u0E49\u0E27\u0E43\u0E19\u0E23\u0E39\u0E1B\u0E02\u0E2D\u0E07\u0E0A\u0E37\u0E48\u0E2D\u0E41\u0E2D\u0E17\u0E17\u0E23\u0E34\u0E1A\u0E34\u0E27\u0E15\u0E4C
# YMSG: return from vocabulary runtime plug in, in case alias name exists in other vocabulary with the same scope
2132=\u0E0A\u0E37\u0E48\u0E2D\u0E41\u0E1D\u0E07 '{0}' \u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07 \u0E21\u0E35\u0E0A\u0E37\u0E48\u0E2D\u0E19\u0E35\u0E49\u0E2D\u0E22\u0E39\u0E48\u0E41\u0E25\u0E49\u0E27\u0E43\u0E19\u0E23\u0E39\u0E1B\u0E02\u0E2D\u0E07\u0E41\u0E2D\u0E17\u0E17\u0E23\u0E34\u0E1A\u0E34\u0E27\u0E15\u0E4C\u0E2A\u0E33\u0E2B\u0E23\u0E31\u0E1A\u0E2D\u0E2D\u0E1A\u0E40\u0E08\u0E04 '{1}' \u0E43\u0E19\u0E04\u0E33\u0E28\u0E31\u0E1E\u0E17\u0E4C '{2}'
# YMSG: return from vocabulary runtime plug in, in case alias name exists in objects rule or ruleTemplate
2133=\u0E0A\u0E37\u0E48\u0E2D\u0E41\u0E1D\u0E07 '{0}' \u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07 \u0E21\u0E35\u0E0A\u0E37\u0E48\u0E2D\u0E19\u0E35\u0E49\u0E2D\u0E22\u0E39\u0E48\u0E41\u0E25\u0E49\u0E27\u0E43\u0E19\u0E2D\u0E2D\u0E1A\u0E40\u0E08\u0E04 '{1}'
# YMSG: return from vocabulary runtime plug in, in case attribute name already exists as alias in other vocabulary
2134=\u0E0A\u0E37\u0E48\u0E2D\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07\u0E2A\u0E33\u0E2B\u0E23\u0E31\u0E1A\u0E41\u0E2D\u0E17\u0E17\u0E23\u0E34\u0E1A\u0E34\u0E27\u0E15\u0E4C '{0}' \u0E21\u0E35\u0E0A\u0E37\u0E48\u0E2D\u0E19\u0E35\u0E49\u0E2D\u0E22\u0E39\u0E48\u0E41\u0E25\u0E49\u0E27\u0E43\u0E19\u0E23\u0E39\u0E1B\u0E02\u0E2D\u0E07\u0E0A\u0E37\u0E48\u0E2D\u0E41\u0E1D\u0E07\u0E43\u0E19\u0E04\u0E33\u0E28\u0E31\u0E1E\u0E17\u0E4C '{1}'
# YMSG: return from vocabulary runtime plug in, in case vocabulary declares it depends on a vocabulary which doesn't exists
2135=\u0E04\u0E33\u0E28\u0E31\u0E1E\u0E17\u0E4C\u0E23\u0E30\u0E1A\u0E38\u0E04\u0E27\u0E32\u0E21\u0E2A\u0E31\u0E21\u0E1E\u0E31\u0E19\u0E18\u0E4C\u0E01\u0E31\u0E1A\u0E04\u0E33\u0E28\u0E31\u0E1E\u0E17\u0E4C '{0}' \u0E0B\u0E36\u0E48\u0E07\u0E44\u0E21\u0E48\u0E21\u0E35\u0E2D\u0E22\u0E39\u0E48
# YMSG: return from vocabulary runtime plug in, in case implementor declare global vocabulary with dependencies
2136=\u0E04\u0E33\u0E28\u0E31\u0E1E\u0E17\u0E4C\u0E2A\u0E48\u0E27\u0E19\u0E01\u0E25\u0E32\u0E07\u0E15\u0E49\u0E2D\u0E07\u0E44\u0E21\u0E48\u0E21\u0E35\u0E04\u0E27\u0E32\u0E21\u0E2A\u0E31\u0E21\u0E1E\u0E31\u0E19\u0E18\u0E4C\u0E01\u0E31\u0E1A\u0E04\u0E33\u0E28\u0E31\u0E1E\u0E17\u0E4C\u0E2D\u0E37\u0E48\u0E19\u0E46
# YMSG: return from vocabulary runtime plug in, in case, in the same data object, there is association and attribute with the same name
2137=\u0E43\u0E19\u0E2D\u0E2D\u0E1A\u0E40\u0E08\u0E04\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25 '{0}' \u0E0A\u0E37\u0E48\u0E2D '{1}' \u0E16\u0E39\u0E01\u0E43\u0E0A\u0E49\u0E2A\u0E33\u0E2B\u0E23\u0E31\u0E1A\u0E04\u0E27\u0E32\u0E21\u0E2A\u0E31\u0E21\u0E1E\u0E31\u0E19\u0E18\u0E4C\u0E41\u0E25\u0E30\u0E41\u0E2D\u0E17\u0E17\u0E23\u0E34\u0E1A\u0E34\u0E27\u0E15\u0E4C \u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E43\u0E0A\u0E49\u0E0A\u0E37\u0E48\u0E2D\u0E40\u0E14\u0E35\u0E22\u0E27\u0E01\u0E31\u0E19\u0E2A\u0E33\u0E2B\u0E23\u0E31\u0E1A\u0E17\u0E31\u0E49\u0E07\u0E2A\u0E2D\u0E07\u0E04\u0E38\u0E13\u0E2A\u0E21\u0E1A\u0E31\u0E15\u0E34
# YMSG: return from vocabulary runtime plug in, in case invalid alias name
2138=\u0E0A\u0E37\u0E48\u0E2D\u0E02\u0E2D\u0E07\u0E23\u0E32\u0E22\u0E01\u0E32\u0E23\u0E04\u0E48\u0E32 '{0}' \u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07 \u0E0A\u0E37\u0E48\u0E2D\u0E02\u0E2D\u0E07\u0E23\u0E32\u0E22\u0E01\u0E32\u0E23\u0E04\u0E48\u0E32\u0E15\u0E49\u0E2D\u0E07\u0E1B\u0E23\u0E30\u0E01\u0E2D\u0E1A\u0E14\u0E49\u0E27\u0E22\u0E2D\u0E31\u0E01\u0E02\u0E23\u0E30\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23\u0E1C\u0E2A\u0E21\u0E15\u0E31\u0E27\u0E40\u0E25\u0E02\u0E41\u0E25\u0E30\u0E40\u0E04\u0E23\u0E37\u0E48\u0E2D\u0E07\u0E2B\u0E21\u0E32\u0E22\u0E02\u0E35\u0E14\u0E25\u0E48\u0E32\u0E07\u0E40\u0E17\u0E48\u0E32\u0E19\u0E31\u0E49\u0E19 \u0E41\u0E25\u0E30\u0E15\u0E49\u0E2D\u0E07\u0E02\u0E36\u0E49\u0E19\u0E15\u0E49\u0E19\u0E14\u0E49\u0E27\u0E22\u0E2D\u0E31\u0E01\u0E02\u0E23\u0E30\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23 \u0E23\u0E27\u0E21\u0E17\u0E31\u0E49\u0E07\u0E15\u0E49\u0E2D\u0E07\u0E44\u0E21\u0E48\u0E43\u0E0A\u0E48\u0E04\u0E33\u0E2A\u0E07\u0E27\u0E19\u0E08\u0E32\u0E01\u0E20\u0E32\u0E29\u0E32\u0E19\u0E34\u0E1E\u0E08\u0E19\u0E4C\u0E02\u0E2D\u0E07\u0E01\u0E0E
# YMSG: return from vocabulary runtime plug in, in case alias content is empty
2139=\u0E40\u0E19\u0E37\u0E49\u0E2D\u0E2B\u0E32\u0E02\u0E2D\u0E07\u0E23\u0E32\u0E22\u0E01\u0E32\u0E23\u0E04\u0E48\u0E32 '{0}' \u0E27\u0E48\u0E32\u0E07\u0E40\u0E1B\u0E25\u0E48\u0E32
# YMSG: return from vocabulary runtime plug in, in case alias content is empty
2140=\u0E44\u0E21\u0E48\u0E21\u0E35\u0E23\u0E32\u0E22\u0E01\u0E32\u0E23\u0E04\u0E48\u0E32 '{0}' \u0E17\u0E35\u0E48\u0E01\u0E33\u0E2B\u0E19\u0E14\u0E43\u0E19 '{1}' \u0E43\u0E19\u0E2D\u0E2D\u0E1A\u0E40\u0E08\u0E04\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25 '{2}'
# YMSG: return from vocabulary runtime plug in, in case parameter size isn't valid
2141=\u0E43\u0E19 '{'0} \u0E02\u0E19\u0E32\u0E14 ({1}) \u0E02\u0E2D\u0E07\u0E1E\u0E32\u0E23\u0E32\u0E21\u0E34\u0E40\u0E15\u0E2D\u0E23\u0E4C '{'2} \u0E43\u0E19 '{'3} \u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07\u0E2A\u0E33\u0E2B\u0E23\u0E31\u0E1A\u0E1B\u0E23\u0E30\u0E40\u0E20\u0E17\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E17\u0E35\u0E48\u0E23\u0E30\u0E1A\u0E38
# YMSG: return from vocabulary - in case parameter content cannot be a collection 
2142=\u0E02\u0E49\u0E2D\u0E01\u0E33\u0E2B\u0E19\u0E14\u0E1E\u0E32\u0E23\u0E32\u0E21\u0E34\u0E40\u0E15\u0E2D\u0E23\u0E4C\u0E2A\u0E33\u0E2B\u0E23\u0E31\u0E1A\u0E01\u0E32\u0E23\u0E14\u0E33\u0E40\u0E19\u0E34\u0E19\u0E01\u0E32\u0E23 '{0}' \u0E43\u0E19\u0E1E\u0E32\u0E23\u0E32\u0E21\u0E34\u0E40\u0E15\u0E2D\u0E23\u0E4C\u0E01\u0E32\u0E23\u0E14\u0E33\u0E40\u0E19\u0E34\u0E19\u0E01\u0E32\u0E23 '{1}' \u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07 \u0E44\u0E21\u0E48\u0E2D\u0E19\u0E38\u0E0D\u0E32\u0E15\u0E43\u0E2B\u0E49\u0E43\u0E0A\u0E49\u0E1E\u0E32\u0E23\u0E32\u0E21\u0E34\u0E40\u0E15\u0E2D\u0E23\u0E4C\u0E02\u0E2D\u0E07\u0E04\u0E2D\u0E25\u0E40\u0E25\u0E04\u0E0A\u0E31\u0E19\u0E1B\u0E23\u0E30\u0E40\u0E20\u0E17\u0E43\u0E19\u0E01\u0E32\u0E23\u0E14\u0E33\u0E40\u0E19\u0E34\u0E19\u0E01\u0E32\u0E23                                                                                                                                                                   .




# 2300 - 2499 rule template messages

# YMSG: return from Rule Template runtime plug in, in case of rule template name starts with a number
2300=\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E2B\u0E23\u0E37\u0E2D\u0E2D\u0E31\u0E1E\u0E40\u0E14\u0E17\u0E41\u0E1A\u0E1A\u0E23\u0E48\u0E32\u0E07\u0E01\u0E0E\u0E44\u0E14\u0E49; \u0E0A\u0E37\u0E48\u0E2D\u0E41\u0E1A\u0E1A\u0E23\u0E48\u0E32\u0E07\u0E01\u0E0E\u0E15\u0E49\u0E2D\u0E07\u0E44\u0E21\u0E48\u0E02\u0E36\u0E49\u0E19\u0E15\u0E49\u0E19\u0E14\u0E49\u0E27\u0E22\u0E15\u0E31\u0E27\u0E40\u0E25\u0E02
# YMSG: return from Rule Template runtime plug in, in case of illegal change in rule template attributes
2301=\u0E01\u0E32\u0E23\u0E40\u0E1B\u0E34\u0E14\u0E43\u0E0A\u0E49\u0E07\u0E32\u0E19\u0E41\u0E1A\u0E1A\u0E23\u0E48\u0E32\u0E07\u0E01\u0E0E\u0E21\u0E35\u0E01\u0E32\u0E23\u0E40\u0E1B\u0E25\u0E35\u0E48\u0E22\u0E19\u0E41\u0E1B\u0E25\u0E07\u0E17\u0E35\u0E48\u0E44\u0E21\u0E48\u0E40\u0E02\u0E49\u0E32\u0E01\u0E31\u0E19;
# YMSG: return from Rule Template runtime plug in, in case of rule template update contains condition change
2302=\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E2B\u0E23\u0E37\u0E2D\u0E2D\u0E31\u0E1E\u0E40\u0E14\u0E17\u0E41\u0E1A\u0E1A\u0E23\u0E48\u0E32\u0E07\u0E01\u0E0E\u0E44\u0E14\u0E49; \u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E40\u0E1B\u0E25\u0E35\u0E48\u0E22\u0E19\u0E41\u0E1B\u0E25\u0E07\u0E40\u0E07\u0E37\u0E48\u0E2D\u0E19\u0E44\u0E02\u0E02\u0E2D\u0E07\u0E41\u0E1A\u0E1A\u0E23\u0E48\u0E32\u0E07\u0E01\u0E0E
# YMSG: return from Rule Template runtime plug in, in case of rule template contains invalid condition 
2303=\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E2B\u0E23\u0E37\u0E2D\u0E2D\u0E31\u0E1E\u0E40\u0E14\u0E17\u0E41\u0E1A\u0E1A\u0E23\u0E48\u0E32\u0E07\u0E01\u0E0E\u0E44\u0E14\u0E49; \u0E40\u0E07\u0E37\u0E48\u0E2D\u0E19\u0E44\u0E02 '{0}' \u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07
# YMSG: return from Rule Template runtime plug in, in case of rule template deletion when there are rules assigned to the rule template  
2304=\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E25\u0E1A\u0E41\u0E1A\u0E1A\u0E23\u0E48\u0E32\u0E07\u0E01\u0E0E {0} \u0E21\u0E35\u0E01\u0E0E\u0E15\u0E48\u0E32\u0E07\u0E46 \u0E2A\u0E33\u0E2B\u0E23\u0E31\u0E1A\u0E2A\u0E33\u0E2B\u0E23\u0E31\u0E1A\u0E41\u0E1A\u0E1A\u0E23\u0E48\u0E32\u0E07\u0E01\u0E0E\u0E19\u0E35\u0E49;
# YMSG: return from Rule Template runtime plug in, in case of duplicate rule template name  
2305=\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E41\u0E1A\u0E1A\u0E23\u0E48\u0E32\u0E07\u0E01\u0E0E\u0E44\u0E14\u0E49; \u0E41\u0E1A\u0E1A\u0E23\u0E48\u0E32\u0E07\u0E01\u0E0E '{0}' \u0E21\u0E35\u0E2D\u0E22\u0E39\u0E48\u0E41\u0E25\u0E49\u0E27\u0E43\u0E19\u0E41\u0E1E\u0E04\u0E40\u0E01\u0E08 '{1}'
# YMSG: return from Rule Template runtime plug in, in case that rule template name starts with a number  
2306=\u0E0A\u0E37\u0E48\u0E2D\u0E41\u0E1A\u0E1A\u0E23\u0E48\u0E32\u0E07\u0E01\u0E0E - '{0}' \u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E02\u0E36\u0E49\u0E19\u0E15\u0E49\u0E19\u0E14\u0E49\u0E27\u0E22\u0E15\u0E31\u0E27\u0E40\u0E25\u0E02;
# YMSG: return from Rule Template runtime plug in, in case that rule template name already exist as data object  
2307=\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E41\u0E1A\u0E1A\u0E23\u0E48\u0E32\u0E07\u0E01\u0E0E '{0}' \u0E21\u0E35\u0E01\u0E32\u0E23\u0E43\u0E0A\u0E49\u0E0A\u0E37\u0E48\u0E2D\u0E41\u0E1A\u0E1A\u0E23\u0E48\u0E32\u0E07\u0E01\u0E0E\u0E2D\u0E22\u0E39\u0E48\u0E41\u0E25\u0E49\u0E27\u0E43\u0E19\u0E23\u0E39\u0E1B\u0E02\u0E2D\u0E07\u0E2D\u0E2D\u0E1A\u0E40\u0E08\u0E04\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E43\u0E19\u0E04\u0E33\u0E28\u0E31\u0E1E\u0E17\u0E4C '{1}'
# YMSG: return from Rule Template runtime plug in, in case that rule template name already exist as alias
2308=\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E41\u0E1A\u0E1A\u0E23\u0E48\u0E32\u0E07\u0E01\u0E0E '{0}' \u0E21\u0E35\u0E01\u0E32\u0E23\u0E43\u0E0A\u0E49\u0E0A\u0E37\u0E48\u0E2D\u0E41\u0E1A\u0E1A\u0E23\u0E48\u0E32\u0E07\u0E01\u0E0E\u0E2D\u0E22\u0E39\u0E48\u0E41\u0E25\u0E49\u0E27\u0E43\u0E19\u0E23\u0E39\u0E1B\u0E02\u0E2D\u0E07\u0E0A\u0E37\u0E48\u0E2D\u0E41\u0E1D\u0E07\u0E43\u0E19\u0E04\u0E33\u0E28\u0E31\u0E1E\u0E17\u0E4C '{1}'


# 2500 - 2699 - rule messages

# YMSG: return from Rule runtime plug in, in case of resource contains additional attributes but not assigned to rule template   
2500=\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E01\u0E0E\u0E44\u0E14\u0E49; \u0E21\u0E35\u0E01\u0E32\u0E23\u0E1B\u0E49\u0E2D\u0E19\u0E41\u0E2D\u0E17\u0E17\u0E23\u0E34\u0E1A\u0E34\u0E27\u0E15\u0E4C\u0E40\u0E1E\u0E34\u0E48\u0E21\u0E40\u0E15\u0E34\u0E21\u0E41\u0E21\u0E49\u0E27\u0E48\u0E32\u0E01\u0E0E\u0E44\u0E21\u0E48\u0E44\u0E14\u0E49\u0E22\u0E36\u0E14\u0E15\u0E32\u0E21\u0E41\u0E1A\u0E1A\u0E23\u0E48\u0E32\u0E07
# YMSG: return from Rule runtime plug in, in case of rule template assignment change   
2501=\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E2D\u0E31\u0E1E\u0E40\u0E14\u0E17\u0E01\u0E0E\u0E44\u0E14\u0E49; \u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E40\u0E1B\u0E25\u0E35\u0E48\u0E22\u0E19\u0E41\u0E1B\u0E25\u0E07\u0E01\u0E32\u0E23\u0E01\u0E33\u0E2B\u0E19\u0E14\u0E41\u0E1A\u0E1A\u0E23\u0E48\u0E32\u0E07\u0E01\u0E0E\u0E17\u0E31\u0E19\u0E17\u0E35\u0E17\u0E35\u0E48\u0E21\u0E35\u0E01\u0E32\u0E23\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E01\u0E0E
# YMSG: return from Rule runtime plug in, in case of vocabulary change  
2502=\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E2D\u0E31\u0E1E\u0E40\u0E14\u0E17\u0E01\u0E0E\u0E44\u0E14\u0E49; \u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E40\u0E1B\u0E25\u0E35\u0E48\u0E22\u0E19\u0E41\u0E1B\u0E25\u0E07\u0E01\u0E32\u0E23\u0E01\u0E33\u0E2B\u0E19\u0E14\u0E04\u0E33\u0E28\u0E31\u0E1E\u0E17\u0E4C\u0E17\u0E31\u0E19\u0E17\u0E35\u0E17\u0E35\u0E48\u0E21\u0E35\u0E01\u0E32\u0E23\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E01\u0E0E
# YMSG: return from Rule runtime plug in, in case of output change   
2503=\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E2D\u0E31\u0E1E\u0E40\u0E14\u0E17\u0E01\u0E0E\u0E44\u0E14\u0E49; \u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E40\u0E1B\u0E25\u0E35\u0E48\u0E22\u0E19\u0E41\u0E1B\u0E25\u0E07\u0E01\u0E32\u0E23\u0E01\u0E33\u0E2B\u0E19\u0E14\u0E40\u0E2D\u0E32\u0E17\u0E4C\u0E1E\u0E38\u0E17\u0E17\u0E31\u0E19\u0E17\u0E35\u0E17\u0E35\u0E48\u0E21\u0E35\u0E01\u0E32\u0E23\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E01\u0E0E
# YMSG: return from Rule runtime plug in, in case of rule contains additional attributes where assigned rule template does not contains additional attributes
2504=\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E01\u0E0E\u0E44\u0E14\u0E49; \u0E21\u0E35\u0E01\u0E32\u0E23\u0E1B\u0E49\u0E2D\u0E19\u0E41\u0E2D\u0E17\u0E17\u0E23\u0E34\u0E1A\u0E34\u0E27\u0E15\u0E4C\u0E40\u0E1E\u0E34\u0E48\u0E21\u0E40\u0E15\u0E34\u0E21\u0E0B\u0E36\u0E48\u0E07\u0E44\u0E21\u0E48\u0E44\u0E14\u0E49\u0E40\u0E1B\u0E47\u0E19\u0E02\u0E2D\u0E07\u0E41\u0E1A\u0E1A\u0E23\u0E48\u0E32\u0E07\u0E01\u0E0E\u0E17\u0E35\u0E48\u0E01\u0E33\u0E2B\u0E19\u0E14\u0E44\u0E27\u0E49
# YMSG: return from Rule runtime plug in, in case of execution context change
2505=\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E2D\u0E31\u0E1E\u0E40\u0E14\u0E17\u0E01\u0E0E\u0E44\u0E14\u0E49; \u0E01\u0E32\u0E23\u0E01\u0E33\u0E2B\u0E19\u0E14\u0E40\u0E19\u0E37\u0E49\u0E2D\u0E2B\u0E32\u0E01\u0E32\u0E23\u0E14\u0E33\u0E40\u0E19\u0E34\u0E19\u0E01\u0E32\u0E23\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E40\u0E1B\u0E25\u0E35\u0E48\u0E22\u0E19\u0E41\u0E1B\u0E25\u0E07\u0E17\u0E31\u0E19\u0E17\u0E35\u0E17\u0E35\u0E48\u0E21\u0E35\u0E01\u0E32\u0E23\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E01\u0E0E
# YMSG: return from Rule runtime plug in, in case of invalid rule template assignment
2506=\u0E41\u0E1A\u0E1A\u0E23\u0E48\u0E32\u0E07\u0E01\u0E0E '{0}' \u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07;
# YMSG: return from Rule runtime plug in, in case of invalid status transition
2507=\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E2D\u0E31\u0E1E\u0E40\u0E14\u0E17\u0E01\u0E0E\u0E44\u0E14\u0E49; \u0E04\u0E38\u0E13\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E40\u0E1B\u0E25\u0E35\u0E48\u0E22\u0E19\u0E41\u0E1B\u0E25\u0E07\u0E08\u0E32\u0E01\u0E2A\u0E16\u0E32\u0E19\u0E30 '{0}' \u0E40\u0E1B\u0E47\u0E19 '{1}'
# YMSG: return from Rule runtime plug in, in case of updating single consumption to non single consumption Rule
2510=\u0E44\u0E21\u0E48\u0E2D\u0E19\u0E38\u0E0D\u0E32\u0E15\u0E43\u0E2B\u0E49\u0E22\u0E49\u0E32\u0E22\u0E1A\u0E23\u0E34\u0E01\u0E32\u0E23\u0E17\u0E35\u0E48\u0E1D\u0E31\u0E07\u0E15\u0E31\u0E27\u0E2D\u0E2D\u0E01
# YMSG: return from Rule runtime plug in, in case of updating single embedded service in Rule
2511=\u0E44\u0E21\u0E48\u0E2D\u0E19\u0E38\u0E0D\u0E32\u0E15\u0E43\u0E2B\u0E49\u0E40\u0E1B\u0E25\u0E35\u0E48\u0E22\u0E19\u0E41\u0E1B\u0E25\u0E07\u0E2B\u0E23\u0E37\u0E2D\u0E22\u0E49\u0E32\u0E22\u0E1A\u0E23\u0E34\u0E01\u0E32\u0E23\u0E17\u0E35\u0E48\u0E1D\u0E31\u0E07\u0E15\u0E31\u0E27\u0E2D\u0E2D\u0E01
# YMSG: return from Rule runtime plug in, in case of more than one embedded services with the same name
2512=\u0E0A\u0E37\u0E48\u0E2D\u0E1A\u0E23\u0E34\u0E01\u0E32\u0E23\u0E17\u0E35\u0E48\u0E1D\u0E31\u0E07\u0E15\u0E31\u0E27 - '{0}', \u0E21\u0E35\u0E2D\u0E22\u0E39\u0E48\u0E21\u0E32\u0E01\u0E01\u0E27\u0E48\u0E32\u0E2B\u0E19\u0E36\u0E48\u0E07\u0E04\u0E23\u0E31\u0E49\u0E07
# YMSG: return from Rule runtime plug in - update/create, in case the rule body is not valid
2513=\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E2B\u0E23\u0E37\u0E2D\u0E2D\u0E31\u0E1E\u0E40\u0E14\u0E17\u0E01\u0E0E\u0E44\u0E14\u0E49; \u0E40\u0E19\u0E37\u0E49\u0E2D\u0E2B\u0E32\u0E02\u0E2D\u0E07\u0E01\u0E0E\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07
# YMSG: return from Rule body validator - in case parameter is referenced to an unknown action
2514=\u0E02\u0E49\u0E2D\u0E01\u0E33\u0E2B\u0E19\u0E14\u0E1E\u0E32\u0E23\u0E32\u0E21\u0E34\u0E40\u0E15\u0E2D\u0E23\u0E4C\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07 \u0E1E\u0E32\u0E23\u0E32\u0E21\u0E34\u0E40\u0E15\u0E2D\u0E23\u0E4C\u0E2D\u0E49\u0E32\u0E07\u0E2D\u0E34\u0E07\u0E01\u0E32\u0E23\u0E14\u0E33\u0E40\u0E19\u0E34\u0E19\u0E01\u0E32\u0E23 '{0}' \u0E17\u0E35\u0E48\u0E44\u0E21\u0E48\u0E21\u0E35\u0E2D\u0E22\u0E39\u0E48\u0E43\u0E19\u0E04\u0E33\u0E28\u0E31\u0E1E\u0E17\u0E4C
# YMSG: return from Rule body validator - in case parameter name isn't a valid parameter for action
2515=\u0E02\u0E49\u0E2D\u0E01\u0E33\u0E2B\u0E19\u0E14\u0E1E\u0E32\u0E23\u0E32\u0E21\u0E34\u0E40\u0E15\u0E2D\u0E23\u0E4C\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07 \u0E44\u0E21\u0E48\u0E21\u0E35\u0E0A\u0E37\u0E48\u0E2D\u0E1E\u0E32\u0E23\u0E32\u0E21\u0E34\u0E40\u0E15\u0E2D\u0E23\u0E4C '{0}' \u0E2A\u0E33\u0E2B\u0E23\u0E31\u0E1A\u0E01\u0E32\u0E23\u0E14\u0E33\u0E40\u0E19\u0E34\u0E19\u0E01\u0E32\u0E23 '{1}' \u0E43\u0E19\u0E04\u0E33\u0E28\u0E31\u0E1E\u0E17\u0E4C
# YMSG: return from Rule body validator - in case action doesn't exist in the vocabulary
2516=\u0E01\u0E32\u0E23\u0E14\u0E33\u0E40\u0E19\u0E34\u0E19\u0E01\u0E32\u0E23 '{0}' \u0E44\u0E21\u0E48\u0E21\u0E35\u0E2D\u0E22\u0E39\u0E48\u0E43\u0E19\u0E04\u0E33\u0E28\u0E31\u0E1E\u0E17\u0E4C
# YMSG: return from Rule body validator - when the sent parameter isn't a required parameter in the sent output 
2517=\u0E02\u0E49\u0E2D\u0E01\u0E33\u0E2B\u0E19\u0E14\u0E1E\u0E32\u0E23\u0E32\u0E21\u0E34\u0E40\u0E15\u0E2D\u0E23\u0E4C\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07 \u0E44\u0E21\u0E48\u0E21\u0E35\u0E0A\u0E37\u0E48\u0E2D\u0E1E\u0E32\u0E23\u0E32\u0E21\u0E34\u0E40\u0E15\u0E2D\u0E23\u0E4C '{0}' \u0E2A\u0E33\u0E2B\u0E23\u0E31\u0E1A\u0E40\u0E2D\u0E32\u0E17\u0E4C\u0E1E\u0E38\u0E17 '{1}' \u0E43\u0E19\u0E04\u0E33\u0E28\u0E31\u0E1E\u0E17\u0E4C
# YMSG: return from Rule body validator - when the sent output doesn't exists in the vocabulary
2518=\u0E44\u0E21\u0E48\u0E21\u0E35\u0E40\u0E2D\u0E32\u0E17\u0E4C\u0E1E\u0E38\u0E17 '{0}' \u0E43\u0E19\u0E04\u0E33\u0E28\u0E31\u0E1E\u0E17\u0E4C
# YMSG: return from Rule body validator - when alias has more than one output parameter column
2519=\u0E0A\u0E37\u0E48\u0E2D\u0E41\u0E1D\u0E07\u0E21\u0E35\u0E1E\u0E32\u0E23\u0E32\u0E21\u0E34\u0E40\u0E15\u0E2D\u0E23\u0E4C\u0E40\u0E2D\u0E32\u0E17\u0E4C\u0E1E\u0E38\u0E17\u0E21\u0E32\u0E01\u0E01\u0E27\u0E48\u0E32\u0E2B\u0E19\u0E36\u0E48\u0E07\u0E23\u0E32\u0E22\u0E01\u0E32\u0E23
# YMSG: return from Rule body validator - when the alias output parameters values do not have the same type X
2520=\u0E04\u0E48\u0E32\u0E17\u0E31\u0E49\u0E07\u0E2B\u0E21\u0E14\u0E02\u0E2D\u0E07\u0E1E\u0E32\u0E23\u0E32\u0E21\u0E34\u0E40\u0E15\u0E2D\u0E23\u0E4C\u0E40\u0E2D\u0E32\u0E17\u0E4C\u0E1E\u0E38\u0E17 '{0}' \u0E15\u0E49\u0E2D\u0E07\u0E40\u0E1B\u0E47\u0E19\u0E1B\u0E23\u0E30\u0E40\u0E20\u0E17\u0E40\u0E14\u0E35\u0E22\u0E27\u0E01\u0E31\u0E19
# YMSG: return from Rule runtime plug in, in case of assign rule to rule service that does not exist.
2521=\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E01\u0E33\u0E2B\u0E19\u0E14\u0E01\u0E0E '{0}' \u0E43\u0E2B\u0E49\u0E01\u0E31\u0E1A\u0E1A\u0E23\u0E34\u0E01\u0E32\u0E23\u0E01\u0E0E '{1}'  \u0E44\u0E21\u0E48\u0E21\u0E35\u0E1A\u0E23\u0E34\u0E01\u0E32\u0E23\u0E01\u0E0F
# YMSG: return from Rule runtime plug in, in case of assign rule to rule service with different vocabulary.
2522=\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E01\u0E33\u0E2B\u0E19\u0E14\u0E01\u0E0E '{0}' \u0E43\u0E2B\u0E49\u0E01\u0E31\u0E1A\u0E1A\u0E23\u0E34\u0E01\u0E32\u0E23\u0E01\u0E0E '{1}'  \u0E1A\u0E23\u0E34\u0E01\u0E32\u0E23\u0E01\u0E0E\u0E41\u0E25\u0E30\u0E01\u0E0E\u0E15\u0E49\u0E2D\u0E07\u0E21\u0E35\u0E01\u0E32\u0E23\u0E01\u0E33\u0E2B\u0E19\u0E14\u0E04\u0E33\u0E28\u0E31\u0E1E\u0E17\u0E4C\u0E17\u0E35\u0E48\u0E40\u0E2B\u0E21\u0E37\u0E2D\u0E19\u0E01\u0E31\u0E19
# YMSG: return from Rule runtime plug in, in case of assign rule to rule service with different output.
2523=\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E01\u0E33\u0E2B\u0E19\u0E14\u0E01\u0E0E '{0}' \u0E43\u0E2B\u0E49\u0E01\u0E31\u0E1A\u0E1A\u0E23\u0E34\u0E01\u0E32\u0E23\u0E01\u0E0E '{1}'  \u0E1A\u0E23\u0E34\u0E01\u0E32\u0E23\u0E01\u0E0E\u0E41\u0E25\u0E30\u0E01\u0E0E\u0E15\u0E49\u0E2D\u0E07\u0E21\u0E35\u0E01\u0E32\u0E23\u0E01\u0E33\u0E2B\u0E19\u0E14\u0E40\u0E2D\u0E32\u0E17\u0E4C\u0E1E\u0E38\u0E17\u0E17\u0E35\u0E48\u0E40\u0E2B\u0E21\u0E37\u0E2D\u0E19\u0E01\u0E31\u0E19
# YMSG: return from Rule runtime plug in, in case of assign rule to rule service that is not indicated as manually assigned.
2524=\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E01\u0E33\u0E2B\u0E19\u0E14\u0E01\u0E0E '{0}' \u0E43\u0E2B\u0E49\u0E01\u0E31\u0E1A\u0E1A\u0E23\u0E34\u0E01\u0E32\u0E23\u0E01\u0E0E '{1}' \u0E1A\u0E23\u0E34\u0E01\u0E32\u0E23\u0E01\u0E0E\u0E01\u0E33\u0E2B\u0E19\u0E14\u0E44\u0E27\u0E49\u0E2A\u0E33\u0E2B\u0E23\u0E31\u0E1A\u0E01\u0E32\u0E23\u0E01\u0E33\u0E2B\u0E19\u0E14\u0E01\u0E0E\u0E2D\u0E31\u0E15\u0E42\u0E19\u0E21\u0E31\u0E15\u0E34 \u0E14\u0E31\u0E07\u0E19\u0E31\u0E49\u0E19\u0E08\u0E36\u0E07\u0E44\u0E21\u0E48\u0E2D\u0E19\u0E38\u0E0D\u0E32\u0E15\u0E43\u0E2B\u0E49\u0E01\u0E33\u0E2B\u0E19\u0E14\u0E42\u0E14\u0E22\u0E1C\u0E39\u0E49\u0E43\u0E0A\u0E49
# YMSG: return from Rule runtime plug in - update/create, in case a custom condition is not valid
2525=\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E2B\u0E23\u0E37\u0E2D\u0E2D\u0E31\u0E1E\u0E40\u0E14\u0E17\u0E01\u0E0E; '{0}' \u0E44\u0E21\u0E48\u0E43\u0E0A\u0E48\u0E40\u0E07\u0E37\u0E48\u0E2D\u0E19\u0E44\u0E02\u0E17\u0E35\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07
# YMSG: return from Rule body validator - when ruleBody of type ruleSet has more than one condition column
2526=\u0E0A\u0E38\u0E14\u0E02\u0E2D\u0E07\u0E01\u0E0E\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07 \u0E01\u0E0E\u0E20\u0E32\u0E22\u0E43\u0E19\u0E0A\u0E38\u0E14\u0E02\u0E2D\u0E07\u0E01\u0E0E\u0E21\u0E35\u0E21\u0E32\u0E01\u0E01\u0E27\u0E48\u0E32\u0E2B\u0E19\u0E36\u0E48\u0E07\u0E40\u0E07\u0E37\u0E48\u0E2D\u0E19\u0E44\u0E02


# 2700 - 2899 - rule service messages

# YMSG: return from Rule service plug in, in case of wrong data object filter
2700=\u0E02\u0E49\u0E2D\u0E1C\u0E34\u0E14\u0E1E\u0E25\u0E32\u0E14\u0E43\u0E19\u0E1F\u0E34\u0E25\u0E40\u0E15\u0E2D\u0E23\u0E4C\u0E02\u0E2D\u0E07\u0E1A\u0E23\u0E34\u0E01\u0E32\u0E23\u0E01\u0E0E
# YMSG: return from Rule service plug in, in case of different data objects in execution context and filter
2701=\u0E2D\u0E2D\u0E1A\u0E40\u0E08\u0E04\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25 - '{0}' \u0E43\u0E19\u0E40\u0E19\u0E37\u0E49\u0E2D\u0E2B\u0E32\u0E01\u0E32\u0E23\u0E14\u0E33\u0E40\u0E19\u0E34\u0E19\u0E01\u0E32\u0E23\u0E41\u0E15\u0E01\u0E15\u0E48\u0E32\u0E07\u0E08\u0E32\u0E01 dataObject - '{1}' \u0E43\u0E19\u0E1F\u0E34\u0E25\u0E40\u0E15\u0E2D\u0E23\u0E4C
# YMSG: return from  runtime plug in, in case of specified data object does not have the specified attribute (e.g. data object keys in rule service definition).
2704=\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E2B\u0E23\u0E37\u0E2D\u0E2D\u0E31\u0E1E\u0E40\u0E14\u0E17\u0E1A\u0E23\u0E34\u0E01\u0E32\u0E23\u0E01\u0E0E\u0E44\u0E14\u0E49; \u0E2D\u0E2D\u0E1A\u0E40\u0E08\u0E04\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25 {0} \u0E02\u0E2D\u0E07\u0E04\u0E33\u0E28\u0E31\u0E1E\u0E17\u0E4C {1} \u0E44\u0E21\u0E48\u0E21\u0E35\u0E41\u0E2D\u0E17\u0E17\u0E23\u0E34\u0E1A\u0E34\u0E27\u0E15\u0E4C {2}
# YMSG: return from runtime plug in, in case of parameter mapping path contains a collection
2705=\u0E44\u0E21\u0E48\u0E2D\u0E19\u0E38\u0E0D\u0E32\u0E15\u0E43\u0E2B\u0E49\u0E43\u0E0A\u0E49\u0E1E\u0E32\u0E18\u0E17\u0E35\u0E48\u0E21\u0E35\u0E04\u0E2D\u0E25\u0E40\u0E25\u0E04\u0E0A\u0E31\u0E19 \u0E1E\u0E32\u0E18\: {0};
# YMSG: return from runtime plug in, in case of data object mapping entry is not unique within an execution context .
2706=\u0E2D\u0E2D\u0E1A\u0E40\u0E08\u0E04\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25 - {0} \u0E21\u0E35\u0E01\u0E32\u0E23\u0E41\u0E21\u0E47\u0E1B\u0E0B\u0E49\u0E33;
# YMSG: return from  runtime plug in, in case of parameter definition entry is not unique within an execution context .
2707=\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E1A\u0E23\u0E34\u0E01\u0E32\u0E23\u0E01\u0E0E\u0E44\u0E14\u0E49; \u0E1E\u0E32\u0E23\u0E32\u0E21\u0E34\u0E40\u0E15\u0E2D\u0E23\u0E4C {0} \u0E0B\u0E49\u0E33\u0E01\u0E31\u0E19
# YMSG: return from  runtime plug in, in case of parameter mapping entry doesn't have a match parameter definition entry with in an execution context
2708=\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E1A\u0E23\u0E34\u0E01\u0E32\u0E23\u0E01\u0E0E\u0E44\u0E14\u0E49; \u0E1E\u0E32\u0E23\u0E32\u0E21\u0E34\u0E40\u0E15\u0E2D\u0E23\u0E4C {0} \u0E44\u0E21\u0E48\u0E21\u0E35\u0E2D\u0E22\u0E39\u0E48 \u0E41\u0E25\u0E30\u0E21\u0E35\u0E04\u0E27\u0E32\u0E21\u0E40\u0E01\u0E35\u0E48\u0E22\u0E27\u0E02\u0E49\u0E2D\u0E07\u0E01\u0E31\u0E1A\u0E2D\u0E2D\u0E1A\u0E40\u0E08\u0E04\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E19\u0E35\u0E49
# YMSG: return from  runtime plug in, in case of ifentifiers in dataObject type parameter do not exist in data object from vocabulary
2709=\u0E02\u0E49\u0E2D\u0E01\u0E33\u0E2B\u0E19\u0E14\u0E1E\u0E32\u0E23\u0E32\u0E21\u0E34\u0E40\u0E15\u0E2D\u0E23\u0E4C\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07\u0E43\u0E19\u0E1A\u0E23\u0E34\u0E01\u0E32\u0E23\u0E01\u0E0E '{0}' \u0E43\u0E19\u0E1E\u0E32\u0E23\u0E32\u0E21\u0E34\u0E40\u0E15\u0E2D\u0E23\u0E4C '{1}', '{2}' \u0E44\u0E21\u0E48\u0E43\u0E0A\u0E48\u0E41\u0E2D\u0E17\u0E17\u0E23\u0E34\u0E1A\u0E34\u0E27\u0E15\u0E4C\u0E17\u0E35\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07\u0E02\u0E2D\u0E07\u0E2D\u0E2D\u0E1A\u0E40\u0E08\u0E04\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25 '{3}' \u0E43\u0E19\u0E02\u0E2D\u0E1A\u0E40\u0E02\u0E15\u0E04\u0E33\u0E28\u0E31\u0E1E\u0E17\u0E4C '{4}'
# YMSG: return from runtime plug in, in case of data object definition entry is not unique within parameter definition if service.
2710=\u0E02\u0E49\u0E2D\u0E01\u0E33\u0E2B\u0E19\u0E14\u0E1E\u0E32\u0E23\u0E32\u0E21\u0E34\u0E40\u0E15\u0E2D\u0E23\u0E4C\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07\u0E43\u0E19\u0E1A\u0E23\u0E34\u0E01\u0E32\u0E23\u0E01\u0E0E '{0}' \u0E2D\u0E2D\u0E1A\u0E40\u0E08\u0E04\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25 '{1}' \u0E16\u0E39\u0E01\u0E2D\u0E49\u0E32\u0E07\u0E2D\u0E34\u0E07\u0E42\u0E14\u0E22\u0E1E\u0E32\u0E23\u0E32\u0E21\u0E34\u0E40\u0E15\u0E2D\u0E23\u0E4C\u0E21\u0E32\u0E01\u0E01\u0E27\u0E48\u0E32\u0E2B\u0E19\u0E36\u0E48\u0E07\u0E15\u0E31\u0E27
# YMSG: return from runtime plug in, only read-only rule services can be indicated to be created with result view
2711=\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E1A\u0E23\u0E34\u0E01\u0E32\u0E23\u0E01\u0E0E '{0}' \u0E15\u0E49\u0E2D\u0E07\u0E23\u0E30\u0E1A\u0E38\u0E1A\u0E23\u0E34\u0E01\u0E32\u0E23\u0E01\u0E0E\u0E17\u0E35\u0E48\u0E21\u0E35\u0E21\u0E38\u0E21\u0E21\u0E2D\u0E07\u0E1C\u0E25\u0E25\u0E31\u0E1E\u0E18\u0E4C\u0E40\u0E1B\u0E47\u0E19\u0E41\u0E1A\u0E1A\u0E2D\u0E48\u0E32\u0E19\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E40\u0E14\u0E35\u0E22\u0E27
# YMSG: return from runtime plug in, only explicit output rule services can be indicated to be created with result view
2712=\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E1A\u0E23\u0E34\u0E01\u0E32\u0E23\u0E01\u0E0E '{0}' \u0E1A\u0E23\u0E34\u0E01\u0E32\u0E23\u0E01\u0E0E\u0E17\u0E35\u0E48\u0E21\u0E35\u0E21\u0E38\u0E21\u0E21\u0E2D\u0E07\u0E1C\u0E25\u0E25\u0E31\u0E1E\u0E18\u0E4C\u0E15\u0E49\u0E2D\u0E07\u0E21\u0E35\u0E01\u0E32\u0E23\u0E01\u0E33\u0E2B\u0E19\u0E14\u0E40\u0E2D\u0E32\u0E17\u0E4C\u0E1E\u0E38\u0E17\u0E17\u0E35\u0E48\u0E0A\u0E31\u0E14\u0E40\u0E08\u0E19
# YMSG: returned from request handler. Rule requested to be removed from rule service but the rule is not assigned to it
2713=\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E22\u0E49\u0E32\u0E22\u0E01\u0E32\u0E23\u0E01\u0E33\u0E2B\u0E19\u0E14\u0E01\u0E0E\u0E2D\u0E2D\u0E01 \u0E44\u0E21\u0E48\u0E21\u0E35\u0E01\u0E32\u0E23\u0E01\u0E33\u0E2B\u0E19\u0E14\u0E01\u0E0E '{0}' \u0E43\u0E2B\u0E49\u0E01\u0E31\u0E1A\u0E1A\u0E23\u0E34\u0E01\u0E32\u0E23\u0E01\u0E0E
# YMSG: return from  runtime plug in, in case of output contains collection parameter in event mode scenario
2714=\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E1A\u0E23\u0E34\u0E01\u0E32\u0E23\u0E01\u0E0E '{0}' \u0E04\u0E38\u0E13\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E01\u0E33\u0E2B\u0E19\u0E14\u0E40\u0E2D\u0E32\u0E17\u0E4C\u0E1E\u0E38\u0E17\u0E17\u0E35\u0E48\u0E21\u0E35\u0E1E\u0E32\u0E23\u0E32\u0E21\u0E34\u0E40\u0E15\u0E2D\u0E23\u0E4C\u0E02\u0E2D\u0E07\u0E04\u0E2D\u0E25\u0E40\u0E25\u0E04\u0E0A\u0E31\u0E19\u0E1B\u0E23\u0E30\u0E40\u0E20\u0E17\u0E2A\u0E33\u0E2B\u0E23\u0E31\u0E1A\u0E1A\u0E23\u0E34\u0E01\u0E32\u0E23\u0E01\u0E0E\u0E17\u0E35\u0E48\u0E44\u0E21\u0E48\u0E21\u0E35\u0E2D\u0E2D\u0E1A\u0E40\u0E08\u0E04\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E17\u0E35\u0E48\u0E01\u0E33\u0E2B\u0E19\u0E14\u0E43\u0E19\u0E40\u0E19\u0E37\u0E49\u0E2D\u0E2B\u0E32\u0E01\u0E32\u0E23\u0E14\u0E33\u0E40\u0E19\u0E34\u0E19\u0E01\u0E32\u0E23
# 2900 - 2949 - post activation / completeActivation

# 2950 - 2999 - common resource CRUD


# YMSG: return from Request Handler, in case of url parameter that isn't valid
2955=\u0E1E\u0E32\u0E23\u0E32\u0E21\u0E34\u0E40\u0E15\u0E2D\u0E23\u0E4C URL\: {0} \u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07
# YMSG: return from Request Handler, in case of unsupported request mode
2956=\u0E42\u0E2B\u0E21\u0E14 \#{0} \u0E44\u0E21\u0E48\u0E44\u0E14\u0E49\u0E23\u0E31\u0E1A\u0E01\u0E32\u0E23\u0E2A\u0E19\u0E31\u0E1A\u0E2A\u0E19\u0E38\u0E19
# YMSG: return from Request Handler, in case of unsupported metadata
2957=\u0E40\u0E21\u0E15\u0E49\u0E32\u0E14\u0E32\u0E15\u0E49\u0E32\u0E44\u0E21\u0E48\u0E44\u0E14\u0E49\u0E23\u0E31\u0E1A\u0E01\u0E32\u0E23\u0E2A\u0E19\u0E31\u0E1A\u0E2A\u0E19\u0E38\u0E19
# YMSG: return from Request Handler, in case of unsupported metadata for method
2958=\u0E01\u0E32\u0E23\u0E14\u0E36\u0E07\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E40\u0E21\u0E15\u0E49\u0E32\u0E14\u0E32\u0E15\u0E49\u0E32\u0E43\u0E0A\u0E49\u0E44\u0E14\u0E49\u0E40\u0E09\u0E1E\u0E32\u0E30\u0E01\u0E31\u0E1A\u0E27\u0E34\u0E18\u0E35\u0E01\u0E32\u0E23\u0E02\u0E2D GET


# YMSG: returned when wrong query is generated (during procedure generation). 2 causes: Bug in process or there is no mapping from vocabulary to real table / column
2970=\u0E40\u0E01\u0E34\u0E14\u0E02\u0E49\u0E2D\u0E1C\u0E34\u0E14\u0E1E\u0E25\u0E32\u0E14\u0E43\u0E19\u0E01\u0E32\u0E23\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E04\u0E34\u0E27\u0E23\u0E35 \u0E2B\u0E23\u0E37\u0E2D\u0E01\u0E32\u0E23\u0E41\u0E21\u0E47\u0E1B\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07
# YMSG: returned if for some reason the parser returned undefined parse model. Can be bad rule syntax or a bug
2971=\u0E44\u0E21\u0E48\u0E21\u0E35\u0E01\u0E32\u0E23\u0E01\u0E33\u0E2B\u0E19\u0E14\u0E42\u0E21\u0E40\u0E14\u0E25\u0E01\u0E32\u0E23\u0E41\u0E22\u0E01\u0E27\u0E34\u0E40\u0E04\u0E23\u0E32\u0E30\u0E2B\u0E4C
# YMSG: query generation needs either leading object and at least one key or a mapping to parameters. The error is returned if something is missing 
2972=\u0E01\u0E32\u0E23\u0E23\u0E27\u0E21\u0E2D\u0E2D\u0E1A\u0E40\u0E08\u0E04\u0E2B\u0E25\u0E31\u0E01 \u0E04\u0E35\u0E22\u0E4C \u0E41\u0E25\u0E30\u0E01\u0E32\u0E23\u0E41\u0E21\u0E47\u0E1B\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07
# YMSG: returned when there is no association between 2 objects in vocabulary
2973=\u0E04\u0E27\u0E32\u0E21\u0E2A\u0E31\u0E21\u0E1E\u0E31\u0E19\u0E18\u0E4C\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07 - \u0E44\u0E21\u0E48\u0E21\u0E35\u0E41\u0E2D\u0E17\u0E17\u0E23\u0E34\u0E1A\u0E34\u0E27\u0E15\u0E4C
# YMSG: returned when there is a use of attribute based on predictive model but the procedure for the predictive model is not defined
2974=\u0E44\u0E21\u0E48\u0E1E\u0E1A\u0E02\u0E31\u0E49\u0E19\u0E15\u0E2D\u0E19\u0E02\u0E2D\u0E07 Predictive Module {0}
# YMSG: outputs tanle type is mandatory. error when missing 
2975=\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E1C\u0E25\u0E25\u0E31\u0E1E\u0E18\u0E4C\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07
# YMSG: error when is out name is missing in vocabulary output names 
2976=\u0E0A\u0E37\u0E48\u0E2D\u0E40\u0E2D\u0E32\u0E17\u0E4C\u0E1E\u0E38\u0E17\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07
# YMSG: error when rule body type is different from text or decisionTable 
2977=\u0E1B\u0E23\u0E30\u0E40\u0E20\u0E17\u0E40\u0E19\u0E37\u0E49\u0E2D\u0E2B\u0E32\u0E02\u0E2D\u0E07\u0E01\u0E0F\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07
# YMSG: return from Runtime plugins, in case of unsupported change mode
2978=\u0E42\u0E2B\u0E21\u0E14\u0E01\u0E32\u0E23\u0E40\u0E1B\u0E25\u0E35\u0E48\u0E22\u0E19\u0E41\u0E1B\u0E25\u0E07 '{0}' \u0E44\u0E21\u0E48\u0E44\u0E14\u0E49\u0E23\u0E31\u0E1A\u0E01\u0E32\u0E23\u0E2A\u0E19\u0E31\u0E1A\u0E2A\u0E19\u0E38\u0E19\u0E2A\u0E33\u0E2B\u0E23\u0E31\u0E1A\u0E17\u0E23\u0E31\u0E1E\u0E22\u0E32\u0E01\u0E23
# YMSG: return from Runtime plugin - generate, for informing on the change mode for current resource
2979=\u0E01\u0E32\u0E23\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E17\u0E23\u0E31\u0E1E\u0E22\u0E32\u0E01\u0E23, \u0E43\u0E19\u0E42\u0E2B\u0E21\u0E14\u0E01\u0E32\u0E23\u0E40\u0E1B\u0E25\u0E35\u0E48\u0E22\u0E19\u0E41\u0E1B\u0E25\u0E07\: '{0}'
# YMSG: return when expression  
2980=\u0E40\u0E01\u0E34\u0E14\u0E02\u0E49\u0E2D\u0E1C\u0E34\u0E14\u0E1E\u0E25\u0E32\u0E14\u0E43\u0E19\u0E01\u0E32\u0E23\u0E41\u0E22\u0E01\u0E27\u0E34\u0E40\u0E04\u0E23\u0E32\u0E30\u0E2B\u0E4C\u0E19\u0E34\u0E1E\u0E08\u0E19\u0E4C\: '{0}'
# YMSG: return when expression  
2981=\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E2A\u0E23\u0E49\u0E32\u0E07\u0E41\u0E1A\u0E1A\u0E23\u0E48\u0E32\u0E07\u0E01\u0E0E '{0}' \u0E21\u0E35\u0E01\u0E32\u0E23\u0E43\u0E0A\u0E49\u0E0A\u0E37\u0E48\u0E2D\u0E19\u0E35\u0E49\u0E2D\u0E22\u0E39\u0E48\u0E41\u0E25\u0E49\u0E27\u0E42\u0E14\u0E22\u0E2B\u0E19\u0E36\u0E48\u0E07\u0E43\u0E19\u0E2D\u0E2D\u0E1A\u0E40\u0E08\u0E04\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E43\u0E19\u0E04\u0E33\u0E28\u0E31\u0E1E\u0E17\u0E4C '{1}'



#############################
# API: Get params
#############################

# 3100 - 3999 - get params messages

# YMSG: return from  ruleBodyAnalyzer, in case of businessRule.type is not text
3100=\u0E1B\u0E23\u0E30\u0E40\u0E20\u0E17\u0E01\u0E0F\u0E17\u0E32\u0E07\u0E18\u0E38\u0E23\u0E01\u0E34\u0E08\u0E04\u0E27\u0E23\u0E40\u0E1B\u0E47\u0E19\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21
# YMSG: return from  ruleBodyAnalyzer, in case of Vocabulary is missing
3101=\u0E04\u0E33\u0E28\u0E31\u0E1E\u0E17\u0E4C\u0E02\u0E32\u0E14\u0E2B\u0E32\u0E22\u0E44\u0E1B

#############################/
# API: Rule service consumption
#############################/
# 4100 - 4999 messages

# YMSG: return message in case the output is partial
4100=\u0E41\u0E2A\u0E14\u0E07 {0} \u0E23\u0E32\u0E22\u0E01\u0E32\u0E23 \u0E01\u0E23\u0E38\u0E13\u0E32\u0E08\u0E33\u0E44\u0E27\u0E49\u0E27\u0E48\u0E32\u0E19\u0E35\u0E48\u0E04\u0E37\u0E2D\u0E0A\u0E38\u0E14\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E1C\u0E25\u0E25\u0E31\u0E1E\u0E18\u0E4C\u0E40\u0E1E\u0E35\u0E22\u0E07\u0E1A\u0E32\u0E07\u0E2A\u0E48\u0E27\u0E19 \u0E16\u0E49\u0E32\u0E21\u0E35\u0E01\u0E32\u0E23\u0E01\u0E33\u0E2B\u0E19\u0E14\u0E41\u0E1F\u0E25\u0E01 saveResult \u0E40\u0E1B\u0E47\u0E19 TRUE \u0E08\u0E30\u0E1E\u0E1A\u0E0A\u0E38\u0E14\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E1C\u0E25\u0E25\u0E31\u0E1E\u0E18\u0E4C\u0E17\u0E31\u0E49\u0E07\u0E2B\u0E21\u0E14\u0E43\u0E19\u0E15\u0E32\u0E23\u0E32\u0E07\u0E40\u0E2D\u0E32\u0E17\u0E4C\u0E1E\u0E38\u0E17 '{'1}

#############################/
# Halm and Installation
#############################/

# YMSG: Post Activation API success
10000=\u0E2A\u0E04\u0E23\u0E34\u0E1B\u0E15\u0E4C\u0E01\u0E32\u0E23\u0E01\u0E33\u0E2B\u0E19\u0E14\u0E23\u0E39\u0E1B\u0E41\u0E1A\u0E1A\u0E2A\u0E33\u0E2B\u0E23\u0E31\u0E1A Framework \u0E01\u0E0E\u0E02\u0E2D\u0E07 SAP HANA \u0E40\u0E2A\u0E23\u0E47\u0E08\u0E2A\u0E21\u0E1A\u0E39\u0E23\u0E13\u0E4C\u0E41\u0E25\u0E49\u0E27
# YMSG: Post Activation API failed
10001=\u0E21\u0E35\u0E02\u0E49\u0E2D\u0E1C\u0E34\u0E14\u0E1E\u0E25\u0E32\u0E14\u0E40\u0E01\u0E34\u0E14\u0E02\u0E36\u0E49\u0E19\u0E43\u0E19\u0E2A\u0E04\u0E23\u0E34\u0E1B\u0E15\u0E4C\u0E01\u0E32\u0E23\u0E01\u0E33\u0E2B\u0E19\u0E14\u0E23\u0E39\u0E1B\u0E41\u0E1A\u0E1A Framework \u0E01\u0E0E\u0E02\u0E2D\u0E07 SAP HANA {0}
# YMSG: Post Activation API failed
10002=\u0E15\u0E23\u0E27\u0E08\u0E1E\u0E1A\u0E01\u0E32\u0E23\u0E01\u0E33\u0E2B\u0E19\u0E14\u0E23\u0E39\u0E1B\u0E41\u0E1A\u0E1A\u0E17\u0E35\u0E48\u0E21\u0E35\u0E2A\u0E33\u0E2B\u0E23\u0E31\u0E1A\u0E41\u0E2D\u0E1E\u0E1E\u0E25\u0E34\u0E40\u0E04\u0E0A\u0E31\u0E19\u0E1A\u0E19\u0E40\u0E27\u0E47\u0E1A\u0E02\u0E2D\u0E07 Framework \u0E01\u0E0E\u0E02\u0E2D\u0E07 SAP HANA \u0E14\u0E31\u0E07\u0E19\u0E31\u0E49\u0E19\u0E08\u0E36\u0E07\u0E44\u0E21\u0E48\u0E2D\u0E19\u0E38\u0E0D\u0E32\u0E15\u0E43\u0E2B\u0E49\u0E01\u0E33\u0E2B\u0E19\u0E14\u0E04\u0E48\u0E32\u0E01\u0E32\u0E23\u0E01\u0E33\u0E2B\u0E19\u0E14\u0E23\u0E39\u0E1B\u0E41\u0E1A\u0E1A\u0E15\u0E31\u0E49\u0E07\u0E15\u0E49\u0E19\u0E2A\u0E33\u0E2B\u0E23\u0E31\u0E1A\u0E41\u0E2D\u0E1E\u0E1E\u0E25\u0E34\u0E40\u0E04\u0E0A\u0E31\u0E19\u0E1A\u0E19\u0E40\u0E27\u0E47\u0E1A
# YMSG: Post Activation API failed
10003=\u0E01\u0E32\u0E23\u0E01\u0E33\u0E2B\u0E19\u0E14\u0E23\u0E39\u0E1B\u0E41\u0E1A\u0E1A\u0E02\u0E2D\u0E07\u0E41\u0E2D\u0E1E\u0E1E\u0E25\u0E34\u0E40\u0E04\u0E0A\u0E31\u0E19\u0E1A\u0E19\u0E40\u0E27\u0E47\u0E1A\u0E2A\u0E33\u0E2B\u0E23\u0E31\u0E1A Framework \u0E01\u0E0E\u0E02\u0E2D\u0E07 SAP HANA \u0E25\u0E49\u0E21\u0E40\u0E2B\u0E25\u0E27 \u0E40\u0E19\u0E37\u0E48\u0E2D\u0E07\u0E08\u0E32\u0E01\u0E21\u0E35\u0E02\u0E49\u0E2D\u0E1C\u0E34\u0E14\u0E1E\u0E25\u0E32\u0E14\u0E17\u0E32\u0E07\u0E40\u0E17\u0E04\u0E19\u0E34\u0E04 \u0E40\u0E2B\u0E15\u0E38\u0E1C\u0E25\: {0}
# YMSG: Post Activation API failed
10004=\u0E21\u0E35\u0E1A\u0E23\u0E34\u0E01\u0E32\u0E23\u0E01\u0E0E\u0E2B\u0E23\u0E37\u0E2D\u0E01\u0E0E\u0E17\u0E35\u0E48\u0E21\u0E35\u0E1A\u0E23\u0E34\u0E01\u0E32\u0E23\u0E41\u0E1A\u0E1A\u0E1D\u0E31\u0E07\u0E15\u0E31\u0E27\u0E2D\u0E22\u0E39\u0E48\u0E41\u0E25\u0E49\u0E27\u0E43\u0E19\u0E23\u0E30\u0E1A\u0E1A \u0E14\u0E31\u0E07\u0E19\u0E31\u0E49\u0E19\u0E08\u0E36\u0E07\u0E44\u0E21\u0E48\u0E2D\u0E19\u0E38\u0E0D\u0E32\u0E15\u0E43\u0E2B\u0E49\u0E17\u0E33\u0E01\u0E32\u0E23\u0E2D\u0E31\u0E1E\u0E40\u0E14\u0E17\u0E40\u0E02\u0E15\u0E40\u0E27\u0E25\u0E32
# YMSG: Post Activation API failed
10005=\u0E21\u0E35\u0E1A\u0E23\u0E34\u0E01\u0E32\u0E23\u0E01\u0E0E\u0E2B\u0E23\u0E37\u0E2D\u0E01\u0E0E\u0E17\u0E35\u0E48\u0E21\u0E35\u0E1A\u0E23\u0E34\u0E01\u0E32\u0E23\u0E41\u0E1A\u0E1A\u0E1D\u0E31\u0E07\u0E15\u0E31\u0E27\u0E2D\u0E22\u0E39\u0E48\u0E41\u0E25\u0E49\u0E27\u0E43\u0E19\u0E23\u0E30\u0E1A\u0E1A \u0E14\u0E31\u0E07\u0E19\u0E31\u0E49\u0E19\u0E08\u0E36\u0E07\u0E44\u0E21\u0E48\u0E2D\u0E19\u0E38\u0E0D\u0E32\u0E15\u0E43\u0E2B\u0E49\u0E17\u0E33\u0E01\u0E32\u0E23\u0E2D\u0E31\u0E1E\u0E40\u0E14\u0E17 Schema \u0E02\u0E2D\u0E07\u0E23\u0E31\u0E19\u0E44\u0E17\u0E21\u0E4C
