
# This file contains messages descriptions arranged in sections according to HRF APIs
# These descriptions are translated.
# Adding a new message requires also update of message.xsjslib file by the new ID

#############################
# common
#############################
# 10 - 999 - common messages

# YMSG: return from resource activation, in case of a resource does not exist in repository
10=\uB9AC\uC18C\uC2A4 \uD65C\uC131\uD654\uAC00 \uBD88\uAC00\uB2A5\uD569\uB2C8\uB2E4. \uB9AC\uC18C\uC2A4\uAC00 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from resource activation, in case of a resource suffix is not one of HRF resources
11=\uB9AC\uC18C\uC2A4 \uD65C\uC131\uD654\uAC00 \uBD88\uAC00\uB2A5\uD569\uB2C8\uB2E4. '{0}' \uC811\uBBF8\uBD80\uAC00 \uC9C0\uC6D0\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
# YMSG: return from resource activation, in case of a resource package does not exist in repository
12=\uB9AC\uC18C\uC2A4 \uD65C\uC131\uD654\uAC00 \uBD88\uAC00\uB2A5\uD569\uB2C8\uB2E4. \uD328\uD0A4\uC9C0 '{0}'\uC774(\uAC00) \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from runtime plug in, in case of invalid attribute
13=\uB9AC\uC18C\uC2A4 \uD65C\uC131\uD654\uAC00 \uBD88\uAC00\uB2A5\uD569\uB2C8\uB2E4. \uD2B9\uC131 '{0}'\uC774(\uAC00) \uC2A4\uD0A4\uB9C8\uC5D0 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from  runtime plug in, in case of invalid attribute
14=\uB9AC\uC18C\uC2A4 \uD65C\uC131\uD654\uAC00 \uBD88\uAC00\uB2A5\uD569\uB2C8\uB2E4. \uD544\uC218 \uD2B9\uC131 \uAC12 '{0}'\uC774(\uAC00) \uB204\uB77D\uB418\uC5C8\uC2B5\uB2C8\uB2E4.
# YMSG: return from  runtime plug in, in case none of a predefined set of fields is specified
15=\uB9AC\uC18C\uC2A4 \uD65C\uC131\uD654\uAC00 \uBD88\uAC00\uB2A5\uD569\uB2C8\uB2E4. \uC120\uD0DD \uD2B9\uC131 {0} \uC911 \uCD5C\uC18C \uD558\uB098\uC758 \uD2B9\uC131\uC774 \uB204\uB77D\uB418\uC5C8\uC2B5\uB2C8\uB2E4.
# YMSG: return from  runtime plug in, in case of invalid field (e.g vocabulary doesn't exist)
16=\uB9AC\uC18C\uC2A4 \uD65C\uC131\uD654\uAC00 \uBD88\uAC00\uB2A5\uD569\uB2C8\uB2E4. \uD2B9\uC131 {0}\uC758 \uAC12\uC774 \uC720\uD6A8\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
# YMSG: return from runtime plug in, in case of inconsistent fields combination(e.g. vocabulary and output names doesn't match)
17=\uB9AC\uC18C\uC2A4 \uD65C\uC131\uD654\uAC00 \uBD88\uAC00\uB2A5\uD569\uB2C8\uB2E4. {0}\uACFC(\uC640) {1}\uC758 \uC870\uD569\uC774 \uC720\uD6A8\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
# YMSG: return from  runtime plug in, in case of invalid resource id (e.g. package / file name is missing)
23=\uB9AC\uC18C\uC2A4 \uD65C\uC131\uD654\uAC00 \uBD88\uAC00\uB2A5\uD569\uB2C8\uB2E4. \uB9AC\uC18C\uC2A4\uAC00 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from  runtime plug in, in case of error from REL validation
24=\uD544\uB4DC {0}\uC5D0 \uC624\uB958 \uC788\uC74C\: {1}
# YMSG: return from  REST service, in case of http request contains non supported method
25=\uBA54\uC18C\uB4DC\uAC00 \uC2E4\uD328\uD588\uC2B5\uB2C8\uB2E4. \uBA54\uC18C\uB4DC \#{0}\uC774(\uAC00) \uC9C0\uC6D0\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
# YMSG:  technical error from platform
26=\uAE30\uC220\uC801 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4({0}).
# YMSG: return from resource activation, in case of a resource does not exist in repository
27=\uB9AC\uC18C\uC2A4\uAC00 \uC5C6\uC2B5\uB2C8\uB2E4.

# 100 - 200 - Authorization

# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
100=\uC774 \uC561\uC158\uC744 \uC218\uD589\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
101=\uADDC\uCE59\uC744 \uC5C5\uB370\uC774\uD2B8\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
102=\uADDC\uCE59\uC744 \uC0AD\uC81C\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
103=\uADDC\uCE59\uC744 \uC0DD\uC131\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
104=\uADDC\uCE59\uC744 \uC77D\uC744 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
105=\uADDC\uCE59 \uC11C\uBE44\uC2A4\uB97C \uC5C5\uB370\uC774\uD2B8\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
106=\uADDC\uCE59 \uC11C\uBE44\uC2A4\uB97C \uC0AD\uC81C\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
107=\uADDC\uCE59 \uC11C\uBE44\uC2A4\uB97C \uC0DD\uC131\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
108=\uADDC\uCE59 \uC11C\uBE44\uC2A4\uB97C \uC77D\uC744 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
109=\uADDC\uCE59 \uC11C\uBE44\uC2A4\uB97C \uC2E4\uD589\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
110=\uC5B4\uD718\uB97C \uC5C5\uB370\uC774\uD2B8\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
111=\uC5B4\uD718\uB97C \uC0AD\uC81C\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
112=\uC5B4\uD718\uB97C \uC0DD\uC131\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
113=\uC5B4\uD718\uB97C \uC77D\uC744 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
114=\uADDC\uCE59 \uD15C\uD50C\uB9BF\uC744 \uC5C5\uB370\uC774\uD2B8\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
115=\uADDC\uCE59 \uD15C\uD50C\uB9BF\uC744 \uC0AD\uC81C\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
116=\uADDC\uCE59 \uD15C\uD50C\uB9BF\uC744 \uC0DD\uC131\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
117=\uADDC\uCE59 \uD15C\uD50C\uB9BF\uC744 \uC77D\uC744 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
118=\uADDC\uCE59 \uC11C\uBE44\uC2A4\uB97C \uC0DD\uC131 \uB610\uB294 \uC5C5\uB370\uC774\uD2B8\uD560 \uAD8C\uD55C\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.
#############################
# API: Validate
#############################
# 1100 - 1199 - REL validation messages

# YMSG: return from REL, the beginning of any REL validation error - in case of a wrong statement 
1100=\uD45C\uD604\uC2DD\uC5D0 \uC624\uB958\uAC00 \uC788\uC2B5\uB2C8\uB2E4.
# YMSG: return from REL parser, in case of a wrong entry (syntax) and maximum 3 option are optional instead 
1101=\uD45C\uD604\uC2DD\uC5D0 \uC624\uB958\uAC00 \uC788\uC2B5\uB2C8\uB2E4. {0}\uC744(\uB97C) {1} \uB300\uC2E0\uC5D0 \uC785\uB825\uD558\uC2ED\uC2DC\uC624.
# YMSG: return from REL parser, in case of a wrong entry (syntax) and more than 3 option are optional instead  
1102=\uD45C\uD604\uC2DD\uC5D0 \uC624\uB958\uAC00 \uC788\uC2B5\uB2C8\uB2E4. {0}\uC740(\uB294) \uC720\uD6A8\uD55C \uC5D4\uD2B8\uB9AC\uAC00 \uC544\uB2D9\uB2C8\uB2E4.
# YMSG: return from REL parser, in case of a wrong input
1103=\uD45C\uD604\uC2DD\uC5D0 \uC624\uB958\uAC00 \uC788\uC2B5\uB2C8\uB2E4. {0}\uC744(\uB97C) \uC81C\uAC70\uD558\uC2ED\uC2DC\uC624.
# YMSG: return from REL model, in case of collection OM when single value in needed
1104=\uD45C\uD604\uC2DD\uC5D0 \uC624\uB958\uAC00 \uC788\uC2B5\uB2C8\uB2E4. {0}\uC774(\uAC00) \uAC12\uC758 \uB9AC\uC2A4\uD2B8\uC785\uB2C8\uB2E4. \uB2E8\uC77C \uAC12\uC744 \uD45C\uC2DC\uD558\uB294 \uD45C\uD604\uC2DD\uC73C\uB85C \uBCC0\uACBD\uD558\uC2ED\uC2DC\uC624.
# YMSG: return from REL model, in case of a wrong input
1105=\uD45C\uD604\uC2DD\uC5D0 \uC624\uB958\uAC00 \uC788\uC2B5\uB2C8\uB2E4. {0} \uB300\uC2E0\uC5D0 \uC720\uD6A8\uD55C \uD53C\uC5F0\uC0B0\uC790\uB97C \uC785\uB825\uD558\uC2ED\uC2DC\uC624.
# YMSG: return from REL parser, in case of an incomplete expression
1106=\uD45C\uD604\uC2DD\uC774 \uC644\uC804\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
# YMSG: return from REL lexer, in case of missing token at EOF
1107=\uD45C\uD604\uC2DD\uC5D0 \uC624\uB958\uAC00 \uC788\uC2B5\uB2C8\uB2E4. \uD45C\uD604\uC2DD\uC758 \uB05D\uC5D0 {0}\uC744(\uB97C) \uC785\uB825\uD558\uC2ED\uC2DC\uC624.
# YMSG: return from REL lexer, in case of wrong token
1108=\uD45C\uD604\uC2DD\uC5D0 \uC624\uB958\uAC00 \uC788\uC2B5\uB2C8\uB2E4. {0}\uC744(\uB97C) '{'1} \uB300\uC2E0\uC5D0 \uC785\uB825\uD558\uC2ED\uC2DC\uC624.
# YMSG: return from REL entity, in case of missing current
1109=\uD45C\uD604\uC2DD\uC5D0 \uC624\uB958\uAC00 \uC788\uC2B5\uB2C8\uB2E4. 'WHERE' \uC808\uC5D0 'CURRENT'\uAC00 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from REL entity, in case of redundant 'current'
1110=\uD45C\uD604\uC2DD\uC5D0 \uC624\uB958\uAC00 \uC788\uC2B5\uB2C8\uB2E4. 'CURRENT'\uAC00 \uC911\uBCF5\uB429\uB2C8\uB2E4. 'CURRENT'\uB97C \uD558\uB098 \uC81C\uAC70\uD558\uC2ED\uC2DC\uC624.
# YMSG: return from REL vocabulary utils, in case of invalid root object
1111=\uB8E8\uD2B8 \uC624\uBE0C\uC81D\uD2B8\uAC00 \uC720\uD6A8\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
# YMSG: return from REL vocabulary utils, in case of invalid association
1112=\uC5F0\uAD00 \uAD00\uACC4\uAC00 \uC720\uD6A8\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
# YMSG: return from REL vocabulary utils, in case of invalid association or attribute
1113=\uC5F0\uAD00 \uAD00\uACC4 \uB610\uB294 \uD2B9\uC131\uC774 \uC720\uD6A8\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
# YMSG: return from REL vocabulary utils, in case of root is simple attribute
1114=\uB8E8\uD2B8\uB294 \uB2E8\uC21C \uD2B9\uC131\uC77C \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from REL vocabulary utils, in case of attribute not found
1115=\uACBD\uB85C\uAC00 \uC644\uC804\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4. \uD2B9\uC131\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from REL entity, in case of using 'current' outside of 'where'
1116=\uD45C\uD604\uC2DD\uC5D0\uC11C \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4. \uD0A4\uC6CC\uB4DC '\uD604\uC7AC'\uB294 'WHERE' \uC808\uC5D0\uC11C\uB9CC \uC0AC\uC6A9\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.
# YMSG: return from REL entity, in case of using 'current' incorrectly with arithmetic
1117=\uD45C\uD604\uC2DD\uC5D0\uC11C \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4. \uD0A4\uC6CC\uB4DC '\uD604\uC7AC'\uB294 'WHERE' \uC808\uC5D0\uC11C \uBE44\uAD50 \uC5F0\uC0B0\uC790\uC758 \uD55C \uBA74\uC5D0 \uC788\uB294 \uBAA8\uB4E0 \uD53C\uC5F0\uC0B0\uC790\uC5D0 \uC801\uC6A9\uD574\uC57C \uD569\uB2C8\uB2E4.
# YMSG: return from REL parser utils, in case of using value that doen't exist in closed value list
1118=\uD45C\uD604\uC2DD\uC5D0 \uC624\uB958\uAC00 \uC788\uC2B5\uB2C8\uB2E4. '{0}'\uC740(\uB294) \uAC12 \uB9AC\uC2A4\uD2B8 '{1}'\uC5D0 \uC18D\uD55C \uC62C\uBC14\uB978 \uAC12\uC774 \uC544\uB2D9\uB2C8\uB2E4.
# YMSG: return from REL parser utils, in case of using value that doen't exist in closed value list
1119=\uD45C\uD604\uC2DD\uC5D0 \uC624\uB958\uAC00 \uC788\uC2B5\uB2C8\uB2E4. '{0}' \uC5F0\uC0B0\uC790\uB294 \uAC12 \uB9AC\uC2A4\uD2B8 \uD2B9\uC131('{1}')\uACFC \uD568\uAED8 \uC0AC\uC6A9\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from REL parser utils, in case of using value that doen't exist in closed value list
1120=\uD45C\uD604\uC2DD\uC5D0 \uC624\uB958\uAC00 \uC788\uC2B5\uB2C8\uB2E4. '\uBAA8\uB450'\uB77C\uB294 \uD0A4\uC6CC\uB4DC\uB294 '\uD604\uC7AC'\uB77C\uB294 \uD0A4\uC6CC\uB4DC\uAC00 \uC788\uB294 \uD53C\uC5F0\uC0B0\uC790 \uB4A4\uC5D0 \uC62C \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from REL parser utils, in case of using value that doen't exist in closed value list
1121=\uD45C\uD604\uC2DD\uC5D0 \uC624\uB958\uAC00 \uC788\uC2B5\uB2C8\uB2E4. \uAC19\uC740 \uBB38\uC5D0\uC11C '\uBAA8\uB450'\uB77C\uB294 \uD0A4\uC6CC\uB4DC\uB97C \uC5EC\uB7EC \uBC88 \uC0AC\uC6A9\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.


# 1200 - 1999 - validation messages

#############################
# API : resource CRUD
#############################
# 2100 - 2299 - vocabulary messages

# YMSG: return from vocabulary runtime plug in, in case of error in expression
2100='{0}'\uC758 \uD45C\uD604\uC2DD \uAD6C\uBB38\uC744 \uBD84\uC11D\uD558\uB294 \uB3D9\uC548 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4('{1}', '{2}').
# YMSG: return from vocabulary runtime plug in, in case of error in rule
2101='{0}'\uC758 \uADDC\uCE59\uC5D0 \uC624\uB958\uAC00 \uC788\uC2B5\uB2C8\uB2E4('{1}', '{2}').
# YMSG: return from vocabulary runtime plug in, in case the parameter type already exists
2102='{0}'\uC758 '{1}', \uC774\uB984 '{2}'\uC774(\uAC00) \uC774\uBBF8 \uC788\uC2B5\uB2C8\uB2E4.
# YMSG: return from vocabulary runtime plug in, in case parameter name isn't valid
2103=\uC704\uCE58 '{0}'\: '{1}', \uC798\uBABB\uB41C \uC774\uB984\: '{2}'
# YMSG: return from vocabulary runtime plug in, in case one of action/output names aren't valid
2104=\uC704\uCE58 '{0}'\: \uC798\uBABB\uB41C \uC774\uB984\: '{1}'
# YMSG: return from vocabulary runtime plug in, in case name already exists
2105=\uC774\uB984 '{0}'\uC774(\uAC00) '{1}'\uC5D0 \uC5EC\uB7EC \uBC88 \uC815\uC758\uB418\uC5C8\uC2B5\uB2C8\uB2E4.
# YMSG : return from vocabulary runtime plug in, in case the output has no parameters
2106=\uCD9C\uB825\uC5D0 \uB9E4\uAC1C\uBCC0\uC218\uAC00 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from vocabulary runtime plug in, in case one of the attributes has an invalid name
2107=\uD2B9\uC131 \uC774\uB984 '{0}'\uC774(\uAC00) \uC720\uD6A8\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
# YMSG: return from vocabulary runtime plug in, in case object name of declare more than once
2108={0}\: '{'1}\uC774(\uAC00) \uC774\uBBF8 \uC788\uC2B5\uB2C8\uB2E4. 
# YMSG: return from vocabulary runtime plug in, in case attribute name of declare more than once
2109=\uD2B9\uC131\uC774 \uC774\uBBF8 \uC788\uC2B5\uB2C8\uB2E4(\uC624\uBE0C\uC81D\uD2B8 \= '{0}', \uD2B9\uC131 \= '{1}').
# YMSG: return from vocabulary runtime plug in, in case attribute name of declare more than once
2110=\uC5F0\uAD00 \uAD00\uACC4\uAC00 \uC774\uBBF8 \uC788\uC2B5\uB2C8\uB2E4(\uC624\uBE0C\uC81D\uD2B8 \= '{0}', \uC5F0\uAD00 \uAD00\uACC4 \= '{1}').
# YMSG : return from vocabulary runtime plug in, in case the source table isn't exists
2111=\uC18C\uC2A4 \uD14C\uC774\uBE14 '{0}'\uC774(\uAC00) \uC720\uD6A8\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
# YMSG : return from vocabulary runtime plug in, in case of one the association is invalid
2112=\uC5F0\uAD00 \uAD00\uACC4\uAC00 \uC720\uD6A8\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4(\uC624\uBE0C\uC81D\uD2B8 \= '{0}', \uC5F0\uAD00 \uAD00\uACC4 \= '{1}').
# YMSG : return from vocabulary runtime plug in, in case of one the association's attributes are invalid
2113=\uD2B9\uC131\uC774 \uC720\uD6A8\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4(\uC5F0\uAD00 \uAD00\uACC4 \= '{0}', \uD2B9\uC131 \= '{1}').
# YMSG: return from rule utils, in case of invalid vocabulary assignment
2114=\uC5B4\uD718'{0}'\uC774(\uAC00) \uC720\uD6A8\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
# YMSG: return from vocabulary runtime plug in, in case invalid alias content
2115=\uBCC4\uCE6D '{0}'\uC5D0 \uC798\uBABB\uB41C \uCEE8\uD150\uD2B8\uAC00 \uC788\uC2B5\uB2C8\uB2E4(\uC0AC\uC720\: '{1}').
# YMSG: return from vocabulary runtime plug in, in case invalid alias name
2116=\uBCC4\uCE6D \uC774\uB984 '{0}'\uC774(\uAC00) \uC798\uBABB\uB418\uC5C8\uC2B5\uB2C8\uB2E4. \uBCC4\uCE6D \uC774\uB984\uC5D0\uB294 \uC601\uC22B\uC790\uC640 \uBC11\uC904\uB9CC \uD3EC\uD568\uB420 \uC218 \uC788\uC73C\uBA70, \uC54C\uD30C\uBCB3 \uBB38\uC790\uB85C \uC2DC\uC791\uD574\uC57C \uD558\uACE0, \uADDC\uCE59\uC2DD \uC5B8\uC5B4\uC5D0\uC11C\uC758 \uC608\uC57D\uC5B4\uC77C \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from vocabulary runtime plug in, in case alias name collide with an data object name
2117=\uBCC4\uCE6D '{0}'\uC758 \uC774\uB984\uC774 \uC720\uD6A8\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4. \uBCC4\uCE6D\uC774 \uC774\uBBF8 \uB370\uC774\uD130 \uC624\uBE0C\uC81D\uD2B8 \uC774\uB984\uC73C\uB85C \uC874\uC7AC\uD569\uB2C8\uB2E4.
# YMSG: return from vocabulary runtime plug in, in case o alias dependency to itself
2118=\uBCC4\uCE6D '{0}'\uC5D0 \uC798\uBABB\uB41C \uCEE8\uD150\uD2B8\uAC00 \uC788\uC2B5\uB2C8\uB2E4. \uBCC4\uCE6D\uC744 \uC778\uC2DD\uD558\uBA74 \uBB34\uD55C \uB8E8\uD504\uAC00 \uBC1C\uC0DD\uD558\uAC8C \uB429\uB2C8\uB2E4.
# YMSG: return from vocabulary runtime plug in, when name already exists in another vocabulary in the DB. Example: In 'dataObjects', name 'player' already exists in 'aliases' vocabulary 'voca2'
2120='{0}'\uC5D0\uC11C \uC774\uB984 '{1}'\uC774(\uAC00) '{2}' \uC5B4\uD718 '{3}'\uC5D0 \uC774\uBBF8 \uC788\uC2B5\uB2C8\uB2E4.
# YMSG: return from vocabulary runtime plug in, scope name can't be Public or Private
2121=\uBC94\uC704 \uC774\uB984\uC774 \uC720\uD6A8\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4. \uBC94\uC704 \uC774\uB984\uC740 '\uACF5\uC6A9' \uB610\uB294 '\uC804\uC6A9'\uC774 \uB420 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from vocabulary runtime plug in, embedded vocabulary can't be with scope Global
2122=\uBC94\uC704 \uC720\uD615\uC774 \uC720\uD6A8\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4. \uC784\uBCA0\uB4DC\uB41C \uC5B4\uD718\uB294 '\uAE00\uB85C\uBC8C' \uC720\uD615\uC774 \uB420 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: Object does not exist
2125=\uC624\uBE0C\uC81D\uD2B8 '{0}'\uC774(\uAC00) \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from vocabulary runtime plug in, in case of a wrong data object name 
2126=\uB370\uC774\uD130 \uC624\uBE0C\uC81D\uD2B8 '{0}'\uC758 \uC774\uB984\uC774 \uC798\uBABB\uB418\uC5C8\uC2B5\uB2C8\uB2E4.  \uB370\uC774\uD130 \uC624\uBE0C\uC81D\uD2B8 \uC774\uB984\uC740 \uAE30\uC874 \uADDC\uCE59 \uD15C\uD50C\uB9BF \uC774\uB984 \uB610\uB294 \uADDC\uCE59, \uADDC\uCE59 \uD15C\uD50C\uB9BF \uC608\uC57D\uC5B4(\uB300\uC18C\uBB38\uC790 \uAD6C\uBD84\uB9CC) \uC911  \uD558\uB098\uC77C \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from vocabulary runtime plug in, in case of a wrong alias name
2127=\uBCC4\uCE6D \uC774\uB984 '{0}'\uC774(\uAC00) \uC798\uBABB\uB418\uC5C8\uC2B5\uB2C8\uB2E4. \uBCC4\uCE6D \uC774\uB984\uC740 \uAE30\uC874 \uADDC\uCE59 \uD15C\uD50C\uB9BF \uC774\uB984 \uB610\uB294 \uADDC\uCE59, \uADDC\uCE59 \uD15C\uD50C\uB9BF \uC608\uC57D\uC5B4(\uB300\uC18C\uBB38\uC790 \uAD6C\uBD84\uB9CC) \uC911  \uD558\uB098\uC77C \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from vocabulary runtime plug in, in case invalid data object name
2128=\uB370\uC774\uD130 \uC624\uBE0C\uC81D\uD2B8 '{0}'\uC758 \uC774\uB984\uC774 \uC798\uBABB\uB418\uC5C8\uC2B5\uB2C8\uB2E4. \uB370\uC774\uD130 \uC624\uBE0C\uC81D\uD2B8 \uC774\uB984\uC5D0\uB294 \uC601\uC22B\uC790\uC640 \uBC11\uC904\uB9CC \uD3EC\uD568\uB420 \uC218 \uC788\uC73C\uBA70, \uC54C\uD30C\uBCB3 \uBB38\uC790\uB85C \uC2DC\uC791\uD574\uC57C \uD558\uACE0, \uADDC\uCE59\uC2DD \uC5B8\uC5B4\uC5D0\uC11C\uC758 \uC608\uC57D\uC5B4\uC77C \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from vocabulary runtime plug in, in case of duplicate alias names
2129=\uBCC4\uCE6D '{0}'\uC774(\uAC00) \uBCC4\uCE6D \uC774\uB984\uC73C\uB85C \uC774\uBBF8 \uC874\uC7AC\uD569\uB2C8\uB2E4.
# YMSG: return from vocabulary runtime plug in, in case alias content is empty
2130=\uBCC4\uCE6D '{0}'\uC758 \uCEE8\uD150\uD2B8 \uB9E4\uAC1C\uBCC0\uC218\uAC00 \uBE44\uC5B4 \uC788\uC2B5\uB2C8\uB2E4.
# YMSG: return from vocabulary runtime plug in, in case alias name exists as as an attribute name
2131=\uBCC4\uCE6D \uC774\uB984 '{0}'\uC774(\uAC00) \uC798\uBABB\uB418\uC5C8\uC2B5\uB2C8\uB2E4. \uBCC4\uCE6D\uC774 \uD2B9\uC131 \uC774\uB984\uC73C\uB85C \uC774\uBBF8 \uC874\uC7AC\uD569\uB2C8\uB2E4.
# YMSG: return from vocabulary runtime plug in, in case alias name exists in other vocabulary with the same scope
2132=\uBCC4\uCE6D \uC774\uB984 '{0}'\uC774(\uAC00) \uC798\uBABB\uB418\uC5C8\uC2B5\uB2C8\uB2E4. \uC774\uB984\uC774 \uC5B4\uD718 '{2}'\uC758 \uC624\uBE0C\uC81D\uD2B8 '{1}'\uC5D0 \uB300\uD55C \uD2B9\uC131\uC73C\uB85C \uC774\uBBF8 \uC874\uC7AC\uD569\uB2C8\uB2E4.
# YMSG: return from vocabulary runtime plug in, in case alias name exists in objects rule or ruleTemplate
2133=\uBCC4\uCE6D \uC774\uB984 '{0}'\uC774(\uAC00) \uC798\uBABB\uB418\uC5C8\uC2B5\uB2C8\uB2E4. \uC774\uB984\uC774 \uC624\uBE0C\uC81D\uD2B8 '{1}'\uC5D0 \uC774\uBBF8 \uC788\uC2B5\uB2C8\uB2E4.
# YMSG: return from vocabulary runtime plug in, in case attribute name already exists as alias in other vocabulary
2134=\uD2B9\uC131 '{0}'\uC758 \uC774\uB984\uC774 \uC798\uBABB\uB418\uC5C8\uC2B5\uB2C8\uB2E4. \uC774\uB984\uC774 \uC5B4\uD718 '{1}'\uC758 \uBCC4\uCE6D\uC73C\uB85C \uC774\uBBF8 \uC874\uC7AC\uD569\uB2C8\uB2E4.
# YMSG: return from vocabulary runtime plug in, in case vocabulary declares it depends on a vocabulary which doesn't exists
2135=\uC9C0\uC815\uD55C \uC885\uC18D \uB300\uC0C1\uC778 '{0}'(\uC774)\uB77C\uB294 \uC5B4\uD718\uAC00 \uC874\uC7AC\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
# YMSG: return from vocabulary runtime plug in, in case implementor declare global vocabulary with dependencies
2136=\uC804\uC5ED \uC5B4\uD718\uB294 \uB2E4\uB978 \uC5B4\uD718\uC5D0 \uB300\uD55C \uC885\uC18D \uD56D\uBAA9\uC744 \uAC00\uC9C8 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from vocabulary runtime plug in, in case, in the same data object, there is association and attribute with the same name
2137=\uB370\uC774\uD130 \uC624\uBE0C\uC81D\uD2B8 '{0}'\uC5D0\uC11C \uC774\uB984 '{1}'\uC774(\uAC00) \uC5F0\uAD00 \uAD00\uACC4\uC640 \uD2B9\uC131\uC5D0 \uC0AC\uC6A9\uB429\uB2C8\uB2E4. \uB3D9\uC77C\uD55C \uC774\uB984\uC744 \uB450 \uC18D\uC131\uC5D0 \uD568\uAED8 \uC0AC\uC6A9\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from vocabulary runtime plug in, in case invalid alias name
2138=\uAC12 \uB9AC\uC2A4\uD2B8 '{0}'\uC758 \uC774\uB984\uC774 \uC798\uBABB\uB418\uC5C8\uC2B5\uB2C8\uB2E4. \uAC12 \uB9AC\uC2A4\uD2B8\uC758 \uC774\uB984\uC5D0\uB294 \uC601\uC22B\uC790\uC640 \uBC11\uC904\uB9CC \uC0AC\uC6A9 \uAC00\uB2A5\uD569\uB2C8\uB2E4. \uC54C\uD30C\uBCB3 \uBB38\uC790\uB85C \uC2DC\uC791\uD574\uC57C \uD558\uACE0, \uADDC\uCE59\uC2DD \uC5B8\uC5B4\uC758 \uC608\uC57D\uC5B4\uB294 \uC0AC\uC6A9\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from vocabulary runtime plug in, in case alias content is empty
2139=\uAC12 \uB9AC\uC2A4\uD2B8 '{0}'\uC774(\uAC00) \uBE44\uC5B4 \uC788\uC2B5\uB2C8\uB2E4.
# YMSG: return from vocabulary runtime plug in, in case alias content is empty
2140=\uAC12 \uB9AC\uC2A4\uD2B8 '{0}'(\uC815\uC758\uB41C \uC704\uCE58\: \uD2B9\uC131 '{1}', \uB370\uC774\uD130 \uC624\uBE0C\uC81D\uD2B8 '{2}')\uC774(\uAC00) \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from vocabulary runtime plug in, in case parameter size isn't valid
2141='{'0}\uC5D0\uC11C \uB9E4\uAC1C\uBCC0\uC218 '{'2}('{'3})\uC758 \uD06C\uAE30({1})\uB294 \uC9C0\uC815\uB41C \uB370\uC774\uD130 \uC720\uD615\uC5D0 \uC801\uD569\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
# YMSG: return from vocabulary - in case parameter content cannot be a collection 
2142=\uC561\uC158 '{0}'(\uC561\uC158 \uB9E4\uAC1C\uBCC0\uC218 '{1}')\uC5D0 \uB300\uD55C \uB9E4\uAC1C\uBCC0\uC218 \uC815\uC758\uAC00 \uC798\uBABB\uB418\uC5C8\uC2B5\uB2C8\uB2E4. \uCEEC\uB809\uC158 \uC720\uD615\uC758 \uB9E4\uAC1C\uBCC0\uC218\uB294 \uC561\uC158\uC5D0 \uD5C8\uC6A9\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.                                                                                                                                                                   .




# 2300 - 2499 rule template messages

# YMSG: return from Rule Template runtime plug in, in case of rule template name starts with a number
2300=\uADDC\uCE59 \uD15C\uD50C\uB9BF \uC0DD\uC131 \uB610\uB294 \uC5C5\uB370\uC774\uD2B8\uAC00 \uBD88\uAC00\uB2A5\uD569\uB2C8\uB2E4. \uADDC\uCE59 \uD15C\uD50C\uB9BF \uC774\uB984\uC740 \uC22B\uC790\uB85C \uC2DC\uC791\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from Rule Template runtime plug in, in case of illegal change in rule template attributes
2301=\uADDC\uCE59 \uD15C\uD50C\uB9BF \uD65C\uC131\uD654\uC5D0 \uC801\uD569\uD558\uC9C0 \uC54A\uC740 \uBCC0\uACBD\uC774 \uD3EC\uD568\uB418\uC5B4 \uC788\uC2B5\uB2C8\uB2E4.
# YMSG: return from Rule Template runtime plug in, in case of rule template update contains condition change
2302=\uADDC\uCE59 \uD15C\uD50C\uB9BF \uC0DD\uC131 \uB610\uB294 \uC5C5\uB370\uC774\uD2B8\uAC00 \uBD88\uAC00\uB2A5\uD569\uB2C8\uB2E4. \uADDC\uCE59 \uD15C\uD50C\uB9BF \uC870\uAC74\uC744 \uBCC0\uACBD\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from Rule Template runtime plug in, in case of rule template contains invalid condition 
2303=\uADDC\uCE59 \uD15C\uD50C\uB9BF \uC0DD\uC131 \uB610\uB294 \uC5C5\uB370\uC774\uD2B8\uAC00 \uBD88\uAC00\uB2A5\uD569\uB2C8\uB2E4. \uC870\uAC74 '{0}'\uC774(\uAC00) \uC720\uD6A8\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
# YMSG: return from Rule Template runtime plug in, in case of rule template deletion when there are rules assigned to the rule template  
2304=\uADDC\uCE59 \uD15C\uD50C\uB9BF {0}\uC744(\uB97C) \uC0AD\uC81C\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4. \uC774 \uADDC\uCE59 \uD15C\uD50C\uB9BF\uC5D0 \uB300\uD55C \uADDC\uCE59\uC774 \uC874\uC7AC\uD569\uB2C8\uB2E4.
# YMSG: return from Rule Template runtime plug in, in case of duplicate rule template name  
2305=\uADDC\uCE59 \uD15C\uD50C\uB9BF \uC0DD\uC131\uC774 \uBD88\uAC00\uB2A5\uD569\uB2C8\uB2E4. \uADDC\uCE59 \uD15C\uD50C\uB9BF '{0}'\uC774(\uAC00) \uD328\uD0A4\uC9C0 '{1}'\uC5D0 \uC774\uBBF8 \uC788\uC2B5\uB2C8\uB2E4.
# YMSG: return from Rule Template runtime plug in, in case that rule template name starts with a number  
2306=\uADDC\uCE59 \uD15C\uD50C\uB9BF \uC774\uB984 - '{0}'\uC740(\uB294) \uC22B\uC790\uB85C \uC2DC\uC791\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from Rule Template runtime plug in, in case that rule template name already exist as data object  
2307=\uADDC\uCE59 \uD15C\uD50C\uB9BF '{0}'\uC744(\uB97C) \uC0DD\uC131\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4. \uADDC\uCE59 \uD15C\uD50C\uB9BF \uC774\uB984\uC774 \uC5B4\uD718 '{1}'\uC758 \uB370\uC774\uD130 \uC624\uBE0C\uC81D\uD2B8\uB85C \uC774\uBBF8 \uC0AC\uC6A9\uB418\uACE0 \uC788\uC2B5\uB2C8\uB2E4.
# YMSG: return from Rule Template runtime plug in, in case that rule template name already exist as alias
2308=\uADDC\uCE59 \uD15C\uD50C\uB9BF '{0}'\uC744(\uB97C) \uC0DD\uC131\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4. \uADDC\uCE59 \uD15C\uD50C\uB9BF \uC774\uB984\uC774 \uC5B4\uD718 '{1}'\uC758 \uBCC4\uCE6D\uC73C\uB85C \uC774\uBBF8 \uC0AC\uC6A9\uB418\uACE0 \uC788\uC2B5\uB2C8\uB2E4.


# 2500 - 2699 - rule messages

# YMSG: return from Rule runtime plug in, in case of resource contains additional attributes but not assigned to rule template   
2500=\uADDC\uCE59 \uC0DD\uC131\uC774 \uBD88\uAC00\uB2A5\uD569\uB2C8\uB2E4. \uADDC\uCE59\uC774 \uD15C\uD50C\uB9BF\uC744 \uAE30\uC900\uC73C\uB85C \uD558\uC9C0 \uC54A\uC74C\uC5D0\uB3C4 \uCD94\uAC00 \uD2B9\uC131\uC774 \uC785\uB825\uB418\uC5C8\uC2B5\uB2C8\uB2E4.
# YMSG: return from Rule runtime plug in, in case of rule template assignment change   
2501=\uADDC\uCE59 \uC5C5\uB370\uC774\uD2B8\uAC00 \uBD88\uAC00\uB2A5\uD569\uB2C8\uB2E4. \uADDC\uCE59\uC774 \uC0DD\uC131\uB41C \uD6C4\uC5D0\uB294 \uADDC\uCE59 \uD15C\uD50C\uB9BF \uC9C0\uC815\uC744 \uBCC0\uACBD\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from Rule runtime plug in, in case of vocabulary change  
2502=\uADDC\uCE59 \uC5C5\uB370\uC774\uD2B8\uAC00 \uBD88\uAC00\uB2A5\uD569\uB2C8\uB2E4. \uADDC\uCE59\uC774 \uC0DD\uC131\uB41C \uD6C4\uC5D0\uB294 \uC5B4\uD718 \uC9C0\uC815\uC744 \uBCC0\uACBD\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from Rule runtime plug in, in case of output change   
2503=\uADDC\uCE59 \uC5C5\uB370\uC774\uD2B8\uAC00 \uBD88\uAC00\uB2A5\uD569\uB2C8\uB2E4. \uADDC\uCE59\uC774 \uC0DD\uC131\uB41C \uD6C4\uC5D0\uB294 \uCD9C\uB825 \uC9C0\uC815\uC744 \uBCC0\uACBD\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from Rule runtime plug in, in case of rule contains additional attributes where assigned rule template does not contains additional attributes
2504=\uADDC\uCE59 \uC0DD\uC131\uC774 \uBD88\uAC00\uB2A5\uD569\uB2C8\uB2E4. \uC9C0\uC815\uB41C \uADDC\uCE59 \uD15C\uD50C\uB9BF\uC5D0 \uC18D\uD558\uC9C0 \uC54A\uB294 \uCD94\uAC00 \uD2B9\uC131\uC774 \uC785\uB825\uB418\uC5C8\uC2B5\uB2C8\uB2E4.
# YMSG: return from Rule runtime plug in, in case of execution context change
2505=\uADDC\uCE59 \uC5C5\uB370\uC774\uD2B8\uAC00 \uBD88\uAC00\uB2A5\uD569\uB2C8\uB2E4. \uADDC\uCE59\uC774 \uC0DD\uC131\uB41C \uD6C4\uC5D0\uB294 \uC2E4\uD589 \uCEE8\uD14D\uC2A4\uD2B8 \uC9C0\uC815\uC744 \uBCC0\uACBD\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from Rule runtime plug in, in case of invalid rule template assignment
2506=\uADDC\uCE59 \uD15C\uD50C\uB9BF '{0}'\uC774(\uAC00) \uC720\uD6A8\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
# YMSG: return from Rule runtime plug in, in case of invalid status transition
2507=\uADDC\uCE59 \uC5C5\uB370\uC774\uD2B8\uAC00 \uBD88\uAC00\uB2A5\uD569\uB2C8\uB2E4. \uC0C1\uD0DC\uB97C '{0}'\uC5D0\uC11C '{1}'(\uC73C)\uB85C \uBCC0\uACBD\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from Rule runtime plug in, in case of updating single consumption to non single consumption Rule
2510=\uC784\uBCA0\uB4DC\uB41C \uC11C\uBE44\uC2A4 \uC81C\uAC70\uB294 \uD5C8\uC6A9\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
# YMSG: return from Rule runtime plug in, in case of updating single embedded service in Rule
2511=\uC784\uBCA0\uB4DC\uB41C \uC11C\uBE44\uC2A4 \uC81C\uAC70 \uB610\uB294 \uBCC0\uACBD\uC740 \uD5C8\uC6A9\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
# YMSG: return from Rule runtime plug in, in case of more than one embedded services with the same name
2512=\uC784\uBCA0\uB4DC\uB41C \uC11C\uBE44\uC2A4 \uC774\uB984 '{0}'\uC774(\uAC00) \uC5EC\uB7EC \uAC1C \uC874\uC7AC\uD569\uB2C8\uB2E4.
# YMSG: return from Rule runtime plug in - update/create, in case the rule body is not valid
2513=\uADDC\uCE59 \uC0DD\uC131 \uB610\uB294 \uC5C5\uB370\uC774\uD2B8\uAC00 \uBD88\uAC00\uB2A5\uD569\uB2C8\uB2E4. \uADDC\uCE59 \uBCF8\uBB38\uC774 \uC62C\uBC14\uB974\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
# YMSG: return from Rule body validator - in case parameter is referenced to an unknown action
2514=\uB9E4\uAC1C\uBCC0\uC218 \uC815\uC758\uAC00 \uC798\uBABB\uB418\uC5C8\uC2B5\uB2C8\uB2E4. \uB9E4\uAC1C\uBCC0\uC218\uAC00 \uC5B4\uD718\uC5D0 \uC5C6\uB294 \uC561\uC158 '{0}'\uC744(\uB97C) \uCC38\uC870\uD569\uB2C8\uB2E4.
# YMSG: return from Rule body validator - in case parameter name isn't a valid parameter for action
2515=\uB9E4\uAC1C\uBCC0\uC218 \uC815\uC758\uAC00 \uC798\uBABB\uB418\uC5C8\uC2B5\uB2C8\uB2E4. \uC561\uC158 '{1}'\uC5D0 \uB300\uD55C \uB9E4\uAC1C\uBCC0\uC218 \uC774\uB984 '{0}'\uC774(\uAC00) \uC5B4\uD718\uC5D0 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from Rule body validator - in case action doesn't exist in the vocabulary
2516=\uC561\uC158 '{0}'\uC774(\uAC00) \uC5B4\uD718\uC5D0 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from Rule body validator - when the sent parameter isn't a required parameter in the sent output 
2517=\uB9E4\uAC1C\uBCC0\uC218 \uC815\uC758\uAC00 \uC798\uBABB\uB418\uC5C8\uC2B5\uB2C8\uB2E4. \uCD9C\uB825 '{1}'\uC5D0 \uB300\uD55C \uB9E4\uAC1C\uBCC0\uC218 \uC774\uB984 '{0}'\uC774(\uAC00) \uC5B4\uD718\uC5D0 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from Rule body validator - when the sent output doesn't exists in the vocabulary
2518=\uCD9C\uB825 '{0}'\uC774(\uAC00) \uC5B4\uD718\uC5D0 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from Rule body validator - when alias has more than one output parameter column
2519=\uBCC4\uCE6D\uC5D0 \uC5EC\uB7EC \uCD9C\uB825 \uB9E4\uAC1C\uBCC0\uC218\uAC00 \uC788\uC2B5\uB2C8\uB2E4.
# YMSG: return from Rule body validator - when the alias output parameters values do not have the same type X
2520=\uCD9C\uB825 \uB9E4\uAC1C\uBCC0\uC218 '{0}'\uC758 \uBAA8\uB4E0 \uAC12\uC740 \uB3D9\uC77C\uD55C \uC720\uD615\uC774\uC5B4\uC57C \uD569\uB2C8\uB2E4.
# YMSG: return from Rule runtime plug in, in case of assign rule to rule service that does not exist.
2521=\uADDC\uCE59 '{0}'\uC744(\uB97C) \uADDC\uCE59 \uC11C\uBE44\uC2A4 '{1}'\uC5D0 \uC9C0\uC815\uD558\uC9C0 \uBABB\uD588\uC2B5\uB2C8\uB2E4. \uADDC\uCE59 \uC11C\uBE44\uC2A4\uAC00 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: return from Rule runtime plug in, in case of assign rule to rule service with different vocabulary.
2522=\uADDC\uCE59 '{0}'\uC744(\uB97C) \uADDC\uCE59 \uC11C\uBE44\uC2A4 '{1}'\uC5D0 \uC9C0\uC815\uD558\uC9C0 \uBABB\uD588\uC2B5\uB2C8\uB2E4. \uADDC\uCE59 \uC11C\uBE44\uC2A4\uC640 \uADDC\uCE59\uC5D0 \uB3D9\uC77C\uD55C \uC5B4\uD718\uAC00 \uC815\uC758\uB418\uC5B4 \uC788\uC5B4\uC57C \uD569\uB2C8\uB2E4.
# YMSG: return from Rule runtime plug in, in case of assign rule to rule service with different output.
2523=\uADDC\uCE59 '{0}'\uC744(\uB97C) \uADDC\uCE59 \uC11C\uBE44\uC2A4 '{1}'\uC5D0 \uC9C0\uC815\uD558\uC9C0 \uBABB\uD588\uC2B5\uB2C8\uB2E4. \uADDC\uCE59 \uC11C\uBE44\uC2A4\uC640 \uADDC\uCE59\uC5D0 \uB3D9\uC77C\uD55C \uCD9C\uB825\uC774 \uC815\uC758\uB418\uC5B4 \uC788\uC5B4\uC57C \uD569\uB2C8\uB2E4.
# YMSG: return from Rule runtime plug in, in case of assign rule to rule service that is not indicated as manually assigned.
2524=\uADDC\uCE59 '{0}'\uC744(\uB97C) \uADDC\uCE59 \uC11C\uBE44\uC2A4 '{1}'\uC5D0 \uC9C0\uC815\uD558\uC9C0 \uBABB\uD588\uC2B5\uB2C8\uB2E4. \uD574\uB2F9 \uADDC\uCE59 \uC11C\uBE44\uC2A4\uB294 \uC790\uB3D9 \uADDC\uCE59 \uC9C0\uC815\uC6A9\uC73C\uB85C \uC124\uC815\uB418\uC5C8\uAE30 \uB54C\uBB38\uC5D0 \uC218\uB3D9 \uC9C0\uC815\uC774 \uD5C8\uC6A9\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
# YMSG: return from Rule runtime plug in - update/create, in case a custom condition is not valid
2525=\uADDC\uCE59\uC744 \uC0DD\uC131 \uB610\uB294 \uC5C5\uB370\uC774\uD2B8\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4. '{0}'\uC774(\uAC00) \uC62C\uBC14\uB978 \uC870\uAC74\uC774 \uC544\uB2D9\uB2C8\uB2E4.
# YMSG: return from Rule body validator - when ruleBody of type ruleSet has more than one condition column
2526=\uC798\uBABB\uB41C \uADDC\uCE59 \uC138\uD2B8\uC785\uB2C8\uB2E4. \uC870\uAC74\uC774 \uC5EC\uB7EC \uAC1C\uC778 \uADDC\uCE59\uC774 \uADDC\uCE59 \uC138\uD2B8 \uB0B4\uC5D0 \uC788\uC2B5\uB2C8\uB2E4.


# 2700 - 2899 - rule service messages

# YMSG: return from Rule service plug in, in case of wrong data object filter
2700=\uADDC\uCE59 \uC11C\uBE44\uC2A4 \uD544\uD130\uC5D0 \uC624\uB958\uAC00 \uC788\uC2B5\uB2C8\uB2E4.
# YMSG: return from Rule service plug in, in case of different data objects in execution context and filter
2701=\uC2E4\uD589 \uCEE8\uD14D\uC2A4\uD2B8\uC758 \uB370\uC774\uD130 \uC624\uBE0C\uC81D\uD2B8 '{0}'\uC774(\uAC00) \uD544\uD130\uC758 \uB370\uC774\uD130 \uC624\uBE0C\uC81D\uD2B8 '{1}'\uACFC(\uC640) \uB2E4\uB985\uB2C8\uB2E4.
# YMSG: return from  runtime plug in, in case of specified data object does not have the specified attribute (e.g. data object keys in rule service definition).
2704=\uADDC\uCE59 \uC11C\uBE44\uC2A4\uB97C \uC0DD\uC131 \uB610\uB294 \uC5C5\uB370\uC774\uD2B8\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4. \uB370\uC774\uD130 \uC624\uBE0C\uC81D\uD2B8 {0}(\uC5B4\uD718 {1})\uC5D0 \uD2B9\uC131 {2}\uC774(\uAC00) \uD3EC\uD568\uB418\uC5B4 \uC788\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
# YMSG: return from runtime plug in, in case of parameter mapping path contains a collection
2705=\uCEEC\uB809\uC158\uC774 \uC788\uB294 \uACBD\uB85C\uB294 \uD5C8\uC6A9\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4. \uACBD\uB85C\: {0};
# YMSG: return from runtime plug in, in case of data object mapping entry is not unique within an execution context .
2706=\uB370\uC774\uD130 \uC624\uBE0C\uC81D\uD2B8 - {0}\uC5D0 \uC911\uBCF5\uB41C \uB9E4\uD551\uC774 \uC788\uC2B5\uB2C8\uB2E4.
# YMSG: return from  runtime plug in, in case of parameter definition entry is not unique within an execution context .
2707=\uADDC\uCE59 \uC11C\uBE44\uC2A4\uB97C \uC0DD\uC131\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4. \uB9E4\uAC1C\uBCC0\uC218 {0}\uC774(\uAC00) \uC911\uBCF5\uB418\uC5C8\uC2B5\uB2C8\uB2E4.
# YMSG: return from  runtime plug in, in case of parameter mapping entry doesn't have a match parameter definition entry with in an execution context
2708=\uADDC\uCE59 \uC11C\uBE44\uC2A4\uB97C \uC0DD\uC131\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4. \uB9E4\uAC1C\uBCC0\uC218 {0}\uC774(\uAC00) \uC5C6\uACE0 \uB370\uC774\uD130 \uC624\uBE0C\uC81D\uD2B8\uC640 \uC5F0\uACB0\uB418\uC5B4 \uC788\uC2B5\uB2C8\uB2E4.
# YMSG: return from  runtime plug in, in case of ifentifiers in dataObject type parameter do not exist in data object from vocabulary
2709=\uADDC\uCE59 \uC11C\uBE44\uC2A4 '{0}'\uC758 \uB9E4\uAC1C\uBCC0\uC218 \uC815\uC758\uAC00 \uC798\uBABB\uB418\uC5C8\uC2B5\uB2C8\uB2E4. \uB9E4\uAC1C\uBCC0\uC218 '{1}'\uC5D0\uC11C, '{2}'\uC740(\uB294) \uC5B4\uD718 \uBC94\uC704 '{4}'\uC5D0 \uC788\uB294 \uB370\uC774\uD130 \uC624\uBE0C\uC81D\uD2B8 '{3}'\uC758 \uC62C\uBC14\uB978 \uD2B9\uC131\uC774 \uC544\uB2D9\uB2C8\uB2E4.
# YMSG: return from runtime plug in, in case of data object definition entry is not unique within parameter definition if service.
2710=\uADDC\uCE59 \uC11C\uBE44\uC2A4 '{0}'\uC758 \uB9E4\uAC1C\uBCC0\uC218 \uC815\uC758\uAC00 \uC798\uBABB\uB418\uC5C8\uC2B5\uB2C8\uB2E4. \uB370\uC774\uD130 \uC624\uBE0C\uC81D\uD2B8 '{1}'\uC774(\uAC00) \uC5EC\uB7EC \uB9E4\uAC1C\uBCC0\uC218\uC5D0 \uC758\uD574 \uCC38\uC870\uB418\uACE0 \uC788\uC2B5\uB2C8\uB2E4.
# YMSG: return from runtime plug in, only read-only rule services can be indicated to be created with result view
2711=\uADDC\uCE59 \uC11C\uBE44\uC2A4 '{0}'\uC744(\uB97C) \uC0DD\uC131\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4. \uACB0\uACFC \uBDF0\uAC00 \uC788\uB294 \uADDC\uCE59 \uC11C\uBE44\uC2A4\uB294 \uC77D\uAE30 \uC804\uC6A9\uC73C\uB85C \uD45C\uC2DC\uB418\uC5B4\uC57C \uD569\uB2C8\uB2E4.
# YMSG: return from runtime plug in, only explicit output rule services can be indicated to be created with result view
2712=\uADDC\uCE59 \uC11C\uBE44\uC2A4 '{0}'\uC744(\uB97C) \uC0DD\uC131\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4. \uACB0\uACFC \uBDF0\uAC00 \uC788\uB294 \uADDC\uCE59 \uC11C\uBE44\uC2A4\uC5D0\uB294 \uBA85\uC2DC\uC801\uC778 \uCD9C\uB825\uC774 \uC815\uC758\uB418\uC5B4 \uC788\uC5B4\uC57C \uD569\uB2C8\uB2E4.
# YMSG: returned from request handler. Rule requested to be removed from rule service but the rule is not assigned to it
2713=\uADDC\uCE59 \uC9C0\uC815\uC744 \uC81C\uAC70\uD558\uC9C0 \uBABB\uD588\uC2B5\uB2C8\uB2E4. \uADDC\uCE59 '{0}'\uC774(\uAC00) \uD574\uB2F9 \uADDC\uCE59 \uC11C\uBE44\uC2A4\uC5D0 \uC9C0\uC815\uB418\uC5B4 \uC788\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
# YMSG: return from  runtime plug in, in case of output contains collection parameter in event mode scenario
2714=\uADDC\uCE59 \uC11C\uBE44\uC2A4 '{0}'\uC744(\uB97C) \uC800\uC7A5\uD558\uC9C0 \uBABB\uD588\uC2B5\uB2C8\uB2E4. \uC2E4\uD589 \uCEE8\uD14D\uC2A4\uD2B8\uC5D0 \uB370\uC774\uD130 \uC624\uBE0C\uC81D\uD2B8\uAC00 \uC815\uC758\uB418\uC5B4 \uC788\uC9C0 \uC54A\uC740 \uADDC\uCE59 \uC11C\uBE44\uC2A4\uC758 \uACBD\uC6B0\uC5D0\uB294 \uCEEC\uB809\uC158 \uC720\uD615\uC758 \uB9E4\uAC1C\uBCC0\uC218\uB85C \uCD9C\uB825\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
# 2900 - 2949 - post activation / completeActivation

# 2950 - 2999 - common resource CRUD


# YMSG: return from Request Handler, in case of url parameter that isn't valid
2955=URL \uB9E4\uAC1C\uBCC0\uC218\: {0}\uC774(\uAC00) \uC720\uD6A8\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
# YMSG: return from Request Handler, in case of unsupported request mode
2956=\uBAA8\uB4DC \#{0}\uC740(\uB294) \uC9C0\uC6D0\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
# YMSG: return from Request Handler, in case of unsupported metadata
2957=\uBA54\uD0C0\uB370\uC774\uD130\uB294 \uC9C0\uC6D0\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
# YMSG: return from Request Handler, in case of unsupported metadata for method
2958='\uBA54\uD0C0\uB370\uC774\uD130 \uAC00\uC838\uC624\uAE30'\uB294 \uC694\uCCAD \uBA54\uC18C\uB4DC GET\uC5D0\uB9CC \uC720\uD6A8\uD569\uB2C8\uB2E4.


# YMSG: returned when wrong query is generated (during procedure generation). 2 causes: Bug in process or there is no mapping from vocabulary to real table / column
2970=\uCFFC\uB9AC\uB97C \uC0DD\uC131\uD558\uB294 \uB3D9\uC548 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uAC70\uB098 \uB9E4\uD551\uC774 \uC720\uD6A8\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
# YMSG: returned if for some reason the parser returned undefined parse model. Can be bad rule syntax or a bug
2971=\uAD6C\uBB38 \uBD84\uC11D \uBAA8\uB378\uC774 \uC815\uC758\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4.
# YMSG: query generation needs either leading object and at least one key or a mapping to parameters. The error is returned if something is missing 
2972=\uC8FC\uC694 \uC624\uBE0C\uC81D\uD2B8, \uD0A4, \uB9E4\uD551\uC758 \uC870\uD569\uC774 \uC720\uD6A8\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
# YMSG: returned when there is no association between 2 objects in vocabulary
2973=\uC5F0\uAD00 \uAD00\uACC4\uAC00 \uC720\uD6A8\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4. \uD2B9\uC131\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: returned when there is a use of attribute based on predictive model but the procedure for the predictive model is not defined
2974=\uC608\uCE21 \uBAA8\uB4C8 \uD504\uB85C\uC2DC\uC800 {0}\uC774(\uAC00) \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: outputs tanle type is mandatory. error when missing 
2975=\uACB0\uACFC \uB370\uC774\uD130\uAC00 \uC720\uD6A8\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
# YMSG: error when is out name is missing in vocabulary output names 
2976=\uCD9C\uB825 \uC774\uB984\uC774 \uC720\uD6A8\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
# YMSG: error when rule body type is different from text or decisionTable 
2977=\uADDC\uCE59 \uBCF8\uBB38 \uC720\uD615\uC774 \uC720\uD6A8\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
# YMSG: return from Runtime plugins, in case of unsupported change mode
2978=\uBCC0\uACBD \uBAA8\uB4DC '{0}'\uC774(\uAC00) \uB9AC\uC18C\uC2A4\uC5D0 \uB300\uD574 \uC9C0\uC6D0\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
# YMSG: return from Runtime plugin - generate, for informing on the change mode for current resource
2979=\uBCC0\uACBD \uBAA8\uB4DC '{0}'\uC5D0\uC11C \uB9AC\uC18C\uC2A4\uAC00 \uC0DD\uC131\uB418\uC5C8\uC2B5\uB2C8\uB2E4.
# YMSG: return when expression  
2980=\uAD6C\uBB38 \uBD84\uC11D \uD45C\uD604\uC2DD '{0}'\uC5D0 \uC624\uB958\uAC00 \uC788\uC2B5\uB2C8\uB2E4.
# YMSG: return when expression  
2981=\uADDC\uCE59 \uD15C\uD50C\uB9BF '{0}'\uC744(\uB97C) \uC0DD\uC131\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4. \uC774\uB984\uC774 \uC5B4\uD718 '{1}'\uC758 \uB370\uC774\uD130 \uC624\uBE0C\uC81D\uD2B8 \uC911 \uD558\uB098\uC5D0\uC11C \uC774\uBBF8 \uC0AC\uC6A9\uB418\uACE0 \uC788\uC2B5\uB2C8\uB2E4.



#############################
# API: Get params
#############################

# 3100 - 3999 - get params messages

# YMSG: return from  ruleBodyAnalyzer, in case of businessRule.type is not text
3100=\uBE44\uC988\uB2C8\uC2A4 \uADDC\uCE59 \uC720\uD615\uC740 \uD14D\uC2A4\uD2B8\uC5EC\uC57C \uD569\uB2C8\uB2E4.
# YMSG: return from  ruleBodyAnalyzer, in case of Vocabulary is missing
3101=\uC5B4\uD718\uAC00 \uC5C6\uC2B5\uB2C8\uB2E4.

#############################/
# API: Rule service consumption
#############################/
# 4100 - 4999 messages

# YMSG: return message in case the output is partial
4100={0}\uAC1C\uC758 \uD56D\uBAA9\uC774 \uD45C\uC2DC\uB418\uC5C8\uC2B5\uB2C8\uB2E4. \uC774\uB294 \uACB0\uACFC \uC138\uD2B8\uC758 \uC77C\uBD80\uBD84\uC785\uB2C8\uB2E4. saveResult \uD50C\uB798\uADF8\uAC00 TRUE\uB85C \uC124\uC815\uB418\uBA74, '{'1}\uC5D0\uC11C \uC804\uCCB4 \uACB0\uACFC \uC138\uD2B8\uB97C \uCC3E\uC744 \uC218 \uC788\uC2B5\uB2C8\uB2E4. \uD14C\uC774\uBE14\uC744 \uCD9C\uB825\uD558\uC2ED\uC2DC\uC624.

#############################/
# Halm and Installation
#############################/

# YMSG: Post Activation API success
10000=SAP HANA Rules Framework\uC5D0 \uB300\uD55C \uAD6C\uC131 \uC2A4\uD06C\uB9BD\uD2B8\uAC00 \uC644\uB8CC\uB418\uC5C8\uC2B5\uB2C8\uB2E4.
# YMSG: Post Activation API failed
10001=SAP HANA Rules Framework\uC758 \uAD6C\uC131 \uC2A4\uD06C\uB9BD\uD2B8\uC5D0\uC11C \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4. {0}
# YMSG: Post Activation API failed
10002=SAP HANA Rules Framework\uC758 \uC6F9 \uC5B4\uD50C\uB9AC\uCF00\uC774\uC158\uC5D0 \uB300\uD55C \uAE30\uC874 \uAD6C\uC131\uC774 \uAC80\uC0C9\uB418\uC5C8\uC2B5\uB2C8\uB2E4. \uB530\uB77C\uC11C \uC6F9 \uC5B4\uD50C\uB9AC\uCF00\uC774\uC158\uC5D0 \uB300\uD55C \uAE30\uBCF8 \uAD6C\uC131\uC744 \uC124\uC815\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: Post Activation API failed
10003=\uAE30\uC220\uC801\uC778 \uC624\uB958\uB85C \uC778\uD574 SAP HANA Rules Framework\uC5D0 \uB300\uD55C \uC6F9 \uC5B4\uD50C\uB9AC\uCF00\uC774\uC158\uC744 \uAD6C\uC131\uD558\uC9C0 \uBABB\uD588\uC2B5\uB2C8\uB2E4. \uC0AC\uC720\: {0}
# YMSG: Post Activation API failed
10004=\uC2DC\uC2A4\uD15C\uC5D0 \uC784\uBCA0\uB4DC\uB41C \uC11C\uBE44\uC2A4\uAC00 \uC774\uBBF8 \uC788\uB294 \uADDC\uCE59 \uC11C\uBE44\uC2A4 \uB610\uB294 \uADDC\uCE59\uC774 \uC874\uC7AC\uD569\uB2C8\uB2E4. \uB530\uB77C\uC11C \uC2DC\uAC04\uB300\uB97C \uC5C5\uB370\uC774\uD2B8\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
# YMSG: Post Activation API failed
10005=\uC2DC\uC2A4\uD15C\uC5D0 \uC784\uBCA0\uB4DC\uB41C \uC11C\uBE44\uC2A4\uAC00 \uC774\uBBF8 \uC788\uB294 \uADDC\uCE59 \uC11C\uBE44\uC2A4 \uB610\uB294 \uADDC\uCE59\uC774 \uC874\uC7AC\uD569\uB2C8\uB2E4. \uB530\uB77C\uC11C \uB7F0\uD0C0\uC784 \uC2A4\uD0A4\uB9C8\uB97C \uC5C5\uB370\uC774\uD2B8\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
