
# This file contains messages descriptions arranged in sections according to HRF APIs
# These descriptions are translated.
# Adding a new message requires also update of message.xsjslib file by the new ID

#############################
# common
#############################
# 10 - 999 - common messages

# YMSG: return from resource activation, in case of a resource does not exist in repository
10=Aktivace zdroje nen\u00ED mo\u017En\u00E1; zdroj neexistuje.
# YMSG: return from resource activation, in case of a resource suffix is not one of HRF resources
11=Aktivace zdroje nen\u00ED mo\u017En\u00E1; sufix '{0}' nen\u00ED podporov\u00E1n.
# YMSG: return from resource activation, in case of a resource package does not exist in repository
12=Aktivace zdroje nen\u00ED mo\u017En\u00E1; paket '{0}' neexistuje.
# YMSG: return from runtime plug in, in case of invalid attribute
13=Aktivace zdroje nen\u00ED mo\u017En\u00E1; atribut '{0}' nen\u00ED obsa\u017Een ve sch\u00E9matu.
# YMSG: return from  runtime plug in, in case of invalid attribute
14=Aktivace zdroje nen\u00ED mo\u017En\u00E1; chyb\u00ED povinn\u00E1 hodnota atributu '{0}'.
# YMSG: return from  runtime plug in, in case none of a predefined set of fields is specified
15=Aktivace zdroje nen\u00ED mo\u017En\u00E1; chyb\u00ED alespo\u0148 jeden z voliteln\u00FDch atribut\u016F {0}
# YMSG: return from  runtime plug in, in case of invalid field (e.g vocabulary doesn't exist)
16=Aktivace zdroje nen\u00ED mo\u017En\u00E1; hodnota atributu {0} nen\u00ED platn\u00E1
# YMSG: return from runtime plug in, in case of inconsistent fields combination(e.g. vocabulary and output names doesn't match)
17=Aktivace zdroje nen\u00ED mo\u017En\u00E1; kombinace {0} a {1} nen\u00ED platn\u00E1
# YMSG: return from  runtime plug in, in case of invalid resource id (e.g. package / file name is missing)
23=Aktivace zdroje nen\u00ED mo\u017En\u00E1; zdroj neexistuje
# YMSG: return from  runtime plug in, in case of error from REL validation
24=Chyba v poli {0}\: {1}
# YMSG: return from  REST service, in case of http request contains non supported method
25=Metoda se nezda\u0159ila; metoda \#{0} nen\u00ED podporov\u00E1na
# YMSG:  technical error from platform
26=Do\u0161lo k technick\u00E9 chyb\u011B \u2013 {0}
# YMSG: return from resource activation, in case of a resource does not exist in repository
27=Zdroj neexistuje.

# 100 - 200 - Authorization

# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
100=Nem\u00E1te opr\u00E1vn\u011Bn\u00ED prov\u00E9st tuto akci.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
101=Nem\u00E1te opr\u00E1vn\u011Bn\u00ED aktualizovat pravidla.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
102=Nem\u00E1te opr\u00E1vn\u011Bn\u00ED vymazat pravidla.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
103=Nem\u00E1te opr\u00E1vn\u011Bn\u00ED vytvo\u0159it pravidla.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
104=Nem\u00E1te opr\u00E1vn\u011Bn\u00ED \u010D\u00EDst pravidla.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
105=Nem\u00E1te opr\u00E1vn\u011Bn\u00ED aktualizovat slu\u017Eby pro pravidla
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
106=Nem\u00E1te opr\u00E1vn\u011Bn\u00ED vymazat slu\u017Eby pro pravidla.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
107=Nem\u00E1te opr\u00E1vn\u011Bn\u00ED vytvo\u0159it slu\u017Eby pro pravidla.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
108=Nem\u00E1te opr\u00E1vn\u011Bn\u00ED \u010D\u00EDst slu\u017Eby pro pravidla.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
109=Nem\u00E1te opr\u00E1vn\u011Bn\u00ED vytvo\u0159it spustit slu\u017Eby pro pravidla.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
110=Nem\u00E1te opr\u00E1vn\u011Bn\u00ED aktualizovat slovn\u00EDky.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
111=Nem\u00E1te opr\u00E1vn\u011Bn\u00ED vymazat slovn\u00EDky.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
112=Nem\u00E1te opr\u00E1vn\u011Bn\u00ED vytvo\u0159it slovn\u00EDky.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
113=Nem\u00E1te opr\u00E1vn\u011Bn\u00ED \u010D\u00EDst slovn\u00EDky.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
114=Nem\u00E1te opr\u00E1vn\u011Bn\u00ED aktualizovat \u0161ablony pravidel.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
115=Nem\u00E1te opr\u00E1vn\u011Bn\u00ED vymazat \u0161ablony pravidel.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
116=Nem\u00E1te opr\u00E1vn\u011Bn\u00ED vytvo\u0159it \u0161ablony pravidel.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
117=Nem\u00E1te opr\u00E1vn\u011Bn\u00ED \u010D\u00EDst \u0161ablony pravidel.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
118=Nem\u00E1te opr\u00E1vn\u011Bn\u00ED vytvo\u0159it ani aktualizovat slu\u017Eby pro pravidla.
#############################
# API: Validate
#############################
# 1100 - 1199 - REL validation messages

# YMSG: return from REL, the beginning of any REL validation error - in case of a wrong statement 
1100=Chyba ve v\u00FDrazu
# YMSG: return from REL parser, in case of a wrong entry (syntax) and maximum 3 option are optional instead 
1101=Chyba ve v\u00FDrazu; zadejte {0} m\u00EDsto {1}
# YMSG: return from REL parser, in case of a wrong entry (syntax) and more than 3 option are optional instead  
1102=Chyba ve v\u00FDrazu; {0} nen\u00ED platn\u00E9 zad\u00E1n\u00ED
# YMSG: return from REL parser, in case of a wrong input
1103=Chyba ve v\u00FDrazu; odstra\u0148te {0}
# YMSG: return from REL model, in case of collection OM when single value in needed
1104=Chyba ve v\u00FDrazu; {0} je seznam hodnot. Zm\u011Bnit na v\u00FDraz p\u0159edstavuj\u00EDc\u00ED jednu hodnotu.
# YMSG: return from REL model, in case of a wrong input
1105=Chyba ve v\u00FDrazu; zadejte platn\u00FD operand m\u00EDsto {0}
# YMSG: return from REL parser, in case of an incomplete expression
1106=Ne\u00FApln\u00FD v\u00FDraz
# YMSG: return from REL lexer, in case of missing token at EOF
1107=Chyba ve v\u00FDrazu; zadejte {0} na konec v\u00FDrazu
# YMSG: return from REL lexer, in case of wrong token
1108=Chyba ve v\u00FDrazu; zadejte {0} m\u00EDsto '{'1}
# YMSG: return from REL entity, in case of missing current
1109=Chyba ve v\u00FDrazu; 'current' (aktu\u00E1ln\u00ED) chyb\u00ED v klauzuli 'where'
# YMSG: return from REL entity, in case of redundant 'current'
1110=Chyba ve v\u00FDrazu; nadbyte\u010Dn\u00E9 'current' (aktu\u00E1ln\u00ED); odstra\u0148te jedno 'current' (aktu\u00E1ln\u00ED)
# YMSG: return from REL vocabulary utils, in case of invalid root object
1111=Neplatn\u00FD ko\u0159enov\u00FD objekt
# YMSG: return from REL vocabulary utils, in case of invalid association
1112=Neplatn\u00E1 asociace
# YMSG: return from REL vocabulary utils, in case of invalid association or attribute
1113=Neplatn\u00E1 asociace nebo atribut
# YMSG: return from REL vocabulary utils, in case of root is simple attribute
1114=Ko\u0159en nem\u016F\u017Ee b\u00FDt jednoduch\u00FD atribut
# YMSG: return from REL vocabulary utils, in case of attribute not found
1115=Ne\u00FApln\u00E1 cesta, atribut nebyl nalezen
# YMSG: return from REL entity, in case of using 'current' outside of 'where'
1116=Chyba ve v\u00FDrazu; kl\u00ED\u010Dov\u00E9 slovo 'aktu\u00E1ln\u00ED' lze pou\u017E\u00EDt pouze s podm\u00EDnkou 'where' (kde).
# YMSG: return from REL entity, in case of using 'current' incorrectly with arithmetic
1117=Chyba ve v\u00FDrazu; kl\u00ED\u010Dov\u00E9 slovo 'current' (aktu\u00E1ln\u00ED) mus\u00ED b\u00FDt pou\u017Eito pro v\u0161echny operandy na jedn\u00E9 stran\u011B komparativn\u00EDho oper\u00E1toru v podm\u00EDnce 'where' (kde).
# YMSG: return from REL parser utils, in case of using value that doen't exist in closed value list
1118=Chyba ve v\u00FDrazu. '{0}' nen\u00ED platn\u00E1 hodnota ze seznamu hodnot '{1}'.
# YMSG: return from REL parser utils, in case of using value that doen't exist in closed value list
1119=Chyba ve v\u00FDrazu. Oper\u00E1tor '{0}' nelze pou\u017E\u00EDvat s atributem seznamu hodnot ('{1}').
# YMSG: return from REL parser utils, in case of using value that doen't exist in closed value list
1120=Chyba ve v\u00FDrazu. Kl\u00ED\u010Dov\u00E9 slovo 'all' (v\u0161e) nem\u016F\u017Ee n\u00E1sledovat operand, kter\u00FD obsahuje kl\u00ED\u010Dov\u00E9 slovo 'current' (aktu\u00E1ln\u00ED).
# YMSG: return from REL parser utils, in case of using value that doen't exist in closed value list
1121=Chyba ve v\u00FDrazu. Kl\u00ED\u010Dov\u00E9 slovo 'all' (v\u0161e) nelze pou\u017E\u00EDt ve stejn\u00E9m p\u0159\u00EDkazu v\u00EDcekr\u00E1t.


# 1200 - 1999 - validation messages

#############################
# API : resource CRUD
#############################
# 2100 - 2299 - vocabulary messages

# YMSG: return from vocabulary runtime plug in, in case of error in expression
2100=V '{0}' - chyba v anal\u00FDze v\u00FDrazu\: '{1}', '{2}'
# YMSG: return from vocabulary runtime plug in, in case of error in rule
2101=V '{0}' - chyba v pravidle \: '{1}', '{2}'
# YMSG: return from vocabulary runtime plug in, in case the parameter type already exists
2102=V '{0}' \: '{1}', n\u00E1zev\: '{2}' ji\u017E existuje
# YMSG: return from vocabulary runtime plug in, in case parameter name isn't valid
2103=V '{0}' \: '{1}', neplatn\u00FD n\u00E1zev\: '{2}'
# YMSG: return from vocabulary runtime plug in, in case one of action/output names aren't valid
2104=V '{0}', neplatn\u00FD n\u00E1zev\: '{1}'
# YMSG: return from vocabulary runtime plug in, in case name already exists
2105=N\u00E1zev '{0}' je definov\u00E1n v\u00EDce ne\u017E jednou v '{1)'.
# YMSG : return from vocabulary runtime plug in, in case the output has no parameters
2106=Chyb\u011Bj\u00EDc\u00ED parametry ve v\u00FDstupu
# YMSG: return from vocabulary runtime plug in, in case one of the attributes has an invalid name
2107=Neplatn\u00FD n\u00E1zev atributu '{0}'
# YMSG: return from vocabulary runtime plug in, in case object name of declare more than once
2108={0}\: '{'1} ji\u017E existuje. 
# YMSG: return from vocabulary runtime plug in, in case attribute name of declare more than once
2109=Atribut ji\u017E existuje\: objekt\= '{0}' atribut\= '{1}'
# YMSG: return from vocabulary runtime plug in, in case attribute name of declare more than once
2110=Asociace ji\u017E existuje\: objekt\= '{0}' asociace\= '{1}'
# YMSG : return from vocabulary runtime plug in, in case the source table isn't exists
2111=Neplatn\u00E1 zdrojov\u00E1 tabulka '{0}'
# YMSG : return from vocabulary runtime plug in, in case of one the association is invalid
2112=Neplatn\u00E1 asociace v objektu \='{0}' + asociace\='{1}'
# YMSG : return from vocabulary runtime plug in, in case of one the association's attributes are invalid
2113=Neplatn\u00FD atribut pro asociaci\=  '{0}' atribut\= '{1}'
# YMSG: return from rule utils, in case of invalid vocabulary assignment
2114=Slovn\u00EDk '{0}' nen\u00ED platn\u00FD
# YMSG: return from vocabulary runtime plug in, in case invalid alias content
2115=Neplatn\u00FD obsah v aliasu '{0}'. D\u016Fvod\: '{1}'
# YMSG: return from vocabulary runtime plug in, in case invalid alias name
2116=N\u00E1zev aliasu '{0}' nen\u00ED platn\u00FD. N\u00E1zev aliasu m\u016F\u017Ee obsahovat pouze alfanumerick\u00E9 znaky a podtr\u017E\u00EDtka, mus\u00ED za\u010D\u00EDnat abecedn\u00EDm znakem a nesm\u00ED b\u00FDt rezervovan\u00FDm slovem z jazyka v\u00FDrazu pravidla.
# YMSG: return from vocabulary runtime plug in, in case alias name collide with an data object name
2117=Neplatn\u00FD n\u00E1zev pro alias '{0}'. Alias ji\u017E existuje jako n\u00E1zev datov\u00E9ho objektu.
# YMSG: return from vocabulary runtime plug in, in case o alias dependency to itself
2118=Neplatn\u00FD obsah v aliasu '{0}'. \u0158e\u0161en\u00ED aliasu povede k nekone\u010Dn\u00E9 smy\u010Dce.
# YMSG: return from vocabulary runtime plug in, when name already exists in another vocabulary in the DB. Example: In 'dataObjects', name 'player' already exists in 'aliases' vocabulary 'voca2'
2120=V '{0}'\: n\u00E1zev '{1}' ji\u017E existuje v '{2}' ve slovn\u00EDku '{3}'.
# YMSG: return from vocabulary runtime plug in, scope name can't be Public or Private
2121=Neplatn\u00FD n\u00E1zev rozsahu. N\u00E1zev rozsahu nem\u016F\u017Ee b\u00FDt 'Public' (Ve\u0159ejn\u00FD) ani 'Private' (Soukrom\u00FD).
# YMSG: return from vocabulary runtime plug in, embedded vocabulary can't be with scope Global
2122=Neplatn\u00FD typ rozsahu. Vestav\u011Bn\u00FD slovn\u00EDk nem\u016F\u017Ee b\u00FDt typu 'Global' (Glob\u00E1ln\u00ED).
# YMSG: Object does not exist
2125=Objekt '{0}' neexistuje
# YMSG: return from vocabulary runtime plug in, in case of a wrong data object name 
2126=Neplatn\u00FD n\u00E1zev pro dataObject '{0}'. N\u00E1zev dataObject nem\u016F\u017Ee b\u00FDt st\u00E1vaj\u00EDc\u00EDm n\u00E1zvem \u0161ablony pravidla ani jedn\u00EDm z n\u00E1sleduj\u00EDc\u00EDch rezervovan\u00FDch slov (pouze velk\u00E1 p\u00EDsmena)\: rule, ruleTemplate
# YMSG: return from vocabulary runtime plug in, in case of a wrong alias name
2127=N\u00E1zev aliasu '{0}' nen\u00ED platn\u00FD. N\u00E1zev aliasu b\u00FDt st\u00E1vaj\u00EDc\u00EDm n\u00E1zvem \u0161ablony pravidla ani jedn\u00EDm z n\u00E1sleduj\u00EDc\u00EDch rezervovan\u00FDch slov (pouze velk\u00E1 p\u00EDsmena)\: rule, ruleTemplate
# YMSG: return from vocabulary runtime plug in, in case invalid data object name
2128=Neplatn\u00FD n\u00E1zev pro dataObject '{0}'. N\u00E1zev dataObject m\u016F\u017Ee obsahovat pouze alfanumerick\u00E9 znaky a podtr\u017E\u00EDtka, mus\u00ED za\u010D\u00EDnat abecedn\u00EDm znakem a nem\u016F\u017Ee b\u00FDt rezervovan\u00FDm slovem z jazyka v\u00FDrazu pravidla.
# YMSG: return from vocabulary runtime plug in, in case of duplicate alias names
2129=Alias '{0}' ji\u017E exituje jako n\u00E1zev aliasu.
# YMSG: return from vocabulary runtime plug in, in case alias content is empty
2130=Parametr obsahu v aliasu '{0}' je pr\u00E1zdn\u00FD.
# YMSG: return from vocabulary runtime plug in, in case alias name exists as as an attribute name
2131=N\u00E1zev aliasu '{0}' je neplatn\u00FD. Alias ji\u017E existuje jako n\u00E1zev atributu.
# YMSG: return from vocabulary runtime plug in, in case alias name exists in other vocabulary with the same scope
2132=N\u00E1zev aliasu '{0}' je neplatn\u00FD. N\u00E1zev ji\u017E existuje jako atribut pro objekt '{1}' ve slovn\u00EDku '{2}'.
# YMSG: return from vocabulary runtime plug in, in case alias name exists in objects rule or ruleTemplate
2133=N\u00E1zev aliasu '{0}' je neplatn\u00FD. N\u00E1zev ji\u017E existuje v objektu '{1}'.
# YMSG: return from vocabulary runtime plug in, in case attribute name already exists as alias in other vocabulary
2134=Neplatn\u00FD n\u00E1zev pro atribut '{0}'. N\u00E1zev ji\u017E existuje jako alias ve slovn\u00EDku '{1}'.
# YMSG: return from vocabulary runtime plug in, in case vocabulary declares it depends on a vocabulary which doesn't exists
2135=Slovn\u00EDk specifikuje z\u00E1vislost ve slobn\u00EDuk '{0}', kter\u00FD neexistuje.
# YMSG: return from vocabulary runtime plug in, in case implementor declare global vocabulary with dependencies
2136=Glob\u00E1ln\u00ED slovn\u00EDk nem\u016F\u017Ee obsahovat z\u00E1vislosti na jin\u00E9 slovn\u00EDky.
# YMSG: return from vocabulary runtime plug in, in case, in the same data object, there is association and attribute with the same name
2137=V datov\u00E9m objektu '{0}' se n\u00E1zev '{1}' pou\u017E\u00EDv\u00E1 pro asociaci a atribut. Stejn\u00FD n\u00E1zev nelze pou\u017E\u00EDt pro ob\u011B vlastnosti.
# YMSG: return from vocabulary runtime plug in, in case invalid alias name
2138=N\u00E1zev seznamu hodnot '{0}' nen\u00ED platn\u00FD. N\u00E1zev seznamu hodnot m\u016F\u017Ee obsahovat pouze alfanumerick\u00E9 znaky a podtr\u017E\u00EDtka, mus\u00ED za\u010D\u00EDnat abecedn\u00EDm znakem a nesm\u00ED b\u00FDt rezervovan\u00FDm slovem z jazyka v\u00FDrazu pravidla.
# YMSG: return from vocabulary runtime plug in, in case alias content is empty
2139=Obsah seznamu hodnot '{0}' je pr\u00E1zdn\u00FD.
# YMSG: return from vocabulary runtime plug in, in case alias content is empty
2140=Seznam hodnot '{0}' definovan\u00FD v atributu '{1}' v datov\u00E9m objektu '{2}' neexistuje.
# YMSG: return from vocabulary runtime plug in, in case parameter size isn't valid
2141=V '{'0} nen\u00ED velikost ({1}) parametru '{'2} v '{'3} platn\u00E1 pro specifikovan\u00FD datov\u00FD typ.
# YMSG: return from vocabulary - in case parameter content cannot be a collection 
2142=Neplatn\u00E1 definice parametru pro akci '{0}' v parametru akce '{1}'. Parametry typu kolekce nejsou povoleny v akc\u00EDch.                                                                                                                                                                   .




# 2300 - 2499 rule template messages

# YMSG: return from Rule Template runtime plug in, in case of rule template name starts with a number
2300=\u0160ablonu pravidla nelze vytvo\u0159it ani aktualizovat; n\u00E1zev \u0161ablony pravidla nem\u016F\u017Ee za\u010D\u00EDnat \u010D\u00EDslem
# YMSG: return from Rule Template runtime plug in, in case of illegal change in rule template attributes
2301=Aktivace \u0161ablony pravidla obsahuje nekompatibiln\u00ED zm\u011Bnu;
# YMSG: return from Rule Template runtime plug in, in case of rule template update contains condition change
2302=\u0160ablonu pravidla nelze vytvo\u0159it ani aktualizovat; podm\u00EDnku \u0161ablony pravidla nelze zm\u011Bnit
# YMSG: return from Rule Template runtime plug in, in case of rule template contains invalid condition 
2303=\u0160ablonu pravidla nelze vytvo\u0159it ani aktualizovat; podm\u00EDnka '{0}' nen\u00ED platn\u00E1
# YMSG: return from Rule Template runtime plug in, in case of rule template deletion when there are rules assigned to the rule template  
2304=Nelze vymazat \u0161ablonu pravidla {0}. Pro tuto \u0161ablonu pravidla existuj\u00ED pravidla;
# YMSG: return from Rule Template runtime plug in, in case of duplicate rule template name  
2305=\u0160ablonu pravidla nelze vytvo\u0159it; \u0161ablona pravidla '{0}' ji\u017E existuje v paketu '{1}'
# YMSG: return from Rule Template runtime plug in, in case that rule template name starts with a number  
2306=N\u00E1zev \u0161ablony pravidla - '{0}' nem\u016F\u017Ee za\u010D\u00EDnat \u010D\u00EDslem;
# YMSG: return from Rule Template runtime plug in, in case that rule template name already exist as data object  
2307=Nepoda\u0159ilo se vytvo\u0159it \u0161ablonu pravidla '{0}'. N\u00E1zev \u0161ablony pravidla se ji\u017E pou\u017E\u00EDv\u00E1 jako datov\u00FD objekt ve slovn\u00EDku '{1}'.
# YMSG: return from Rule Template runtime plug in, in case that rule template name already exist as alias
2308=Nepoda\u0159ilo se vytvo\u0159it \u0161ablonu pravidla '{0}'. N\u00E1zev \u0161ablony pravidla se ji\u017E pou\u017E\u00EDv\u00E1 jako alias ve slovn\u00EDku '{1}'.


# 2500 - 2699 - rule messages

# YMSG: return from Rule runtime plug in, in case of resource contains additional attributes but not assigned to rule template   
2500=Pravidlo nelze vytvo\u0159it; byly zad\u00E1ny dal\u0161\u00ED atributy, i kdy\u017E pravidlo nen\u00ED zalo\u017Een\u00E9 na \u0161ablon\u011B.
# YMSG: return from Rule runtime plug in, in case of rule template assignment change   
2501=Pravidlo nelze aktualizovat; p\u0159i\u0159azen\u00ED \u0161ablony pravidla nelze zm\u011Bnit, jakmile je pravidlo vytvo\u0159eno.
# YMSG: return from Rule runtime plug in, in case of vocabulary change  
2502=Pravidlo nelze aktualzovat; p\u0159i\u0159azen\u00ED slovn\u00EDku nelze zm\u011Bnit, jakmile je pravidlo vytvo\u0159eno.
# YMSG: return from Rule runtime plug in, in case of output change   
2503=Aktualizace pravidla nen\u00ED mo\u017En\u00E1; v\u00FDstupn\u00ED p\u0159i\u0159azen\u00ED nelze zm\u011Bnit, jakmile je pravidlo vytvo\u0159eno.
# YMSG: return from Rule runtime plug in, in case of rule contains additional attributes where assigned rule template does not contains additional attributes
2504=Vytvo\u0159en\u00ED pravidla nen\u00ED mo\u017En\u00E9; byl zad\u00E1n dal\u0161\u00ED atribut, kter\u00FD nen\u00E1le\u017E\u00ED p\u0159i\u0159azen\u00E9 \u0161ablon\u011B pravidla.
# YMSG: return from Rule runtime plug in, in case of execution context change
2505=Aktualizace pravidla nen\u00ED mo\u017En\u00E1; p\u0159i\u0159azen\u00ED kontextu proveden\u00ED nelze zm\u011Bnit, jakmile je pravidlo vytvo\u0159eno.
# YMSG: return from Rule runtime plug in, in case of invalid rule template assignment
2506=\u0160ablona pravidla '{0}' nen\u00ED platn\u00E1
# YMSG: return from Rule runtime plug in, in case of invalid status transition
2507=Pravidlo nelze aktualizovat; status nem\u016F\u017Eete zm\u011Bnit z '{0}' na '{1}'.
# YMSG: return from Rule runtime plug in, in case of updating single consumption to non single consumption Rule
2510=Odebr\u00E1n\u00ED vestav\u011Bn\u00FDch slu\u017Eeb nen\u00ED povoleno.
# YMSG: return from Rule runtime plug in, in case of updating single embedded service in Rule
2511=Odebr\u00E1n\u00ED ani zm\u011Bna vestav\u011Bn\u00FDch slu\u017Eeb nen\u00ED povolena.
# YMSG: return from Rule runtime plug in, in case of more than one embedded services with the same name
2512=N\u00E1zev vestav\u011Bn\u00E9 sluby - '{0}' existuje v\u00EDce ne\u017E jednou.
# YMSG: return from Rule runtime plug in - update/create, in case the rule body is not valid
2513=Vytvo\u0159en\u00ED ani aktualizace pravidla nejsou mo\u017En\u00E9; t\u011Blo pravidla nen\u00ED platn\u00E9.
# YMSG: return from Rule body validator - in case parameter is referenced to an unknown action
2514=Neplatn\u00E1 definice parametru. Parametr referuje akci '{0}', kter\u00E1 neexistuje ve slovn\u00EDku.
# YMSG: return from Rule body validator - in case parameter name isn't a valid parameter for action
2515=Neplatn\u00E1 definice parametru. N\u00E1ze parametru '{0}' neexistuje pro akci '{1}' ve slovn\u00EDku.
# YMSG: return from Rule body validator - in case action doesn't exist in the vocabulary
2516=Akce '{0}' neexistuje ve slovn\u00EDku.
# YMSG: return from Rule body validator - when the sent parameter isn't a required parameter in the sent output 
2517=Neplatn\u00E1 definice parametru. N\u00E1zev parametru '{0}' neexistuje pro v\u00FDstup '{1}' ve slovn\u00EDku.
# YMSG: return from Rule body validator - when the sent output doesn't exists in the vocabulary
2518=V\u00FDstup '{0}' neexistuje ve slovn\u00EDku.
# YMSG: return from Rule body validator - when alias has more than one output parameter column
2519=Alias m\u00E1 v\u00EDce ne\u017E jeden v\u00FDstupn\u00ED parametr.
# YMSG: return from Rule body validator - when the alias output parameters values do not have the same type X
2520=V\u0161echny hodnoty v\u00FDstupn\u00EDho parametru '{0}' musej\u00ED b\u00FDt stejn\u00E9ho typu.
# YMSG: return from Rule runtime plug in, in case of assign rule to rule service that does not exist.
2521=Pravidlo '{0}' se nepoda\u0159ilo p\u0159i\u0159adit slu\u017Eb\u011B pro pravidla '{1}'. Slu\u017Eba pro pravidla neexistuje.
# YMSG: return from Rule runtime plug in, in case of assign rule to rule service with different vocabulary.
2522=Pravidlo '{0}' se nepoda\u0159ilo p\u0159i\u0159adit slu\u017Eb\u011B pro pravidla '{1}'. Slu\u017Eba pro pravidla a pravidlo musej\u00ED m\u00EDt definovan\u00FD stejn\u00FD slovn\u00EDk.
# YMSG: return from Rule runtime plug in, in case of assign rule to rule service with different output.
2523=Pravidlo '{0}' se nepoda\u0159ilo p\u0159i\u0159adit slu\u017Eb\u011B pro pravidla '{1}'. Slu\u017Eba pro pravidla a pravidlo musej\u00ED m\u00EDt definovan\u00FD stejn\u00FD v\u00FDstup.
# YMSG: return from Rule runtime plug in, in case of assign rule to rule service that is not indicated as manually assigned.
2524=Pravidlo '{0}' se nepoda\u0159ilo p\u0159i\u0159adit slu\u017Eb\u011B pro pravidla '{1}'. Slu\u017Eba pro pravidla je nastavena pro automatick\u00E9 p\u0159i\u0159azen\u00ED pravidel a neumo\u017E\u0148uje manu\u00E1ln\u00ED p\u0159i\u0159azen\u00ED.
# YMSG: return from Rule runtime plug in - update/create, in case a custom condition is not valid
2525=Pravidlo nelze vytvo\u0159it ani aktualizovat; '{0}' nen\u00ED platn\u00E1 podm\u00EDnka
# YMSG: return from Rule body validator - when ruleBody of type ruleSet has more than one condition column
2526=Neplatn\u00E1 sada pravidel. Pravidlo v sad\u011B pravidel m\u00E1 v\u00EDce ne\u017E jednu podm\u00EDnku.


# 2700 - 2899 - rule service messages

# YMSG: return from Rule service plug in, in case of wrong data object filter
2700=Chyba ve filtru slu\u017Eby pravidla
# YMSG: return from Rule service plug in, in case of different data objects in execution context and filter
2701=Datov\u00FD objekt - '{0}' v kontextu proveden\u00ED se li\u0161\u00ED od datov\u00E9ho objektu  - '{1}' ve filtru
# YMSG: return from  runtime plug in, in case of specified data object does not have the specified attribute (e.g. data object keys in rule service definition).
2704=Nelze vytvo\u0159it ani aktualizovat slu\u017Ebu pravidla; datov\u00FD objekt {0} slovn\u00EDku {1} neobsahuje atribut {2}
# YMSG: return from runtime plug in, in case of parameter mapping path contains a collection
2705=Cesta s kolekc\u00ED nen\u00ED povolena. Cesta\: {0};
# YMSG: return from runtime plug in, in case of data object mapping entry is not unique within an execution context .
2706=datov\u00FD objekt \u2013 {0} m\u00E1 duplicitn\u00ED mapov\u00E1n\u00ED;
# YMSG: return from  runtime plug in, in case of parameter definition entry is not unique within an execution context .
2707=Nelze vytvo\u0159it slu\u017Ebu pravidla; parametr {0} je duplikov\u00E1n
# YMSG: return from  runtime plug in, in case of parameter mapping entry doesn't have a match parameter definition entry with in an execution context
2708=Nelze vytvo\u0159it slu\u017Ebu pravidla; parametr {0} neexistuje a je asociov\u00E1n s datov\u00FDm objektem
# YMSG: return from  runtime plug in, in case of ifentifiers in dataObject type parameter do not exist in data object from vocabulary
2709=Neplatn\u00E1 definice parametru pro slu\u017Ebu pro pravidla '{0}'. V parametru '{1}', '{2}' nen\u00ED platn\u00FD atribut datov\u00E9ho objektu '{3}' v rozsahu slovn\u00EDku '{4}'.
# YMSG: return from runtime plug in, in case of data object definition entry is not unique within parameter definition if service.
2710=Neplatn\u00E1 definice parametru ve slu\u017Eb\u011B pro pravidla '{0}'. Datov\u00FD objekt '{1}' je referov\u00E1n v\u00EDce ne\u017E jedn\u00EDm parametrem.
# YMSG: return from runtime plug in, only read-only rule services can be indicated to be created with result view
2711=Nepoda\u0159ilo se vytvo\u0159it slu\u017Ebu pro pravidla '{0}'. Slu\u017Eba pro pravidla se zobrazen\u00EDm v\u00FDsledk\u016F mus\u00ED b\u00FDt indikov\u00E1na jako \u201Ejen ke \u010Dten\u00ED\u201C.
# YMSG: return from runtime plug in, only explicit output rule services can be indicated to be created with result view
2712=Nepoda\u0159ilo se vytvo\u0159it slu\u017Ebu pravidla '{0}'. Slu\u017Eby pravidla se zobrazen\u00EDm v\u00FDsledk\u016F musej\u00ED m\u00EDt definovan\u00FD explicitn\u00ED v\u00FDstup.
# YMSG: returned from request handler. Rule requested to be removed from rule service but the rule is not assigned to it
2713=P\u0159i\u0159azen\u00ED pravidla se nepoda\u0159ilo odebrat. Pravidlo '{0}' nen\u00ED p\u0159i\u0159azeno slu\u017Eb\u011B pro pravidla.
# YMSG: return from  runtime plug in, in case of output contains collection parameter in event mode scenario
2714=Nepoda\u0159ilo se vytvo\u0159it slu\u017Ebu pro pravidla '{0}'. Nem\u016F\u017Eete definovat v\u00FDstup s parametry typu kolekce pro slu\u017Ebu pro pravidla, kter\u00E1 nem\u00E1 definovan\u00FD datov\u00FD objekt v kontextu proveden\u00ED.
# 2900 - 2949 - post activation / completeActivation

# 2950 - 2999 - common resource CRUD


# YMSG: return from Request Handler, in case of url parameter that isn't valid
2955=Parametr url\: {0} nen\u00ED platn\u00FD
# YMSG: return from Request Handler, in case of unsupported request mode
2956=Re\u017Eim \#{0} nen\u00ED podporov\u00E1n
# YMSG: return from Request Handler, in case of unsupported metadata
2957=Metadata nejsou podporov\u00E1na
# YMSG: return from Request Handler, in case of unsupported metadata for method
2958=Na\u010Dten\u00ED metadat je platn\u00E9 pouze s po\u017Eadavkem metody GET


# YMSG: returned when wrong query is generated (during procedure generation). 2 causes: Bug in process or there is no mapping from vocabulary to real table / column
2970=Chyba v generov\u00E1n\u00ED dotazu nebo neplatn\u00E9 mapov\u00E1n\u00ED
# YMSG: returned if for some reason the parser returned undefined parse model. Can be bad rule syntax or a bug
2971=Model anal\u00FDzy nen\u00ED definov\u00E1n
# YMSG: query generation needs either leading object and at least one key or a mapping to parameters. The error is returned if something is missing 
2972=Neplatn\u00E1 kombinace hlavn\u00EDho objektu, kl\u00ED\u010D\u016F a mapov\u00E1n\u00ED
# YMSG: returned when there is no association between 2 objects in vocabulary
2973=Neplatn\u00E1 asociace - \u017E\u00E1dn\u00E9 atributy
# YMSG: returned when there is a use of attribute based on predictive model but the procedure for the predictive model is not defined
2974=Metoda prediktivn\u00EDho modulu {0} nebyla nalezen
# YMSG: outputs tanle type is mandatory. error when missing 
2975=Neplatn\u00E1 data v\u00FDsledku
# YMSG: error when is out name is missing in vocabulary output names 
2976=Neplatn\u00FD v\u00FDstupn\u00ED n\u00E1zev
# YMSG: error when rule body type is different from text or decisionTable 
2977=neplatn\u00FD typ t\u011Bla pravidla
# YMSG: return from Runtime plugins, in case of unsupported change mode
2978=Zm\u011Bnov\u00FD re\u017Eim '{0}' nen\u00ED podporov\u00E1n pro zdroj
# YMSG: return from Runtime plugin - generate, for informing on the change mode for current resource
2979=Generov\u00E1n\u00ED zdroje, ve zm\u011Bnov\u00E9m re\u017Eimu\: '{0}'
# YMSG: return when expression  
2980=Chyba v anal\u00FDze v\u00FDrazu\: \: '{0}'
# YMSG: return when expression  
2981=Nelze vytvo\u0159it \u0161ablonu pravidel '{0}'. N\u00E1zev ji\u017E pou\u017E\u00EDv\u00E1 jeden z datov\u00FDch objekt\u016F ve slovn\u00EDku '{1}'.



#############################
# API: Get params
#############################

# 3100 - 3999 - get params messages

# YMSG: return from  ruleBodyAnalyzer, in case of businessRule.type is not text
3100=Typ obchodn\u00EDho pravidla by m\u011Bl b\u00FDt text
# YMSG: return from  ruleBodyAnalyzer, in case of Vocabulary is missing
3101=Slovn\u00EDk chyb\u00ED

#############################/
# API: Rule service consumption
#############################/
# 4100 - 4999 messages

# YMSG: return message in case the output is partial
4100={0} polo\u017Eek zobrazeno. Toto je pouze \u010D\u00E1ste\u010Dn\u00E1 sada v\u00FDsledk\u016F. Pokud je znak saveResult nastaven na TRUE (pravda), celou sadu v\u00FDsledk\u016F lze naj\u00EDt ve v\u00FDstupn\u00ED tabulce '{'1}.

#############################/
# Halm and Installation
#############################/

# YMSG: Post Activation API success
10000=Konfigura\u010Dn\u00ED skript pro framework pravidel SAP HANA byl \u00FAsp\u011B\u0161n\u011B dokon\u010Den.
# YMSG: Post Activation API failed
10001=P\u0159i konfiguraci skriptu  SAP HANA Rules Framework do\u0161lo k chyb\u011B. {0}
# YMSG: Post Activation API failed
10002=Byla zji\u0161t\u011Bna existuj\u00EDc\u00ED konfigurace webov\u00E9 aplikace SAP HANA Rules Framework. Nastaven\u00ED standardn\u00ED konfigurace pro webovou aplikaci proto nen\u00ED povoleno.
# YMSG: Post Activation API failed
10003=Konfigurace webov\u00E9 aplikace SAP HANA Rules Framework se nezda\u0159ila kv\u016Fli technick\u00E9 chyb\u011B. D\u016Fvod\: {0}
# YMSG: Post Activation API failed
10004=V tomto syst\u00E9mu ji\u017E existuje slu\u017Eba pro pravidla nebo pravidlo s vestav\u011Bnou slu\u017Ebou. Aktualizace \u010Dasov\u00E9ho p\u00E1sma proto je povolena.
# YMSG: Post Activation API failed
10005=V tomto syst\u00E9mu ji\u017E existuje slu\u017Eba pro pravidla nebo pravidlo s vestav\u011Bnou slu\u017Ebou. Aktualizace sch\u00E9matu b\u011Bhu proto nen\u00ED povolena.
