
# This file contains messages descriptions arranged in sections according to HRF APIs
# These descriptions are translated.
# Adding a new message requires also update of message.xsjslib file by the new ID

#############################
# common
#############################
# 10 - 999 - common messages

# YMSG: return from resource activation, in case of a resource does not exist in repository
10=\u30EA\u30BD\u30FC\u30B9\u3092\u6709\u52B9\u5316\u3067\u304D\u307E\u305B\u3093\u3002\u30EA\u30BD\u30FC\u30B9\u304C\u5B58\u5728\u3057\u307E\u305B\u3093\u3002
# YMSG: return from resource activation, in case of a resource suffix is not one of HRF resources
11=\u30EA\u30BD\u30FC\u30B9\u3092\u6709\u52B9\u5316\u3067\u304D\u307E\u305B\u3093\u3002\u63A5\u5C3E\u8F9E '{0}' \u304C\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u3066\u3044\u307E\u305B\u3093\u3002
# YMSG: return from resource activation, in case of a resource package does not exist in repository
12=\u30EA\u30BD\u30FC\u30B9\u3092\u6709\u52B9\u5316\u3067\u304D\u307E\u305B\u3093\u3002\u30D1\u30C3\u30B1\u30FC\u30B8 '{0}' \u304C\u5B58\u5728\u3057\u307E\u305B\u3093\u3002
# YMSG: return from runtime plug in, in case of invalid attribute
13=\u30EA\u30BD\u30FC\u30B9\u3092\u6709\u52B9\u5316\u3067\u304D\u307E\u305B\u3093\u3002\u5C5E\u6027 '{0}' \u304C\u30B9\u30AD\u30FC\u30DE\u306B\u542B\u307E\u308C\u3066\u3044\u307E\u305B\u3093\u3002
# YMSG: return from  runtime plug in, in case of invalid attribute
14=\u30EA\u30BD\u30FC\u30B9\u3092\u6709\u52B9\u5316\u3067\u304D\u307E\u305B\u3093\u3002\u5FC5\u9808\u5C5E\u6027\u5024\u304C '{0}' \u304C\u6307\u5B9A\u3055\u308C\u3066\u3044\u307E\u305B\u3093\u3002
# YMSG: return from  runtime plug in, in case none of a predefined set of fields is specified
15=\u30EA\u30BD\u30FC\u30B9\u3092\u6709\u52B9\u5316\u3067\u304D\u307E\u305B\u3093\u3002\u30AA\u30D7\u30B7\u30E7\u30F3\u5C5E\u6027 {0} \u306E\u5C11\u306A\u304F\u3068\u3082 1 \u3064\u304C\u6307\u5B9A\u3055\u308C\u3066\u3044\u307E\u305B\u3093\u3002
# YMSG: return from  runtime plug in, in case of invalid field (e.g vocabulary doesn't exist)
16=\u30EA\u30BD\u30FC\u30B9\u3092\u6709\u52B9\u5316\u3067\u304D\u307E\u305B\u3093\u3002\u5C5E\u6027 {0} \u306E\u5024\u304C\u6709\u52B9\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002
# YMSG: return from runtime plug in, in case of inconsistent fields combination(e.g. vocabulary and output names doesn't match)
17=\u30EA\u30BD\u30FC\u30B9\u3092\u6709\u52B9\u5316\u3067\u304D\u307E\u305B\u3093\u3002{0} \u3068 {1} \u306E\u7D44\u5408\u305B\u304C\u6709\u52B9\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002
# YMSG: return from  runtime plug in, in case of invalid resource id (e.g. package / file name is missing)
23=\u30EA\u30BD\u30FC\u30B9\u3092\u6709\u52B9\u5316\u3067\u304D\u307E\u305B\u3093\u3002\u30EA\u30BD\u30FC\u30B9\u304C\u5B58\u5728\u3057\u307E\u305B\u3093\u3002
# YMSG: return from  runtime plug in, in case of error from REL validation
24=\u9805\u76EE {0} \u306B\u30A8\u30E9\u30FC\u304C\u3042\u308A\u307E\u3059\u3002 {1}
# YMSG: return from  REST service, in case of http request contains non supported method
25=\u30E1\u30BD\u30C3\u30C9\u304C\u5931\u6557\u3057\u307E\u3057\u305F\u3002\u30E1\u30BD\u30C3\u30C9 \#{0} \u306F\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u3066\u3044\u307E\u305B\u3093\u3002
# YMSG:  technical error from platform
26=\u6280\u8853\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F - {0}
# YMSG: return from resource activation, in case of a resource does not exist in repository
27=\u30EA\u30BD\u30FC\u30B9\u304C\u5B58\u5728\u3057\u307E\u305B\u3093\u3002

# 100 - 200 - Authorization

# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
100=\u3053\u306E\u30A2\u30AF\u30B7\u30E7\u30F3\u3092\u5B9F\u884C\u3059\u308B\u6A29\u9650\u304C\u3042\u308A\u307E\u305B\u3093\u3002
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
101=\u30EB\u30FC\u30EB\u3092\u66F4\u65B0\u3059\u308B\u6A29\u9650\u304C\u3042\u308A\u307E\u305B\u3093\u3002
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
102=\u30EB\u30FC\u30EB\u3092\u524A\u9664\u3059\u308B\u6A29\u9650\u304C\u3042\u308A\u307E\u305B\u3093\u3002
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
103=\u30EB\u30FC\u30EB\u3092\u767B\u9332\u3059\u308B\u6A29\u9650\u304C\u3042\u308A\u307E\u305B\u3093\u3002
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
104=\u30EB\u30FC\u30EB\u3092\u8AAD\u307F\u8FBC\u3080\u6A29\u9650\u304C\u3042\u308A\u307E\u305B\u3093\u3002
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
105=\u30EB\u30FC\u30EB\u30B5\u30FC\u30D3\u30B9\u3092\u66F4\u65B0\u3059\u308B\u6A29\u9650\u304C\u3042\u308A\u307E\u305B\u3093\u3002
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
106=\u30EB\u30FC\u30EB\u30B5\u30FC\u30D3\u30B9\u3092\u524A\u9664\u3059\u308B\u6A29\u9650\u304C\u3042\u308A\u307E\u305B\u3093\u3002
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
107=\u30EB\u30FC\u30EB\u30B5\u30FC\u30D3\u30B9\u3092\u767B\u9332\u3059\u308B\u6A29\u9650\u304C\u3042\u308A\u307E\u305B\u3093\u3002
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
108=\u30EB\u30FC\u30EB\u30B5\u30FC\u30D3\u30B9\u3092\u8AAD\u307F\u8FBC\u3080\u6A29\u9650\u304C\u3042\u308A\u307E\u305B\u3093\u3002
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
109=\u30EB\u30FC\u30EB\u30B5\u30FC\u30D3\u30B9\u3092\u5B9F\u884C\u3059\u308B\u6A29\u9650\u304C\u3042\u308A\u307E\u305B\u3093\u3002
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
110=\u30DC\u30AD\u30E3\u30D6\u30E9\u30EA\u3092\u66F4\u65B0\u3059\u308B\u6A29\u9650\u304C\u3042\u308A\u307E\u305B\u3093\u3002
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
111=\u30DC\u30AD\u30E3\u30D6\u30E9\u30EA\u3092\u524A\u9664\u3059\u308B\u6A29\u9650\u304C\u3042\u308A\u307E\u305B\u3093\u3002
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
112=\u30DC\u30AD\u30E3\u30D6\u30E9\u30EA\u3092\u767B\u9332\u3059\u308B\u6A29\u9650\u304C\u3042\u308A\u307E\u305B\u3093\u3002
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
113=\u30DC\u30AD\u30E3\u30D6\u30E9\u30EA\u3092\u8AAD\u307F\u8FBC\u3080\u6A29\u9650\u304C\u3042\u308A\u307E\u305B\u3093\u3002
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
114=\u30EB\u30FC\u30EB\u30C6\u30F3\u30D7\u30EC\u30FC\u30C8\u3092\u66F4\u65B0\u3059\u308B\u6A29\u9650\u304C\u3042\u308A\u307E\u305B\u3093\u3002
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
115=\u30EB\u30FC\u30EB\u30C6\u30F3\u30D7\u30EC\u30FC\u30C8\u3092\u524A\u9664\u3059\u308B\u6A29\u9650\u304C\u3042\u308A\u307E\u305B\u3093\u3002
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
116=\u30EB\u30FC\u30EB\u30C6\u30F3\u30D7\u30EC\u30FC\u30C8\u3092\u767B\u9332\u3059\u308B\u6A29\u9650\u304C\u3042\u308A\u307E\u305B\u3093\u3002
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
117=\u30EB\u30FC\u30EB\u30C6\u30F3\u30D7\u30EC\u30FC\u30C8\u3092\u8AAD\u307F\u8FBC\u3080\u6A29\u9650\u304C\u3042\u308A\u307E\u305B\u3093\u3002
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
118=\u30EB\u30FC\u30EB\u30B5\u30FC\u30D3\u30B9\u3092\u767B\u9332\u307E\u305F\u306F\u66F4\u65B0\u3059\u308B\u6A29\u9650\u304C\u3042\u308A\u307E\u305B\u3093\u3002
#############################
# API: Validate
#############################
# 1100 - 1199 - REL validation messages

# YMSG: return from REL, the beginning of any REL validation error - in case of a wrong statement 
1100=\u5F0F\u306B\u30A8\u30E9\u30FC\u304C\u3042\u308A\u307E\u3059\u3002
# YMSG: return from REL parser, in case of a wrong entry (syntax) and maximum 3 option are optional instead 
1101=\u5F0F\u306B\u30A8\u30E9\u30FC\u304C\u3042\u308A\u307E\u3059\u3002{0} \u3092 {1} \u306E\u4EE3\u308F\u308A\u306B\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044\u3002
# YMSG: return from REL parser, in case of a wrong entry (syntax) and more than 3 option are optional instead  
1102=\u5F0F\u306B\u30A8\u30E9\u30FC\u304C\u3042\u308A\u307E\u3059\u3002{0} \u306F\u6709\u52B9\u306A\u30A8\u30F3\u30C8\u30EA\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002
# YMSG: return from REL parser, in case of a wrong input
1103=\u5F0F\u306B\u30A8\u30E9\u30FC\u304C\u3042\u308A\u307E\u3059\u3002{0} \u3092\u524A\u9664\u3057\u3066\u304F\u3060\u3055\u3044\u3002
# YMSG: return from REL model, in case of collection OM when single value in needed
1104=\u5F0F\u306B\u30A8\u30E9\u30FC\u304C\u3042\u308A\u307E\u3059\u3002{0} \u306F\u5024\u4E00\u89A7\u3067\u3059\u3002 \u5358\u4E00\u5024\u3092\u8868\u3059\u5F0F\u306B\u5909\u66F4\u3057\u3066\u304F\u3060\u3055\u3044\u3002
# YMSG: return from REL model, in case of a wrong input
1105=\u5F0F\u306B\u30A8\u30E9\u30FC\u304C\u3042\u308A\u307E\u3059\u3002{0} \u306E\u4EE3\u308F\u308A\u306B\u6709\u52B9\u306A\u30AA\u30DA\u30E9\u30F3\u30C9\u3092\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044\u3002
# YMSG: return from REL parser, in case of an incomplete expression
1106=\u5F0F\u304C\u4E0D\u5B8C\u5168\u3067\u3059\u3002
# YMSG: return from REL lexer, in case of missing token at EOF
1107=\u5F0F\u306B\u30A8\u30E9\u30FC\u304C\u3042\u308A\u307E\u3059\u3002\u5F0F\u306E\u6700\u5F8C\u306B {0} \u3092\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044\u3002
# YMSG: return from REL lexer, in case of wrong token
1108=\u5F0F\u306B\u30A8\u30E9\u30FC\u304C\u3042\u308A\u307E\u3059\u3002{0} \u3092 '{'1} \u306E\u4EE3\u308F\u308A\u306B\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044\u3002
# YMSG: return from REL entity, in case of missing current
1109=\u5F0F\u306B\u30A8\u30E9\u30FC\u304C\u3042\u308A\u307E\u3059\u3002'current' \u304C 'where' \u53E5\u306B\u3042\u308A\u307E\u305B\u3093
# YMSG: return from REL entity, in case of redundant 'current'
1110=\u5F0F\u306B\u30A8\u30E9\u30FC\u304C\u3042\u308A\u307E\u3059\u3002'current' \u304C\u8907\u6570\u3042\u308A\u307E\u3059\u3002'current' \u3092 1 \u3064\u524A\u9664\u3057\u3066\u304F\u3060\u3055\u3044
# YMSG: return from REL vocabulary utils, in case of invalid root object
1111=\u7121\u52B9\u306A\u30EB\u30FC\u30C8\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u3067\u3059
# YMSG: return from REL vocabulary utils, in case of invalid association
1112=\u7121\u52B9\u306A\u30A2\u30BD\u30B7\u30A8\u30FC\u30B7\u30E7\u30F3\u3067\u3059
# YMSG: return from REL vocabulary utils, in case of invalid association or attribute
1113=\u7121\u52B9\u306A\u30A2\u30BD\u30B7\u30A8\u30FC\u30B7\u30E7\u30F3\u307E\u305F\u306F\u5C5E\u6027\u3067\u3059
# YMSG: return from REL vocabulary utils, in case of root is simple attribute
1114=\u5358\u7D14\u5C5E\u6027\u3092\u30EB\u30FC\u30C8\u306B\u306F\u4F7F\u7528\u3067\u304D\u307E\u305B\u3093
# YMSG: return from REL vocabulary utils, in case of attribute not found
1115=\u30D1\u30B9\u304C\u4E0D\u5B8C\u5168\u306A\u305F\u3081\u5C5E\u6027\u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093
# YMSG: return from REL entity, in case of using 'current' outside of 'where'
1116=\u5F0F\u306B\u30A8\u30E9\u30FC\u304C\u3042\u308A\u307E\u3059\u3002'current' \u306E\u30AD\u30FC\u30EF\u30FC\u30C9\u306F\u3001'where' \u53E5\u5185\u306E\u307F\u3067\u4F7F\u7528\u3059\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u3059\u3002
# YMSG: return from REL entity, in case of using 'current' incorrectly with arithmetic
1117=\u5F0F\u306B\u30A8\u30E9\u30FC\u304C\u3042\u308A\u307E\u3059\u3002'current' \u306E\u30AD\u30FC\u30EF\u30FC\u30C9\u306F\u3001'where' \u53E5\u306B\u3042\u308B\u6BD4\u8F03\u6F14\u7B97\u5B50\u306E\u3044\u305A\u308C\u304B\u4E00\u65B9\u306E\u8FBA\u306B\u542B\u307E\u308C\u308B\u3001\u3059\u3079\u3066\u306E\u30AA\u30DA\u30E9\u30F3\u30C9\u306B\u9069\u7528\u3059\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\u3002
# YMSG: return from REL parser utils, in case of using value that doen't exist in closed value list
1118=\u5F0F\u306B\u30A8\u30E9\u30FC\u304C\u3042\u308A\u307E\u3059\u3002'{0}' \u306F\u5024\u30EA\u30B9\u30C8 '{1}' \u304B\u3089\u306E\u6709\u52B9\u306A\u5024\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002
# YMSG: return from REL parser utils, in case of using value that doen't exist in closed value list
1119=\u5F0F\u306B\u30A8\u30E9\u30FC\u304C\u3042\u308A\u307E\u3059\u3002'{0}' \u6F14\u7B97\u5B50\u3092\u5024\u4E00\u89A7\u5C5E\u6027 ('{1}') \u3068\u3068\u3082\u306B\u4F7F\u7528\u3059\u308B\u3053\u3068\u306F\u3067\u304D\u307E\u305B\u3093\u3002
# YMSG: return from REL parser utils, in case of using value that doen't exist in closed value list
1120=\u5F0F\u306B\u30A8\u30E9\u30FC\u304C\u3042\u308A\u307E\u3059\u3002\u30AD\u30FC\u30EF\u30FC\u30C9 'all' \u306F\u3001\u30AD\u30FC\u30EF\u30FC\u30C9 'current' \u3092\u542B\u3080\u30AA\u30DA\u30E9\u30F3\u30C9\u306E\u5F8C\u306B\u6307\u5B9A\u3067\u304D\u307E\u305B\u3093\u3002
# YMSG: return from REL parser utils, in case of using value that doen't exist in closed value list
1121=\u5F0F\u306B\u30A8\u30E9\u30FC\u304C\u3042\u308A\u307E\u3059\u3002\u30AD\u30FC\u30EF\u30FC\u30C9 'all' \u306F\u3001\u540C\u3058\u547D\u4EE4\u3067\u8907\u6570\u56DE\u4F7F\u7528\u3067\u304D\u307E\u305B\u3093\u3002


# 1200 - 1999 - validation messages

#############################
# API : resource CRUD
#############################
# 2100 - 2299 - vocabulary messages

# YMSG: return from vocabulary runtime plug in, in case of error in expression
2100='{0}' \u306E\u5F0F\u89E3\u6790\u3067\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F\u3002'{1}'\u3001'{2}'
# YMSG: return from vocabulary runtime plug in, in case of error in rule
2101='{0}' \u3067\u30EB\u30FC\u30EB\u306B\u30A8\u30E9\u30FC\u304C\u3042\u308A\u307E\u3059\u3002'{1}'\u3001'{2}'
# YMSG: return from vocabulary runtime plug in, in case the parameter type already exists
2102='{0}' \u306E '{1}'\u3001\u540D\u79F0 '{2}' \u306F\u3059\u3067\u306B\u5B58\u5728\u3057\u307E\u3059
# YMSG: return from vocabulary runtime plug in, in case parameter name isn't valid
2103='{0}' \: '{1}' \u306B\u7121\u52B9\u306A\u540D\u79F0\u304C\u5B58\u5728\: '{2}'
# YMSG: return from vocabulary runtime plug in, in case one of action/output names aren't valid
2104='{0}' \u306B\u7121\u52B9\u306A\u540D\u79F0\u304C\u5B58\u5728\: '{1}'
# YMSG: return from vocabulary runtime plug in, in case name already exists
2105=\u540D\u79F0 '{0}' \u304C '{1}' \u3067\u8907\u6570\u56DE\u5B9A\u7FA9\u3055\u308C\u3066\u3044\u307E\u3059\u3002
# YMSG : return from vocabulary runtime plug in, in case the output has no parameters
2106=\u51FA\u529B\u3067\u4E0D\u8DB3\u3057\u3066\u3044\u308B\u30D1\u30E9\u30E1\u30FC\u30BF\u304C\u3042\u308A\u307E\u3059
# YMSG: return from vocabulary runtime plug in, in case one of the attributes has an invalid name
2107=\u7121\u52B9\u306A\u5C5E\u6027\u540D '{0}' \u3067\u3059
# YMSG: return from vocabulary runtime plug in, in case object name of declare more than once
2108={0}\: '{'1} \u306F\u3059\u3067\u306B\u5B58\u5728\u3057\u307E\u3059\u3002 
# YMSG: return from vocabulary runtime plug in, in case attribute name of declare more than once
2109=\u5C5E\u6027\u306F\u3059\u3067\u306B\u5B58\u5728\u3057\u307E\u3059\u3002\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8 \= '{0}' \u5C5E\u6027 \= '{1}'
# YMSG: return from vocabulary runtime plug in, in case attribute name of declare more than once
2110=\u30A2\u30BD\u30B7\u30A8\u30FC\u30B7\u30E7\u30F3\u306F\u3059\u3067\u306B\u5B58\u5728\u3057\u307E\u3059\u3002\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8 \= '{0}' \u30A2\u30BD\u30B7\u30A8\u30FC\u30B7\u30E7\u30F3 \= '{1}'
# YMSG : return from vocabulary runtime plug in, in case the source table isn't exists
2111=\u30BD\u30FC\u30B9\u30C6\u30FC\u30D6\u30EB '{0}' \u306F\u7121\u52B9\u3067\u3059
# YMSG : return from vocabulary runtime plug in, in case of one the association is invalid
2112=\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8 '{0}' \u3068\u30A2\u30BD\u30B7\u30A8\u30FC\u30B7\u30E7\u30F3 '{1}' \u306B\u7121\u52B9\u306A\u30A2\u30BD\u30B7\u30A8\u30FC\u30B7\u30E7\u30F3\u304C\u3042\u308A\u307E\u3059
# YMSG : return from vocabulary runtime plug in, in case of one the association's attributes are invalid
2113=\u30A2\u30BD\u30B7\u30A8\u30FC\u30B7\u30E7\u30F3 '{0}' \u5C5E\u6027 '{1}' \u306B\u5BFE\u3057\u3066\u7121\u52B9\u306A\u5C5E\u6027\u3067\u3059
# YMSG: return from rule utils, in case of invalid vocabulary assignment
2114=\u30DC\u30AD\u30E3\u30D6\u30E9\u30EA '{0}' \u306F\u6709\u52B9\u3067\u306F\u3042\u308A\u307E\u305B\u3093
# YMSG: return from vocabulary runtime plug in, in case invalid alias content
2115=\u30A8\u30A4\u30EA\u30A2\u30B9 '{0}' \u306E\u5185\u5BB9\u304C\u7121\u52B9\u3067\u3059\u3002\u7406\u7531\: '{1}'
# YMSG: return from vocabulary runtime plug in, in case invalid alias name
2116=\u30A8\u30A4\u30EA\u30A2\u30B9\u540D  '{0}' \u304C\u7121\u52B9\u3067\u3059\u3002 \u30A8\u30A4\u30EA\u30A2\u30B9\u540D\u306B\u306F\u82F1\u6570\u5B57\u3068\u4E0B\u7DDA\u306E\u307F\u3092\u542B\u3081\u308B\u3053\u3068\u304C\u3067\u304D\u3001\u5148\u982D\u306F\u82F1\u6587\u5B57\u306B\u3059\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\u3002\u307E\u305F\u3001\u30EB\u30FC\u30EB\u5F0F\u8A00\u8A9E\u306B\u542B\u307E\u308C\u308B\u4E88\u7D04\u8A9E\u306F\u4F7F\u7528\u3067\u304D\u307E\u305B\u3093\u3002
# YMSG: return from vocabulary runtime plug in, in case alias name collide with an data object name
2117=\u30A8\u30A4\u30EA\u30A2\u30B9 '{0}' \u306E\u540D\u79F0\u304C\u7121\u52B9\u3067\u3059\u3002\u3053\u306E\u30A8\u30A4\u30EA\u30A2\u30B9\u540D\u306F\u30C7\u30FC\u30BF\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u540D\u3068\u3057\u3066\u3059\u3067\u306B\u5B58\u5728\u3057\u307E\u3059\u3002
# YMSG: return from vocabulary runtime plug in, in case o alias dependency to itself
2118=\u30A8\u30A4\u30EA\u30A2\u30B9 '{0}' \u306E\u5185\u5BB9\u304C\u7121\u52B9\u3067\u3059\u3002\u30A8\u30A4\u30EA\u30A2\u30B9\u306E\u89E3\u6C7A\u306B\u3088\u3063\u3066\u7121\u9650\u30EB\u30FC\u30D7\u304C\u767A\u751F\u3057\u307E\u3059\u3002
# YMSG: return from vocabulary runtime plug in, when name already exists in another vocabulary in the DB. Example: In 'dataObjects', name 'player' already exists in 'aliases' vocabulary 'voca2'
2120='{0}' \u3067\u3001\u540D\u79F0 '{1}' \u306F\u3059\u3067\u306B\u30DC\u30AD\u30E3\u30D6\u30E9\u30EA '{3}' \u306E '{2}' \u306B\u5B58\u5728\u3057\u307E\u3059\u3002
# YMSG: return from vocabulary runtime plug in, scope name can't be Public or Private
2121=\u7121\u52B9\u306A\u30B9\u30B3\u30FC\u30D7\u540D\u3067\u3059\u3002\u30B9\u30B3\u30FC\u30D7\u540D\u3092 'Public' \u3084 'Private' \u306B\u3059\u308B\u3053\u3068\u306F\u3067\u304D\u307E\u305B\u3093\u3002
# YMSG: return from vocabulary runtime plug in, embedded vocabulary can't be with scope Global
2122=\u7121\u52B9\u306A\u30B9\u30B3\u30FC\u30D7\u30BF\u30A4\u30D7\u3067\u3059\u3002\u57CB\u8FBC\u30DC\u30AD\u30E3\u30D6\u30E9\u30EA\u306E\u30BF\u30A4\u30D7\u3092 'Global' \u306B\u3059\u308B\u3053\u3068\u306F\u3067\u304D\u307E\u305B\u3093
# YMSG: Object does not exist
2125=\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8 '{0}' \u304C\u5B58\u5728\u3057\u307E\u305B\u3093\u3002
# YMSG: return from vocabulary runtime plug in, in case of a wrong data object name 
2126=dataObject '{0}' \u306E\u540D\u79F0\u304C\u7121\u52B9\u3067\u3059\u3002\u30C7\u30FC\u30BF\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u540D\u3092\u65E2\u5B58\u306E\u30EB\u30FC\u30EB\u30C6\u30F3\u30D7\u30EC\u30FC\u30C8\u540D\u3084\u3001rule \u307E\u305F\u306F ruleTemplate \u3068\u3044\u3063\u305F\u4E88\u7D04\u3055\u308C\u3066\u3044\u308B\u5358\u8A9E (\u5927\u6587\u5B57/\u5C0F\u6587\u5B57\u306F\u533A\u5225) \u306B\u3059\u308B\u3053\u3068\u306F\u3067\u304D\u307E\u305B\u3093\u3002
# YMSG: return from vocabulary runtime plug in, in case of a wrong alias name
2127=\u30A8\u30A4\u30EA\u30A2\u30B9\u540D  '{0}' \u304C\u7121\u52B9\u3067\u3059\u3002 \u30A8\u30A4\u30EA\u30A2\u30B9\u540D\u3092\u65E2\u5B58\u306E\u30EB\u30FC\u30EB\u30C6\u30F3\u30D7\u30EC\u30FC\u30C8\u540D\u3084\u3001rule \u307E\u305F\u306F ruleTemplate \u3068\u3044\u3063\u305F\u4E88\u7D04\u3055\u308C\u3066\u3044\u308B\u5358\u8A9E (\u5927\u6587\u5B57/\u5C0F\u6587\u5B57\u306F\u533A\u5225) \u306B\u3059\u308B\u3053\u3068\u306F\u3067\u304D\u307E\u305B\u3093\u3002
# YMSG: return from vocabulary runtime plug in, in case invalid data object name
2128=dataObject '{0}' \u306E\u540D\u79F0\u304C\u7121\u52B9\u3067\u3059\u3002dataObject \u540D\u306B\u306F\u82F1\u6570\u5B57\u3068\u4E0B\u7DDA\u306E\u307F\u3092\u542B\u3081\u308B\u3053\u3068\u304C\u3067\u304D\u3001\u5148\u982D\u306F\u82F1\u6587\u5B57\u306B\u3059\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\u3002\u307E\u305F\u3001\u30EB\u30FC\u30EB\u5F0F\u8A00\u8A9E\u306B\u542B\u307E\u308C\u308B\u4E88\u7D04\u8A9E\u306F\u4F7F\u7528\u3067\u304D\u307E\u305B\u3093\u3002
# YMSG: return from vocabulary runtime plug in, in case of duplicate alias names
2129=\u30A8\u30A4\u30EA\u30A2\u30B9 '{0}' \u306F\u30A8\u30A4\u30EA\u30A2\u30B9\u540D\u3068\u3057\u3066\u5B58\u5728\u3057\u3066\u3044\u307E\u3059\u3002
# YMSG: return from vocabulary runtime plug in, in case alias content is empty
2130=\u30A8\u30A4\u30EA\u30A2\u30B9 '{0}' \u306E\u30B3\u30F3\u30C6\u30F3\u30C4\u30D1\u30E9\u30E1\u30FC\u30BF\u304C\u672A\u5165\u529B\u3067\u3059\u3002
# YMSG: return from vocabulary runtime plug in, in case alias name exists as as an attribute name
2131=\u30A8\u30A4\u30EA\u30A2\u30B9\u540D '{0}' \u306F\u7121\u52B9\u3067\u3059\u3002\u30A8\u30A4\u30EA\u30A2\u30B9\u306F\u3001\u5C5E\u6027\u540D\u3068\u3057\u3066\u5B58\u5728\u3057\u3066\u3044\u307E\u3059\u3002
# YMSG: return from vocabulary runtime plug in, in case alias name exists in other vocabulary with the same scope
2132=\u30A8\u30A4\u30EA\u30A2\u30B9\u540D '{0}' \u306F\u7121\u52B9\u3067\u3059\u3002\u540D\u79F0\u306F\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8 '{1}' \u306E\u5C5E\u6027\u3068\u3057\u3066\u30DC\u30AD\u30E3\u30D6\u30E9\u30EA '{2}' \u306B\u5B58\u5728\u3057\u3066\u3044\u307E\u3059\u3002
# YMSG: return from vocabulary runtime plug in, in case alias name exists in objects rule or ruleTemplate
2133=\u30A8\u30A4\u30EA\u30A2\u30B9\u540D '{0}' \u306F\u7121\u52B9\u3067\u3059\u3002\u540D\u79F0\u306F\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8 '{1}' \u306B\u5B58\u5728\u3057\u3066\u3044\u307E\u3059\u3002
# YMSG: return from vocabulary runtime plug in, in case attribute name already exists as alias in other vocabulary
2134=\u5C5E\u6027 '{0}' \u306B\u306F\u7121\u52B9\u306A\u540D\u79F0\u3067\u3059\u3002\u540D\u79F0\u306F\u30A8\u30A4\u30EA\u30A2\u30B9\u3068\u3057\u3066\u30DC\u30AD\u30E3\u30D6\u30E9\u30EA '{1}' \u306B\u5B58\u5728\u3057\u3066\u3044\u307E\u3059\u3002
# YMSG: return from vocabulary runtime plug in, in case vocabulary declares it depends on a vocabulary which doesn't exists
2135=\u3053\u306E\u30DC\u30AD\u30E3\u30D6\u30E9\u30EA\u306F\u3001\u5B58\u5728\u3057\u306A\u3044\u30DC\u30AD\u30E3\u30D6\u30E9\u30EA '{0}' \u3078\u306E\u4F9D\u5B58\u95A2\u4FC2\u3092\u6307\u5B9A\u3057\u3066\u3044\u307E\u3059\u3002
# YMSG: return from vocabulary runtime plug in, in case implementor declare global vocabulary with dependencies
2136=\u30B0\u30ED\u30FC\u30D0\u30EB\u30DC\u30AD\u30E3\u30D6\u30E9\u30EA\u306B\u4ED6\u306E\u30DC\u30AD\u30E3\u30D6\u30E9\u30EA\u3078\u306E\u4F9D\u5B58\u95A2\u4FC2\u3092\u542B\u3081\u308B\u3053\u3068\u306F\u3067\u304D\u307E\u305B\u3093\u3002
# YMSG: return from vocabulary runtime plug in, in case, in the same data object, there is association and attribute with the same name
2137=\u30C7\u30FC\u30BF\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8 '{0}' \u3067\u3001\u540D\u79F0 '{1}' \u304C\u30A2\u30BD\u30B7\u30A8\u30FC\u30B7\u30E7\u30F3\u3068\u5C5E\u6027\u306B\u4F7F\u7528\u3055\u308C\u3066\u3044\u307E\u3059\u3002 \u540C\u3058\u540D\u79F0\u3092\u4E21\u65B9\u306E\u30D7\u30ED\u30D1\u30C6\u30A3\u306B\u4F7F\u7528\u3059\u308B\u3053\u3068\u306F\u3067\u304D\u307E\u305B\u3093\u3002
# YMSG: return from vocabulary runtime plug in, in case invalid alias name
2138=\u5024\u4E00\u89A7 '{0}' \u306E\u540D\u79F0\u304C\u7121\u52B9\u3067\u3059\u3002 \u5024\u4E00\u89A7\u306E\u540D\u79F0\u306F\u3001\u82F1\u6570\u5B57\u3068\u30A2\u30F3\u30C0\u30FC\u30B9\u30B3\u30A2\u3060\u3051\u3067\u69CB\u6210\u3057\u3001\u5148\u982D\u3092\u82F1\u6587\u5B57\u306B\u3059\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\u3002\u307E\u305F\u3001\u30EB\u30FC\u30EB\u5F0F\u8A00\u8A9E\u306E\u4E88\u7D04\u8A9E\u306F\u4F7F\u7528\u3067\u304D\u307E\u305B\u3093\u3002
# YMSG: return from vocabulary runtime plug in, in case alias content is empty
2139=\u5024\u4E00\u89A7 '{0}' \u306E\u5185\u5BB9\u304C\u7A7A\u3067\u3059\u3002
# YMSG: return from vocabulary runtime plug in, in case alias content is empty
2140=\u30C7\u30FC\u30BF\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8 '{2}' \u4E2D\u306E\u5C5E\u6027 '{1}' \u3067\u5B9A\u7FA9\u3055\u308C\u305F\u5024\u4E00\u89A7 '{0}' \u306F\u5B58\u5728\u3057\u307E\u305B\u3093\u3002
# YMSG: return from vocabulary runtime plug in, in case parameter size isn't valid
2141='{'0} \u3067\u306F\u3001'{'3} \u306E\u30D1\u30E9\u30E1\u30FC\u30BF '{'2} \u306E\u30B5\u30A4\u30BA ({1}) \u304C\u6307\u5B9A\u3057\u305F\u30C7\u30FC\u30BF\u30BF\u30A4\u30D7\u306B\u5BFE\u3057\u3066\u6709\u52B9\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002
# YMSG: return from vocabulary - in case parameter content cannot be a collection 
2142=\u30A2\u30AF\u30B7\u30E7\u30F3 '{0}' \u306B\u5BFE\u3059\u308B\u30A2\u30AF\u30B7\u30E7\u30F3\u30D1\u30E9\u30E1\u30FC\u30BF '{1}' \u306E\u30D1\u30E9\u30E1\u30FC\u30BF\u5B9A\u7FA9\u304C\u7121\u52B9\u3067\u3059\u3002 \u30BF\u30A4\u30D7\u304C\u30B3\u30EC\u30AF\u30B7\u30E7\u30F3\u306E\u30D1\u30E9\u30E1\u30FC\u30BF\u306F\u30A2\u30AF\u30B7\u30E7\u30F3\u3067\u306F\u8A31\u53EF\u3055\u308C\u307E\u305B\u3093\u3002                                                                                                                                                                   .




# 2300 - 2499 rule template messages

# YMSG: return from Rule Template runtime plug in, in case of rule template name starts with a number
2300=\u30EB\u30FC\u30EB\u30C6\u30F3\u30D7\u30EC\u30FC\u30C8\u306E\u767B\u9332\u307E\u305F\u306F\u66F4\u65B0\u304C\u3067\u304D\u307E\u305B\u3093\u3002\u30EB\u30FC\u30EB\u30C6\u30F3\u30D7\u30EC\u30FC\u30C8\u540D\u306E\u5148\u982D\u3092\u6570\u5B57\u306B\u3059\u308B\u3053\u3068\u306F\u3067\u304D\u307E\u305B\u3093\u3002
# YMSG: return from Rule Template runtime plug in, in case of illegal change in rule template attributes
2301=\u30EB\u30FC\u30EB\u30C6\u30F3\u30D7\u30EC\u30FC\u30C8\u6709\u52B9\u5316\u306B\u306F\u3001\u4E92\u63DB\u6027\u306E\u306A\u3044\u5909\u66F4\u304C\u542B\u307E\u308C\u3066\u3044\u307E\u3059\u3002
# YMSG: return from Rule Template runtime plug in, in case of rule template update contains condition change
2302=\u30EB\u30FC\u30EB\u30C6\u30F3\u30D7\u30EC\u30FC\u30C8\u306E\u767B\u9332\u307E\u305F\u306F\u66F4\u65B0\u304C\u3067\u304D\u307E\u305B\u3093\u3002\u30EB\u30FC\u30EB\u30C6\u30F3\u30D7\u30EC\u30FC\u30C8\u6761\u4EF6\u3092\u5909\u66F4\u3067\u304D\u307E\u305B\u3093\u3002
# YMSG: return from Rule Template runtime plug in, in case of rule template contains invalid condition 
2303=\u30EB\u30FC\u30EB\u30C6\u30F3\u30D7\u30EC\u30FC\u30C8\u306E\u767B\u9332\u307E\u305F\u306F\u66F4\u65B0\u304C\u3067\u304D\u307E\u305B\u3093\u3002\u6761\u4EF6 '{0}' \u306F\u6709\u52B9\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002
# YMSG: return from Rule Template runtime plug in, in case of rule template deletion when there are rules assigned to the rule template  
2304=\u30EB\u30FC\u30EB\u30C6\u30F3\u30D7\u30EC\u30FC\u30C8 {0} \u306F\u524A\u9664\u3067\u304D\u307E\u305B\u3093\u3002 \u3053\u306E\u30EB\u30FC\u30EB\u30C6\u30F3\u30D7\u30EC\u30FC\u30C8\u306B\u5BFE\u3059\u308B\u30EB\u30FC\u30EB\u304C\u3042\u308A\u307E\u3059\u3002
# YMSG: return from Rule Template runtime plug in, in case of duplicate rule template name  
2305=\u30EB\u30FC\u30EB\u30C6\u30F3\u30D7\u30EC\u30FC\u30C8\u306E\u767B\u9332\u307E\u305F\u306F\u66F4\u65B0\u304C\u3067\u304D\u307E\u305B\u3093\u3002\u30EB\u30FC\u30EB\u30C6\u30F3\u30D7\u30EC\u30FC\u30C8 '{0}' \u306F\u30D1\u30C3\u30B1\u30FC\u30B8 '{1}' \u306B\u3059\u3067\u306B\u5B58\u5728\u3057\u307E\u3059\u3002
# YMSG: return from Rule Template runtime plug in, in case that rule template name starts with a number  
2306=\u30EB\u30FC\u30EB\u30C6\u30F3\u30D7\u30EC\u30FC\u30C8\u540D '{0}' \u306E\u5148\u982D\u3092\u6570\u5B57\u306B\u3059\u308B\u3053\u3068\u306F\u3067\u304D\u307E\u305B\u3093\u3002
# YMSG: return from Rule Template runtime plug in, in case that rule template name already exist as data object  
2307=\u30EB\u30FC\u30EB\u30C6\u30F3\u30D7\u30EC\u30FC\u30C8 '{0}' \u3092\u767B\u9332\u3067\u304D\u307E\u305B\u3093\u3002\u30EB\u30FC\u30EB\u30C6\u30F3\u30D7\u30EC\u30FC\u30C8\u540D\u304C\u30C7\u30FC\u30BF\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u3068\u3057\u3066\u30DC\u30AD\u30E3\u30D6\u30E9\u30EA '{1}' \u306B\u5B58\u5728\u3057\u307E\u3059\u3002
# YMSG: return from Rule Template runtime plug in, in case that rule template name already exist as alias
2308=\u30EB\u30FC\u30EB\u30C6\u30F3\u30D7\u30EC\u30FC\u30C8 '{0}' \u3092\u767B\u9332\u3067\u304D\u307E\u305B\u3093\u3002\u30EB\u30FC\u30EB\u30C6\u30F3\u30D7\u30EC\u30FC\u30C8\u540D\u304C\u30A8\u30A4\u30EA\u30A2\u30B9\u3068\u3057\u3066\u30DC\u30AD\u30E3\u30D6\u30E9\u30EA '{1}' \u306B\u5B58\u5728\u3057\u307E\u3059\u3002


# 2500 - 2699 - rule messages

# YMSG: return from Rule runtime plug in, in case of resource contains additional attributes but not assigned to rule template   
2500=\u30EB\u30FC\u30EB\u3092\u767B\u9332\u3067\u304D\u307E\u305B\u3093\u3002\u30EB\u30FC\u30EB\u304C\u30C6\u30F3\u30D7\u30EC\u30FC\u30C8\u306B\u57FA\u3044\u3066\u3044\u306A\u3044\u306B\u3082\u304B\u304B\u308F\u3089\u305A\u3001\u8FFD\u52A0\u5C5E\u6027\u304C\u5165\u529B\u3055\u308C\u307E\u3057\u305F\u3002
# YMSG: return from Rule runtime plug in, in case of rule template assignment change   
2501=\u30EB\u30FC\u30EB\u3092\u66F4\u65B0\u3067\u304D\u307E\u305B\u3093\u3002\u30EB\u30FC\u30EB\u30C6\u30F3\u30D7\u30EC\u30FC\u30C8\u5272\u5F53\u306F\u30EB\u30FC\u30EB\u306E\u767B\u9332\u5F8C\u306F\u5909\u66F4\u3067\u304D\u307E\u305B\u3093\u3002
# YMSG: return from Rule runtime plug in, in case of vocabulary change  
2502=\u30EB\u30FC\u30EB\u3092\u66F4\u65B0\u3067\u304D\u307E\u305B\u3093\u3002\u30DC\u30AD\u30E3\u30D6\u30E9\u30EA\u5272\u5F53\u306F\u30EB\u30FC\u30EB\u306E\u767B\u9332\u5F8C\u306F\u5909\u66F4\u3067\u304D\u307E\u305B\u3093\u3002
# YMSG: return from Rule runtime plug in, in case of output change   
2503=\u30EB\u30FC\u30EB\u3092\u66F4\u65B0\u3067\u304D\u307E\u305B\u3093\u3002\u51FA\u529B\u5272\u5F53\u306F\u30EB\u30FC\u30EB\u306E\u767B\u9332\u5F8C\u306F\u5909\u66F4\u3067\u304D\u307E\u305B\u3093\u3002
# YMSG: return from Rule runtime plug in, in case of rule contains additional attributes where assigned rule template does not contains additional attributes
2504=\u30EB\u30FC\u30EB\u3092\u767B\u9332\u3067\u304D\u307E\u305B\u3093\u3002\u5272\u308A\u5F53\u3066\u3089\u308C\u305F\u30EB\u30FC\u30EB\u30C6\u30F3\u30D7\u30EC\u30FC\u30C8\u306B\u5C5E\u3057\u3066\u3044\u306A\u3044\u8FFD\u52A0\u5C5E\u6027\u304C\u5165\u529B\u3055\u308C\u307E\u3057\u305F\u3002
# YMSG: return from Rule runtime plug in, in case of execution context change
2505=\u30EB\u30FC\u30EB\u3092\u66F4\u65B0\u3067\u304D\u307E\u305B\u3093\u3002\u5B9F\u884C\u30B3\u30F3\u30C6\u30AD\u30B9\u30C8\u306E\u5272\u5F53\u306F\u30EB\u30FC\u30EB\u306E\u767B\u9332\u5F8C\u306F\u5909\u66F4\u3067\u304D\u307E\u305B\u3093\u3002
# YMSG: return from Rule runtime plug in, in case of invalid rule template assignment
2506=\u30EB\u30FC\u30EB\u30C6\u30F3\u30D7\u30EC\u30FC\u30C8 '{0}' \u306F\u6709\u52B9\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002
# YMSG: return from Rule runtime plug in, in case of invalid status transition
2507=\u30EB\u30FC\u30EB\u3092\u66F4\u65B0\u3067\u304D\u307E\u305B\u3093\u3002\u30B9\u30C6\u30FC\u30BF\u30B9\u3092 '{0}' \u304B\u3089 '{1}' \u306B\u5909\u66F4\u3059\u308B\u3053\u3068\u306F\u3067\u304D\u307E\u305B\u3093\u3002
# YMSG: return from Rule runtime plug in, in case of updating single consumption to non single consumption Rule
2510=\u57CB\u8FBC\u30B5\u30FC\u30D3\u30B9\u306E\u524A\u9664\u306F\u8A31\u53EF\u3055\u308C\u307E\u305B\u3093
# YMSG: return from Rule runtime plug in, in case of updating single embedded service in Rule
2511=\u57CB\u8FBC\u30B5\u30FC\u30D3\u30B9\u306E\u524A\u9664\u307E\u305F\u306F\u5909\u66F4\u304C\u8A31\u53EF\u3055\u308C\u307E\u305B\u3093
# YMSG: return from Rule runtime plug in, in case of more than one embedded services with the same name
2512=\u57CB\u8FBC\u30B5\u30FC\u30D3\u30B9\u540D '{0}' \u304C\u8907\u6570\u7B87\u6240\u306B\u5B58\u5728\u3057\u307E\u3059
# YMSG: return from Rule runtime plug in - update/create, in case the rule body is not valid
2513=\u30EB\u30FC\u30EB\u306E\u767B\u9332\u307E\u305F\u306F\u66F4\u65B0\u304C\u3067\u304D\u307E\u305B\u3093\u3002\u30EB\u30FC\u30EB\u30DC\u30C7\u30A3\u304C\u6709\u52B9\u3067\u306F\u3042\u308A\u307E\u305B\u3093
# YMSG: return from Rule body validator - in case parameter is referenced to an unknown action
2514=\u7121\u52B9\u306A\u30D1\u30E9\u30E1\u30FC\u30BF\u5B9A\u7FA9\u3067\u3059\u3002\u30D1\u30E9\u30E1\u30FC\u30BF\u306E\u53C2\u7167\u5148\u304C\u30DC\u30AD\u30E3\u30D6\u30E9\u30EA\u306B\u5B58\u5728\u3057\u306A\u3044\u30A2\u30AF\u30B7\u30E7\u30F3 '{0}' \u3068\u306A\u3063\u3066\u3044\u307E\u3059\u3002
# YMSG: return from Rule body validator - in case parameter name isn't a valid parameter for action
2515=\u7121\u52B9\u306A\u30D1\u30E9\u30E1\u30FC\u30BF\u5B9A\u7FA9\u3067\u3059\u3002\u30A2\u30AF\u30B7\u30E7\u30F3 '{1}' \u306E\u30D1\u30E9\u30E1\u30FC\u30BF\u540D '{0}' \u306F\u30DC\u30AD\u30E3\u30D6\u30E9\u30EA\u306B\u5B58\u5728\u3057\u307E\u305B\u3093\u3002
# YMSG: return from Rule body validator - in case action doesn't exist in the vocabulary
2516=\u30A2\u30AF\u30B7\u30E7\u30F3 '{0}' \u306F\u30DC\u30AD\u30E3\u30D6\u30E9\u30EA\u306B\u5B58\u5728\u3057\u307E\u305B\u3093\u3002
# YMSG: return from Rule body validator - when the sent parameter isn't a required parameter in the sent output 
2517=\u7121\u52B9\u306A\u30D1\u30E9\u30E1\u30FC\u30BF\u5B9A\u7FA9\u3067\u3059\u3002\u51FA\u529B '{1}' \u306E\u30D1\u30E9\u30E1\u30FC\u30BF\u540D '{0}' \u306F\u30DC\u30AD\u30E3\u30D6\u30E9\u30EA\u306B\u5B58\u5728\u3057\u307E\u305B\u3093\u3002
# YMSG: return from Rule body validator - when the sent output doesn't exists in the vocabulary
2518=\u51FA\u529B '{0}' \u306F\u30DC\u30AD\u30E3\u30D6\u30E9\u30EA\u306B\u5B58\u5728\u3057\u307E\u305B\u3093\u3002
# YMSG: return from Rule body validator - when alias has more than one output parameter column
2519=\u30A8\u30A4\u30EA\u30A2\u30B9\u306B\u8907\u6570\u306E\u51FA\u529B\u30D1\u30E9\u30E1\u30FC\u30BF\u304C\u3042\u308A\u307E\u3059
# YMSG: return from Rule body validator - when the alias output parameters values do not have the same type X
2520=\u51FA\u529B\u30D1\u30E9\u30E1\u30FC\u30BF '{0} \u306E\u5024\u306F\u3001\u3059\u3079\u3066\u540C\u3058\u30BF\u30A4\u30D7\u306B\u3059\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\u3002
# YMSG: return from Rule runtime plug in, in case of assign rule to rule service that does not exist.
2521=\u30EB\u30FC\u30EB '{0}' \u3092\u30EB\u30FC\u30EB\u30B5\u30FC\u30D3\u30B9 '{1}' \u306B\u5272\u308A\u5F53\u3066\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u305B\u3093\u3067\u3057\u305F\u3002\u3053\u306E\u30EB\u30FC\u30EB\u30B5\u30FC\u30D3\u30B9\u306F\u5B58\u5728\u3057\u307E\u305B\u3093\u3002
# YMSG: return from Rule runtime plug in, in case of assign rule to rule service with different vocabulary.
2522=\u30EB\u30FC\u30EB '{0}' \u3092\u30EB\u30FC\u30EB\u30B5\u30FC\u30D3\u30B9 '{1}' \u306B\u5272\u308A\u5F53\u3066\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u305B\u3093\u3067\u3057\u305F\u3002\u30EB\u30FC\u30EB\u30B5\u30FC\u30D3\u30B9\u3068\u30EB\u30FC\u30EB\u306B\u306F\u540C\u3058\u30DC\u30AD\u30E3\u30D6\u30E9\u30EA\u304C\u5B9A\u7FA9\u3055\u308C\u3066\u3044\u306A\u3051\u308C\u3070\u306A\u308A\u307E\u305B\u3093\u3002
# YMSG: return from Rule runtime plug in, in case of assign rule to rule service with different output.
2523=\u30EB\u30FC\u30EB '{0}' \u3092\u30EB\u30FC\u30EB\u30B5\u30FC\u30D3\u30B9 '{1}' \u306B\u5272\u308A\u5F53\u3066\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u305B\u3093\u3067\u3057\u305F\u3002\u30EB\u30FC\u30EB\u30B5\u30FC\u30D3\u30B9\u3068\u30EB\u30FC\u30EB\u306B\u306F\u540C\u3058\u51FA\u529B\u304C\u5B9A\u7FA9\u3055\u308C\u3066\u3044\u306A\u3051\u308C\u3070\u306A\u308A\u307E\u305B\u3093\u3002
# YMSG: return from Rule runtime plug in, in case of assign rule to rule service that is not indicated as manually assigned.
2524=\u30EB\u30FC\u30EB '{0}' \u3092\u30EB\u30FC\u30EB\u30B5\u30FC\u30D3\u30B9 '{1}' \u306B\u5272\u308A\u5F53\u3066\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u305B\u3093\u3067\u3057\u305F\u3002 \u3053\u306E\u30EB\u30FC\u30EB\u30B5\u30FC\u30D3\u30B9\u306F\u81EA\u52D5\u30EB\u30FC\u30EB\u5272\u5F53\u7528\u306B\u8A2D\u5B9A\u3055\u308C\u3066\u3044\u308B\u305F\u3081\u3001\u30DE\u30CB\u30E5\u30A2\u30EB\u5272\u5F53\u306F\u3067\u304D\u307E\u305B\u3093\u3002
# YMSG: return from Rule runtime plug in - update/create, in case a custom condition is not valid
2525=\u30EB\u30FC\u30EB\u3092\u767B\u9332\u307E\u305F\u306F\u66F4\u65B0\u3067\u304D\u307E\u305B\u3093\u3067\u3057\u305F\u3002'{0}' \u306F\u6709\u52B9\u306A\u6761\u4EF6\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002
# YMSG: return from Rule body validator - when ruleBody of type ruleSet has more than one condition column
2526=\u30EB\u30FC\u30EB\u30BB\u30C3\u30C8\u304C\u7121\u52B9\u3067\u3059\u3002\u30EB\u30FC\u30EB\u30BB\u30C3\u30C8\u306B\u8907\u6570\u6761\u4EF6\u3092\u6301\u3064\u30EB\u30FC\u30EB\u304C\u3042\u308A\u307E\u3059\u3002


# 2700 - 2899 - rule service messages

# YMSG: return from Rule service plug in, in case of wrong data object filter
2700=\u30EB\u30FC\u30EB\u30B5\u30FC\u30D3\u30B9\u30D5\u30A3\u30EB\u30BF\u306E\u30A8\u30E9\u30FC
# YMSG: return from Rule service plug in, in case of different data objects in execution context and filter
2701=\u5B9F\u884C\u30B3\u30F3\u30C6\u30AD\u30B9\u30C8\u5185\u306E\u30C7\u30FC\u30BF\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8 - '{0}' \u306F\u3001\u30D5\u30A3\u30EB\u30BF\u5185\u306E dataObject - '{1}' \u3068\u7570\u306A\u308A\u307E\u3059
# YMSG: return from  runtime plug in, in case of specified data object does not have the specified attribute (e.g. data object keys in rule service definition).
2704=\u30EB\u30FC\u30EB\u30B5\u30FC\u30D3\u30B9\u3092\u767B\u9332\u307E\u305F\u306F\u66F4\u65B0\u3067\u304D\u307E\u305B\u3093\u3002\u30DC\u30AD\u30E3\u30D6\u30E9\u30EA {1} \u306E\u30C7\u30FC\u30BF\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8 {0} \u306B\u5C5E\u6027 {2} \u304C\u3042\u308A\u307E\u305B\u3093\u3002
# YMSG: return from runtime plug in, in case of parameter mapping path contains a collection
2705=\u30B3\u30EC\u30AF\u30B7\u30E7\u30F3\u3092\u542B\u3080\u30D1\u30B9\u304C\u8A31\u53EF\u3055\u308C\u307E\u305B\u3093\u3002 \u30D1\u30B9\: {0};
# YMSG: return from runtime plug in, in case of data object mapping entry is not unique within an execution context .
2706=\u30C7\u30FC\u30BF\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8 - {0} \u306E\u30DE\u30C3\u30D4\u30F3\u30B0\u304C\u91CD\u8907\u3057\u3066\u3044\u307E\u3059\u3002
# YMSG: return from  runtime plug in, in case of parameter definition entry is not unique within an execution context .
2707=\u30EB\u30FC\u30EB\u30B5\u30FC\u30D3\u30B9\u3092\u767B\u9332\u3067\u304D\u307E\u305B\u3093\u3002\u30D1\u30E9\u30E1\u30FC\u30BF {0} \u304C\u91CD\u8907\u3057\u3066\u3044\u307E\u3059\u3002
# YMSG: return from  runtime plug in, in case of parameter mapping entry doesn't have a match parameter definition entry with in an execution context
2708=\u30EB\u30FC\u30EB\u30B5\u30FC\u30D3\u30B9\u3092\u767B\u9332\u3067\u304D\u307E\u305B\u3093\u3002\u30D1\u30E9\u30E1\u30FC\u30BF {0} \u306F\u5B58\u5728\u3057\u307E\u305B\u3093\u304C\u3001\u30C7\u30FC\u30BF\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u3068\u95A2\u9023\u4ED8\u3051\u3089\u308C\u3066\u3044\u307E\u3059\u3002
# YMSG: return from  runtime plug in, in case of ifentifiers in dataObject type parameter do not exist in data object from vocabulary
2709=\u30EB\u30FC\u30EB\u30B5\u30FC\u30D3\u30B9 '{0}' \u306B\u7121\u52B9\u306A\u30D1\u30E9\u30E1\u30FC\u30BF\u5B9A\u7FA9\u304C\u3042\u308A\u307E\u3059\u3002 \u30D1\u30E9\u30E1\u30FC\u30BF '{1}' \u306B\u304A\u3044\u3066\u3001'{2}' \u306F\u30DC\u30AD\u30E3\u30D6\u30E9\u30EA\u30B9\u30B3\u30FC\u30D7 '{4}' \u306B\u542B\u307E\u308C\u308B\u30C7\u30FC\u30BF\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8 '{3}' \u306B\u6709\u52B9\u306A\u5C5E\u6027\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002
# YMSG: return from runtime plug in, in case of data object definition entry is not unique within parameter definition if service.
2710=\u30EB\u30FC\u30EB\u30B5\u30FC\u30D3\u30B9 '{0}' \u306E\u30D1\u30E9\u30E1\u30FC\u30BF\u5B9A\u7FA9\u304C\u7121\u52B9\u3067\u3059\u3002\u30C7\u30FC\u30BF\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8 '{1}' \u306F\u8907\u6570\u306E\u30D1\u30E9\u30E1\u30FC\u30BF\u3067\u53C2\u7167\u3055\u308C\u3066\u3044\u307E\u3059\u3002
# YMSG: return from runtime plug in, only read-only rule services can be indicated to be created with result view
2711=\u30EB\u30FC\u30EB\u30B5\u30FC\u30D3\u30B9 '{0}' \u3092\u767B\u9332\u3067\u304D\u307E\u305B\u3093\u3067\u3057\u305F\u3002\u7D50\u679C\u30D3\u30E5\u30FC\u306B\u3088\u308B\u30EB\u30FC\u30EB\u30B5\u30FC\u30D3\u30B9\u306B\u306F\u3001\u8AAD\u8FBC\u5C02\u7528\u3068\u6307\u5B9A\u3059\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\u3002
# YMSG: return from runtime plug in, only explicit output rule services can be indicated to be created with result view
2712=\u30EB\u30FC\u30EB\u30B5\u30FC\u30D3\u30B9 '{0}' \u3092\u767B\u9332\u3067\u304D\u307E\u305B\u3093\u3067\u3057\u305F\u3002\u7D50\u679C\u30D3\u30E5\u30FC\u306E\u3042\u308B\u30EB\u30FC\u30EB\u30B5\u30FC\u30D3\u30B9\u306B\u306F\u660E\u793A\u7684\u306A\u51FA\u529B\u304C\u5B9A\u7FA9\u3055\u308C\u3066\u3044\u306A\u3051\u308C\u3070\u306A\u308A\u307E\u305B\u3093\u3002
# YMSG: returned from request handler. Rule requested to be removed from rule service but the rule is not assigned to it
2713=\u30EB\u30FC\u30EB\u5272\u5F53\u3092\u89E3\u9664\u3067\u304D\u307E\u305B\u3093\u3067\u3057\u305F\u3002\u30EB\u30FC\u30EB '{0}' \u306F\u30EB\u30FC\u30EB\u30B5\u30FC\u30D3\u30B9\u306B\u5272\u308A\u5F53\u3066\u3089\u308C\u3066\u3044\u307E\u305B\u3093\u3002
# YMSG: return from  runtime plug in, in case of output contains collection parameter in event mode scenario
2714=\u30EB\u30FC\u30EB\u30B5\u30FC\u30D3\u30B9 '{0}' \u3092\u767B\u9332\u3067\u304D\u307E\u305B\u3093\u3067\u3057\u305F\u3002 \u5B9F\u884C\u30B3\u30F3\u30C6\u30AD\u30B9\u30C8\u3067\u30C7\u30FC\u30BF\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u304C\u5B9A\u7FA9\u3055\u308C\u3066\u3044\u306A\u3044\u30EB\u30FC\u30EB\u30B5\u30FC\u30D3\u30B9\u306B\u5BFE\u3057\u3066\u306F\u3001\u30BF\u30A4\u30D7\u304C\u30B3\u30EC\u30AF\u30B7\u30E7\u30F3\u306E\u30D1\u30E9\u30E1\u30FC\u30BF\u3092\u4F7F\u7528\u3057\u3066\u7D50\u679C\u3092\u5B9A\u7FA9\u3067\u304D\u307E\u305B\u3093\u3002
# 2900 - 2949 - post activation / completeActivation

# 2950 - 2999 - common resource CRUD


# YMSG: return from Request Handler, in case of url parameter that isn't valid
2955=URL \u30D1\u30E9\u30E1\u30FC\u30BF\: {0} \u304C\u7121\u52B9\u3067\u3059
# YMSG: return from Request Handler, in case of unsupported request mode
2956=\u30E2\u30FC\u30C9 {0} \u306F\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u3066\u3044\u307E\u305B\u3093
# YMSG: return from Request Handler, in case of unsupported metadata
2957=\u30E1\u30BF\u30C7\u30FC\u30BF\u304C\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u3066\u3044\u307E\u305B\u3093
# YMSG: return from Request Handler, in case of unsupported metadata for method
2958=\u30E1\u30BF\u30C7\u30FC\u30BF\u306E\u53D6\u5F97\u306F\u8981\u6C42\u30E1\u30BD\u30C3\u30C9 GET \u3067\u306E\u307F\u6709\u52B9\u3067\u3059


# YMSG: returned when wrong query is generated (during procedure generation). 2 causes: Bug in process or there is no mapping from vocabulary to real table / column
2970=\u30AF\u30A8\u30EA\u751F\u6210\u30A8\u30E9\u30FC\u307E\u305F\u306F\u7121\u52B9\u306A\u30DE\u30C3\u30D4\u30F3\u30B0\u3067\u3059
# YMSG: returned if for some reason the parser returned undefined parse model. Can be bad rule syntax or a bug
2971=\u89E3\u6790\u30E2\u30C7\u30EB\u304C\u5B9A\u7FA9\u3055\u308C\u3066\u3044\u307E\u305B\u3093
# YMSG: query generation needs either leading object and at least one key or a mapping to parameters. The error is returned if something is missing 
2972=\u4E3B\u8981\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u3001\u30AD\u30FC\u3001\u304A\u3088\u3073\u30DE\u30C3\u30D4\u30F3\u30B0\u306E\u7D44\u307F\u5408\u308F\u305B\u304C\u7121\u52B9\u3067\u3059
# YMSG: returned when there is no association between 2 objects in vocabulary
2973=\u30A2\u30BD\u30B7\u30A8\u30FC\u30B7\u30E7\u30F3\u304C\u7121\u52B9\u3067\u3059\u3002\u5C5E\u6027\u304C\u3042\u308A\u307E\u305B\u3093
# YMSG: returned when there is a use of attribute based on predictive model but the procedure for the predictive model is not defined
2974=\u4E88\u6E2C\u30E2\u30B8\u30E5\u30FC\u30EB\u30D7\u30ED\u30B7\u30FC\u30B8\u30E3 {0} \u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093\u3002
# YMSG: outputs tanle type is mandatory. error when missing 
2975=\u7121\u52B9\u306A\u7D50\u679C\u30C7\u30FC\u30BF\u3067\u3059
# YMSG: error when is out name is missing in vocabulary output names 
2976=\u7121\u52B9\u306A\u51FA\u529B\u540D\u3067\u3059
# YMSG: error when rule body type is different from text or decisionTable 
2977=\u7121\u52B9\u306A\u30EB\u30FC\u30EB\u30DC\u30C7\u30A3\u30BF\u30A4\u30D7\u3067\u3059
# YMSG: return from Runtime plugins, in case of unsupported change mode
2978=\u5909\u66F4\u30E2\u30FC\u30C9 '{0}' \u306F\u30EA\u30BD\u30FC\u30B9\u3067\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u3066\u3044\u307E\u305B\u3093
# YMSG: return from Runtime plugin - generate, for informing on the change mode for current resource
2979=\u30EA\u30BD\u30FC\u30B9\u751F\u6210 - \u5909\u66F4\u30E2\u30FC\u30C9\: '{0}'
# YMSG: return when expression  
2980=\u5F0F\u89E3\u6790\u3067\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F\u3002'{0}'
# YMSG: return when expression  
2981=\u30EB\u30FC\u30EB\u30C6\u30F3\u30D7\u30EC\u30FC\u30C8 '{0}' \u3092\u767B\u9332\u3067\u304D\u307E\u305B\u3093\u3002\u3053\u306E\u540D\u79F0\u306F\u3001\u30DC\u30AD\u30E3\u30D6\u30E9\u30EA '{1}' \u306E\u30C7\u30FC\u30BF\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u306E\u3044\u305A\u308C\u304B\u3067\u4F7F\u7528\u3055\u308C\u3066\u3044\u307E\u3059\u3002



#############################
# API: Get params
#############################

# 3100 - 3999 - get params messages

# YMSG: return from  ruleBodyAnalyzer, in case of businessRule.type is not text
3100=\u30D3\u30B8\u30CD\u30B9\u30EB\u30FC\u30EB\u30BF\u30A4\u30D7\u306F\u30C6\u30AD\u30B9\u30C8\u3067\u3042\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059
# YMSG: return from  ruleBodyAnalyzer, in case of Vocabulary is missing
3101=\u30DC\u30AD\u30E3\u30D6\u30E9\u30EA\u304C\u672A\u6307\u5B9A\u3067\u3059

#############################/
# API: Rule service consumption
#############################/
# 4100 - 4999 messages

# YMSG: return message in case the output is partial
4100={0} \u30A2\u30A4\u30C6\u30E0\u304C\u8868\u793A\u3055\u308C\u3066\u3044\u307E\u3059\u3002 \u3053\u308C\u306F\u7D50\u679C\u306E\u4E00\u90E8\u306B\u3059\u304E\u306A\u3044\u3053\u3068\u306B\u6CE8\u610F\u3057\u3066\u304F\u3060\u3055\u3044\u3002 saveResult \u30D5\u30E9\u30B0\u3092 TRUE \u306B\u8A2D\u5B9A\u3059\u308B\u3068\u3001\u3059\u3079\u3066\u306E\u7D50\u679C\u304C '{'1} \u51FA\u529B\u30C6\u30FC\u30D6\u30EB\u306B\u51FA\u529B\u3055\u308C\u307E\u3059\u3002

#############################/
# Halm and Installation
#############################/

# YMSG: Post Activation API success
10000=SAP HANA Rules Framework \u306E\u8A2D\u5B9A\u30B9\u30AF\u30EA\u30D7\u30C8\u304C\u6B63\u5E38\u306B\u5B8C\u4E86\u3057\u307E\u3057\u305F\u3002
# YMSG: Post Activation API failed
10001=SAP HANA Rules Framework \u306E\u8A2D\u5B9A\u30B9\u30AF\u30EA\u30D7\u30C8\u3067\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F\u3002 {0}
# YMSG: Post Activation API failed
10002=SAP HANA Rules Framework \u306E Web \u30A2\u30D7\u30EA\u30B1\u30FC\u30B7\u30E7\u30F3\u306E\u65E2\u5B58\u306E\u8A2D\u5B9A\u304C\u898B\u3064\u304B\u308A\u307E\u3057\u305F\u3002 \u305D\u306E\u305F\u3081\u3001Web \u30A2\u30D7\u30EA\u30B1\u30FC\u30B7\u30E7\u30F3\u306E\u30C7\u30D5\u30A9\u30EB\u30C8\u8A2D\u5B9A\u3092\u884C\u3046\u3053\u3068\u306F\u3067\u304D\u307E\u305B\u3093\u3002
# YMSG: Post Activation API failed
10003=\u6280\u8853\u30A8\u30E9\u30FC\u304C\u539F\u56E0\u3067\u3001SAP HANA Rules Framework \u306E Web \u30A2\u30D7\u30EA\u30B1\u30FC\u30B7\u30E7\u30F3\u306E\u8A2D\u5B9A\u304C\u5931\u6557\u3057\u307E\u3057\u305F\u3002 \u7406\u7531\: {0}
# YMSG: Post Activation API failed
10004=\u30EB\u30FC\u30EB\u30B5\u30FC\u30D3\u30B9\u307E\u305F\u306F\u30B5\u30FC\u30D3\u30B9\u304C\u57CB\u3081\u8FBC\u307E\u308C\u305F\u30EB\u30FC\u30EB\u304C\u3059\u3067\u306B\u5B58\u5728\u3057\u307E\u3059\u3002 \u3057\u305F\u304C\u3063\u3066\u30BF\u30A4\u30E0\u30BE\u30FC\u30F3\u66F4\u65B0\u306F\u8A31\u53EF\u3055\u308C\u307E\u305B\u3093\u3002
# YMSG: Post Activation API failed
10005=\u30EB\u30FC\u30EB\u30B5\u30FC\u30D3\u30B9\u307E\u305F\u306F\u30B5\u30FC\u30D3\u30B9\u304C\u57CB\u3081\u8FBC\u307E\u308C\u305F\u30EB\u30FC\u30EB\u304C\u3059\u3067\u306B\u5B58\u5728\u3057\u307E\u3059\u3002 \u3057\u305F\u304C\u3063\u3066\u5B9F\u884C\u6642\u30B9\u30AD\u30FC\u30DE\u66F4\u65B0\u306F\u8A31\u53EF\u3055\u308C\u307E\u305B\u3093\u3002
