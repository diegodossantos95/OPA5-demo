ï»¿
# This file contains messages descriptions arranged in sections according to HRF APIs
# These descriptions are translated.
# Adding a new message requires also update of message.xsjslib file by the new ID

#############################
# common
#############################
# 10 - 999 - common messages

# YMSG: return from resource activation, in case of a resource does not exist in repository
10=\u05D4\u05E4\u05E2\u05DC\u05EA \u05DE\u05E9\u05D0\u05D1 \u05DC\u05D0 \u05D0\u05E4\u05E9\u05E8\u05D9\u05EA; \u05DE\u05E9\u05D0\u05D1 \u05DC\u05D0 \u05E7\u05D9\u05D9\u05DD.
# YMSG: return from resource activation, in case of a resource suffix is not one of HRF resources
11=\u05D4\u05E4\u05E2\u05DC\u05EA \u05DE\u05E9\u05D0\u05D1 \u05DC\u05D0 \u05D0\u05E4\u05E9\u05E8\u05D9\u05EA; \u05E1\u05D9\u05D5\u05DE\u05EA '{0}' \u05DC\u05D0 \u05E0\u05EA\u05DE\u05DB\u05EA.
# YMSG: return from resource activation, in case of a resource package does not exist in repository
12=\u05D4\u05E4\u05E2\u05DC\u05EA \u05DE\u05E9\u05D0\u05D1 \u05DC\u05D0 \u05D0\u05E4\u05E9\u05E8\u05D9\u05EA; \u05D7\u05D1\u05D9\u05DC\u05D4 '{0}' \u05DC\u05D0 \u05E7\u05D9\u05D9\u05DE\u05EA.
# YMSG: return from runtime plug in, in case of invalid attribute
13=\u05D4\u05E4\u05E2\u05DC\u05EA \u05DE\u05E9\u05D0\u05D1 \u05DC\u05D0 \u05D0\u05E4\u05E9\u05E8\u05D9\u05EA; \u05EA\u05DB\u05D5\u05E0\u05D4  '{0}'  \u05DC\u05D0 \u05E0\u05DE\u05E6\u05D0\u05EA \u05D1\u05E1\u05DB\u05DE\u05D4.
# YMSG: return from  runtime plug in, in case of invalid attribute
14=\u05D4\u05E4\u05E2\u05DC\u05EA \u05DE\u05E9\u05D0\u05D1 \u05DC\u05D0 \u05D0\u05E4\u05E9\u05E8\u05D9\u05EA; \u05D7\u05E1\u05E8 \u05E2\u05E8\u05DA \u05EA\u05DB\u05D5\u05E0\u05D4 \u05D4\u05DB\u05E8\u05D7\u05D9 '{0}'.
# YMSG: return from  runtime plug in, in case none of a predefined set of fields is specified
15=\u05D4\u05E4\u05E2\u05DC\u05EA \u05DE\u05E9\u05D0\u05D1 \u05DC\u05D0 \u05D0\u05E4\u05E9\u05E8\u05D9\u05EA; \u05D7\u05E1\u05E8\u05D4 \u05DC\u05E4\u05D7\u05D5\u05EA \u05EA\u05DB\u05D5\u05E0\u05D4 \u05D0\u05D5\u05E4\u05E6\u05D9\u05D5\u05E0\u05D0\u05DC\u05D9\u05EA \u05D0\u05D7\u05EA {0}
# YMSG: return from  runtime plug in, in case of invalid field (e.g vocabulary doesn't exist)
16=\u05D4\u05E4\u05E2\u05DC\u05EA \u05DE\u05E9\u05D0\u05D1 \u05DC\u05D0 \u05D0\u05E4\u05E9\u05E8\u05D9\u05EA; \u05E2\u05E8\u05DA \u05D4\u05EA\u05DB\u05D5\u05E0\u05D4 {0} \u05DC\u05D0 \u05D7\u05D5\u05E7\u05D9
# YMSG: return from runtime plug in, in case of inconsistent fields combination(e.g. vocabulary and output names doesn't match)
17=\u05D4\u05E4\u05E2\u05DC\u05EA \u05DE\u05E9\u05D0\u05D1 \u05DC\u05D0 \u05D0\u05E4\u05E9\u05E8\u05D9\u05EA; \u05E9\u05D9\u05DC\u05D5\u05D1 \u05E9\u05DC {0} \u05D5-{1} \u05DC\u05D0 \u05D7\u05D5\u05E7\u05D9
# YMSG: return from  runtime plug in, in case of invalid resource id (e.g. package / file name is missing)
23=\u05D4\u05E4\u05E2\u05DC\u05EA \u05DE\u05E9\u05D0\u05D1 \u05DC\u05D0 \u05D0\u05E4\u05E9\u05E8\u05D9\u05EA; \u05DE\u05E9\u05D0\u05D1 \u05DC\u05D0 \u05E7\u05D9\u05D9\u05DD
# YMSG: return from  runtime plug in, in case of error from REL validation
24=\u05E9\u05D2\u05D9\u05D0\u05D4 \u05D1\u05E9\u05D3\u05D4 {0}\: {1}
# YMSG: return from  REST service, in case of http request contains non supported method
25=\u05E9\u05D9\u05D8\u05D4 \u05E0\u05DB\u05E9\u05DC\u05D4; \u05E9\u05D9\u05D8\u05D4 \#{0} \u05DC\u05D0 \u05E0\u05EA\u05DE\u05DB\u05EA
# YMSG:  technical error from platform
26=\u05D0\u05D9\u05E8\u05E2\u05D4 \u05E9\u05D2\u05D9\u05D0\u05D4 \u05D8\u05DB\u05E0\u05D9\u05EA - {0}
# YMSG: return from resource activation, in case of a resource does not exist in repository
27=\u05D4\u05DE\u05E9\u05D0\u05D1 \u05D0\u05D9\u05E0\u05D5 \u05E7\u05D9\u05D9\u05DD.

# 100 - 200 - Authorization

# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
100=\u05D0\u05D9\u05E0\u05DA \u05DE\u05D5\u05E8\u05E9\u05D4 \u05DC\u05D1\u05E6\u05E2 \u05E4\u05E2\u05D5\u05DC\u05D4 \u05D6\u05D5.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
101=\u05D0\u05D9\u05E0\u05DA \u05DE\u05D5\u05E8\u05E9\u05D4 \u05DC\u05E2\u05D3\u05DB\u05DF \u05D0\u05EA \u05D4\u05DB\u05DC\u05DC\u05D9\u05DD.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
102=\u05D0\u05D9\u05E0\u05DA \u05DE\u05D5\u05E8\u05E9\u05D4 \u05DC\u05DE\u05D7\u05D5\u05E7 \u05D0\u05EA \u05D4\u05DB\u05DC\u05DC\u05D9\u05DD.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
103=\u05D0\u05D9\u05E0\u05DA \u05DE\u05D5\u05E8\u05E9\u05D4 \u05DC\u05D9\u05E6\u05D5\u05E8 \u05DB\u05DC\u05DC\u05D9\u05DD.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
104=\u05D0\u05D9\u05E0\u05DA \u05DE\u05D5\u05E8\u05E9\u05D4 \u05DC\u05E7\u05E8\u05D5\u05D0 \u05DB\u05DC\u05DC\u05D9\u05DD.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
105=\u05D0\u05D9\u05E0\u05DA \u05DE\u05D5\u05E8\u05E9\u05D4 \u05DC\u05E2\u05D3\u05DB\u05DF \u05E9\u05D9\u05E8\u05D5\u05EA\u05D9 \u05DB\u05DC\u05DC\u05D9\u05DD
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
106=\u05D0\u05D9\u05E0\u05DA \u05DE\u05D5\u05E8\u05E9\u05D4 \u05DC\u05DE\u05D7\u05D5\u05E7 \u05E9\u05D9\u05E8\u05D5\u05EA\u05D9 \u05DB\u05DC\u05DC\u05D9\u05DD.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
107=\u05D0\u05D9\u05E0\u05DA \u05DE\u05D5\u05E8\u05E9\u05D4 \u05DC\u05D9\u05E6\u05D5\u05E8 \u05E9\u05D9\u05E8\u05D5\u05EA\u05D9 \u05DB\u05DC\u05DC\u05D9\u05DD.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
108=\u05D0\u05D9\u05E0\u05DA \u05DE\u05D5\u05E8\u05E9\u05D4 \u05DC\u05E7\u05E8\u05D5\u05D0 \u05E9\u05D9\u05E8\u05D5\u05EA\u05D9 \u05DB\u05DC\u05DC\u05D9\u05DD.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
109=\u05D0\u05D9\u05E0\u05DA \u05DE\u05D5\u05E8\u05E9\u05D4 \u05DC\u05D4\u05E4\u05E2\u05D9\u05DC \u05E9\u05D9\u05E8\u05D5\u05EA\u05D9 \u05DB\u05DC\u05DC\u05D9\u05DD.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
110=\u05D0\u05D9\u05E0\u05DA \u05DE\u05D5\u05E8\u05E9\u05D4 \u05DC\u05E2\u05D3\u05DB\u05DF \u05D0\u05D5\u05E6\u05E8 \u05DE\u05D9\u05DC\u05D9\u05DD.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
111=\u05D0\u05D9\u05E0\u05DA \u05DE\u05D5\u05E8\u05E9\u05D4 \u05DC\u05DE\u05D7\u05D5\u05E7 \u05D0\u05D5\u05E6\u05E8 \u05DE\u05D9\u05DC\u05D9\u05DD.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
112=\u05D0\u05D9\u05E0\u05DA \u05DE\u05D5\u05E8\u05E9\u05D4 \u05DC\u05D9\u05E6\u05D5\u05E8 \u05D0\u05D5\u05E6\u05E8 \u05DE\u05D9\u05DC\u05D9\u05DD.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
113=\u05D0\u05D9\u05E0\u05DA \u05DE\u05D5\u05E8\u05E9\u05D4 \u05DC\u05E7\u05E8\u05D5\u05D0 \u05D0\u05D5\u05E6\u05E8 \u05DE\u05D9\u05DC\u05D9\u05DD.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
114=\u05D0\u05D9\u05E0\u05DA \u05DE\u05D5\u05E8\u05E9\u05D4 \u05DC\u05E2\u05D3\u05DB\u05DF \u05EA\u05D1\u05E0\u05D9\u05D5\u05EA \u05DB\u05DC\u05DC\u05D9\u05DD.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
115=\u05D0\u05D9\u05E0\u05DA \u05DE\u05D5\u05E8\u05E9\u05D4 \u05DC\u05DE\u05D7\u05D5\u05E7 \u05EA\u05D1\u05E0\u05D9\u05D5\u05EA \u05DB\u05DC\u05DC\u05D9\u05DD.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
116=\u05D0\u05D9\u05E0\u05DA \u05DE\u05D5\u05E8\u05E9\u05D4 \u05DC\u05D9\u05E6\u05D5\u05E8 \u05EA\u05D1\u05E0\u05D9\u05D5\u05EA \u05DB\u05DC\u05DC\u05D9\u05DD.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
117=\u05D0\u05D9\u05E0\u05DA \u05DE\u05D5\u05E8\u05E9\u05D4 \u05DC\u05E7\u05E8\u05D5\u05D0 \u05EA\u05D1\u05E0\u05D9\u05D5\u05EA \u05DB\u05DC\u05DC\u05D9\u05DD.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
118=\u05D0\u05D9\u05E0\u05DA \u05DE\u05D5\u05E8\u05E9\u05D4 \u05DC\u05D9\u05E6\u05D5\u05E8 \u05D0\u05D5 \u05DC\u05E2\u05D3\u05DB\u05DF \u05E9\u05D9\u05E8\u05D5\u05EA\u05D9 \u05DB\u05DC\u05DC\u05D9\u05DD.
#############################
# API: Validate
#############################
# 1100 - 1199 - REL validation messages

# YMSG: return from REL, the beginning of any REL validation error - in case of a wrong statement 
1100=\u05E9\u05D2\u05D9\u05D0\u05D4 \u05D1\u05D1\u05D9\u05D8\u05D5\u05D9;
# YMSG: return from REL parser, in case of a wrong entry (syntax) and maximum 3 option are optional instead 
1101=\u05E9\u05D2\u05D9\u05D0\u05D4 \u05D1\u05D1\u05D9\u05D8\u05D5\u05D9; \u05D4\u05D6\u05DF \u05D0\u05EA {0} \u05D1\u05DE\u05E7\u05D5\u05DD \u05D0\u05EA {1}
# YMSG: return from REL parser, in case of a wrong entry (syntax) and more than 3 option are optional instead  
1102=\u05E9\u05D2\u05D9\u05D0\u05D4 \u05D1\u05D1\u05D9\u05D8\u05D5\u05D9; {0} \u05D0\u05D9\u05E0\u05D4 \u05D4\u05D6\u05E0\u05D4 \u05D7\u05D5\u05E7\u05D9\u05EA
# YMSG: return from REL parser, in case of a wrong input
1103=\u05E9\u05D2\u05D9\u05D0\u05D4 \u05D1\u05D1\u05D9\u05D8\u05D5\u05D9; \u05D4\u05E1\u05E8 \u05D0\u05EA {0}
# YMSG: return from REL model, in case of collection OM when single value in needed
1104=\u05E9\u05D2\u05D9\u05D0\u05D4 \u05D1\u05D1\u05D9\u05D8\u05D5\u05D9; {0} \u05D4\u05D5\u05D0 \u05E8\u05E9\u05D9\u05DE\u05EA \u05E2\u05E8\u05DB\u05D9\u05DD. \u05E9\u05E0\u05D4 \u05DC\u05D1\u05D9\u05D8\u05D5\u05D9 \u05D4\u05DE\u05D9\u05D9\u05E6\u05D2 \u05E2\u05E8\u05DA \u05D9\u05D7\u05D9\u05D3.
# YMSG: return from REL model, in case of a wrong input
1105=\u05E9\u05D2\u05D9\u05D0\u05D4 \u05D1\u05D1\u05D9\u05D8\u05D5\u05D9; \u05D4\u05D6\u05DF \u05D0\u05D5\u05E4\u05E8\u05E0\u05D3 \u05D7\u05D5\u05E7\u05D9 \u05D1\u05DE\u05E7\u05D5\u05DD {0}
# YMSG: return from REL parser, in case of an incomplete expression
1106=\u05D1\u05D9\u05D8\u05D5\u05D9 \u05DC\u05D0 \u05DE\u05DC\u05D0;
# YMSG: return from REL lexer, in case of missing token at EOF
1107=\u05E9\u05D2\u05D9\u05D0\u05D4 \u05D1\u05D1\u05D9\u05D8\u05D5\u05D9; \u05D4\u05D6\u05DF {0} \u05D1\u05E1\u05D5\u05E3 \u05D4\u05D1\u05D9\u05D8\u05D5\u05D9
# YMSG: return from REL lexer, in case of wrong token
1108=\u05E9\u05D2\u05D9\u05D0\u05D4 \u05D1\u05D1\u05D9\u05D8\u05D5\u05D9; \u05D4\u05D6\u05DF \u05D0\u05EA {0} \u05D1\u05DE\u05E7\u05D5\u05DD '{'1}
# YMSG: return from REL entity, in case of missing current
1109=\u05E9\u05D2\u05D9\u05D0\u05D4 \u05D1\u05D1\u05D9\u05D8\u05D5\u05D9; CURRENT \u05D7\u05E1\u05E8 \u05D1\u05DE\u05E9\u05E4\u05D8 WHERE
# YMSG: return from REL entity, in case of redundant 'current'
1110=\u05E9\u05D2\u05D9\u05D0\u05D4 \u05D1\u05D1\u05D9\u05D8\u05D5\u05D9; CURRENT \u05DE\u05D9\u05D5\u05EA\u05E8; \u05D4\u05E1\u05E8 CURRENT \u05D0\u05D7\u05D3
# YMSG: return from REL vocabulary utils, in case of invalid root object
1111=\u05D0\u05D5\u05D1\u05D9\u05D9\u05E7\u05D8 \u05E9\u05D5\u05E8\u05E9 \u05DC\u05D0 \u05D7\u05D5\u05E7\u05D9
# YMSG: return from REL vocabulary utils, in case of invalid association
1112=\u05E9\u05D9\u05D5\u05DA \u05DC\u05D0 \u05D7\u05D5\u05E7\u05D9
# YMSG: return from REL vocabulary utils, in case of invalid association or attribute
1113=\u05E9\u05D9\u05D5\u05DA \u05D0\u05D5 \u05EA\u05DB\u05D5\u05E0\u05D4 \u05DC\u05D0 \u05D7\u05D5\u05E7\u05D9\u05D9\u05DD
# YMSG: return from REL vocabulary utils, in case of root is simple attribute
1114=\u05E9\u05D5\u05E8\u05E9 \u05DC\u05D0 \u05D9\u05DB\u05D5\u05DC \u05DC\u05D4\u05D9\u05D5\u05EA \u05EA\u05DB\u05D5\u05E0\u05D4 \u05E4\u05E9\u05D5\u05D8\u05D4
# YMSG: return from REL vocabulary utils, in case of attribute not found
1115=\u05E0\u05EA\u05D9\u05D1 \u05DC\u05D0 \u05E9\u05DC\u05DD, \u05EA\u05DB\u05D5\u05E0\u05D4 \u05DC\u05D0 \u05E0\u05DE\u05E6\u05D0\u05D4
# YMSG: return from REL entity, in case of using 'current' outside of 'where'
1116=\u05E9\u05D2\u05D9\u05D0\u05D4 \u05D1\u05D1\u05D9\u05D8\u05D5\u05D9; \u05E0\u05D9\u05EA\u05DF \u05DC\u05D4\u05E9\u05EA\u05DE\u05E9 \u05D1\u05DE\u05D9\u05DC\u05EA \u05D4\u05DE\u05E4\u05EA\u05D7 '\u05E0\u05D5\u05DB\u05D7\u05D9' \u05E8\u05E7 \u05D1\u05EA\u05D5\u05DA \u05D1\u05D9\u05D8\u05D5\u05D9 WHERE.
# YMSG: return from REL entity, in case of using 'current' incorrectly with arithmetic
1117=\u05E9\u05D2\u05D9\u05D0\u05D4 \u05D1\u05D1\u05D9\u05D8\u05D5\u05D9; \u05D9\u05E9 \u05DC\u05D4\u05D7\u05D9\u05DC \u05D0\u05EA \u05DE\u05D9\u05DC\u05EA \u05D4\u05DE\u05E4\u05EA\u05D7 '\u05E0\u05D5\u05DB\u05D7\u05D9' \u05E2\u05DC \u05DB\u05DC \u05D4\u05D0\u05D5\u05E4\u05E8\u05E0\u05D3\u05D9\u05DD \u05D1\u05E6\u05D3 \u05D0\u05D7\u05D3 \u05E9\u05DC \u05D0\u05D5\u05E4\u05E8\u05D8\u05D5\u05E8 \u05D4\u05D4\u05E9\u05D5\u05D5\u05D0\u05D4 \u05D1\u05DE\u05E9\u05E4\u05D8 WHERE. 
# YMSG: return from REL parser utils, in case of using value that doen't exist in closed value list
1118=\u05E9\u05D2\u05D9\u05D0\u05D4 \u05D1\u05D1\u05D9\u05D8\u05D5\u05D9. '{0}' \u05D0\u05D9\u05E0\u05D5 \u05E2\u05E8\u05DA \u05D7\u05D5\u05E7\u05D9 \u05DE\u05EA\u05D5\u05DA \u05E8\u05E9\u05D9\u05DE\u05EA \u05D4\u05E2\u05E8\u05DB\u05D9\u05DD '{1}'.
# YMSG: return from REL parser utils, in case of using value that doen't exist in closed value list
1119=\u05E9\u05D2\u05D9\u05D0\u05D4 \u05D1\u05D1\u05D9\u05D8\u05D5\u05D9. \u05DC\u05D0 \u05E0\u05D9\u05EA\u05DF \u05DC\u05D4\u05E9\u05EA\u05DE\u05E9 \u05D1\u05D0\u05D5\u05E4\u05E8\u05D8\u05D5\u05E8 '{0}' \u05E2\u05DD \u05EA\u05DB\u05D5\u05E0\u05D4 \u05DE\u05E8\u05E9\u05D9\u05DE\u05EA \u05D4\u05E2\u05E8\u05DB\u05D9\u05DD ('{1}').
# YMSG: return from REL parser utils, in case of using value that doen't exist in closed value list
1120=\u05E9\u05D2\u05D9\u05D0\u05D4 \u05D1\u05D1\u05D9\u05D8\u05D5\u05D9. \u05DE\u05D9\u05DC\u05EA \u05D4\u05DE\u05E4\u05EA\u05D7 '\u05D4\u05DB\u05D5\u05DC' \u05DC\u05D0 \u05D9\u05DB\u05D5\u05DC\u05D4 \u05DC\u05D4\u05D5\u05E4\u05D9\u05E2 \u05D0\u05D7\u05E8\u05D9 \u05D0\u05D5\u05E4\u05E8\u05E0\u05D3 \u05D4\u05DE\u05DB\u05D9\u05DC \u05D0\u05EA \u05D4\u05DE\u05D9\u05DC\u05D4 '\u05E0\u05D5\u05DB\u05D7\u05D9'.
# YMSG: return from REL parser utils, in case of using value that doen't exist in closed value list
1121=\u05E9\u05D2\u05D9\u05D0\u05D4 \u05D1\u05D1\u05D9\u05D8\u05D5\u05D9. \u05DC\u05D0 \u05E0\u05D9\u05EA\u05DF \u05DC\u05D4\u05E9\u05EA\u05DE\u05E9 \u05D1\u05DE\u05D9\u05DC\u05EA \u05D4\u05DE\u05E4\u05EA\u05D7 '\u05D4\u05DB\u05D5\u05DC' \u05D9\u05D5\u05EA\u05E8 \u05DE\u05E4\u05E2\u05DD \u05D0\u05D7\u05EA \u05D1\u05D1\u05D9\u05D8\u05D5\u05D9.


# 1200 - 1999 - validation messages

#############################
# API : resource CRUD
#############################
# 2100 - 2299 - vocabulary messages

# YMSG: return from vocabulary runtime plug in, in case of error in expression
2100=\u05D1-'{0}'- \u05E9\u05D2\u05D9\u05D0\u05D4 \u05D1\u05E0\u05D9\u05EA\u05D5\u05D7 \u05D1\u05D9\u05D8\u05D5\u05D9\: '{1}', '{2}'
# YMSG: return from vocabulary runtime plug in, in case of error in rule
2101=\u05D1-'{0}' - \u05E9\u05D2\u05D9\u05D0\u05D4 \u05D1\u05DB\u05DC\u05DC\: '{1}', '{2}'
# YMSG: return from vocabulary runtime plug in, in case the parameter type already exists
2102=\u05D1-'{0}' \: '{1}', \u05E9\u05DD\: '{2}' \u05DB\u05D1\u05E8 \u05E7\u05D9\u05D9\u05DD
# YMSG: return from vocabulary runtime plug in, in case parameter name isn't valid
2103=\u05D1-'{0}' \: '{1}', \u05E9\u05DD \u05DC\u05D0 \u05D7\u05D5\u05E7\u05D9\: '{2}'
# YMSG: return from vocabulary runtime plug in, in case one of action/output names aren't valid
2104=\u05D1-'{0}', \u05E9\u05DD \u05DC\u05D0 \u05D7\u05D5\u05E7\u05D9\: '{1}'
# YMSG: return from vocabulary runtime plug in, in case name already exists
2105=\u05D4\u05E9\u05DD '{0}' \u05DE\u05D5\u05D2\u05D3\u05E8 \u05D9\u05D5\u05EA\u05E8 \u05DE\u05E4\u05E2\u05DD \u05D0\u05D7\u05EA \u05D1-'{1)'.
# YMSG : return from vocabulary runtime plug in, in case the output has no parameters
2106=\u05E4\u05E8\u05DE\u05D8\u05E8\u05D9\u05DD \u05D7\u05E1\u05E8\u05D9\u05DD \u05D1\u05E4\u05DC\u05D8
# YMSG: return from vocabulary runtime plug in, in case one of the attributes has an invalid name
2107=\u05E9\u05DD \u05EA\u05DB\u05D5\u05E0\u05D4 \u05DC\u05D0 \u05D7\u05D5\u05E7\u05D9 '{0}'
# YMSG: return from vocabulary runtime plug in, in case object name of declare more than once
2108={0}\: '{'1} \u05DB\u05D1\u05E8 \u05E7\u05D9\u05D9\u05DD. 
# YMSG: return from vocabulary runtime plug in, in case attribute name of declare more than once
2109=\u05EA\u05DB\u05D5\u05E0\u05D4 \u05DB\u05D1\u05E8 \u05E7\u05D9\u05D9\u05DE\u05EA\: \u05D0\u05D5\u05D1\u05D9\u05D9\u05E7\u05D8\= '{0}' \u05EA\u05DB\u05D5\u05E0\u05D4\= '{1}'
# YMSG: return from vocabulary runtime plug in, in case attribute name of declare more than once
2110=\u05E9\u05D9\u05D5\u05DA \u05DB\u05D1\u05E8 \u05E7\u05D9\u05D9\u05DD\: \u05D0\u05D5\u05D1\u05D9\u05D9\u05E7\u05D8\= '{0}' \u05E9\u05D9\u05D5\u05DA\= '{1}'
# YMSG : return from vocabulary runtime plug in, in case the source table isn't exists
2111=\u05D8\u05D1\u05DC\u05EA \u05DE\u05E7\u05D5\u05E8 \u05DC\u05D0 \u05D7\u05D5\u05E7\u05D9\u05EA '{0}'
# YMSG : return from vocabulary runtime plug in, in case of one the association is invalid
2112=\u05E9\u05D9\u05D5\u05DA \u05DC\u05D0 \u05D7\u05D5\u05E7\u05D9 \u05D1\u05D0\u05D5\u05D1\u05D9\u05D9\u05E7\u05D8\='{0}' + \u05E9\u05D9\u05D5\u05DA\='{1}'
# YMSG : return from vocabulary runtime plug in, in case of one the association's attributes are invalid
2113=\u05EA\u05DB\u05D5\u05E0\u05D4 \u05DC\u05D0 \u05D7\u05D5\u05E7\u05D9\u05EA \u05E2\u05D1\u05D5\u05E8 \u05E9\u05D9\u05D5\u05DA\=  '{0}' \u05EA\u05DB\u05D5\u05E0\u05D4\= '{1}'
# YMSG: return from rule utils, in case of invalid vocabulary assignment
2114=\u05D0\u05D5\u05E6\u05E8 \u05D4\u05DE\u05D9\u05DC\u05D9\u05DD '{0}' \u05D0\u05D9\u05E0\u05D5 \u05D7\u05D5\u05E7\u05D9
# YMSG: return from vocabulary runtime plug in, in case invalid alias content
2115=\u05EA\u05D5\u05DB\u05DF \u05DC\u05D0 \u05D7\u05D5\u05E7\u05D9 \u05D1\u05DB\u05D9\u05E0\u05D5\u05D9 '{0}'. \u05E1\u05D9\u05D1\u05D4\: '{1}'
# YMSG: return from vocabulary runtime plug in, in case invalid alias name
2116=\u05E9\u05DD \u05DB\u05D9\u05E0\u05D5\u05D9 '{0}' \u05D0\u05D9\u05E0\u05D5 \u05D7\u05D5\u05E7\u05D9. \u05E9\u05DD \u05DB\u05D9\u05E0\u05D5\u05D9 \u05D9\u05DB\u05D5\u05DC \u05DC\u05D4\u05DB\u05D9\u05DC \u05EA\u05D5\u05D5\u05D9\u05DD \u05D0\u05DC\u05E4\u05D0\u05E0\u05D5\u05DE\u05E8\u05D9\u05D9\u05DD \u05D5\u05EA\u05D5\u05D5\u05D9 \u05E7\u05D5 \u05EA\u05D7\u05EA\u05D5\u05DF \u05D1\u05DC\u05D1\u05D3, \u05D7\u05D9\u05D9\u05D1 \u05DC\u05D4\u05EA\u05D7\u05D9\u05DC \u05D1\u05EA\u05D5 \u05D0\u05DC\u05E4\u05D0\u05E0\u05D5\u05DE\u05E8\u05D9 \u05D5\u05DC\u05D0 \u05D9\u05DB\u05D5\u05DC \u05DC\u05D4\u05D9\u05D5\u05EA \u05DE\u05D9\u05DC\u05D4 \u05E9\u05E9\u05D5\u05E8\u05D9\u05D9\u05E0\u05D4 \u05DE\u05E9\u05E4\u05EA \u05D4\u05D1\u05D9\u05D8\u05D5\u05D9\u05D9\u05DD \u05E9\u05DC \u05D4\u05DB\u05DC\u05DC\u05D9\u05DD.
# YMSG: return from vocabulary runtime plug in, in case alias name collide with an data object name
2117=\u05E9\u05DD \u05DC\u05D0 \u05D7\u05D5\u05E7\u05D9 \u05E2\u05D1\u05D5\u05E8 \u05DB\u05D9\u05E0\u05D5\u05D9 '{0}'. \u05DB\u05D9\u05E0\u05D5\u05D9 \u05DB\u05D1\u05E8 \u05E7\u05D9\u05D9\u05DD \u05DB\u05E9\u05DD \u05E9\u05DC \u05D0\u05D5\u05D1\u05D9\u05D9\u05E7\u05D8 \u05E0\u05EA\u05D5\u05E0\u05D9\u05DD.
# YMSG: return from vocabulary runtime plug in, in case o alias dependency to itself
2118=\u05EA\u05D5\u05DB\u05DF \u05DC\u05D0 \u05D7\u05D5\u05E7\u05D9 \u05D1\u05DB\u05D9\u05E0\u05D5\u05D9 '{0}'. \u05D8\u05D9\u05E4\u05D5\u05DC \u05D1\u05DB\u05D9\u05E0\u05D5\u05D9 \u05D9\u05D5\u05D1\u05D9\u05DC \u05DC\u05DC\u05D5\u05DC\u05D0\u05D4 \u05D0\u05D9\u05E0\u05E1\u05D5\u05E4\u05D9\u05EA.
# YMSG: return from vocabulary runtime plug in, when name already exists in another vocabulary in the DB. Example: In 'dataObjects', name 'player' already exists in 'aliases' vocabulary 'voca2'
2120=\u05D1-'{0}', \u05D4\u05E9\u05DD '{1}' \u05DB\u05D1\u05E8 \u05E7\u05D9\u05D9\u05DD \u05D1-'{2}' \u05D1\u05D0\u05D5\u05E6\u05E8 \u05DE\u05D9\u05DC\u05D9\u05DD '{3}'.
# YMSG: return from vocabulary runtime plug in, scope name can't be Public or Private
2121=\u05E9\u05DD \u05D8\u05D5\u05D5\u05D7 \u05DC\u05D0 \u05D7\u05D5\u05E7\u05D9. \u05E9\u05DD \u05D8\u05D5\u05D5\u05D7 \u05DC\u05D0 \u05D9\u05DB\u05D5\u05DC \u05DC\u05D4\u05D9\u05D5\u05EA '\u05E6\u05D9\u05D1\u05D5\u05E8\u05D9' \u05D0\u05D5 '\u05E4\u05E8\u05D8\u05D9'.
# YMSG: return from vocabulary runtime plug in, embedded vocabulary can't be with scope Global
2122=\u05E9\u05DD \u05D8\u05D5\u05D5\u05D7 \u05DC\u05D0 \u05D7\u05D5\u05E7\u05D9. \u05D0\u05D5\u05E6\u05E8 \u05D4\u05DE\u05D9\u05DC\u05D9\u05DD \u05DE\u05E9\u05D5\u05D1\u05E5 \u05DC\u05D0 \u05D9\u05DB\u05D5\u05DC \u05DC\u05D4\u05D9\u05D5\u05EA \u05DE\u05E1\u05D5\u05D2 '\u05E6\u05D9\u05D1\u05D5\u05E8\u05D9'.
# YMSG: Object does not exist
2125=\u05D0\u05D5\u05D1\u05D9\u05D9\u05E7\u05D8 '{0}' \u05DC\u05D0 \u05E7\u05D9\u05D9\u05DD
# YMSG: return from vocabulary runtime plug in, in case of a wrong data object name 
2126=\u05E9\u05DD \u05DC\u05D0 \u05D7\u05D5\u05E7\u05D9 \u05E2\u05D1\u05D5\u05E8 dataObject\u200F '{0}'. \u05E9\u05DD \u05E9\u05DC dataObject \u05DC\u05D0 \u05D9\u05DB\u05D5\u05DC \u05DC\u05D4\u05D9\u05D5\u05EA \u05E9\u05DD \u05E9\u05DC \u05EA\u05D1\u05E0\u05D9\u05EA \u05DB\u05DC\u05DC \u05E7\u05D9\u05D9\u05DE\u05EA \u05D0\u05D5 \u05DC\u05D4\u05D9\u05D5\u05EA \u05D0\u05D7\u05EA \u05DE\u05D4\u05DE\u05D9\u05DC\u05D9\u05DD \u05D4\u05DE\u05E9\u05D5\u05E8\u05D9\u05D9\u05E0\u05D5\u05EA \u05D4\u05D1\u05D0\u05D5\u05EA (\u05EA\u05DC\u05D5\u05D9 \u05E8\u05D9\u05E9\u05D9\u05D5\u05EA \u05D1\u05DC\u05D1\u05D3)\: rule\u200F, ruleTemplate
# YMSG: return from vocabulary runtime plug in, in case of a wrong alias name
2127=\u05E9\u05DD \u05DB\u05D9\u05E0\u05D5\u05D9 '{0}' \u05D0\u05D9\u05E0\u05D5 \u05D7\u05D5\u05E7\u05D9. \u05E9\u05DD \u05E9\u05DC \u05DB\u05D9\u05E0\u05D5\u05D9 \u05DC\u05D0 \u05D9\u05DB\u05D5\u05DC \u05DC\u05D4\u05D9\u05D5\u05EA \u05E9\u05DD \u05E9\u05DC \u05EA\u05D1\u05E0\u05D9\u05EA \u05DB\u05DC\u05DC \u05E7\u05D9\u05D9\u05DE\u05EA \u05D0\u05D5 \u05DC\u05D4\u05D9\u05D5\u05EA \u05D0\u05D7\u05EA \u05DE\u05D4\u05DE\u05D9\u05DC\u05D9\u05DD \u05D4\u05DE\u05E9\u05D5\u05E8\u05D9\u05D9\u05E0\u05D5\u05EA \u05D4\u05D1\u05D0\u05D5\u05EA (\u05EA\u05DC\u05D5\u05D9 \u05E8\u05D9\u05E9\u05D9\u05D5\u05EA \u05D1\u05DC\u05D1\u05D3)\: rule\u200F, ruleTemplate
# YMSG: return from vocabulary runtime plug in, in case invalid data object name
2128=\u05E9\u05DD \u05DC\u05D0 \u05D7\u05D5\u05E7\u05D9 \u05E2\u05D1\u05D5\u05E8 dataObject\u200F '{0}'. \u05E9\u05DD \u05E9\u05DC dataObject \u05D9\u05DB\u05D5\u05DC \u05DC\u05D4\u05DB\u05D9\u05DC \u05EA\u05D5\u05D5\u05D9\u05DD \u05D0\u05DC\u05E4\u05D0\u05E0\u05D5\u05DE\u05E8\u05D9\u05D9\u05DD \u05D5\u05EA\u05D5\u05D5\u05D9 \u05E7\u05D5 \u05EA\u05D7\u05EA\u05D5\u05DF \u05D1\u05DC\u05D1\u05D3, \u05D7\u05D9\u05D9\u05D1 \u05DC\u05D4\u05EA\u05D7\u05D9\u05DC \u05D1\u05EA\u05D5 \u05D0\u05DC\u05E4\u05D0\u05E0\u05D5\u05DE\u05E8\u05D9 \u05D5\u05DC\u05D0 \u05D9\u05DB\u05D5\u05DC \u05DC\u05D4\u05D9\u05D5\u05EA \u05DE\u05D9\u05DC\u05D4 \u05E9\u05E9\u05D5\u05E8\u05D9\u05D9\u05E0\u05D4 \u05DE\u05E9\u05E4\u05EA \u05D4\u05D1\u05D9\u05D8\u05D5\u05D9\u05D9\u05DD \u05E9\u05DC \u05D4\u05DB\u05DC\u05DC\u05D9\u05DD.
# YMSG: return from vocabulary runtime plug in, in case of duplicate alias names
2129=\u05DB\u05D9\u05E0\u05D5\u05D9 '{0}' \u05DB\u05D1\u05E8 \u05E7\u05D9\u05D9\u05DD \u05DB\u05E9\u05DD \u05DB\u05D9\u05E0\u05D5\u05D9.
# YMSG: return from vocabulary runtime plug in, in case alias content is empty
2130=\u05E4\u05E8\u05DE\u05D8\u05E8 \u05D4\u05EA\u05D5\u05DB\u05DF \u05D1\u05DB\u05D9\u05E0\u05D5\u05D9 '{0}' \u05E8\u05D9\u05E7.
# YMSG: return from vocabulary runtime plug in, in case alias name exists as as an attribute name
2131=\u05E9\u05DD \u05DB\u05D9\u05E0\u05D5\u05D9 '{0}' \u05D0\u05D9\u05E0\u05D5 \u05D7\u05D5\u05E7\u05D9. \u05D4\u05DB\u05D9\u05E0\u05D5\u05D9 \u05DB\u05D1\u05E8 \u05E7\u05D9\u05D9\u05DD \u05DB\u05E9\u05DD \u05EA\u05DB\u05D5\u05E0\u05D4.
# YMSG: return from vocabulary runtime plug in, in case alias name exists in other vocabulary with the same scope
2132=\u05E9\u05DD \u05DB\u05D9\u05E0\u05D5\u05D9 '{0}' \u05D0\u05D9\u05E0\u05D5 \u05D7\u05D5\u05E7\u05D9. \u05E9\u05DD \u05DB\u05D1\u05E8 \u05E7\u05D9\u05D9\u05DD \u05DB\u05EA\u05DB\u05D5\u05E0\u05D4 \u05E2\u05D1\u05D5\u05E8 \u05D0\u05D5\u05D1\u05D9\u05D9\u05E7\u05D8 '{1}' \u05D1\u05D0\u05D5\u05E6\u05E8 \u05DE\u05D9\u05DC\u05D9\u05DD '{2}'.
# YMSG: return from vocabulary runtime plug in, in case alias name exists in objects rule or ruleTemplate
2133=\u05E9\u05DD \u05DB\u05D9\u05E0\u05D5\u05D9 '{0}' \u05D0\u05D9\u05E0\u05D5 \u05D7\u05D5\u05E7\u05D9. \u05E9\u05DD \u05DB\u05D1\u05E8 \u05E7\u05D9\u05D9\u05DD \u05D1\u05D0\u05D5\u05D1\u05D9\u05D9\u05E7\u05D8 '{1}'.
# YMSG: return from vocabulary runtime plug in, in case attribute name already exists as alias in other vocabulary
2134=\u05E9\u05DD \u05DC\u05D0 \u05D7\u05D5\u05E7\u05D9 \u05E2\u05D1\u05D5\u05E8 \u05EA\u05DB\u05D5\u05E0\u05D4 '{0}'. \u05E9\u05DD \u05DB\u05D1\u05E8 \u05E7\u05D9\u05D9\u05DD \u05DB\u05DB\u05D9\u05E0\u05D5\u05D9 \u05D1\u05D0\u05D5\u05E6\u05E8 \u05DE\u05D9\u05DC\u05D9\u05DD '{1}'.
# YMSG: return from vocabulary runtime plug in, in case vocabulary declares it depends on a vocabulary which doesn't exists
2135=\u05D0\u05D5\u05E6\u05E8 \u05D4\u05DE\u05D9\u05DC\u05D9\u05DD \u05DE\u05E6\u05D9\u05D9\u05DF \u05EA\u05DC\u05D5\u05EA \u05D1\u05D0\u05D5\u05E6\u05E8 \u05DE\u05D9\u05DC\u05D9\u05DD '{0}' \u05E9\u05D0\u05D9\u05E0\u05D5 \u05E7\u05D9\u05D9\u05DD.
# YMSG: return from vocabulary runtime plug in, in case implementor declare global vocabulary with dependencies
2136=\u05D0\u05D5\u05E6\u05E8 \u05DE\u05D9\u05DC\u05D9\u05DD \u05DC\u05D0 \u05D9\u05DB\u05D5\u05DC \u05DC\u05D4\u05DB\u05D9\u05DC \u05D9\u05D7\u05E1\u05D9 \u05EA\u05DC\u05D5\u05EA \u05DC\u05D0\u05D5\u05E6\u05E8 \u05DE\u05D9\u05DC\u05D9\u05DD \u05D0\u05D7\u05E8.
# YMSG: return from vocabulary runtime plug in, in case, in the same data object, there is association and attribute with the same name
2137=\u05D1\u05D0\u05D5\u05D1\u05D9\u05D9\u05E7\u05D8 \u05E0\u05EA\u05D5\u05E0\u05D9\u05DD '{0}', \u05D4\u05E9\u05DD '{1}' \u05DE\u05E9\u05DE\u05E9 \u05E2\u05D1\u05D5\u05E8 \u05E9\u05D9\u05D5\u05DA \u05D5\u05EA\u05DB\u05D5\u05E0\u05D4. \u05DC\u05D0 \u05E0\u05D9\u05EA\u05DF \u05DC\u05D4\u05E9\u05EA\u05DE\u05E9 \u05D1\u05E9\u05DD \u05D6\u05D4\u05D4 \u05E2\u05D1\u05D5\u05E8 \u05E9\u05EA\u05D9 \u05D4\u05EA\u05DB\u05D5\u05E0\u05D5\u05EA.
# YMSG: return from vocabulary runtime plug in, in case invalid alias name
2138=\u05E9\u05DD \u05E8\u05E9\u05D9\u05DE\u05EA \u05D4\u05E2\u05E8\u05DB\u05D9\u05DD '{0}' \u05D0\u05D9\u05E0\u05D5 \u05D7\u05D5\u05E7\u05D9. \u05E9\u05DD \u05E8\u05E9\u05D9\u05DE\u05EA \u05D4\u05E2\u05E8\u05DB\u05D9\u05DD \u05D9\u05DB\u05D5\u05DC \u05DC\u05D4\u05DB\u05D9\u05DC \u05EA\u05D5\u05D5\u05D9\u05DD \u05D0\u05DC\u05E4\u05D0\u05E0\u05D5\u05DE\u05E8\u05D9\u05D9\u05DD \u05D5\u05EA\u05D5\u05D5\u05D9\u05DD \u05E2\u05DD \u05E7\u05D5 \u05EA\u05D7\u05EA\u05D5\u05DF \u05D1\u05DC\u05D1\u05D3, \u05D7\u05D9\u05D9\u05D1 \u05DC\u05D4\u05EA\u05D7\u05D9\u05DC \u05E2\u05DD \u05EA\u05D5 \u05D0\u05DC\u05E4\u05D1\u05D9\u05EA\u05D9, \u05D5\u05DC\u05D0 \u05D9\u05DB\u05D5\u05DC \u05DC\u05D4\u05D9\u05D5\u05EA \u05DE\u05D9\u05DC\u05D4 \u05DE\u05E9\u05D5\u05E8\u05D9\u05D9\u05E0\u05EA \u05DE\u05E9\u05E4\u05EA \u05D1\u05D9\u05D8\u05D5\u05D9 \u05D4\u05DB\u05DC\u05DC.
# YMSG: return from vocabulary runtime plug in, in case alias content is empty
2139=\u05D4\u05EA\u05D5\u05DB\u05DF \u05E9\u05DC \u05E8\u05E9\u05D9\u05DE\u05EA \u05E2\u05E8\u05DB\u05D9\u05DD '{0}' \u05E8\u05D9\u05E7.
# YMSG: return from vocabulary runtime plug in, in case alias content is empty
2140=\u05E8\u05E9\u05D9\u05DE\u05EA \u05D4\u05E2\u05E8\u05DB\u05D9\u05DD '{0}' \u05E9\u05D4\u05D5\u05D2\u05D3\u05E8\u05D4 \u05D1\u05EA\u05DB\u05D5\u05E0\u05D4 '{1}' \u05D1\u05D0\u05D5\u05D1\u05D9\u05D9\u05E7\u05D8 \u05E0\u05EA\u05D5\u05E0\u05D9\u05DD '{2}' \u05DC\u05D0 \u05E7\u05D9\u05D9\u05DE\u05EA.
# YMSG: return from vocabulary runtime plug in, in case parameter size isn't valid
2141=\u05D1-'{'0}, \u05D4\u05D2\u05D5\u05D3\u05DC ({1}) \u05E9\u05DC \u05E4\u05E8\u05DE\u05D8\u05E8 '{'2} \u05D1-'{'3} \u05DC\u05D0 \u05D7\u05D5\u05E7\u05D9 \u05E2\u05D1\u05D5\u05E8 \u05E1\u05D5\u05D2 \u05D4\u05E0\u05EA\u05D5\u05E0\u05D9\u05DD \u05E9\u05E6\u05D5\u05D9\u05DF.
# YMSG: return from vocabulary - in case parameter content cannot be a collection 
2142=\u05D4\u05D2\u05D3\u05E8\u05EA \u05E4\u05E8\u05DE\u05D8\u05E8 \u05DC\u05D0 \u05D7\u05D5\u05E7\u05D9\u05EA \u05E2\u05D1\u05D5\u05E8 \u05E4\u05E2\u05D5\u05DC\u05D4 '{0}' \u05D1\u05E4\u05E8\u05DE\u05D8\u05E8 \u05E4\u05E2\u05D5\u05DC\u05D4 '{1}'. \u05E4\u05E8\u05DE\u05D8\u05E8\u05D9\u05DD \u05DE\u05E1\u05D5\u05D2 \u05D7\u05D1\u05D9\u05DC\u05D4 \u05D0\u05E1\u05D5\u05E8\u05D9\u05DD \u05D1\u05E4\u05E2\u05D5\u05DC\u05D5\u05EA.                                                                                                                                                                   .




# 2300 - 2499 rule template messages

# YMSG: return from Rule Template runtime plug in, in case of rule template name starts with a number
2300=\u05E2\u05D3\u05DB\u05D5\u05DF \u05D0\u05D5 \u05D9\u05E6\u05D9\u05E8\u05EA \u05EA\u05D1\u05E0\u05D9\u05EA \u05DB\u05DC\u05DC \u05DC\u05D0 \u05D0\u05E4\u05E9\u05E8\u05D9\u05D9\u05DD; \u05E9\u05DD \u05EA\u05D1\u05E0\u05D9\u05EA \u05DB\u05DC\u05DC \u05DC\u05D0 \u05D9\u05DB\u05D5\u05DC \u05DC\u05D4\u05EA\u05D7\u05D9\u05DC \u05E2\u05DD \u05DE\u05E1\u05E4\u05E8
# YMSG: return from Rule Template runtime plug in, in case of illegal change in rule template attributes
2301=\u05D4\u05E4\u05E2\u05DC\u05EA \u05EA\u05D1\u05E0\u05D9\u05EA \u05DB\u05DC\u05DC \u05DE\u05DB\u05D9\u05DC\u05D4 \u05E9\u05D9\u05E0\u05D5\u05D9\u05D9\u05DD \u05DC\u05D0 \u05EA\u05D5\u05D0\u05DE\u05D9\u05DD;
# YMSG: return from Rule Template runtime plug in, in case of rule template update contains condition change
2302=\u05E2\u05D3\u05DB\u05D5\u05DF \u05D0\u05D5 \u05D9\u05E6\u05D9\u05E8\u05EA \u05EA\u05D1\u05E0\u05D9\u05EA \u05DB\u05DC\u05DC \u05DC\u05D0 \u05D0\u05E4\u05E9\u05E8\u05D9\u05D9\u05DD; \u05DC\u05D0 \u05E0\u05D9\u05EA\u05DF \u05DC\u05E9\u05E0\u05D5\u05EA \u05EA\u05E0\u05D0\u05D9 \u05E9\u05DC \u05EA\u05D1\u05E0\u05D9\u05EA \u05DB\u05DC\u05DC
# YMSG: return from Rule Template runtime plug in, in case of rule template contains invalid condition 
2303=\u05E2\u05D3\u05DB\u05D5\u05DF \u05D0\u05D5 \u05D9\u05E6\u05D9\u05E8\u05EA \u05EA\u05D1\u05E0\u05D9\u05EA \u05DB\u05DC\u05DC \u05DC\u05D0 \u05D0\u05E4\u05E9\u05E8\u05D9\u05D9\u05DD; \u05EA\u05E0\u05D0\u05D9 '{0}' \u05DC\u05D0 \u05D7\u05D5\u05E7\u05D9
# YMSG: return from Rule Template runtime plug in, in case of rule template deletion when there are rules assigned to the rule template  
2304=\u05DC\u05D0 \u05E0\u05D9\u05EA\u05DF \u05DC\u05DE\u05D7\u05D5\u05E7 \u05D0\u05EA \u05EA\u05D1\u05E0\u05D9\u05EA \u05DB\u05DC\u05DC {0}. \u05D9\u05E9\u05E0\u05DD \u05DB\u05DC\u05DC\u05D9\u05DD \u05E2\u05D1\u05D5\u05E8 \u05EA\u05D1\u05E0\u05D9\u05EA \u05DB\u05DC\u05DC \u05D6\u05D5;
# YMSG: return from Rule Template runtime plug in, in case of duplicate rule template name  
2305=\u05D9\u05E6\u05D9\u05E8\u05EA \u05EA\u05D1\u05E0\u05D9\u05EA \u05DB\u05DC\u05DC \u05DC\u05D0 \u05D0\u05E4\u05E9\u05E8\u05D9\u05EA; \u05EA\u05D1\u05E0\u05D9\u05EA \u05DB\u05DC\u05DC '{0}' \u05DB\u05D1\u05E8 \u05E7\u05D9\u05D9\u05DE\u05EA \u05D1\u05D7\u05D1\u05D9\u05DC\u05D4 '{1}'
# YMSG: return from Rule Template runtime plug in, in case that rule template name starts with a number  
2306=\u05E9\u05DD \u05E9\u05DC \u05EA\u05D1\u05E0\u05D9\u05EA \u05DB\u05DC\u05DC - '{0}' \u05DC\u05D0 \u05D9\u05DB\u05D5\u05DC\u05D4 \u05DC\u05D4\u05EA\u05D7\u05D9\u05DC \u05E2\u05DD \u05DE\u05E1\u05E4\u05E8;
# YMSG: return from Rule Template runtime plug in, in case that rule template name already exist as data object  
2307=\u05DC\u05D0 \u05E0\u05D9\u05EA\u05DF \u05D4\u05D9\u05D4 \u05DC\u05D9\u05E6\u05D5\u05E8 \u05D0\u05EA \u05EA\u05D1\u05E0\u05D9\u05EA \u05DB\u05DC\u05DC\u05D9\u05DD '{0}'. \u05E9\u05DD \u05EA\u05D1\u05E0\u05D9\u05EA \u05D4\u05DB\u05DC\u05DC\u05D9\u05DD \u05DB\u05D1\u05E8 \u05E0\u05DE\u05E6\u05D0 \u05D1\u05E9\u05D9\u05DE\u05D5\u05E9 \u05DB\u05D0\u05D5\u05D1\u05D9\u05D9\u05E7\u05D8 \u05E0\u05EA\u05D5\u05E0\u05D9\u05DD \u05D1\u05D0\u05D5\u05E6\u05E8 \u05DE\u05D9\u05DC\u05D9\u05DD '{1}'.
# YMSG: return from Rule Template runtime plug in, in case that rule template name already exist as alias
2308=\u05DC\u05D0 \u05E0\u05D9\u05EA\u05DF \u05D4\u05D9\u05D4 \u05DC\u05D9\u05E6\u05D5\u05E8 \u05D0\u05EA \u05EA\u05D1\u05E0\u05D9\u05EA \u05DB\u05DC\u05DC\u05D9\u05DD '{0}'. \u05E9\u05DD \u05EA\u05D1\u05E0\u05D9\u05EA \u05D4\u05DB\u05DC\u05DC\u05D9\u05DD \u05DB\u05D1\u05E8 \u05E0\u05DE\u05E6\u05D0 \u05D1\u05E9\u05D9\u05DE\u05D5\u05E9 \u05DB\u05DB\u05D9\u05E0\u05D5\u05D9 \u05D1\u05D0\u05D5\u05E6\u05E8 \u05DE\u05D9\u05DC\u05D9\u05DD '{1}'.


# 2500 - 2699 - rule messages

# YMSG: return from Rule runtime plug in, in case of resource contains additional attributes but not assigned to rule template   
2500=\u05D9\u05E6\u05D9\u05E8\u05EA \u05DB\u05DC\u05DC \u05DC\u05D0 \u05D0\u05E4\u05E9\u05E8\u05D9\u05EA; \u05EA\u05DB\u05D5\u05E0\u05D5\u05EA \u05E0\u05D5\u05E1\u05E4\u05D5\u05EA \u05D4\u05D5\u05D6\u05E0\u05D5 \u05DC\u05DE\u05E8\u05D5\u05EA \u05E9\u05D4\u05DB\u05DC\u05DC \u05DC\u05D0 \u05DE\u05D1\u05D5\u05E1\u05E1 \u05E2\u05DC \u05EA\u05D1\u05E0\u05D9\u05EA.
# YMSG: return from Rule runtime plug in, in case of rule template assignment change   
2501=\u05E2\u05D3\u05DB\u05D5\u05DF \u05DB\u05DC\u05DC \u05DC\u05D0 \u05D0\u05E4\u05E9\u05E8\u05D9; \u05DC\u05D0 \u05E0\u05D9\u05EA\u05DF \u05DC\u05E9\u05E0\u05D5\u05EA \u05D4\u05E7\u05E6\u05D0\u05D4 \u05E9\u05DC \u05EA\u05D1\u05E0\u05D9\u05EA \u05DB\u05DC\u05DC \u05D1\u05E8\u05D2\u05E2 \u05E9\u05D4\u05DB\u05DC\u05DC \u05E0\u05D5\u05E6\u05E8.
# YMSG: return from Rule runtime plug in, in case of vocabulary change  
2502=\u05E2\u05D3\u05DB\u05D5\u05DF \u05DB\u05DC\u05DC \u05DC\u05D0 \u05D0\u05E4\u05E9\u05E8\u05D9; \u05DC\u05D0 \u05E0\u05D9\u05EA\u05DF \u05DC\u05E9\u05E0\u05D5\u05EA \u05D4\u05E7\u05E6\u05D0\u05D4 \u05E9\u05DC \u05D0\u05D5\u05E6\u05E8 \u05DE\u05D9\u05DC\u05D9\u05DD \u05D1\u05E8\u05D2\u05E2 \u05E9\u05D4\u05DB\u05DC\u05DC \u05E0\u05D5\u05E6\u05E8.
# YMSG: return from Rule runtime plug in, in case of output change   
2503=\u05E2\u05D3\u05DB\u05D5\u05DF \u05DB\u05DC\u05DC \u05DC\u05D0 \u05D0\u05E4\u05E9\u05E8\u05D9; \u05DC\u05D0 \u05E0\u05D9\u05EA\u05DF \u05DC\u05E9\u05E0\u05D5\u05EA \u05D4\u05E7\u05E6\u05D0\u05D4 \u05E9\u05DC \u05E4\u05DC\u05D8 \u05D1\u05E8\u05D2\u05E2 \u05E9\u05D4\u05DB\u05DC\u05DC \u05E0\u05D5\u05E6\u05E8.
# YMSG: return from Rule runtime plug in, in case of rule contains additional attributes where assigned rule template does not contains additional attributes
2504=\u05D9\u05E6\u05D9\u05E8\u05EA \u05DB\u05DC\u05DC \u05DC\u05D0 \u05D0\u05E4\u05E9\u05E8\u05D9\u05EA; \u05D4\u05D5\u05D6\u05E0\u05D5 \u05EA\u05DB\u05D5\u05E0\u05D5\u05EA \u05E0\u05D5\u05E1\u05E4\u05D5\u05EA \u05E9\u05D0\u05D9\u05E0\u05DF \u05E9\u05D9\u05D9\u05DB\u05D5\u05EA \u05DC\u05EA\u05D1\u05E0\u05D9\u05EA \u05D4\u05DB\u05DC\u05DC \u05E9\u05D4\u05D5\u05E7\u05E6\u05EA\u05D4.
# YMSG: return from Rule runtime plug in, in case of execution context change
2505=\u05E2\u05D3\u05DB\u05D5\u05DF \u05DB\u05DC\u05DC \u05DC\u05D0 \u05D0\u05E4\u05E9\u05E8\u05D9; \u05DC\u05D0 \u05E0\u05D9\u05EA\u05DF \u05DC\u05E9\u05E0\u05D5\u05EA \u05D4\u05E7\u05E6\u05D0\u05D4 \u05E9\u05DC \u05D4\u05E7\u05E9\u05E8 \u05D1\u05D9\u05E6\u05D5\u05E2 \u05D1\u05E8\u05D2\u05E2 \u05E9\u05D4\u05DB\u05DC\u05DC \u05E0\u05D5\u05E6\u05E8.
# YMSG: return from Rule runtime plug in, in case of invalid rule template assignment
2506=\u05EA\u05D1\u05E0\u05D9\u05EA \u05D4\u05DB\u05DC\u05DC '{0}' \u05D0\u05D9\u05E0\u05D4 \u05D7\u05D5\u05E7\u05D9\u05EA;
# YMSG: return from Rule runtime plug in, in case of invalid status transition
2507=\u05E2\u05D3\u05DB\u05D5\u05DF \u05DB\u05DC\u05DC \u05DC\u05D0 \u05D0\u05E4\u05E9\u05E8\u05D9; \u05D0\u05D9\u05DF \u05D1\u05D0\u05E4\u05E9\u05E8\u05D5\u05EA\u05DA \u05DC\u05E9\u05E0\u05D5\u05EA \u05DE\u05E1\u05D8\u05D0\u05D8\u05D5\u05E1 '{0}' \u05DC-'{1}'.
# YMSG: return from Rule runtime plug in, in case of updating single consumption to non single consumption Rule
2510=\u05D4\u05E1\u05E8\u05EA \u05E9\u05D9\u05E8\u05D5\u05EA\u05D9\u05DD \u05DE\u05E9\u05D5\u05D1\u05E6\u05D9\u05DD \u05D0\u05E1\u05D5\u05E8\u05D4.
# YMSG: return from Rule runtime plug in, in case of updating single embedded service in Rule
2511=\u05D4\u05E1\u05E8\u05D4 \u05D0\u05D5 \u05E9\u05D9\u05E0\u05D5\u05D9 \u05E9\u05DC \u05E9\u05D9\u05E8\u05D5\u05EA\u05D9\u05DD \u05DE\u05E9\u05D5\u05D1\u05E6\u05D9\u05DD \u05D0\u05E1\u05D5\u05E8\u05D4.
# YMSG: return from Rule runtime plug in, in case of more than one embedded services with the same name
2512=\u05E9\u05DD \u05E9\u05DC \u05E9\u05D9\u05E8\u05D5\u05EA \u05DE\u05E9\u05D5\u05D1\u05E5 - '{0}', \u05E7\u05D9\u05D9\u05DD \u05D9\u05D5\u05EA\u05E8 \u05DE\u05E4\u05E2\u05DD \u05D0\u05D7\u05EA.
# YMSG: return from Rule runtime plug in - update/create, in case the rule body is not valid
2513=\u05E2\u05D3\u05DB\u05D5\u05DF \u05D0\u05D5 \u05D9\u05E6\u05D9\u05E8\u05EA \u05DB\u05DC\u05DC \u05DC\u05D0 \u05D0\u05E4\u05E9\u05E8\u05D9\u05D9\u05DD; \u05D2\u05D5\u05E3 \u05D4\u05DB\u05DC\u05DC \u05D0\u05D9\u05E0\u05D5 \u05D7\u05D5\u05E7\u05D9.
# YMSG: return from Rule body validator - in case parameter is referenced to an unknown action
2514=\u05D4\u05D2\u05D3\u05E8\u05EA \u05E4\u05E8\u05DE\u05D8\u05E8 \u05D1\u05DC\u05EA\u05D9 \u05D7\u05D5\u05E7\u05D9\u05EA. \u05D4\u05E4\u05E8\u05DE\u05D8\u05E8 \u05DE\u05D4\u05D5\u05D5\u05D4 \u05E1\u05D9\u05DE\u05D5\u05DB\u05D9\u05DF \u05DC\u05E4\u05E2\u05D5\u05DC\u05D4 '(0)' \u05E9\u05D0\u05D9\u05E0\u05D4 \u05E7\u05D9\u05D9\u05DE\u05EA \u05D1\u05D0\u05D5\u05EA\u05E8 \u05D4\u05DE\u05D9\u05DC\u05D9\u05DD.
# YMSG: return from Rule body validator - in case parameter name isn't a valid parameter for action
2515=\u05D4\u05D2\u05D3\u05E8\u05EA \u05E4\u05E8\u05DE\u05D8\u05E8 \u05D1\u05DC\u05EA\u05D9 \u05D7\u05D5\u05E7\u05D9\u05EA. \u05E9\u05DD \u05E4\u05E8\u05DE\u05D8\u05E8 '{0}' \u05DC\u05D0 \u05E7\u05D9\u05D9\u05DD \u05E2\u05D1\u05D5\u05E7 \u05E4\u05E2\u05D5\u05DC\u05D4 '{1}' \u05D1\u05D0\u05D5\u05E6\u05E8 \u05D4\u05DE\u05D9\u05DC\u05D9\u05DD.
# YMSG: return from Rule body validator - in case action doesn't exist in the vocabulary
2516=\u05E4\u05E2\u05D5\u05DC\u05D4 '{0}' \u05DC\u05D0 \u05E7\u05D9\u05D9\u05DE\u05EA \u05D1\u05D0\u05D5\u05E6\u05E8 \u05D4\u05DE\u05D9\u05DC\u05D9\u05DD.
# YMSG: return from Rule body validator - when the sent parameter isn't a required parameter in the sent output 
2517=\u05D4\u05D2\u05D3\u05E8\u05EA \u05E4\u05E8\u05DE\u05D8\u05E8 \u05D1\u05DC\u05EA\u05D9 \u05D7\u05D5\u05E7\u05D9\u05EA. \u05E9\u05DD \u05E4\u05E8\u05DE\u05D8\u05E8 '{0}' \u05DC\u05D0 \u05E7\u05D9\u05D9\u05DD \u05E2\u05D1\u05D5\u05E8 \u05E4\u05DC\u05D8 '{1}' \u05D1\u05D0\u05D5\u05E6\u05E8 \u05DE\u05D9\u05DC\u05D9\u05DD.
# YMSG: return from Rule body validator - when the sent output doesn't exists in the vocabulary
2518=\u05E4\u05DC\u05D8 '{0}' \u05DC\u05D0 \u05E7\u05D9\u05D9\u05DD \u05D1\u05D0\u05D5\u05E6\u05E8 \u05DE\u05D9\u05DC\u05D9\u05DD.
# YMSG: return from Rule body validator - when alias has more than one output parameter column
2519=\u05D9\u05E9 \u05DC\u05DB\u05D9\u05E0\u05D5\u05D9 \u05D9\u05D5\u05EA\u05E8 \u05DE\u05E4\u05E8\u05DE\u05D8\u05E8 \u05E4\u05DC\u05D8 \u05D0\u05D7\u05D3.
# YMSG: return from Rule body validator - when the alias output parameters values do not have the same type X
2520=\u05DB\u05DC \u05D4\u05E2\u05E8\u05DB\u05D9\u05DD \u05E9\u05DC \u05E4\u05E8\u05DE\u05D8\u05E8 \u05E4\u05DC\u05D8 '{0}' \u05D7\u05D9\u05D9\u05D1\u05D9\u05DD \u05DC\u05D4\u05D9\u05D5\u05EA \u05DE\u05D0\u05D5\u05EA\u05D5 \u05D4\u05E1\u05D5\u05D2.
# YMSG: return from Rule runtime plug in, in case of assign rule to rule service that does not exist.
2521=\u05DC\u05D0 \u05E0\u05D9\u05EA\u05DF \u05D4\u05D9\u05D4 \u05DC\u05D4\u05E7\u05E6\u05D5\u05EA \u05D0\u05EA \u05DB\u05DC\u05DC '{0}' \u05DC\u05E9\u05D9\u05E8\u05D5\u05EA \u05DB\u05DC\u05DC '{1}'. \u05E9\u05D9\u05E8\u05D5\u05EA \u05D4\u05DB\u05DC\u05DC \u05DC\u05D0 \u05E7\u05D9\u05D9\u05DD.
# YMSG: return from Rule runtime plug in, in case of assign rule to rule service with different vocabulary.
2522=\u05DC\u05D0 \u05E0\u05D9\u05EA\u05DF \u05D4\u05D9\u05D4 \u05DC\u05D4\u05E7\u05E6\u05D5\u05EA \u05D0\u05EA \u05DB\u05DC\u05DC '{0}' \u05DC\u05E9\u05D9\u05E8\u05D5\u05EA \u05DB\u05DC\u05DC '{1}'. \u05D9\u05E9 \u05DC\u05D4\u05D2\u05D3\u05D9\u05E8 \u05D0\u05D5\u05E6\u05E8 \u05DE\u05D9\u05DC\u05D9\u05DD \u05D6\u05D4\u05D4 \u05D1\u05DB\u05DC\u05DC \u05D5\u05E9\u05D9\u05E8\u05D5\u05EA \u05D4\u05DB\u05DC\u05DC.
# YMSG: return from Rule runtime plug in, in case of assign rule to rule service with different output.
2523=\u05DC\u05D0 \u05E0\u05D9\u05EA\u05DF \u05D4\u05D9\u05D4 \u05DC\u05D4\u05E7\u05E6\u05D5\u05EA \u05D0\u05EA \u05DB\u05DC\u05DC '{0}' \u05DC\u05E9\u05D9\u05E8\u05D5\u05EA \u05DB\u05DC\u05DC '{1}'. \u05D9\u05E9 \u05DC\u05D4\u05D2\u05D3\u05D9\u05E8 \u05E4\u05DC\u05D8 \u05D6\u05D4\u05D4 \u05DC\u05DB\u05DC\u05DC \u05D5\u05E9\u05D9\u05E8\u05D5\u05EA \u05D4\u05DB\u05DC\u05DC.
# YMSG: return from Rule runtime plug in, in case of assign rule to rule service that is not indicated as manually assigned.
2524=\u05DC\u05D0 \u05E0\u05D9\u05EA\u05DF \u05D4\u05D9\u05D4 \u05DC\u05D4\u05E7\u05E6\u05D5\u05EA \u05DB\u05DC\u05DC '{0}' \u05DC\u05E9\u05D9\u05E8\u05D5\u05EA \u05DB\u05DC\u05DC '{1}'. \u05E9\u05D9\u05E8\u05D5\u05EA \u05D4\u05DB\u05DC\u05DC \u05E0\u05E7\u05D1\u05E2 \u05DC\u05D4\u05E7\u05E6\u05D0\u05D5\u05EA \u05DB\u05DC\u05DC \u05D0\u05D5\u05D8\u05D5\u05DE\u05D8\u05D9\u05D5\u05EA \u05D5\u05DC\u05DB\u05DF \u05DC\u05D0 \u05DE\u05D0\u05E4\u05E9\u05E8 \u05D4\u05E7\u05E6\u05D0\u05D5\u05EA \u05D9\u05D3\u05E0\u05D9\u05D5\u05EA.
# YMSG: return from Rule runtime plug in - update/create, in case a custom condition is not valid
2525=\u05DC\u05D0 \u05E0\u05D9\u05EA\u05DF \u05DC\u05D9\u05E6\u05D5\u05E8 \u05D0\u05D5 \u05DC\u05E2\u05D3\u05DB\u05DF \u05D0\u05EA \u05D4\u05DB\u05DC\u05DC; '{0}' \u05D0\u05D9\u05E0\u05D5 \u05EA\u05E0\u05D0\u05D9 \u05D7\u05D5\u05E7\u05D9.
# YMSG: return from Rule body validator - when ruleBody of type ruleSet has more than one condition column
2526=\u05E1\u05D8 \u05DB\u05DC\u05DC\u05D9\u05DD \u05DC\u05D0 \u05D7\u05D5\u05E7\u05D9. \u05DC\u05DB\u05DC\u05DC \u05D1\u05EA\u05D5\u05DA \u05E1\u05D8 \u05DB\u05DC\u05DC\u05D9\u05DD \u05D6\u05D4 \u05D9\u05E9 \u05D9\u05D5\u05EA\u05E8 \u05DE\u05EA\u05E0\u05D0\u05D9 \u05D0\u05D7\u05D3.


# 2700 - 2899 - rule service messages

# YMSG: return from Rule service plug in, in case of wrong data object filter
2700=\u05E9\u05D2\u05D9\u05D0\u05D4 \u05D1\u05DE\u05E1\u05E0\u05DF \u05E9\u05DC \u05E9\u05D9\u05E8\u05D5\u05EA \u05DB\u05DC\u05DC\u05D9\u05DD
# YMSG: return from Rule service plug in, in case of different data objects in execution context and filter
2701=\u05D0\u05D5\u05D1\u05D9\u05D9\u05E7\u05D8 \u05E0\u05EA\u05D5\u05E0\u05D9\u05DD - '{0}' \u05D1\u05D4\u05E7\u05E9\u05E8 \u05D4\u05D1\u05D9\u05E6\u05D5\u05E2 \u05E9\u05D5\u05E0\u05D4 \u05DE\u05D4-dataObject - '{1}' \u05D1\u05DE\u05E1\u05E0\u05DF
# YMSG: return from  runtime plug in, in case of specified data object does not have the specified attribute (e.g. data object keys in rule service definition).
2704=\u05E2\u05D3\u05DB\u05D5\u05DF \u05D0\u05D5 \u05D9\u05E6\u05D9\u05E8\u05EA \u05E9\u05D9\u05E8\u05D5\u05EA \u05DB\u05DC\u05DC\u05D9\u05DD \u05DC\u05D0 \u05D0\u05E4\u05E9\u05E8\u05D9\u05D9\u05DD; \u05D0\u05D5\u05D1\u05D9\u05D9\u05E7\u05D8 \u05E0\u05EA\u05D5\u05E0\u05D9\u05DD {0} \u05E9\u05DC \u05D0\u05D5\u05E6\u05E8 \u05DE\u05D9\u05DC\u05D9\u05DD {1} \u05DC\u05D0 \u05DE\u05DB\u05D9\u05DC \u05D0\u05EA \u05EA\u05DB\u05D5\u05E0\u05D4 {2}
# YMSG: return from runtime plug in, in case of parameter mapping path contains a collection
2705=\u05E0\u05EA\u05D9\u05D1 \u05E2\u05DD \u05D7\u05D1\u05D9\u05DC\u05D4 \u05D0\u05E1\u05D5\u05E8. \u05E0\u05EA\u05D9\u05D1\: {0};
# YMSG: return from runtime plug in, in case of data object mapping entry is not unique within an execution context .
2706=\u05DC\u05D0\u05D5\u05D1\u05D9\u05D9\u05E7\u05D8 \u05E0\u05EA\u05D5\u05E0\u05D9\u05DD - {0} \u05D9\u05E9 \u05DE\u05D9\u05E4\u05D5\u05D9 \u05DB\u05E4\u05D5\u05DC;
# YMSG: return from  runtime plug in, in case of parameter definition entry is not unique within an execution context .
2707=\u05D9\u05E6\u05D9\u05E8\u05EA \u05E9\u05D9\u05E8\u05D5\u05EA \u05DB\u05DC\u05DC\u05D9\u05DD \u05DC\u05D0 \u05D0\u05E4\u05E9\u05E8\u05D9\u05EA; \u05E4\u05E8\u05DE\u05D8\u05E8 {0} \u05DB\u05E4\u05D5\u05DC
# YMSG: return from  runtime plug in, in case of parameter mapping entry doesn't have a match parameter definition entry with in an execution context
2708=\u05D9\u05E6\u05D9\u05E8\u05EA \u05E9\u05D9\u05E8\u05D5\u05EA \u05DB\u05DC\u05DC\u05D9\u05DD \u05D0\u05D9\u05E0\u05D4 \u05D0\u05E4\u05E9\u05E8\u05D9\u05EA; \u05E4\u05E8\u05DE\u05D8\u05E8 {0} \u05DC\u05D0 \u05E7\u05D9\u05D9\u05DD \u05D5\u05DE\u05E9\u05D5\u05D9\u05DA \u05DC\u05D0\u05D5\u05D1\u05D9\u05D9\u05E7\u05D8 \u05D4\u05E0\u05EA\u05D5\u05E0\u05D9\u05DD
# YMSG: return from  runtime plug in, in case of ifentifiers in dataObject type parameter do not exist in data object from vocabulary
2709=\u05D4\u05D2\u05D3\u05E8\u05EA \u05E4\u05E8\u05DE\u05D8\u05E8\u05D9\u05DD \u05DC\u05D0 \u05D7\u05D5\u05E7\u05D9\u05EA \u05D1\u05E9\u05D9\u05E8\u05D5\u05EA \u05DB\u05DC\u05DC\u05D9\u05DD '{0}'. \u05E4\u05E8\u05DE\u05D8\u05E8 '{1}', '{2}' \u05D0\u05D9\u05E0\u05D5 \u05EA\u05DB\u05D5\u05E0\u05D4 \u05D7\u05D5\u05E7\u05D9\u05EA \u05E9\u05DC \u05D0\u05D5\u05D1\u05D9\u05D9\u05E7\u05D8 \u05E0\u05EA\u05D5\u05E0\u05D9\u05DD '{3}' \u05D1\u05D8\u05D5\u05D5\u05D7 \u05D0\u05D5\u05E6\u05E8 \u05DE\u05D9\u05DC\u05D9\u05DD '{4}'.
# YMSG: return from runtime plug in, in case of data object definition entry is not unique within parameter definition if service.
2710=\u05D4\u05D2\u05D3\u05E8\u05EA \u05E4\u05E8\u05DE\u05D8\u05E8 \u05DC\u05D0 \u05D7\u05D5\u05E7\u05D9\u05EA \u05D1\u05E9\u05D9\u05E8\u05D5\u05EA \u05DB\u05DC\u05DC\u05D9\u05DD '{0}'. \u05D0\u05D5\u05D1\u05D9\u05D9\u05E7\u05D8 \u05E0\u05EA\u05D5\u05E0\u05D9\u05DD '{1}' \u05DE\u05E9\u05DE\u05E9 \u05DB\u05E1\u05D9\u05DE\u05D5\u05DB\u05D9\u05DF \u05DC\u05D9\u05D5\u05EA\u05E8 \u05DE\u05E4\u05E8\u05DE\u05D8\u05E8 \u05D0\u05D7\u05D3.
# YMSG: return from runtime plug in, only read-only rule services can be indicated to be created with result view
2711=\u05DC\u05D0 \u05E0\u05D9\u05EA\u05DF \u05D4\u05D9\u05D4 \u05DC\u05D9\u05E6\u05D5\u05E8 \u05D0\u05EA \u05E9\u05D9\u05E8\u05D5\u05EA \u05DB\u05DC\u05DC\u05D9\u05DD '{0}'. \u05D7\u05D5\u05D1\u05D4 \u05DC\u05E6\u05D9\u05D9\u05DF \u05E9\u05E9\u05D9\u05E8\u05D5\u05EA \u05DB\u05DC\u05DC\u05D9\u05DD \u05E2\u05DD \u05EA\u05E6\u05D5\u05D2\u05EA \u05EA\u05D5\u05E6\u05D0\u05D5\u05EA \u05D4\u05D5\u05D0 \u05DC\u05E7\u05E8\u05D9\u05D0\u05D4 \u05D1\u05DC\u05D1\u05D3.
# YMSG: return from runtime plug in, only explicit output rule services can be indicated to be created with result view
2712=\u05DC\u05D0 \u05E0\u05D9\u05EA\u05DF \u05DC\u05D9\u05E6\u05D5\u05E8 \u05D0\u05EA \u05E9\u05D9\u05E8\u05D5\u05EA \u05DB\u05DC\u05DC '{0}'. \u05DC\u05E9\u05D9\u05E8\u05D5\u05EA\u05D9 \u05DB\u05DC\u05DC \u05E2\u05DD \u05EA\u05E6\u05D5\u05D2\u05EA \u05EA\u05D5\u05E6\u05D0\u05D4 \u05D7\u05D9\u05D9\u05D1 \u05DC\u05D4\u05D9\u05D5\u05EA \u05DB\u05DC\u05DC \u05DE\u05E4\u05D5\u05E8\u05E9 \u05E9\u05D4\u05D5\u05D2\u05D3\u05E8.
# YMSG: returned from request handler. Rule requested to be removed from rule service but the rule is not assigned to it
2713=\u05DC\u05D0 \u05E0\u05D9\u05EA\u05DF \u05D4\u05D9\u05D4 \u05DC\u05D4\u05E1\u05D9\u05E8 \u05D4\u05E7\u05E6\u05D0\u05EA \u05DB\u05DC\u05DC. \u05DB\u05DC\u05DC '{0}' \u05D0\u05D9\u05E0\u05D5 \u05DE\u05D5\u05E7\u05E6\u05D4 \u05DC\u05E9\u05D9\u05E8\u05D5\u05EA \u05D4\u05DB\u05DC\u05DC.
# YMSG: return from  runtime plug in, in case of output contains collection parameter in event mode scenario
2714=\u05DC\u05D0 \u05D4\u05D9\u05EA\u05DF \u05D4\u05D9\u05D4 \u05DC\u05D9\u05E6\u05D5\u05E8 \u05D0\u05EA \u05E9\u05D9\u05E8\u05D5\u05EA \u05DB\u05DC\u05DC '{0}'. \u05D0\u05D9\u05E0\u05DA \u05D9\u05DB\u05D5\u05DC \u05DC\u05D4\u05D2\u05D3\u05D9\u05E8 \u05E4\u05DC\u05D8 \u05E2\u05DD \u05E4\u05E8\u05DE\u05D8\u05E8\u05D9\u05DD \u05DE\u05E1\u05D5\u05D2 \u05D7\u05D1\u05D9\u05DC\u05D4 \u05E2\u05D1\u05D5\u05E8 \u05E9\u05D9\u05E8\u05D5\u05EA \u05DB\u05DC\u05DC \u05E9\u05DC\u05D0 \u05DE\u05D5\u05D2\u05D3\u05E8 \u05DC\u05D5 \u05D0\u05D5\u05D1\u05D9\u05D9\u05E7\u05D8 \u05E0\u05EA\u05D5\u05E0\u05D9\u05DD \u05D1\u05D4\u05E7\u05E9\u05E8 \u05D4\u05D1\u05D9\u05E6\u05D5\u05E2 \u05E9\u05DC\u05D5.
# 2900 - 2949 - post activation / completeActivation

# 2950 - 2999 - common resource CRUD


# YMSG: return from Request Handler, in case of url parameter that isn't valid
2955=\u05E4\u05E8\u05DE\u05D8\u05E8 \u05E9\u05DC \u05DB\u05EA\u05D5\u05D1\u05EA URL\: {0} \u05DC\u05D0 \u05D7\u05D5\u05E7\u05D9
# YMSG: return from Request Handler, in case of unsupported request mode
2956=\u05DE\u05E6\u05D1 \#{0} \u05DC\u05D0 \u05E0\u05EA\u05DE\u05DA
# YMSG: return from Request Handler, in case of unsupported metadata
2957=\u05DE\u05D8\u05D4-\u05E0\u05EA\u05D5\u05E0\u05D9\u05DD \u05DC\u05D0 \u05E0\u05EA\u05DE\u05DB\u05D9\u05DD
# YMSG: return from Request Handler, in case of unsupported metadata for method
2958=\u05DE\u05D8\u05D4-\u05E0\u05EA\u05D5\u05E0\u05D9\u05DD \u05E9\u05DC \u05E7\u05D1\u05DC\u05D4 \u05D7\u05D5\u05E7\u05D9\u05D9\u05DD \u05E8\u05E7 \u05E2\u05DD \u05E9\u05D9\u05D8\u05EA \u05D1\u05E7\u05E9\u05D4 GET


# YMSG: returned when wrong query is generated (during procedure generation). 2 causes: Bug in process or there is no mapping from vocabulary to real table / column
2970=\u05E9\u05D2\u05D9\u05D0\u05D4 \u05D1\u05D9\u05E6\u05D9\u05E8\u05EA \u05E9\u05D0\u05D9\u05DC\u05EA\u05D4 \u05D0\u05D5 \u05DE\u05D9\u05E4\u05D5\u05D9 \u05DC\u05D0 \u05D7\u05D5\u05E7\u05D9
# YMSG: returned if for some reason the parser returned undefined parse model. Can be bad rule syntax or a bug
2971=\u05DE\u05D5\u05D3\u05DC \u05D4\u05E0\u05D9\u05EA\u05D5\u05D7 \u05DC\u05D0 \u05DE\u05D5\u05D2\u05D3\u05E8
# YMSG: query generation needs either leading object and at least one key or a mapping to parameters. The error is returned if something is missing 
2972=\u05E9\u05D9\u05DC\u05D5\u05D1 \u05DC\u05D0 \u05D7\u05D5\u05E7\u05D9 \u05E9\u05DC \u05D0\u05D5\u05D1\u05D9\u05D9\u05E7\u05D8 \u05DE\u05D5\u05D1\u05D9\u05DC, \u05DE\u05E4\u05EA\u05D7\u05D5\u05EA \u05D5\u05DE\u05D9\u05E4\u05D5\u05D9
# YMSG: returned when there is no association between 2 objects in vocabulary
2973=\u05E9\u05D9\u05D5\u05DA \u05DC\u05D0 \u05D7\u05D5\u05E7\u05D9 - \u05D0\u05D9\u05DF \u05EA\u05DB\u05D5\u05E0\u05D5\u05EA
# YMSG: returned when there is a use of attribute based on predictive model but the procedure for the predictive model is not defined
2974=\u05D4\u05DC\u05D9\u05DA \u05E9\u05DC \u05DE\u05D5\u05D3\u05D5\u05DC \u05D7\u05D9\u05D6\u05D5\u05D9 {0} \u05DC\u05D0 \u05E0\u05DE\u05E6\u05D0
# YMSG: outputs tanle type is mandatory. error when missing 
2975=\u05E0\u05EA\u05D5\u05E0\u05D9 \u05EA\u05D5\u05E6\u05D0\u05D4 \u05DC\u05D0 \u05D7\u05D5\u05E7\u05D9\u05D9\u05DD
# YMSG: error when is out name is missing in vocabulary output names 
2976=\u05E9\u05DD \u05E4\u05DC\u05D8 \u05DC\u05D0 \u05D7\u05D5\u05E7\u05D9
# YMSG: error when rule body type is different from text or decisionTable 
2977=\u05E1\u05D5\u05D2 \u05E9\u05DC \u05D2\u05D5\u05E3 \u05DB\u05DC\u05DC \u05DC\u05D0 \u05D7\u05D5\u05E7\u05D9
# YMSG: return from Runtime plugins, in case of unsupported change mode
2978=\u05DE\u05E6\u05D1 \u05E9\u05D9\u05E0\u05D5\u05D9 '{0}' \u05DC\u05D0 \u05E0\u05EA\u05DE\u05DA \u05E2\u05D1\u05D5\u05E8 \u05DE\u05E9\u05D0\u05D1
# YMSG: return from Runtime plugin - generate, for informing on the change mode for current resource
2979=\u05D9\u05E6\u05D9\u05E8\u05EA \u05DE\u05E9\u05D0\u05D1, \u05D1\u05DE\u05E6\u05D1 \u05E9\u05D9\u05E0\u05D5\u05D9\: '{0}'
# YMSG: return when expression  
2980=\u05E9\u05D2\u05D9\u05D0\u05D4 \u05D1\u05E0\u05D9\u05EA\u05D5\u05D7 \u05D1\u05D9\u05D8\u05D5\u05D9\: \: '{0}'
# YMSG: return when expression  
2981=\u05D9\u05E6\u05D9\u05E8\u05EA \u05EA\u05D1\u05E0\u05D9\u05EA \u05DB\u05DC\u05DC\u05D9\u05DD '{0}' \u05D0\u05D9\u05E0\u05D4 \u05D0\u05E4\u05E9\u05E8\u05D9\u05EA. \u05D4\u05E9\u05DD \u05DB\u05D1\u05E8 \u05E0\u05DE\u05E6\u05D0 \u05D1\u05E9\u05D9\u05DE\u05D5\u05E9 \u05E2\u05DC-\u05D9\u05D3\u05D9 \u05D0\u05D7\u05D3 \u05DE\u05D0\u05D5\u05D1\u05D9\u05D9\u05E7\u05D8\u05D9 \u05D4\u05E0\u05EA\u05D5\u05E0\u05D9\u05DD \u05D1\u05D0\u05D5\u05E6\u05E8 \u05DE\u05D9\u05DC\u05D9\u05DD '{1}'.



#############################
# API: Get params
#############################

# 3100 - 3999 - get params messages

# YMSG: return from  ruleBodyAnalyzer, in case of businessRule.type is not text
3100=\u05E1\u05D5\u05D2 \u05E9\u05DC \u05DB\u05DC\u05DC \u05E2\u05E1\u05E7\u05D9 \u05E6\u05E8\u05D9\u05DA \u05DC\u05D4\u05D9\u05D5\u05EA \u05D8\u05E7\u05E1\u05D8
# YMSG: return from  ruleBodyAnalyzer, in case of Vocabulary is missing
3101=\u05D0\u05D5\u05E6\u05E8 \u05D4\u05DE\u05D9\u05DC\u05D9\u05DD \u05D7\u05E1\u05E8

#############################/
# API: Rule service consumption
#############################/
# 4100 - 4999 messages

# YMSG: return message in case the output is partial
4100={0} \u05E4\u05E8\u05D9\u05D8\u05D9\u05DD \u05DE\u05D5\u05E6\u05D2\u05D9\u05DD. \u05E9\u05D9\u05DD \u05DC\u05D1, \u05D6\u05D4\u05D5 \u05E1\u05D8 \u05EA\u05D5\u05E6\u05D0\u05D5\u05EA \u05D7\u05DC\u05E7\u05D9 \u05D1\u05DC\u05D1\u05D3. \u05D0\u05DD \u05D4\u05E1\u05D9\u05DE\u05D5\u05DF \u05E9\u05DC \u05E9\u05DE\u05D9\u05E8\u05EA \u05EA\u05D5\u05E6\u05D0\u05D4 \u05E0\u05E7\u05D1\u05E2 \u05DB''\u05D0\u05DE\u05EA'', \u05E0\u05D9\u05EA\u05DF \u05DC\u05DE\u05E6\u05D5\u05D0 \u05D0\u05EA \u05D4\u05E1\u05D8 \u05D4\u05DE\u05DC\u05D0  \u05E9\u05DC \u05D4\u05EA\u05D5\u05E6\u05D0\u05D5\u05EA \u05D1\u05D8\u05D1\u05DC\u05EA \u05E4\u05DC\u05D8 '{'1}.

#############################/
# Halm and Installation
#############################/

# YMSG: Post Activation API success
10000=\u05D4\u05D2\u05D3\u05E8\u05EA \u05D4\u05EA\u05E6\u05D5\u05E8\u05D4 \u05E9\u05DC \u05E7\u05D5\u05D1\u05E5 \u05D4-Script \u05E2\u05D1\u05D5\u05E8 \u05DE\u05E1\u05D2\u05E8\u05EA \u05D4\u05DB\u05DC\u05DC\u05D9\u05DD \u05E9\u05DC SAP HANA \u05D4\u05D5\u05E9\u05DC\u05DE\u05D4 \u05D1\u05D4\u05E6\u05DC\u05D7\u05D4.
# YMSG: Post Activation API failed
10001=\u05D0\u05D9\u05E8\u05E2\u05D4 \u05E9\u05D2\u05D9\u05D0\u05D4 \u05D1\u05E7\u05D5\u05D1\u05E5 \u05D4-Script \u05E9\u05DC \u05D4\u05EA\u05E6\u05D5\u05E8\u05D4 \u05E9\u05DC \u05DE\u05E1\u05D2\u05E8\u05EA \u05D4\u05DB\u05DC\u05DC\u05D9\u05DD \u05E9\u05DC SAP HANA. {0}
# YMSG: Post Activation API failed
10002=\u05DB\u05D1\u05E8 \u05D0\u05D5\u05EA\u05E8\u05D4 \u05EA\u05E6\u05D5\u05E8\u05D4 \u05E7\u05D9\u05D9\u05DE\u05EA \u05E2\u05D1\u05D5\u05E8 \u05D9\u05D9\u05E9\u05D5\u05DD \u05D4\u05D0\u05D9\u05E0\u05D8\u05E8\u05E0\u05D8 \u05E9\u05DC \u05DE\u05E1\u05D2\u05E8\u05EA \u05D4\u05DB\u05DC\u05DC\u05D9\u05DD \u05E9\u05DC SAP HANA. \u05DC\u05E4\u05D9\u05DB\u05DA, \u05D4\u05D2\u05D3\u05E8\u05EA \u05D4\u05EA\u05E6\u05D5\u05E8\u05D4 \u05D1\u05D1\u05E8\u05D9\u05E8\u05EA \u05D4\u05DE\u05D7\u05D3\u05DC \u05E2\u05D1\u05D5\u05E8 \u05D9\u05D9\u05E9\u05D5\u05DD \u05D4\u05D0\u05D9\u05E0\u05D8\u05E8\u05E0\u05D8 \u05D0\u05E1\u05D5\u05E8\u05D4.
# YMSG: Post Activation API failed
10003=\u05E7\u05D1\u05D9\u05E2\u05EA \u05D4\u05EA\u05E6\u05D5\u05E8\u05D4 \u05E9\u05DC \u05D9\u05D9\u05E9\u05D5\u05DD \u05D4\u05D0\u05D9\u05E0\u05D8\u05E8\u05E0\u05D8 \u05E2\u05D1\u05D5\u05E8 \u05DE\u05E1\u05D2\u05E8\u05EA \u05D4\u05DB\u05DC\u05DC\u05D9\u05DD \u05E9\u05DC SAP HANA \u05E0\u05DB\u05E9\u05DC\u05D4 \u05E2\u05E7\u05D1 \u05E9\u05D2\u05D9\u05D0\u05D4 \u05D8\u05DB\u05E0\u05D9\u05EA. \u05E1\u05D9\u05D1\u05D4\: {0}
# YMSG: Post Activation API failed
10004=\u05E9\u05D9\u05E8\u05D5\u05EA \u05DB\u05DC\u05DC \u05D0\u05D5 \u05DB\u05DC\u05DC \u05E2\u05DD \u05E9\u05D9\u05E8\u05D5\u05EA \u05DE\u05E9\u05D5\u05D1\u05E5 \u05DB\u05D1\u05E8 \u05E7\u05D9\u05D9\u05DE\u05D9\u05DD \u05D1\u05DE\u05E2\u05E8\u05DB\u05EA. \u05DC\u05E4\u05D9\u05DB\u05DA, \u05E2\u05D3\u05DB\u05D5\u05DF \u05D0\u05D6\u05D5\u05E8 \u05D4\u05D6\u05DE\u05DF \u05D0\u05E1\u05D5\u05E8.
# YMSG: Post Activation API failed
10005=\u05E9\u05D9\u05E8\u05D5\u05EA \u05DB\u05DC\u05DC \u05D0\u05D5 \u05DB\u05DC\u05DC \u05E2\u05DD \u05E9\u05D9\u05E8\u05D5\u05EA \u05DE\u05E9\u05D5\u05D1\u05E5 \u05DB\u05D1\u05E8 \u05E7\u05D9\u05D9\u05DE\u05D9\u05DD \u05D1\u05DE\u05E2\u05E8\u05DB\u05EA. \u05DC\u05E4\u05D9\u05DB\u05DA, \u05E2\u05D3\u05DB\u05D5\u05DF \u05E1\u05DB\u05DE\u05EA \u05D6\u05DE\u05DF \u05E8\u05D9\u05E6\u05D4 \u05D0\u05E1\u05D5\u05E8.
