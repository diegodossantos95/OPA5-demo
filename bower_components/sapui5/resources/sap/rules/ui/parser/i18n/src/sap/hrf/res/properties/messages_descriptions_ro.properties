
# This file contains messages descriptions arranged in sections according to HRF APIs
# These descriptions are translated.
# Adding a new message requires also update of message.xsjslib file by the new ID

#############################
# common
#############################
# 10 - 999 - common messages

# YMSG: return from resource activation, in case of a resource does not exist in repository
10=Activare resurs\u0103 nu este posibil\u0103; resursa nu exist\u0103.
# YMSG: return from resource activation, in case of a resource suffix is not one of HRF resources
11=Activare resurs\u0103 nu este posibil\u0103; sufix '{0}' nu este suportat.
# YMSG: return from resource activation, in case of a resource package does not exist in repository
12=Activare resurs\u0103 nu este posibil\u0103; pachetul '{0}' nu exist\u0103.
# YMSG: return from runtime plug in, in case of invalid attribute
13=Activare resurs\u0103 nu este posibil\u0103; atributul '{0}' nu este con\u0163inut \u00EEn schem\u0103.
# YMSG: return from  runtime plug in, in case of invalid attribute
14=Activare resurs\u0103 nu este posibil\u0103; lipse\u015Fte valoarea de atribut obligatorie '{0}'.
# YMSG: return from  runtime plug in, in case none of a predefined set of fields is specified
15=Activare resurs\u0103 este imposibil\u0103; lipse\u015Fte cel pu\u0163in unul dintre atributele op\u0163ionale {0} 
# YMSG: return from  runtime plug in, in case of invalid field (e.g vocabulary doesn't exist)
16=Activare resurs\u0103 este imposibil\u0103; valoarea pt. atributul {0} nu este valabil\u0103
# YMSG: return from runtime plug in, in case of inconsistent fields combination(e.g. vocabulary and output names doesn't match)
17=Activare resurs\u0103 este imposibil\u0103; combina\u0163ia de {0} \u015Fi {1} nu este valabil\u0103
# YMSG: return from  runtime plug in, in case of invalid resource id (e.g. package / file name is missing)
23=Activare resurs\u0103 nu este posibil\u0103; resursa nu exist\u0103
# YMSG: return from  runtime plug in, in case of error from REL validation
24=Eroare \u00EEn c\u00E2mpul {0}\: {1}
# YMSG: return from  REST service, in case of http request contains non supported method
25=Metod\u0103 nereu\u015Fit\u0103; metoda \#{0} nu este suportat\u0103
# YMSG:  technical error from platform
26=Eroare tehnic\u0103 ap\u0103rut\u0103 - {0}
# YMSG: return from resource activation, in case of a resource does not exist in repository
27=Resursa nu exist\u0103.

# 100 - 200 - Authorization

# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
100=Nu ave\u0163i autoriza\u0163ie pt.a efectua aceast\u0103 ac\u0163iune.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
101=Nu ave\u0163i autoriza\u0163ie pt.a actualiza reguli.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
102=Nu ave\u0163i autoriza\u0163ie pt.a \u015Fterge reguli.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
103=Nu ave\u0163i autoriza\u0163ie pt.a crea reguli.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
104=Nu ave\u0163i autoriza\u0163ie pt.a citi reguli.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
105=Nu ave\u0163i autoriza\u0163ie pt.a actualiza servicii de reguli
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
106=Nu ave\u0163i autoriza\u0163ie pt.a \u015Fterge servicii de reguli.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
107=Nu ave\u0163i autoriza\u0163ie pt.a crea servicii de reguli.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
108=Nu ave\u0163i autoriza\u0163ie pt.a citi servicii de reguli.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
109=Nu ave\u0163i autoriza\u0163ie pt.a executa servicii de reguli.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
110=Nu ave\u0163i autoriza\u0163ie pt.a actualiza vocabulare.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
111=Nu ave\u0163i autoriza\u0163ie pt.a \u015Fterge vocabulare.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
112=Nu ave\u0163i autoriza\u0163ie pt.a crea vocabulare.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
113=Nu ave\u0163i autoriza\u0163ie pt.a citi vocabulare.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
114=Nu ave\u0163i autoriza\u0163ie pt.a actualiza \u015Fabloane de regul\u0103.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
115=Nu ave\u0163i autoriza\u0163ie pt.a \u015Fterge \u015Fabloane de regul\u0103.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
116=Nu ave\u0163i autoriza\u0163ie pt.a crea \u015Fabloane de regul\u0103.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
117=Nu ave\u0163i autoriza\u0163ie pt.a citi \u015Fabloane de regul\u0103.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
118=Nu ave\u0163i autoriza\u0163ie pt.a crea sau actualiza servicii de reguli.
#############################
# API: Validate
#############################
# 1100 - 1199 - REL validation messages

# YMSG: return from REL, the beginning of any REL validation error - in case of a wrong statement 
1100=Eroare \u00EEn expresie
# YMSG: return from REL parser, in case of a wrong entry (syntax) and maximum 3 option are optional instead 
1101=Eroare \u00EEn expresie; introduce\u0163i {0} \u00EEn loc de {1}
# YMSG: return from REL parser, in case of a wrong entry (syntax) and more than 3 option are optional instead  
1102=Eroare \u00EEn expresie; {0} nu este o intrare valabil\u0103
# YMSG: return from REL parser, in case of a wrong input
1103=Eroare \u00EEn expresie; elimina\u0163i {0}
# YMSG: return from REL model, in case of collection OM when single value in needed
1104=Eroare \u00EEn expresie; {0} este o list\u0103 de valori. Modificare la o expresie care reprezint\u0103 o valoare individual\u0103.
# YMSG: return from REL model, in case of a wrong input
1105=Eroare \u00EEn expresie; introduce\u0163i operator valabil \u00EEn loc de {0}
# YMSG: return from REL parser, in case of an incomplete expression
1106=Expresie incomplet\u0103
# YMSG: return from REL lexer, in case of missing token at EOF
1107=Eroare \u00EEn expresie; introduce\u0163i {0} la sf\u00E2r\u015Fitul expresiei
# YMSG: return from REL lexer, in case of wrong token
1108=Eroare \u00EEn expresie; introduce\u0163i {0} \u00EEn loc de '{'1} 
# YMSG: return from REL entity, in case of missing current
1109=Eroare \u00EEn expresie; 'curent' lipse\u015Fte din clauza 'WHERE'
# YMSG: return from REL entity, in case of redundant 'current'
1110=Eroare \u00EEn expresie; 'curent' redundant; elimina\u0163i un 'curent'
# YMSG: return from REL vocabulary utils, in case of invalid root object
1111=Obiect r\u0103d\u0103cin\u0103 nevalabil
# YMSG: return from REL vocabulary utils, in case of invalid association
1112=Asociere nevalabil\u0103
# YMSG: return from REL vocabulary utils, in case of invalid association or attribute
1113=Asociere sau atribut nevalabil(\u0103)
# YMSG: return from REL vocabulary utils, in case of root is simple attribute
1114=R\u0103d\u0103cina nu poate fi un atribut simplu
# YMSG: return from REL vocabulary utils, in case of attribute not found
1115=Cale incomplet\u0103, atribut neg\u0103sit
# YMSG: return from REL entity, in case of using 'current' outside of 'where'
1116=Eroare \u00EEn expresie; cuv\u00E2ntul cheie 'curent' poate fi utilizat doar \u00EEntr-o condi\u0163ie 'where'.
# YMSG: return from REL entity, in case of using 'current' incorrectly with arithmetic
1117=Eroare \u00EEn expresie; cuv\u00E2ntul cheie 'curent' trebuie aplicat la to\u0163i operanzii \u00EEntr-o singur\u0103 parte a operatorului comparativ din condi\u0163ia 'where'.
# YMSG: return from REL parser utils, in case of using value that doen't exist in closed value list
1118=Eroare \u00EEn expresie. '{0}' nu este o valoare valabil\u0103 din lista de valori '{1}'.
# YMSG: return from REL parser utils, in case of using value that doen't exist in closed value list
1119=Eroare \u00EEn expresie. Operatorul '{0}' nu poate fi utilizat cu un atribut de list\u0103 de valori ('{1}').
# YMSG: return from REL parser utils, in case of using value that doen't exist in closed value list
1120=Eroare \u00EEn expresie. Cuv\u00E2ntul cheie 'tot' nu poate urma un operand care con\u0163ine cuv\u00E2ntul cheie 'curent'.
# YMSG: return from REL parser utils, in case of using value that doen't exist in closed value list
1121=Eroare \u00EEn expresie. Cuv\u00E2ntul cheie 'tot' nu poate fi utilizat de mai multe ori \u00EEn aceea\u015Fi instruc\u0163iune.


# 1200 - 1999 - validation messages

#############################
# API : resource CRUD
#############################
# 2100 - 2299 - vocabulary messages

# YMSG: return from vocabulary runtime plug in, in case of error in expression
2100=\u00CEn '{0}'- eroare \u00EEn expresie de analiz\u0103 sintactic\u0103\: '{1}', '{2}'
# YMSG: return from vocabulary runtime plug in, in case of error in rule
2101=\u00CEn '{0}' - eroare \u00EEn regul\u0103\: '{1}', '{2}'
# YMSG: return from vocabulary runtime plug in, in case the parameter type already exists
2102=\u00CEn '{0}' \: '{1}', nume\: '{2}' exist\u0103 deja
# YMSG: return from vocabulary runtime plug in, in case parameter name isn't valid
2103=\u00CEn '{0}' \: '{1}', nume nevalabil\: '{2}'
# YMSG: return from vocabulary runtime plug in, in case one of action/output names aren't valid
2104=\u00CEn '{0}', nume nevalabil\: '{1}'
# YMSG: return from vocabulary runtime plug in, in case name already exists
2105=Numele '{0}' este definit de mai multe ori \u00EEn '{1)'.
# YMSG : return from vocabulary runtime plug in, in case the output has no parameters
2106=Parametri lips\u0103 \u00EEn ie\u015Fire
# YMSG: return from vocabulary runtime plug in, in case one of the attributes has an invalid name
2107=Nume de atribut nevalabil '{0}'
# YMSG: return from vocabulary runtime plug in, in case object name of declare more than once
2108={0}\: '{'1} exist\u0103 deja. 
# YMSG: return from vocabulary runtime plug in, in case attribute name of declare more than once
2109=Atributul exist\u0103 deja\: obiect\= '{0}' atribut\= '{1}'
# YMSG: return from vocabulary runtime plug in, in case attribute name of declare more than once
2110=Asocierea exist\u0103 deja\: obiect\= '{0}' asociere\= '{1}'
# YMSG : return from vocabulary runtime plug in, in case the source table isn't exists
2111=Tabel surs\u0103 nevalabil '{0}'
# YMSG : return from vocabulary runtime plug in, in case of one the association is invalid
2112=Asociere nevalabil\u0103 \u00EEn obiect\='{0}' + asociere\='{1}'
# YMSG : return from vocabulary runtime plug in, in case of one the association's attributes are invalid
2113=Atribut nevalabil pt.asociere\= '{0}' atribut\= '{1}'
# YMSG: return from rule utils, in case of invalid vocabulary assignment
2114=Vocabularul '{0}' nu este valabil
# YMSG: return from vocabulary runtime plug in, in case invalid alias content
2115=Con\u0163inut nevalabil \u00EEn alias '{0}'. Motiv\: '{1}'
# YMSG: return from vocabulary runtime plug in, in case invalid alias name
2116=Numele de alias '{0}' este nevalabil Numele de alias poate con\u0163ine doar caractere alfanumerice \u015Fi underscore, trebuie s\u0103 \u00EEnceap\u0103 cu un caracter alfabetic \u015Fi nu poate fi un cuv\u00E2nt rezervat din Rule Expression Language.
# YMSG: return from vocabulary runtime plug in, in case alias name collide with an data object name
2117=Nume nevalabil pt.alias '{0}'. Alias exist\u0103 deja ca nume de obiect de date.
# YMSG: return from vocabulary runtime plug in, in case o alias dependency to itself
2118=Con\u0163inut nevalabil \u00EEn alias '{0}'. Rezolu\u0163ie alias va avea drept rezultat un ciclu infinit.
# YMSG: return from vocabulary runtime plug in, when name already exists in another vocabulary in the DB. Example: In 'dataObjects', name 'player' already exists in 'aliases' vocabulary 'voca2'
2120=\u00CEn '{0}', numele '{1}' exist\u0103 deja \u00EEn '{2}' \u00EEn vocabularul '{3}'.
# YMSG: return from vocabulary runtime plug in, scope name can't be Public or Private
2121=Nume de volum nevalabil. Numele de volum nu poate fi 'Public' sau 'Privat'.
# YMSG: return from vocabulary runtime plug in, embedded vocabulary can't be with scope Global
2122=Tip de volum nevalabil. Vocabularul integrat nu poate fi de tip 'Global'.
# YMSG: Object does not exist
2125=Obiectul '{0}' nu exist\u0103
# YMSG: return from vocabulary runtime plug in, in case of a wrong data object name 
2126=Nume nevalabil pt. dataObject '{0}'. Numele dataObject nu poate fi un nume existent de \u015Fablon de regul\u0103 sau unul dintre urm\u0103toarele cuvinte rezervate (doar dependente de majuscule/minuscule)\: regul\u0103, \u015FablonRegul\u0103
# YMSG: return from vocabulary runtime plug in, in case of a wrong alias name
2127=Numele de alias '{0}' este nevalabil Numele de alias nu poate fi un nume existent de \u015Fablon de regul\u0103 sau unul dintre urm\u0103toarele cuvinte rezervate (doar dependente de majuscule/minuscule)\: regul\u0103, \u015FablonRegul\u0103
# YMSG: return from vocabulary runtime plug in, in case invalid data object name
2128=Nume nevalabil pt. dataObject '{0}'. Numele dataObject poate con\u0163ine doar caractere alfanumerice \u015Fi underscore, trebuie s\u0103 \u00EEnceap\u0103 cu un caracter alfabetic \u015Fi nu poate fi un cuv\u00E2nt rezervat din Rule Expression Language.
# YMSG: return from vocabulary runtime plug in, in case of duplicate alias names
2129=Alias '{0}' exist\u0103 deja ca nume de alias.
# YMSG: return from vocabulary runtime plug in, in case alias content is empty
2130=Parametru de con\u0163inut \u00EEn alias '{0}' este gol.
# YMSG: return from vocabulary runtime plug in, in case alias name exists as as an attribute name
2131=Nume de alias '{0}' este nevalabil. Alias exist\u0103 deja ca nume de atribut.
# YMSG: return from vocabulary runtime plug in, in case alias name exists in other vocabulary with the same scope
2132=Nume de alias '{0}' este nevalabil. Nume exist\u0103 deja ca atribut pt.obiect '{1}' \u00EEn vocabular '{2}'.
# YMSG: return from vocabulary runtime plug in, in case alias name exists in objects rule or ruleTemplate
2133=Nume de alias '{0}' este nevalabil. Nume exist\u0103 deja \u00EEn obiect '{1}'.
# YMSG: return from vocabulary runtime plug in, in case attribute name already exists as alias in other vocabulary
2134=Nume nevalabil pt.atribut '{0}'. Nume exist\u0103 deja ca alias \u00EEn vocabular '{1}'.
# YMSG: return from vocabulary runtime plug in, in case vocabulary declares it depends on a vocabulary which doesn't exists
2135=Vocabularul specific\u0103 o dependen\u0163\u0103 de vocabularul '{0}' care nu exist\u0103.
# YMSG: return from vocabulary runtime plug in, in case implementor declare global vocabulary with dependencies
2136=Un vocabular global nu poate con\u0163ine dependen\u0163e de alte vocabulare.
# YMSG: return from vocabulary runtime plug in, in case, in the same data object, there is association and attribute with the same name
2137=\u00CEn obiectul de date '{0}', numele '{1}' este utilizat pt. o asociere \u015Fi un atribut. Acela\u015Fi nume nu poate fi utilizat pt. ambele propriet\u0103\u0163i.
# YMSG: return from vocabulary runtime plug in, in case invalid alias name
2138=Numele de list\u0103 de valori '{0}' este nevalabil. Numele pt. o list\u0103 de valori poate con\u0163ine doar caractere alfanumerice \u015Fi underscore, trebuie s\u0103 \u00EEnceap\u0103 cu un caracter alfabetic \u015Fi nu poate fi un cuv\u00E2nt rezervat din Rule Expression Language.
# YMSG: return from vocabulary runtime plug in, in case alias content is empty
2139=Con\u0163inut pt.list\u0103 de valori '{0}' este gol.
# YMSG: return from vocabulary runtime plug in, in case alias content is empty
2140=Lista de valori '{0}' definit\u0103 \u00EEn atributul '{1}' \u00EEn obiectul de date '{2}' nu exist\u0103.
# YMSG: return from vocabulary runtime plug in, in case parameter size isn't valid
2141=\u00CEn '{'0}, m\u0103rimea ({1}) pt. parametrul '{'2} \u00EEn '{'3} nu este valabil\u0103 pt. tipul de date specificat.
# YMSG: return from vocabulary - in case parameter content cannot be a collection 
2142=Defini\u0163ie de parametru nevalabil\u0103 pt. ac\u0163iunea '{0}' \u00EEn parametrul de ac\u0163iune '{1}'. Parametrii de tip colec\u0163ie nu sunt permi\u015Fi \u00EEn ac\u0163iuni.                                                                                                                                                                   .




# 2300 - 2499 rule template messages

# YMSG: return from Rule Template runtime plug in, in case of rule template name starts with a number
2300=Creare sau actualizare \u015Fablon de regul\u0103 nu este posibil\u0103; nume de \u015Fablon de regul\u0103 nu poate \u00EEncepe cu un num\u0103r
# YMSG: return from Rule Template runtime plug in, in case of illegal change in rule template attributes
2301=Activare \u015Fablon de regul\u0103 con\u0163ine o modificare incompatibil\u0103;
# YMSG: return from Rule Template runtime plug in, in case of rule template update contains condition change
2302=Creare sau actualizare \u015Fablon de regul\u0103 nu este posibil\u0103; condi\u0163ie de \u015Fablon de regul\u0103 nu poate fi modificat\u0103
# YMSG: return from Rule Template runtime plug in, in case of rule template contains invalid condition 
2303=Creare sau actualizare \u015Fablon de regul\u0103 nu este posibil\u0103; condi\u0163ia '{0}' nu este valabil\u0103
# YMSG: return from Rule Template runtime plug in, in case of rule template deletion when there are rules assigned to the rule template  
2304=Imposibil de \u015Fters \u015Fablon de regul\u0103 {0}. Exist\u0103 reguli pt. acest \u015Fablon de regul\u0103;
# YMSG: return from Rule Template runtime plug in, in case of duplicate rule template name  
2305=Creare \u015Fablon de regul\u0103 nu este posibil\u0103; \u015Fablonul de regul\u0103 '{0}' exist\u0103 deja \u00EEn pachetul '{1}'
# YMSG: return from Rule Template runtime plug in, in case that rule template name starts with a number  
2306=Nume de \u015Fablon de regul\u0103 - '{0}' nu poate \u00EEncepe cu un num\u0103r;
# YMSG: return from Rule Template runtime plug in, in case that rule template name already exist as data object  
2307=Imposibil de creat \u015Fablon de regul\u0103 '{0}'. Numele de \u015Fablon de regul\u0103 este deja utilizat ca obiect de date \u00EEn vocabularul '{1}'.
# YMSG: return from Rule Template runtime plug in, in case that rule template name already exist as alias
2308=Imposibil de creat \u015Fablon de regul\u0103 '{0}'. Numele de \u015Fablon de regul\u0103 este deja utilizat ca alias \u00EEn vocabularul '{1}'.


# 2500 - 2699 - rule messages

# YMSG: return from Rule runtime plug in, in case of resource contains additional attributes but not assigned to rule template   
2500=Creare de regul\u0103 imposibil\u0103; atribute suplimentare introduse, chiar dac\u0103 regula nu este bazat\u0103 pe \u015Fablon.
# YMSG: return from Rule runtime plug in, in case of rule template assignment change   
2501=Actualizare regul\u0103 imposibil\u0103; alocare de \u015Fablon de regul\u0103 nu poate fi modificat\u0103 odat\u0103 ce regula a fost creat\u0103.
# YMSG: return from Rule runtime plug in, in case of vocabulary change  
2502=Actualizare regul\u0103 imposibil\u0103; alocare de vocabular nu poate fi modificat\u0103 odat\u0103 ce regula a fost creat\u0103.
# YMSG: return from Rule runtime plug in, in case of output change   
2503=Actualizare regul\u0103 imposibil\u0103; alocare ie\u015Fire nu poate fi modificat\u0103 odat\u0103 ce regula a fost creat\u0103.
# YMSG: return from Rule runtime plug in, in case of rule contains additional attributes where assigned rule template does not contains additional attributes
2504=Creare de regul\u0103 imposibil\u0103; au fost introduse atribute suplimentare care nu apar\u0163in de \u015Fablonul de regul\u0103 alocat.
# YMSG: return from Rule runtime plug in, in case of execution context change
2505=Actualizare regul\u0103 imposibil\u0103; alocare de \u015Fablon de execu\u0163ie nu poate fi modificat\u0103 odat\u0103 ce regula a fost creat\u0103.
# YMSG: return from Rule runtime plug in, in case of invalid rule template assignment
2506=\u015Eablonul de regul\u0103 '{0}' nu este valabil;
# YMSG: return from Rule runtime plug in, in case of invalid status transition
2507=Actualizare regul\u0103 imposibil\u0103; nu pute\u0163i modificat din starea '{0}' \u00EEn '{1}'.
# YMSG: return from Rule runtime plug in, in case of updating single consumption to non single consumption Rule
2510=Eliminare servicii integrate nu este permis\u0103.
# YMSG: return from Rule runtime plug in, in case of updating single embedded service in Rule
2511=Eliminare sau modificare servicii integrate nu este permis\u0103.
# YMSG: return from Rule runtime plug in, in case of more than one embedded services with the same name
2512=Nume serviciu integrat - '{0}' exist\u0103 de mai multe ori.
# YMSG: return from Rule runtime plug in - update/create, in case the rule body is not valid
2513=Creare sau actualizare regul\u0103 imposibil\u0103; corp de regul\u0103 nu este valabil.
# YMSG: return from Rule body validator - in case parameter is referenced to an unknown action
2514=Defini\u0163ie parametru nevalabil\u0103. Parametrul se refer\u0103 la o ac\u0163iune '{0}' care nu exist\u0103 \u00EEn vocabular.
# YMSG: return from Rule body validator - in case parameter name isn't a valid parameter for action
2515=Defini\u0163ie parametru nevalabil\u0103. Nume parametru '{0}' nu exist\u0103 pt.ac\u0163iune '{1}' \u00EEn vocabular.
# YMSG: return from Rule body validator - in case action doesn't exist in the vocabulary
2516=Ac\u0163iunea '{0}' nu exist\u0103 \u00EEn vocabular.
# YMSG: return from Rule body validator - when the sent parameter isn't a required parameter in the sent output 
2517=Defini\u0163ie parametru nevalabil\u0103. Nume parametru '{0}' nu exist\u0103 pt.ie\u015Fire '{1}' \u00EEn vocabular.
# YMSG: return from Rule body validator - when the sent output doesn't exists in the vocabulary
2518=Ie\u015Firea '{0}' nu exist\u0103 \u00EEn vocabular.
# YMSG: return from Rule body validator - when alias has more than one output parameter column
2519=Alias are mai mult de un parametru de ie\u015Fire.
# YMSG: return from Rule body validator - when the alias output parameters values do not have the same type X
2520=Toate valorile pt.parametrul de ie\u015Fire '{0}' trebuie s\u0103 fie de acela\u015Fi tip.
# YMSG: return from Rule runtime plug in, in case of assign rule to rule service that does not exist.
2521=Imposibil de alocat regul\u0103 '{0}' la serviciu de reguli '{1}'. Serviciul de reguli nu exist\u0103.
# YMSG: return from Rule runtime plug in, in case of assign rule to rule service with different vocabulary.
2522=Imposibil de alocat regul\u0103 '{0}' la serviciu de reguli '{1}'. Serviciul de reguli \u015Fi regula trebuie s\u0103 aib\u0103 acela\u015Fi vocabular definit.
# YMSG: return from Rule runtime plug in, in case of assign rule to rule service with different output.
2523=Imposibil de alocat regul\u0103 '{0}' la serviciu de reguli '{1}'. Serviciul de reguli \u015Fi regula trebuie s\u0103 aib\u0103 aceea\u015Fi ie\u015Fire definit\u0103.
# YMSG: return from Rule runtime plug in, in case of assign rule to rule service that is not indicated as manually assigned.
2524=Imposibil de alocat regul\u0103  '{0}' la serviciu de reguli '{1}'. Serviciul de reguli este setat pt. aloc\u0103ri automate de regul\u0103 \u015Fi prin urmare nu permite aloc\u0103ri manuale.
# YMSG: return from Rule runtime plug in - update/create, in case a custom condition is not valid
2525=Regula nu poate fi creat\u0103 sau actualizat\u0103; '{0}' nu este o condi\u0163ie valabil\u0103.
# YMSG: return from Rule body validator - when ruleBody of type ruleSet has more than one condition column
2526=Set de reguli nevalabil. O regul\u0103 \u00EEn cadru set de reguli are mai mult de o condi\u0163ie.


# 2700 - 2899 - rule service messages

# YMSG: return from Rule service plug in, in case of wrong data object filter
2700=Eroare \u00EEn filtru serviciu de reguli
# YMSG: return from Rule service plug in, in case of different data objects in execution context and filter
2701=Obiect de date - '{0}' \u00EEn context de execu\u0163ie este diferit de obiect de date - '{1}' \u00EEn filtru
# YMSG: return from  runtime plug in, in case of specified data object does not have the specified attribute (e.g. data object keys in rule service definition).
2704=Creare sau actualizare de serviciu de reguli nu este posibil\u0103; obiectul de date {0} pt. vocabularul {1} nu con\u0163ine atributul {2}
# YMSG: return from runtime plug in, in case of parameter mapping path contains a collection
2705=Cale cu colec\u0163ie nu este permis\u0103. Cale\: {0};
# YMSG: return from runtime plug in, in case of data object mapping entry is not unique within an execution context .
2706=obiect de date - {0} are map\u0103ri duplicate;
# YMSG: return from  runtime plug in, in case of parameter definition entry is not unique within an execution context .
2707=Creare de serviciu de reguli nu este posibil\u0103; parametrul {0} este duplicat
# YMSG: return from  runtime plug in, in case of parameter mapping entry doesn't have a match parameter definition entry with in an execution context
2708=Creare de serviciu de reguli nu este posibil\u0103; parametrul {0} nu exist\u0103 \u015Fi este asociat cu obiectul de date
# YMSG: return from  runtime plug in, in case of ifentifiers in dataObject type parameter do not exist in data object from vocabulary
2709=Defin\u0163ie parametru nevalabil\u0103 \u00EEn serviciu de reguli '{0}'. \u00CEn parametrul '{1}', '{2}' nu este un atribut valabil pt. obiectul de date '{3}' \u00EEn volumul de vocabular '{4}'.
# YMSG: return from runtime plug in, in case of data object definition entry is not unique within parameter definition if service.
2710=Defini\u0163ie parametru nevalabil\u0103 \u00EEn serviciu de reguli '{0}'. La obiect de date '{1}' se face referire de mai mult de un parametru.
# YMSG: return from runtime plug in, only read-only rule services can be indicated to be created with result view
2711=Imposibil de creat serviciu de reguli '{0}'. Serviciul de reguli cu imagine de rezultat trebuie indicat ca numai pt.citire.
# YMSG: return from runtime plug in, only explicit output rule services can be indicated to be created with result view
2712=Imposibil de creat serviciu de reguli '{0}'. Servicii de reguli cu o imagine de rezultat trebuie s\u0103 aib\u0103 definit\u0103 o ie\u015Fire explicit\u0103.
# YMSG: returned from request handler. Rule requested to be removed from rule service but the rule is not assigned to it
2713=Imposibil de eliminat alocare regul\u0103. Regula '{0}' nu este alocat\u0103 la serviciul de reguli.
# YMSG: return from  runtime plug in, in case of output contains collection parameter in event mode scenario
2714=Imposibil de creat serviciu de reguli '{0}'. Nu pute\u0163i defini o ie\u015Fire cu parametri de tip colec\u0163ie pt. un serviciu de reguli care nu are un obiect de date definit \u00EEn contextul s\u0103u de execu\u0163ie.
# 2900 - 2949 - post activation / completeActivation

# 2950 - 2999 - common resource CRUD


# YMSG: return from Request Handler, in case of url parameter that isn't valid
2955=parametru URL\: {0} nu este valabil
# YMSG: return from Request Handler, in case of unsupported request mode
2956=Modul \#{0} nu este suportat
# YMSG: return from Request Handler, in case of unsupported metadata
2957=Metadate nu sunt suportate
# YMSG: return from Request Handler, in case of unsupported metadata for method
2958=Ob\u0163inerea de metadate este valabil\u0103 doar cu metoda de cerere GET


# YMSG: returned when wrong query is generated (during procedure generation). 2 causes: Bug in process or there is no mapping from vocabulary to real table / column
2970=Eroare \u00EEn generare query sau mapare nevalabil\u0103
# YMSG: returned if for some reason the parser returned undefined parse model. Can be bad rule syntax or a bug
2971=Model de analiz\u0103 sintactic\u0103 este nedefinit
# YMSG: query generation needs either leading object and at least one key or a mapping to parameters. The error is returned if something is missing 
2972=Combina\u0163ie nevalabil\u0103 de obiect principal, chei \u015Fi mapare
# YMSG: returned when there is no association between 2 objects in vocabulary
2973=Asociere nevalabil\u0103 - f\u0103r\u0103 atribute
# YMSG: returned when there is a use of attribute based on predictive model but the procedure for the predictive model is not defined
2974=Procedur\u0103 de modul predictiv\u0103 {0} nu a fost g\u0103sit\u0103
# YMSG: outputs tanle type is mandatory. error when missing 
2975=Date de rezultat nevalabile
# YMSG: error when is out name is missing in vocabulary output names 
2976=Nume de ie\u015Fire nevalabil
# YMSG: error when rule body type is different from text or decisionTable 
2977=tip nevalabil de corp de regul\u0103
# YMSG: return from Runtime plugins, in case of unsupported change mode
2978=Modul de modificare '{0}' nu este suportat pt.resurs\u0103
# YMSG: return from Runtime plugin - generate, for informing on the change mode for current resource
2979=Generare resurs\u0103, \u00EEn mod de modificare\: '{0}'
# YMSG: return when expression  
2980=Eroare \u00EEn expresie de analiz\u0103 sintactic\u0103\: \: '{0}'
# YMSG: return when expression  
2981=Creare \u015Fablon de regul\u0103 '{0}' nu este posibil\u0103. Numele este deja utilizat de unul dintre obiectele de date \u00EEntr-un vocabular '{1}'.



#############################
# API: Get params
#############################

# 3100 - 3999 - get params messages

# YMSG: return from  ruleBodyAnalyzer, in case of businessRule.type is not text
3100=Tip de regul\u0103 de afaceri trebuie s\u0103 fie text
# YMSG: return from  ruleBodyAnalyzer, in case of Vocabulary is missing
3101=Lipse\u015Fte vocabularul

#############################/
# API: Rule service consumption
#############################/
# 4100 - 4999 messages

# YMSG: return message in case the output is partial
4100={0} pozi\u0163ii afi\u015Fate. Re\u0163ine\u0163i c\u0103 acesta este doar un set par\u0163ial de rezultate. Dac\u0103 marcatorul saveResult este setat la ADEV\u0102RAT, tabelul complet de rezultate poate fi g\u0103sit \u00EEn tabelul de ie\u015Firi '{'1}.

#############################/
# Halm and Installation
#############################/

# YMSG: Post Activation API success
10000=Script de configurare pt.SAP HANA Rules Framework a fost terminat cu succes.
# YMSG: Post Activation API failed
10001=A ap\u0103rut o eroare \u00EEn scriptul de configurare pt. SAP HANA Rules Framework. {0}
# YMSG: Post Activation API failed
10002=A fost detectat\u0103 o configurare existent\u0103 pt. aplica\u0163ie Web SAP HANA Rules Framework. Prin urmare, setare configurare implicit\u0103 pt. aplica\u0163ie Web nu este permis\u0103.
# YMSG: Post Activation API failed
10003=Configurare aplica\u0163ie Web pt. SAP HANA Rules Framework a fost nereu\u015Fit\u0103 din cauz\u0103 de eroare tehnic\u0103. Motiv\: {0}
# YMSG: Post Activation API failed
10004=Un serviciu de reguli sau o regul\u0103 cu un serviciu integrat exist\u0103 deja \u00EEn sistem. Prin urmare, actualizarea fusului orar nu este permis\u0103.
# YMSG: Post Activation API failed
10005=Un serviciu de reguli sau o regul\u0103 cu un serviciu integrat exist\u0103 deja \u00EEn sistem. Prin urmare, actualizarea schemei de timp de execu\u0163ie nu este permis\u0103.
