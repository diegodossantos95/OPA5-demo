
# This file contains messages descriptions arranged in sections according to HRF APIs
# These descriptions are translated.
# Adding a new message requires also update of message.xsjslib file by the new ID

#############################
# common
#############################
# 10 - 999 - common messages

# YMSG: return from resource activation, in case of a resource does not exist in repository
10=Kaynak etkinle\u015Ftirme olanakl\u0131 de\u011Fil; kaynak mevcut de\u011Fil.
# YMSG: return from resource activation, in case of a resource suffix is not one of HRF resources
11=Kaynak etkinle\u015Ftirme olanakl\u0131 de\u011Fil; '{0}' soneki desteklenmiyor.
# YMSG: return from resource activation, in case of a resource package does not exist in repository
12=Kaynak etkinle\u015Ftirme olanakl\u0131 de\u011Fil; paket '{0}' mevcut de\u011Fil.
# YMSG: return from runtime plug in, in case of invalid attribute
13=Kaynak etkinle\u015Ftirme olanakl\u0131 de\u011Fil; nitelik '{0}' \u015Femada i\u00E7erilmiyor.
# YMSG: return from  runtime plug in, in case of invalid attribute
14=Kaynak etkinle\u015Ftirme olanakl\u0131 de\u011Fil; zorunlu nitelik de\u011Feri '{0}' eksik.
# YMSG: return from  runtime plug in, in case none of a predefined set of fields is specified
15=Kaynak etkinle\u015Ftirme olanakl\u0131 de\u011Fil; en az bir iste\u011Fe ba\u011Fl\u0131 nitelik {0} eksik
# YMSG: return from  runtime plug in, in case of invalid field (e.g vocabulary doesn't exist)
16=Kaynak etkinle\u015Ftirme olanakl\u0131 de\u011Fil; nitelik de\u011Feri {0} ge\u00E7erli de\u011Fil
# YMSG: return from runtime plug in, in case of inconsistent fields combination(e.g. vocabulary and output names doesn't match)
17=Kaynak etkinle\u015Ftirme olanakl\u0131 de\u011Fil; {0} ve {1} bile\u015Fimi ge\u00E7erli de\u011Fil
# YMSG: return from  runtime plug in, in case of invalid resource id (e.g. package / file name is missing)
23=Kaynak etkinle\u015Ftirme olanakl\u0131 de\u011Fil; kaynak mevcut de\u011Fil
# YMSG: return from  runtime plug in, in case of error from REL validation
24={0} i\u00E7inde hata {1}
# YMSG: return from  REST service, in case of http request contains non supported method
25=Y\u00F6ntem ba\u015Far\u0131s\u0131z oldu; y\u00F6ntem \#{0} desteklenmiyor
# YMSG:  technical error from platform
26=Teknik hata olu\u015Ftu - {0}
# YMSG: return from resource activation, in case of a resource does not exist in repository
27=Kaynak mevcut de\u011Fil.

# 100 - 200 - Authorization

# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
100=Bu i\u015Flemi ger\u00E7ekle\u015Ftirme yetkiniz yok.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
101=Kurallar\u0131 g\u00FCncellemek i\u00E7in yetkiniz yok.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
102=Kurallar\u0131 silmek i\u00E7in yetkiniz yok.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
103=Kurallar\u0131 olu\u015Fturmak i\u00E7in yetkiniz yok.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
104=Kurallar\u0131 okumak i\u00E7in yetkiniz yok.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
105=Kural servislerini g\u00FCncellemek i\u00E7in yetkiniz yok
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
106=Kural servislerini silmek i\u00E7in yetkiniz yok.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
107=Kural servislerini olu\u015Fturmak i\u00E7in yetkiniz yok.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
108=Kural servislerini okumak i\u00E7in yetkiniz yok.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
109=Kural servislerini \u00E7al\u0131\u015Ft\u0131rmak i\u00E7in yetkiniz yok.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
110=S\u00F6zl\u00FCkleri g\u00FCncellemek i\u00E7in yetkiniz yok.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
111=S\u00F6zl\u00FCkleri silmek i\u00E7in yetkiniz yok.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
112=S\u00F6zl\u00FCkleri olu\u015Fturmak i\u00E7in yetkiniz yok.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
113=S\u00F6zl\u00FCkleri okumak i\u00E7in yetkiniz yok.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
114=Kural \u015Fablonlar\u0131n\u0131 g\u00FCncellemek i\u00E7in yetkiniz yok.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
115=Kural \u015Fablonlar\u0131n\u0131 silmek i\u00E7in yetkiniz yok.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
116=Kural \u015Fablonlar\u0131n\u0131 olu\u015Fturmak i\u00E7in yetkiniz yok.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
117=Kural \u015Fablonlar\u0131n\u0131 okumak i\u00E7in yetkiniz yok.
# YMSG: return from Request Handler, in case of unassigned privilege to perform an action 
118=Kural servislerini olu\u015Fturmak veya g\u00FCncellemek i\u00E7in yetkiniz yok.
#############################
# API: Validate
#############################
# 1100 - 1199 - REL validation messages

# YMSG: return from REL, the beginning of any REL validation error - in case of a wrong statement 
1100=Deyimde hata
# YMSG: return from REL parser, in case of a wrong entry (syntax) and maximum 3 option are optional instead 
1101=Deyimde hata; {1} yerine {0} gir
# YMSG: return from REL parser, in case of a wrong entry (syntax) and more than 3 option are optional instead  
1102=Detimde hata; {0} ge\u00E7erli giri\u015F de\u011Fil
# YMSG: return from REL parser, in case of a wrong input
1103=Deyimde hata;  {0} kald\u0131r
# YMSG: return from REL model, in case of collection OM when single value in needed
1104=Detimde hata; {0} de\u011Ferler listesi. Tek de\u011Feri temsil eden deyimi de\u011Fi\u015Ftir.
# YMSG: return from REL model, in case of a wrong input
1105=Deyimde hata; {0} yerine ge\u00E7erli i\u015Fle\u00E7 gir
# YMSG: return from REL parser, in case of an incomplete expression
1106=Eksik deyim
# YMSG: return from REL lexer, in case of missing token at EOF
1107=Deyimde hata; deyimin sonunda {0} gir
# YMSG: return from REL lexer, in case of wrong token
1108=Deyimde hata; '{'1} yerine {0} gir
# YMSG: return from REL entity, in case of missing current
1109=Deyimde hata; 'ge\u00E7erli' 'where' ko\u015Fulunda eksik
# YMSG: return from REL entity, in case of redundant 'current'
1110=Deyimde hata; fazla 'ge\u00E7erli'; bir 'ge\u00E7erli'yi kald\u0131r
# YMSG: return from REL vocabulary utils, in case of invalid root object
1111=Ge\u00E7ersiz k\u00F6k nesnesi
# YMSG: return from REL vocabulary utils, in case of invalid association
1112=Ge\u00E7ersiz ili\u015Fki
# YMSG: return from REL vocabulary utils, in case of invalid association or attribute
1113=Ge\u00E7ersiz ili\u015Fki veya nitelik
# YMSG: return from REL vocabulary utils, in case of root is simple attribute
1114=K\u00F6k basit nitelik olamaz
# YMSG: return from REL vocabulary utils, in case of attribute not found
1115=Eksik yol, nitelik bulunamad\u0131
# YMSG: return from REL entity, in case of using 'current' outside of 'where'
1116=Deyimde hata; 'ge\u00E7erli' anahtar s\u00F6zc\u00FC\u011F\u00FC yaln\u0131z 'where' ko\u015Fulu i\u00E7inde kullan\u0131labilir.
# YMSG: return from REL entity, in case of using 'current' incorrectly with arithmetic
1117=Deyimde hata; 'ge\u00E7erli' anahtar s\u00F6zc\u00FC\u011F\u00FC 'where' ko\u015Fulundaki kar\u015F\u0131la\u015Ft\u0131rmal\u0131 i\u015Flecin bir taraf\u0131ndaki t\u00FCm i\u015Flenenlere uygulanmal\u0131.
# YMSG: return from REL parser utils, in case of using value that doen't exist in closed value list
1118=Deyimde hata. '{0}', '{1}' de\u011Fer listesinden ge\u00E7erli bir de\u011Fer de\u011Fil.
# YMSG: return from REL parser utils, in case of using value that doen't exist in closed value list
1119=Deyimde hata. '{0}' i\u015Fleci, ('{1}') de\u011Fer listesi niteli\u011Fi ile kullan\u0131lamaz.
# YMSG: return from REL parser utils, in case of using value that doen't exist in closed value list
1120=Deyimde hata. Anahtar s\u00F6zc\u00FCk 't\u00FCm\u00FC' 'ge\u00E7erli' anahtar s\u00F6zc\u00FC\u011F\u00FCn\u00FC i\u00E7eren i\u015Fleneni izleyemez.
# YMSG: return from REL parser utils, in case of using value that doen't exist in closed value list
1121=Deyimde hata. Anahtar s\u00F6zc\u00FCk 't\u00FCm\u00FC' ayn\u0131 deyimde birden fazla kullan\u0131lamaz.


# 1200 - 1999 - validation messages

#############################
# API : resource CRUD
#############################
# 2100 - 2299 - vocabulary messages

# YMSG: return from vocabulary runtime plug in, in case of error in expression
2100='{0}' i\u00E7inde - deyim ayr\u0131\u015Ft\u0131rmada hata\: '{1}', '{2}'
# YMSG: return from vocabulary runtime plug in, in case of error in rule
2101='{0}' i\u00E7inde - kuralda hata\: '{1}', '{2}'
# YMSG: return from vocabulary runtime plug in, in case the parameter type already exists
2102='{0}' i\u00E7inde\: '{1}', ad\: '{2}' zaten mevcut
# YMSG: return from vocabulary runtime plug in, in case parameter name isn't valid
2103='{0}' i\u00E7inde\: '{1}', ge\u00E7ersiz ad\: '{2}'
# YMSG: return from vocabulary runtime plug in, in case one of action/output names aren't valid
2104='{0}' i\u00E7inde, ge\u00E7ersiz ad\: '{1}'
# YMSG: return from vocabulary runtime plug in, in case name already exists
2105='{0}' ad\u0131 '{1}' i\u00E7inde birden fazla tan\u0131mland\u0131.
# YMSG : return from vocabulary runtime plug in, in case the output has no parameters
2106=\u00C7\u0131kt\u0131da eksik parametreler
# YMSG: return from vocabulary runtime plug in, in case one of the attributes has an invalid name
2107=Ge\u00E7ersiz nitelik ad\u0131 '{0}'
# YMSG: return from vocabulary runtime plug in, in case object name of declare more than once
2108={0}\: '{'1} zaten mevcut. 
# YMSG: return from vocabulary runtime plug in, in case attribute name of declare more than once
2109=Nitelik zaten mevcut\: nesne\= '{0}' nitelik\= '{1}'
# YMSG: return from vocabulary runtime plug in, in case attribute name of declare more than once
2110=\u0130li\u015Fki zaten mevcut\: nesne\= '{0}' ili\u015Fki\= '{1}'
# YMSG : return from vocabulary runtime plug in, in case the source table isn't exists
2111=Ge\u00E7ersiz kaynak tablosu '{0}'
# YMSG : return from vocabulary runtime plug in, in case of one the association is invalid
2112=Nesne\='{0}' + ili\u015Fki\='{1}' i\u00E7inde ge\u00E7ersiz ili\u015Fki
# YMSG : return from vocabulary runtime plug in, in case of one the association's attributes are invalid
2113=\u0130li\u015Fki\=  '{0}' nitelik\= '{1}' i\u00E7in ge\u00E7ersiz nitelik
# YMSG: return from rule utils, in case of invalid vocabulary assignment
2114=S\u00F6zl\u00FCk '{0}' ge\u00E7erli de\u011Fil
# YMSG: return from vocabulary runtime plug in, in case invalid alias content
2115='{0}' takma ad\u0131nda ge\u00E7ersiz i\u00E7erik. Neden\: '{1}'
# YMSG: return from vocabulary runtime plug in, in case invalid alias name
2116=Kod ad\u0131 '{0}' ge\u00E7ersiz.  Kod ad\u0131 yaln\u0131z alfasay\u0131sal ve alt \u00E7izgi karakterleri i\u00E7erebilir, alfabetik bir karakterle ba\u015Flamal\u0131d\u0131r ve kural deyimi dilinden rezerve s\u00F6zc\u00FCk olamaz.
# YMSG: return from vocabulary runtime plug in, in case alias name collide with an data object name
2117='{0}' takma ad\u0131 i\u00E7in ge\u00E7ersiz ad. Takma ad zaten veri nesnesi ad\u0131 olarak mevcut.
# YMSG: return from vocabulary runtime plug in, in case o alias dependency to itself
2118='{0}' takma ad\u0131nda ge\u00E7ersiz i\u00E7erik. Takma ad\u0131n \u00E7\u00F6z\u00FCmlenmesi sonsuz d\u00F6ng\u00FCyle sonu\u00E7lanacak.
# YMSG: return from vocabulary runtime plug in, when name already exists in another vocabulary in the DB. Example: In 'dataObjects', name 'player' already exists in 'aliases' vocabulary 'voca2'
2120='{0}', ad '{1}' i\u00E7inde '{2}' zaten '{3}' s\u00F6zl\u00FC\u011F\u00FCnde mevcut.
# YMSG: return from vocabulary runtime plug in, scope name can't be Public or Private
2121=Ge\u00E7ersiz kapsam ad\u0131. Kapsam ad\u0131 'Ortak' veya '\u00D6zel' olamaz.
# YMSG: return from vocabulary runtime plug in, embedded vocabulary can't be with scope Global
2122=Ge\u00E7ersiz kapsam ad\u0131. G\u00F6m\u00FCl\u00FC s\u00F6zl\u00FCk 'Genel' t\u00FCr\u00FCnde olamaz.
# YMSG: Object does not exist
2125=Nesne '{0}' mevcut de\u011Fil
# YMSG: return from vocabulary runtime plug in, in case of a wrong data object name 
2126=Veri nesnesi '{0}' i\u00E7in ge\u00E7ersiz ad. Veri nesnesi ad\u0131 mevcut kural \u015Fablonu ad\u0131 veya a\u015Fa\u011F\u0131daki rezerve s\u00F6zc\u00FCklerden biri olamaz (yaln\u0131z b\u00FCy\u00FCk/k\u00FC\u00E7\u00FCk harfe duyarl\u0131)\: kural, kural \u015Fablonu
# YMSG: return from vocabulary runtime plug in, in case of a wrong alias name
2127=Kod ad\u0131 '{0}' ge\u00E7ersiz.  Kod ad\u0131 mevcut kural \u015Fablonu ad\u0131 veya a\u015Fa\u011F\u0131daki rezerve s\u00F6zc\u00FCklerden biri olamaz (yaln\u0131z b\u00FCy\u00FCk/k\u00FC\u00E7\u00FCk harfe duyarl\u0131)\: kural, kural \u015Fablonu
# YMSG: return from vocabulary runtime plug in, in case invalid data object name
2128=Veri nesnesi '{0}' i\u00E7in ge\u00E7ersiz ad. Veri nesnesi ad\u0131 yaln\u0131z alfasay\u0131sal ve alt \u00E7izgi karakterleri i\u00E7erebilir, alfabetik bir karakterle ba\u015Flamal\u0131d\u0131r ve kural deyimi dilinden rezerve s\u00F6zc\u00FCk olamaz.
# YMSG: return from vocabulary runtime plug in, in case of duplicate alias names
2129=Takma ad '{0}' zaten takma ad olarak mevcut.
# YMSG: return from vocabulary runtime plug in, in case alias content is empty
2130='{0}' takma ad\u0131nda i\u00E7erik parametresi bo\u015F.
# YMSG: return from vocabulary runtime plug in, in case alias name exists as as an attribute name
2131=Takma ad '{0}' ge\u00E7ersiz. Takma ad zaten nitelik ad\u0131 olarak mevcut.
# YMSG: return from vocabulary runtime plug in, in case alias name exists in other vocabulary with the same scope
2132=Takma ad '{0}' ge\u00E7ersiz. Ad zaten '{2}' s\u00F6zl\u00FC\u011F\u00FCnde '{1 }' nesnesi i\u00E7in nitelik olarak mevcut.
# YMSG: return from vocabulary runtime plug in, in case alias name exists in objects rule or ruleTemplate
2133=Takma ad '{0}' ge\u00E7ersiz. Ad zaten '{1 }' nesnesinde mevcut.
# YMSG: return from vocabulary runtime plug in, in case attribute name already exists as alias in other vocabulary
2134='{0}' niteli\u011Fi i\u00E7in ge\u00E7ersiz ad. Ad zaten '{1}' s\u00F6zl\u00FC\u011F\u00FCnde takma ad olarak mevcut.
# YMSG: return from vocabulary runtime plug in, in case vocabulary declares it depends on a vocabulary which doesn't exists
2135=S\u00F6zl\u00FCk, mevcut olmad\u0131\u011F\u0131 '{0}' s\u00F6zl\u00FC\u011F\u00FCne ba\u011F\u0131ml\u0131l\u0131\u011F\u0131 tan\u0131mlar.
# YMSG: return from vocabulary runtime plug in, in case implementor declare global vocabulary with dependencies
2136=Genel s\u00F6zl\u00FCk di\u011Fer s\u00F6zl\u00FCklere ba\u011F\u0131ml\u0131l\u0131k i\u00E7eremez.
# YMSG: return from vocabulary runtime plug in, in case, in the same data object, there is association and attribute with the same name
2137='{0}' veri nesnesinde, '{1}' ad\u0131 ili\u015Fki ve nitelik i\u00E7in kullan\u0131l\u0131r. Ayn\u0131 ad her iki \u00F6zellik i\u00E7in kullan\u0131lamaz.
# YMSG: return from vocabulary runtime plug in, in case invalid alias name
2138=De\u011Fer listesi '{0}' ad\u0131 ge\u00E7ersiz. De\u011Fer listesi ad\u0131 yaln\u0131z alfasay\u0131sal ve alt \u00E7izgi karakterleri i\u00E7erebilir, alfabetik bir karakterle ba\u015Flamal\u0131d\u0131r ve kural deyimi dilinden rezerve s\u00F6zc\u00FCk olamaz.
# YMSG: return from vocabulary runtime plug in, in case alias content is empty
2139=De\u011Fer listesi '{0}' i\u00E7eri\u011Fi bo\u015F.
# YMSG: return from vocabulary runtime plug in, in case alias content is empty
2140='{1}' niteli\u011Finde tan\u0131mlanm\u0131\u015F de\u011Fer listesi '{0}', '{2}' veri nesnesinde mevcut de\u011Fil.
# YMSG: return from vocabulary runtime plug in, in case parameter size isn't valid
2141='{'0} i\u00E7inde belirtilen veri t\u00FCr\u00FC i\u00E7in '{'3} i\u00E7indeki '{'2} parametresinin boyutu ({1}) ge\u00E7erli de\u011Fil.
# YMSG: return from vocabulary - in case parameter content cannot be a collection 
2142='{1}' i\u015Flem parametresindeki '{0}' i\u015Flemi i\u00E7in ge\u00E7ersiz parametre tan\u0131m\u0131 T\u00FCr koleksiyonunun parametreleri i\u015Flemlerde izinli de\u011Fil.                                                                                                                                                                   .




# 2300 - 2499 rule template messages

# YMSG: return from Rule Template runtime plug in, in case of rule template name starts with a number
2300=Kural \u015Fablonu olu\u015Fturma veya g\u00FCncelleme olanakl\u0131 de\u011Fil; kural \u015Fablonu ad\u0131 say\u0131yla ba\u015Flayamaz
# YMSG: return from Rule Template runtime plug in, in case of illegal change in rule template attributes
2301=Kural \u015Fablonu etkinle\u015Ftirme uyumsuz de\u011Fi\u015Fiklik i\u00E7eriyor;
# YMSG: return from Rule Template runtime plug in, in case of rule template update contains condition change
2302=Kural \u015Fablonu olu\u015Fturma veya g\u00FCncelleme olanakl\u0131 de\u011Fil; kural \u015Fablonu ko\u015Fulu de\u011Fi\u015Ftirilemiyor
# YMSG: return from Rule Template runtime plug in, in case of rule template contains invalid condition 
2303=Kural \u015Fablonu olu\u015Fturma veya g\u00FCncelleme olanakl\u0131 de\u011Fil; ko\u015Ful '{0}' ge\u00E7erli de\u011Fil
# YMSG: return from Rule Template runtime plug in, in case of rule template deletion when there are rules assigned to the rule template  
2304=Kural \u015Fablonu {0} silinemiyor. Bu kural \u015Fablonu i\u00E7in kurallar var;
# YMSG: return from Rule Template runtime plug in, in case of duplicate rule template name  
2305=Kural \u015Fablonu olu\u015Fturma veya g\u00FCncelleme olanakl\u0131 de\u011Fil; kural \u015Fablonu '{0}' zaten '{1}' paketinde mevcut
# YMSG: return from Rule Template runtime plug in, in case that rule template name starts with a number  
2306=Kural \u015Fablonu ad\u0131 - '{0}' say\u0131yla ba\u015Flayamaz;
# YMSG: return from Rule Template runtime plug in, in case that rule template name already exist as data object  
2307=Kural \u015Fablonu '{0}' olu\u015Fturulamad\u0131. Kural \u015Fablonu ad\u0131 zaten '{1}' s\u00F6zl\u00FC\u011F\u00FCnde veri nesnesi olarak kullan\u0131l\u0131yor.
# YMSG: return from Rule Template runtime plug in, in case that rule template name already exist as alias
2308=Kural \u015Fablonu '{0}' olu\u015Fturulamad\u0131. Kural \u015Fablonu ad\u0131 '{1}' s\u00F6zl\u00FC\u011F\u00FCnde takma ad olarak zaten kullan\u0131l\u0131yor.


# 2500 - 2699 - rule messages

# YMSG: return from Rule runtime plug in, in case of resource contains additional attributes but not assigned to rule template   
2500=Kural olu\u015Fturma olanakl\u0131 de\u011Fil; kural \u015Fablonu temel almasa da ek nitelikler girildi.
# YMSG: return from Rule runtime plug in, in case of rule template assignment change   
2501=Kural olu\u015Fturma olanakl\u0131 de\u011Fil; kural \u015Fablonu tayini kural olu\u015Fturulduktan sonra de\u011Fi\u015Ftirilemez.
# YMSG: return from Rule runtime plug in, in case of vocabulary change  
2502=Kural g\u00FCncellemesi olanakl\u0131 de\u011Fil; s\u00F6zl\u00FCk tayini kural olu\u015Fturulduktan sonra de\u011Fi\u015Ftirilemez.
# YMSG: return from Rule runtime plug in, in case of output change   
2503=Kural g\u00FCncellemesi olanakl\u0131 de\u011Fil; \u00E7\u0131kt\u0131 tayini olu\u015Fturulduktan sonra kural de\u011Fi\u015Ftirilemez.
# YMSG: return from Rule runtime plug in, in case of rule contains additional attributes where assigned rule template does not contains additional attributes
2504=Kural olu\u015Fturma olanakl\u0131 de\u011Fil; tayin edilen kural \u015Fablonuna ait olmayan ek nitelikler girildi.
# YMSG: return from Rule runtime plug in, in case of execution context change
2505=Kural g\u00FCncellemesi olanakl\u0131 de\u011Fil; kural olu\u015Fturulduktan sonra y\u00FCr\u00FCtme ba\u011Flam\u0131 tayini de\u011Fi\u015Ftirilemez.
# YMSG: return from Rule runtime plug in, in case of invalid rule template assignment
2506=Kural \u015Fablonu '{0}' ge\u00E7erli de\u011Fil
# YMSG: return from Rule runtime plug in, in case of invalid status transition
2507=Kural g\u00FCncelleme olanakl\u0131 de\u011Fil; durumu '{0}' iken '{1}' olarak de\u011Fi\u015Ftiremezsiniz.
# YMSG: return from Rule runtime plug in, in case of updating single consumption to non single consumption Rule
2510=G\u00F6m\u00FCl\u00FC servislerin kald\u0131r\u0131lmas\u0131 olanakl\u0131 de\u011Fil.
# YMSG: return from Rule runtime plug in, in case of updating single embedded service in Rule
2511=G\u00F6m\u00FCl\u00FC servislerin kald\u0131r\u0131lmas\u0131 veya de\u011Fi\u015Ftirilmesi olanakl\u0131 de\u011Fil.
# YMSG: return from Rule runtime plug in, in case of more than one embedded services with the same name
2512=G\u00F6m\u00FCl\u00FC servis ad\u0131 - '{0}', birden fazla mevcut.
# YMSG: return from Rule runtime plug in - update/create, in case the rule body is not valid
2513=Kural olu\u015Fturma veya g\u00FCncelleme olanakl\u0131 de\u011Fil; kural g\u00F6vdesi ge\u00E7erli de\u011Fil.
# YMSG: return from Rule body validator - in case parameter is referenced to an unknown action
2514=Ge\u00E7ersiz parametre tan\u0131m\u0131. Parametre s\u00F6zl\u00FCkte mevcut olmayan '{0}' i\u015Flemini referans al\u0131yor.
# YMSG: return from Rule body validator - in case parameter name isn't a valid parameter for action
2515=Ge\u00E7ersiz parametre tan\u0131m\u0131. Parametre s\u00F6zl\u00FCkte mevcut olmayan '{0}' i\u015Flemini referans al\u0131yor.
# YMSG: return from Rule body validator - in case action doesn't exist in the vocabulary
2516=\u0130\u015Flem '{0}' s\u00F6zl\u00FCkte mevcut de\u011Fil.
# YMSG: return from Rule body validator - when the sent parameter isn't a required parameter in the sent output 
2517=Ge\u00E7ersiz parametre tan\u0131m\u0131. Parametre ad\u0131 '{0}' s\u00F6zl\u00FCkte '{1}' \u00E7\u0131kt\u0131s\u0131 i\u00E7in mevcut de\u011Fil.
# YMSG: return from Rule body validator - when the sent output doesn't exists in the vocabulary
2518=\u00C7\u0131kt\u0131 '{0}' s\u00F6zl\u00FCkte mevcut de\u011Fil.
# YMSG: return from Rule body validator - when alias has more than one output parameter column
2519=Takma ad birden fazla \u00E7\u0131kt\u0131 parametresine sahip.
# YMSG: return from Rule body validator - when the alias output parameters values do not have the same type X
2520='{0}' \u00E7\u0131kt\u0131 parametresinin t\u00FCm de\u011Ferleri ayn\u0131 t\u00FCrde olmal\u0131.
# YMSG: return from Rule runtime plug in, in case of assign rule to rule service that does not exist.
2521='{0}' kural\u0131 '{1}' kural servisine tayin edilemedi. Kural servisi mevcut de\u011Fil.
# YMSG: return from Rule runtime plug in, in case of assign rule to rule service with different vocabulary.
2522='{0}' kural\u0131 '{1}' kural servisine tayin edilemedi. Kural servisi ve kural tan\u0131mlanan ayn\u0131 s\u00F6zl\u00FC\u011Fe sahip olmal\u0131.
# YMSG: return from Rule runtime plug in, in case of assign rule to rule service with different output.
2523='{0}' kural\u0131 '{1}' kural servisine tayin edilemedi. Kural servisi ve kural tan\u0131mlanan ayn\u0131 \u00E7\u0131kt\u0131ya sahip olmal\u0131.
# YMSG: return from Rule runtime plug in, in case of assign rule to rule service that is not indicated as manually assigned.
2524='{0}' kural\u0131 '{1}' kural servisine tayin edilemedi. Kural servisi otomatik kural tayinleri i\u00E7in belirleniyor ve bu nedenle man\u00FCel tayinlere izin vermiyor.
# YMSG: return from Rule runtime plug in - update/create, in case a custom condition is not valid
2525=Kural olu\u015Fturulam\u0131yor veya g\u00FCncelllenemiyor; '{0}' ge\u00E7erli ko\u015Ful de\u011Fil.
# YMSG: return from Rule body validator - when ruleBody of type ruleSet has more than one condition column
2526=Ge\u00E7ersiz kural k\u00FCmesi. Kural k\u00FCmesi i\u00E7indeki kural birden fazla ko\u015Ful i\u00E7erir.


# 2700 - 2899 - rule service messages

# YMSG: return from Rule service plug in, in case of wrong data object filter
2700=Kural servisi filtresinde hata
# YMSG: return from Rule service plug in, in case of different data objects in execution context and filter
2701=Veri nesnesi - y\u00FCr\u00FCtme ba\u011Flam\u0131nda '{0}' veri nesnesinden farkl\u0131 - filtrede '{1}'
# YMSG: return from  runtime plug in, in case of specified data object does not have the specified attribute (e.g. data object keys in rule service definition).
2704=Kural servisi olu\u015Fturma veya g\u00FCncelleme olanakl\u0131 de\u011Fil; {1} s\u00F6zl\u00FC\u011F\u00FCn\u00FCn {0} veri nesnesi {2} niteli\u011Fini i\u00E7ermiyor
# YMSG: return from runtime plug in, in case of parameter mapping path contains a collection
2705=Koleksiyon i\u00E7eren yol olanakl\u0131 de\u011Fil. Yol\: {0};
# YMSG: return from runtime plug in, in case of data object mapping entry is not unique within an execution context .
2706=Veri nesnesi - {0} \u00E7ift e\u015Flemelere sahip;
# YMSG: return from  runtime plug in, in case of parameter definition entry is not unique within an execution context .
2707=Kural servisi olu\u015Fturma olanakl\u0131 de\u011Fil; parametre {0} \u00E7ift
# YMSG: return from  runtime plug in, in case of parameter mapping entry doesn't have a match parameter definition entry with in an execution context
2708=Kural servisi olu\u015Fturma olanakl\u0131 de\u011Fil; parametre {0} mevcut de\u011Fil ve veri nesnesiyle ili\u015Fkilendiriliyor
# YMSG: return from  runtime plug in, in case of ifentifiers in dataObject type parameter do not exist in data object from vocabulary
2709='{0}' kural servisinde ge\u00E7ersiz parametre tan\u0131m\u0131. '{1}' parametresinde, '{2}',  '{4}' s\u00F6zl\u00FCk kapsam\u0131ndaki '{3}' veri nesnesinin ge\u00E7erli niteli\u011Fi de\u011Fil.
# YMSG: return from runtime plug in, in case of data object definition entry is not unique within parameter definition if service.
2710='{0}' kural servisinde ge\u00E7ersiz parametre tan\u0131m\u0131. Veri nesnesi '{1}' birden fazla parametreyi referans al\u0131yor.
# YMSG: return from runtime plug in, only read-only rule services can be indicated to be created with result view
2711='{0}' kural servisi olu\u015Fturulamas\u0131. Sonu\u00E7 g\u00F6r\u00FCn\u00FCm\u00FC i\u00E7eren kural servisi salt okunur olarak g\u00F6sterilmelidir.
# YMSG: return from runtime plug in, only explicit output rule services can be indicated to be created with result view
2712=Kural servisi '{0}' olu\u015Fturulamad\u0131. Sonu\u00E7 g\u00F6r\u00FCn\u00FCm\u00FC olan kural servisleri belirtik \u00E7\u0131kt\u0131 olarak tan\u0131mlanm\u0131\u015F olmal\u0131.
# YMSG: returned from request handler. Rule requested to be removed from rule service but the rule is not assigned to it
2713=Kural tayini kald\u0131r\u0131lamad\u0131. Kural '{0}' kural servisine tayin edilmedi.
# YMSG: return from  runtime plug in, in case of output contains collection parameter in event mode scenario
2714=Kural servisi '{0}' olu\u015Fturulamad\u0131. Y\u00FCr\u00FCtme ba\u011Flam\u0131nda tan\u0131mlanan veri nesnelerine sahip olmayan kural servisi i\u00E7in t\u00FCr koleksiyonunun parametreleri ile \u00E7\u0131kt\u0131 tan\u0131mlayamazs\u0131n\u0131z.
# 2900 - 2949 - post activation / completeActivation

# 2950 - 2999 - common resource CRUD


# YMSG: return from Request Handler, in case of url parameter that isn't valid
2955=url parametresi\: {0} ge\u00E7erli de\u011Fil
# YMSG: return from Request Handler, in case of unsupported request mode
2956=Mod \#{0} desteklenmiyor
# YMSG: return from Request Handler, in case of unsupported metadata
2957=Metaveriler desteklenmiyor
# YMSG: return from Request Handler, in case of unsupported metadata for method
2958=Metaverileri alma yaln\u0131z ge\u00E7erli talep y\u00F6ntemi GET ile ge\u00E7erli


# YMSG: returned when wrong query is generated (during procedure generation). 2 causes: Bug in process or there is no mapping from vocabulary to real table / column
2970=Sorgu \u00FCretmede hata veya ge\u00E7ersiz i\u015Fleme
# YMSG: returned if for some reason the parser returned undefined parse model. Can be bad rule syntax or a bug
2971=Ayr\u0131\u015Ft\u0131rma modeli tan\u0131mlanmad\u0131
# YMSG: query generation needs either leading object and at least one key or a mapping to parameters. The error is returned if something is missing 
2972=Ana nesne, anahtarlar ve e\u015Flemenin ge\u00E7ersiz bile\u015Fimi
# YMSG: returned when there is no association between 2 objects in vocabulary
2973=Ge\u00E7ersiz ili\u015Fki - nitelik yok
# YMSG: returned when there is a use of attribute based on predictive model but the procedure for the predictive model is not defined
2974=\u00D6ng\u00F6r\u00FCl\u00FC mod\u00FCl prosed\u00FCr\u00FC {0} bulunamad\u0131
# YMSG: outputs tanle type is mandatory. error when missing 
2975=Ge\u00E7ersiz sonu\u00E7 verileri
# YMSG: error when is out name is missing in vocabulary output names 
2976=Ge\u00E7ersiz \u00E7\u0131kt\u0131 ad\u0131
# YMSG: error when rule body type is different from text or decisionTable 
2977=Ge\u00E7ersiz kural g\u00F6vdesi t\u00FCr\u00FC
# YMSG: return from Runtime plugins, in case of unsupported change mode
2978=De\u011Fi\u015Fik\u015Fik modu '{0}' kaynak i\u00E7in desteklenmiyor
# YMSG: return from Runtime plugin - generate, for informing on the change mode for current resource
2979=Kaynak \u00FCretme, de\u011Fi\u015Fiklik modunda\: '{0}'
# YMSG: return when expression  
2980=Ayr\u0131\u015Ft\u0131rma deyiminde hata\: \: '{0}'
# YMSG: return when expression  
2981=Kural \u015Fablonu '{0}' olu\u015Fturma olanakl\u0131 de\u011Fil. Ad, zaten '{1}' s\u00F6zl\u00FC\u011F\u00FCndeki veri nesnelerinin biri taraf\u0131ndan kullan\u0131l\u0131yor.



#############################
# API: Get params
#############################

# 3100 - 3999 - get params messages

# YMSG: return from  ruleBodyAnalyzer, in case of businessRule.type is not text
3100=\u0130\u015F kural\u0131 t\u00FCr\u00FC metin olmal\u0131
# YMSG: return from  ruleBodyAnalyzer, in case of Vocabulary is missing
3101=S\u00F6zl\u00FCk eksik

#############################/
# API: Rule service consumption
#############################/
# 4100 - 4999 messages

# YMSG: return message in case the output is partial
4100={0} kalem g\u00F6sterildi. Bunun yaln\u0131z sonu\u00E7lar\u0131n k\u0131smi k\u00FCmesi oldu\u011Funu unutmay\u0131n. saveResult g\u00F6stergesi TRUE olarak belirlenirse, sonu\u00E7lar\u0131n tam k\u00FCmesi '{'1}. \u00E7\u0131kt\u0131 tablosunda bulunabilir.

#############################/
# Halm and Installation
#############################/

# YMSG: Post Activation API success
10000=SAP HANA kurallar\u0131 \u00E7er\u00E7evesi i\u00E7in konfig\u00FCrasyon komut dosyas\u0131 ba\u015Far\u0131yla tamamland\u0131.
# YMSG: Post Activation API failed
10001=SAP HANA kurallar\u0131 \u00E7er\u00E7evesinin konfig\u00FCrasyon komut dosyas\u0131nda hata ortaya \u00E7\u0131kt\u0131. {0}
# YMSG: Post Activation API failed
10002=SAP HANA kurallar\u0131 \u00E7er\u00E7evesinin web uygulamas\u0131 i\u00E7in mevcut bir konfig\u00FCrasyon alg\u0131land\u0131. Web uygulamas\u0131 i\u00E7in varsay\u0131lan konfig\u00FCrasyonun ayarlanmas\u0131na bu nedenle izin verilmiyor.
# YMSG: Post Activation API failed
10003=SAP HANA kurallar\u0131 \u00E7er\u00E7evesi i\u00E7in web uygulamas\u0131 konfig\u00FCrasyonu teknik hata nedeniyle ba\u015Far\u0131s\u0131z oldu. Neden\: {0}
# YMSG: Post Activation API failed
10004=G\u00F6m\u00FCl\u00FC servis ile kural servisi veya kural sistemde zaten mevcut. Bu nedenle saat dilimini g\u00FCncelleme izinli de\u011Fil.
# YMSG: Post Activation API failed
10005=G\u00F6m\u00FCl\u00FC servis ile kural servisi veya kural sistemde zaten mevcut. Bu nedenle \u00E7al\u0131\u015Ft\u0131rma \u015Femas\u0131n\u0131 g\u00FCncelleme izinli de\u011Fil.
